{"version":3,"sources":["components/logo.svg","components/tools/fbase.js","components/tools/img/section0.png","components/tools/img/section1.png","components/tools/img/section3.png","components/MainPage/MainPage.js","components/MakePage/MakePage.js","components/ResponsePage/ResponsePage.js","components/MakePage/utils/SubmitPage.js","components/CouponPage/CouponPage.js","components/NavBar/NavBar.js","components/Router.js","components/App.js","reportWebVitals.js","index.js"],"names":["dbService","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","MainPage","useState","email","setEmail","targets","useRef","useEffect","sendData","a","console","log","length","alert","collection","add","created","Date","now","className","style","backgroundColor","color","onClick","current","scrollIntoView","behavior","src","section0","width","height","section1","ref","type","value","onChange","e","target","placeholder","MakePage","history","s1title","setS1title","s1desc","setS1desc","s1applyButton","setS1applyButton","s2title","setS2title","s2desc","setS2desc","s3title","setS3title","s3desc","setS3desc","attachment1","setAttachment1","attachment2","setAttachment2","section3","attachment3","setAttachment3","mainColor","setMainColor","secNum","setSecNum","font","setFont","setLoading","onSubmit","push","go","onFileChange","num","oneFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","selectorList","map","item","index","borderBottom","fontFamily","to","display","flexDirection","justifyContent","alignItem","accept","selectorTable","ResponsePage","loading","reponses","setReponses","getDatas","orderBy","get","reDatas","reData","docs","doc","data","id","ResponseTable","fontWeight","fontSize","marginTop","SubmitPage","CouponPage","NavBar","scrollPosition","setScrollPosition","back","setBack","updateScroll","window","scrollY","document","documentElement","scrollTop","addEventListener","cursor","createBrowserHistory","AppRouter","minHeight","zIndex","exact","path","element","App","href","marginLeft","getFullYear","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.52f5f795.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import firebase from \"firebase/compat/app\"\n// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\n// import { getAnalytics } from \"firebase/analytics\";\nimport \"firebase/compat/firestore\";\nimport \"firebase/compat/storage\";\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDH_xQF-kBsVMEDwLNDJubGrzOp0Qnr_iU\",\n  authDomain: \"kiwi-d5dd3.firebaseapp.com\",\n  projectId: \"kiwi-d5dd3\",\n  storageBucket: \"kiwi-d5dd3.appspot.com\",\n  messagingSenderId: \"335393250887\",\n  appId: \"1:335393250887:web:231c18d1aa6d4356891b62\",\n  measurementId: \"G-7FJX546NWQ\"\n};\n\n// Initialize Firebase\n// export const app = firebase.initializeApp(firebaseConfig);\n// export const firebaseInstance = firebase;\n// const analytics = getAnalytics(app);\n// export const dbService = app.firestore();\n// export const stService = app.storage();\n\nexport const app = firebase.initializeApp(firebaseConfig);\nexport const firebaseInstance = firebase;\nexport const dbService = firebase.firestore();","export default __webpack_public_path__ + \"static/media/section0.f91c3bee.png\";","export default __webpack_public_path__ + \"static/media/section1.732058d6.png\";","export default __webpack_public_path__ + \"static/media/section3.8d8e5114.png\";","import React, {useEffect,useRef, useState} from 'react'\nimport './utils/MainPage.css'\nimport {Link} from 'react-router-dom';\nimport { dbService } from '../tools/fbase';\n\nimport section0 from '../tools/img/section0.png';\nimport section1 from '../tools/img/section1.png';\nimport section3 from '../tools/img/section3.png';\n\nfunction MainPage() {\n    const [email,setEmail] = useState(\"\");\n    const targets = useRef(null)\n\n    useEffect(() => {\n    },[])\n\n    const sendData = async () => {\n        console.log(dbService);\n        if(email.length < 4){\n            alert(\"올바른 이메일 양식을 입력해주세요!\");\n            return;\n        }\n        await dbService.collection(\"apply-datas\").add({\n            email:email,\n            created:Date.now(),\n        });\n\n        alert(\"신청되셨습니다. 감사합니다.\");\n        setEmail(\"\");\n    }\n\n    const scrollDown = () => {\n        targets.current.scrollIntoView({behavior: 'smooth'})\n    }\n\n    return (\n        <div className=\"main-page-container\">\n            <div className=\"main-page-section\" style={{backgroundColor:'#6B63F7'}}>\n                <div className=\"main-section-left\" style={{color:'white'}}>\n                    <span className=\"one-section-big\">\n                        랜딩페이지 제작부터<br/>\n                        데이터 분석까지<br/>\n                        빠르고 간단하게\n                    </span>\n                    <span className=\"one-section-small\">\n                        스타트업 아이템 검증부터 신규 서비스와 이벤트까지, <br/>\n                        최고의 고객 전환율을 경험해보세요.\n                    </span>\n                    <button className=\"apply-button\" onClick={scrollDown}>\n                        9,900원에 시작하기\n                    </button>\n                </div>\n                <div className=\"main-section-right\">              \n                    <img src={section0} width={700} height={450} className=\"section-one-image\"/>\n                </div>\n            </div>\n            <div className=\"main-page-section\" style={{backgroundColor:\"white\"}}>\n                <div className=\"main-section-left\">\n                    <span className=\"one-section-big\">\n                        코딩도 디자인도 필요없이<br/>One-stop으로<br/>랜딩페이지 만들기\n                    </span>\n                    <span className=\"one-section-small\">\n                        개발자가 없어도, 디자이너가 없어도,<br/>\n                        쉽고 빠르고 간편하게<br/>\n                        랜딩페이지를 만들어 보세요.\n                    </span>\n                </div>\n                <div className=\"main-section-right\">                   \n                    <img src={section1} className=\"section-one-image\"/>\n                </div>\n            </div>\n            <div className=\"main-page-section2\" style={{backgroundColor:\"white\"}}>\n                <div className=\"main-section-right\">\n                    This is Section2 Right\n                </div>\n                <div className=\"main-section-left\">\n                    <div className=\"middle-section\">\n                        <span className=\"one-section-big\">\n                        최적의 전환율을 위한 <br/>\n                        10여 가지의<br/>\n                        데이터 분석까지 한번에\n                        </span>\n                        <span className=\"one-section-small\">\n                        조회수, 사용자 수, 전환율, 유입 채널 등<br/>\n                        고객의 반응을 확인할 수 있는 데이터를<br/>\n                        직관적인 지표로 받아보세요.\n                        </span>\n                    </div>  \n                </div>\n            </div>\n            {/* <div className=\"main-page-section\" style={{backgroundColor:\"white\"}}>\n                <div className=\"main-section-left\">\n                    <div className=\"middle-section\">\n                        <span className=\"one-section-big\">\n                            제작부터 데이터 분석까지<br/>9,990원의<br/>합리적인 가격으로\n                        </span>\n                        <span className=\"one-section-small\">\n                            9,900원에 일주일 무료<br/>\n                            이후 하루마다 단돈 500원이 추가되는<br/>\n                            합리적인 가격으로 만나보세요.\n                        </span>\n                    </div>\n                </div>\n                <div className=\"main-section-right\">                   \n                    <img src={section3}  className=\"section-one-image\"/>\n                </div>\n            </div> */}\n            <div ref={targets} className=\"main-page-section-last\" style={{backgroundColor:'#6B63F7'}}>\n                <span className=\"last-one-component\" style={{width:'50%'}}>\n                    <div className=\"main-section-last-title\">\n                        랜딩페이지 제작,<br/>지금 바로 시작하세요\n                    </div>\n                    <input type=\"text\" value={email} onChange={e => setEmail(e.target.value)} placeholder=\"이메일을 입력하세요.\" className=\"input-text\"/>\n                    <button className=\"apply-button\" onClick={sendData}>사전신청하고 혜택받기</button>\n                    <div className=\"main-section-last-desc\">\n                        템플릿은 유저분들의 요청에 따라 <br/>계속 업데이트될 예정입니다.\n                    </div>\n                </span>\n                {/* <span className=\"last-one-component\">\n                    <div className=\"main-section-last-title\">\n                        지금 당장 필요하지 않다면<br/>쿠폰 받아가세요!\n                    </div>\n                    <Link to=\"coupon\" onClick={AddLog} className=\"apply-button\" style={{backgroundColor:'rgba(0,0,0,0)', color:'white'}}>\n                        할인쿠폰 받으러 가기</Link>\n                    \n                    <div className=\"main-section-last-desc\">\n                        이벤트 기간 : 2021.00.00 ~ 2021.00.00 <br/>\n                        사용 가능 기간 : ~ 2022.02.28\n                    </div>\n                </span> */}\n            </div>\n            {/* <div className=\"main-page-section-last\" style={{backgroundColor:'white', color:'black'}}>\n                <span className=\"last-one-component\" style={{width:'100%'}}>\n                    <div>\n                        여기에 뭐 설명같은거\n                    </div>\n                </span>\n            </div> */}\n        </div>\n    )\n}\n\nexport default MainPage\n","import React, {useEffect, useState} from 'react'\nimport './utils/MakePage.css'\nimport { dbService } from '../tools/fbase';\nimport {Link} from 'react-router-dom';\n\nimport section0 from '../tools/img/section0.png';\nimport section1 from '../tools/img/section1.png';\nimport section3 from '../tools/img/section3.png';\n\nconst MakePage = ({history}) => {\n    const [s1title, setS1title] = useState(\" 랜딩페이지 제작부터\\n데이터 분석까지 한번에\");\n    const [s1desc, setS1desc] = useState(\"스타트업 아이템 검증부터 신규 서비스, 이벤트까지 최고의 고객 전환율을 경험해보세요.\");\n    const [s1applyButton, setS1applyButton] = useState(\"9,900원에 시작하기\");\n    const [s2title, setS2title] = useState(\"코딩 필요없이 One-stop 랜딩페이지 제작 툴\");\n    const [s2desc, setS2desc] = useState(\"더 이상 개발자 눈치 보지 말고, 간편하게 랜딩 페이지를 만들어보세요.\");\n    const [s3title, setS3title] = useState(\"\");\n    const [s3desc, setS3desc] = useState(\"더 이상 개발자 눈치 보지 말고, 간편하게 랜딩 페이지를 만들어보세요.\");\n    // 텍스트들\n    const [attachment1, setAttachment1] = useState(`${section0}`);\n    const [attachment2, setAttachment2] = useState(`${section1}`)\n    const [attachment3, setAttachment3] = useState(`${section3}`)\n    // 사진들 아래는 기타\n    const [mainColor, setMainColor] = useState(\"#6B63F7\");\n    const [sectionOneImageLeft, setSectionOneImageLeft] = useState(0);\n    const [secNum, setSecNum] = useState(0);\n    const [font, setFont] = useState(\"Noto Sans KR\");\n    const [loading, setLoading] = useState(false);\n    const secNums = [0,1,2,3,4,5];\n\n    const onSubmit = async () => {\n        setLoading(true);\n\n        console.log(\"제출완료!\")\n\n        // 사진을 먼저 업로드하고 그 URL을 받아서 데이터로 넣어줘야한다.\n        // const attachmentRef = stService.ref().child(`${userObj.uid}/${uuidv4()}`)\n        // const response = await attachmentRef.putString(attachment, \"data_url\");\n        // const attachmentURL = await response.ref.getDownloadURL();\n\n        setLoading(false);\n        history.push('/submit');\n        history.go();\n    }\n\n    const onFileChange =  (e, num) => {\n        console.log(\"e\", num);\n        const {target:{files},} = e;\n        const oneFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => { // 로딩이 끝날 때 실행한다는 뜻.\n            const {currentTarget:{result}} = finishedEvent;\n            switch (num){\n                case 1:\n                    setAttachment1(result);\n                    break;\n                case 2:\n                    setAttachment2(result);\n                    break;\n                case 3:\n                    setAttachment3(result);\n                    break;\n\n            }\n        }\n        reader.readAsDataURL(oneFile);\n    }\n\n    const selectorList = secNums.map((item,index) => {\n        if(item === secNum){\n            var borderBottom = '';\n        }else{\n            var borderBottom = '1px solid black';\n        }\n        if(item === 0){\n            return (\n                <span index={index} style={{borderBottom:`${borderBottom}`}} className=\"make-page-section-selector\" onClick={(e) => {\n                    setSecNum(item);\n                    }}>\n                    기본세팅\n                </span>\n            )\n        }else{\n        return(\n            <span index={index} style={{borderBottom:`${borderBottom}`}} className=\"make-page-section-selector\" onClick={(e) => setSecNum(item)}>\n                {item}번\n            </span>\n            )\n        }\n    })\n\n    const selectorTable = () => {\n        switch (secNum){\n            case 0:\n                return <>\n                    <div className=\"section-one-make\">\n                        <div className=\"section-one-make-one\">\n                            <div>\n                                - 색상\n                            </div>\n                            <div style={{display:'flex', flexDirection:'row', justifyContent:'center'}}>\n                            <span className=\"colorSelection\">\n                                1번\n                                <input value={mainColor} type=\"color\" onChange={e => setMainColor(e.currentTarget.value)}/>\n                            </span>\n                            <span className=\"colorSelection\">\n                                2번\n                            </span>\n                            <span className=\"colorSelection\">\n                                3번\n                            </span>\n                            </div>\n                        </div>\n                        <div className=\"section-one-make-one\">                        \n                            <div>\n                                - 폰트\n                            </div>\n                            <div style={{display:'flex', flexDirection:'column', justifyContent:'center', alignItem:'center', width:'100%'}}>\n                                <span className=\"fontSelection\" onClick={e => setFont(\"Noto Sans KR\")} style={{fontFamily:\"Noto Sans KR\"}}>\n                                    다람쥐 쳇바퀴 굴러가는 소리\n                                </span>\n                                <span className=\"fontSelection\" onClick={e => setFont(\"ImcreSoojin\")} style={{fontFamily:\"ImcreSoojin\"}}  >\n                                    다람쥐 쳇바퀴 굴러가는 소리\n                                </span>\n                                <span className=\"fontSelection\" onClick={e => setFont(\"\")} style={{fontFamily:\"\"}} >\n                                    다람쥐 쳇바퀴 굴러가는 소리\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                </>\n            case 1:\n                return <>\n                <div className=\"section-one-make\">\n                    1번 타이틀\n                    <textarea value={s1title} type=\"text\" onChange={e => setS1title(e.currentTarget.value)} className=\"section-one-title-input\"/>\n                    1번 설명\n                    <input value={s1desc} type=\"text\" onChange={e => setS1desc(e.currentTarget.value)} className=\"section-one-title-input\"/>\n                    1번에 버튼 텍스트\n                    <input value={s1applyButton} type=\"text\" onChange={e => setS1applyButton(e.currentTarget.value)} className=\"section-one-title-input\"/>\n                    <input type=\"file\" accept=\"image/*\" className=\"file-input\" onChange={(e) => onFileChange(e, 1)}/>\n                </div>\n                </>\n            case 2:\n                return <>\n                <div className=\"section-one-make\">\n                    2번 타이틀\n                    <input value={s2title} type=\"text\" onChange={e => setS2title(e.currentTarget.value)} className=\"section-one-title-input\"/>\n                    2번 설명\n                    <input value={s2desc} type=\"text\" onChange={e => setS2desc(e.currentTarget.value)} className=\"section-one-title-input\"/>\n                    2번 사진\n                    <input type=\"file\" accept=\"image/*\" className=\"file-input\" onChange={e => onFileChange(e,2)}/>\n                </div>\n                </>\n            case 3:\n                return <>\n                <div className=\"section-one-make\">\n                    3번 타이틀\n                    <input value={s3title} type=\"text\" onChange={e => setS3title(e.currentTarget.value)} className=\"section-one-title-input\"/>\n                    3번 설명\n                    <input value={s3desc} type=\"text\" onChange={e => setS3desc(e.currentTarget.value)} className=\"section-one-title-input\"/>\n                    3번 사진\n                    <input type=\"file\" accept=\"image/*\" className=\"file-input\" onChange={e => onFileChange(e,3)}/>\n                </div>\n                </>\n        }\n    }\n\n    return (\n        <div className=\"make-page-container\">\n        {/* 여기서부터 메인페이지 베껴옴 */}\n        <div className=\"main-page-container\" style={{width:'70%'}}>\n            <div className=\"main-page-section\" style={{backgroundColor:`${mainColor}`}}>\n                <div className=\"main-section-left\" style={{color:'white'}}>\n                    <span className=\"one-section-big\" style={{fontFamily:`${font}`}}>\n                        {s1title}\n                    </span>\n                    <span className=\"one-section-small\">\n                        {s1desc}\n                    </span>\n                    <span className=\"apply-button\">\n                        {s1applyButton}\n                    </span>\n                </div>\n                <div className=\"main-section-right\">              \n                        {attachment1 && \n                        <div>\n                            <img src={attachment1} className=\"col-image\"/>\n                        </div>\n                        }\n                </div>\n            </div>\n            <div className=\"main-page-section\" style={{backgroundColor:\"white\", color:'#505050'}}>\n                <div className=\"main-section-left\">\n                    <span className=\"one-section-big\" style={{fontFamily:`${font}`}}>\n                        {s2title}\n                    </span>\n                    <span className=\"one-section-small\">\n                        {s2desc}\n                    </span>\n                </div>\n                <div className=\"main-section-right\">               \n                        {attachment2 && \n                        <div>\n                            <img src={attachment2} className=\"col-image\"/>\n                        </div>\n                        }\n                </div>\n            </div>\n            <div className=\"main-page-section\" style={{backgroundColor:\"white\", color:'#505050'}}>\n                <div className=\"main-section-right\">\n                    This is Section2 Right\n                </div>\n                <div className=\"main-section-left\">\n                    <div className=\"middle-section\">\n                        <span className=\"one-section-big\">\n                            {s3title}\n                        </span>\n                        <span className=\"one-section-small\">\n                            {s3desc}\n                        </span>\n                    </div>  \n                </div>\n            </div>\n            <div className=\"main-page-section\" style={{backgroundColor:\"white\", color:'#505050'}}>\n                <div className=\"main-section-left\">\n                    <div className=\"middle-section\">\n                        <span className=\"one-section-big\">\n                            제작부터 데이터 분석을<br/>9,990원의<br/>합리적인 가격으로\n                        </span>\n                        <span className=\"one-section-small\">\n                            평균 30만원의 랜딩페이지 제작비용을 <br/>\n                            9,900원으로 줄였어요.\n                        </span>\n                    </div>\n                </div>\n                <div className=\"main-section-right\">          \n                        {attachment3 && \n                        <div>\n                            <img src={attachment3} className=\"col-image\"/>\n                        </div>\n                        }\n                </div>\n            </div>\n            <div className=\"main-page-section-last\" style={{backgroundColor:`${mainColor}`}}>\n                <div className=\"main-section-last-title\">\n                    랜딩페이지 제작<br/>지금 시작하기\n                </div>\n                <Link to=\"makePage\" className=\"apply-button\">이동하기</Link>\n            </div>\n        </div>\n        {/* 여기까지 메인페이지 베껴옴 */}\n            <div className=\"make-page-make-space\">\n                작성\n                <div className=\"section-selector-container\">\n                    {selectorList}\n                </div>\n                <div className=\"section-table-container\">\n                    {selectorTable()}\n                </div>\n                <button onClick={onSubmit} style={{width:'50%'}}>등록</button>\n            </div>\n            {/* 로딩창 */}\n        </div>\n    )\n}\n\nexport default MakePage\n","import React, {useState, useEffect} from 'react';\nimport './utils/ResponsePage.css';\nimport {dbService} from '../tools/fbase';\n\n // Replace with your client ID from the developer console.\nconst CLIENT_ID = \"335393250887-ii6pdb7u2dehl0tlgp7t1ct6n2kl9f4j.apps.googleusercontent.com\"; // <-- 발급받은 Client ID 입력 \n\n // Set authorized scope.\nconst SCOPES = ['https://www.googleapis.com/auth/analytics.readonly'];\n\nfunction ResponsePage() {\n    const [id, setId] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n    const [reponses, setReponses] = useState([{\n        email:\"\",\n        created:0\n    }]);\n\n    useEffect(() =>{\n        getDatas();\n        console.log(reponses);\n    },[loading]);\n\n    const getDatas = async () => {\n        const reDatas = await dbService\n        .collection(\"apply-datas\")\n        .orderBy(\"created\", \"desc\")\n        .get(); // uid를 creatorId로 줬었으니까.\n\n        let reData = reDatas.docs.map(doc => {\n            return({...doc.data(), id:doc.id})\n        });\n        setReponses(reData);\n        setLoading(true);\n    }\n\n function authorize() {\n     // Handles the authorization flow.\n     // `immediate` should be false when invoked from the button click.\n     // var useImmdiate = event ? false : true;\n     var authData = {\n         client_id: CLIENT_ID,\n         scope: SCOPES,\n         immediate: false\n     };\n\n     window.gapi.auth.authorize(authData, function (response) {\n         var authButton = document.getElementById('auth-button');\n         if (response.error) {\n             authButton.hidden = false;\n         }\n         else {\n             authButton.hidden = true;\n             queryAccounts();\n         }\n     });\n }\n\n function queryAccounts() {\n     // Load the Google Analytics client library.\n     window.gapi.client.load('analytics', 'v3').then(function () {\n\n         // Get a list of all Google Analytics accounts for this user\n         window.gapi.client.analytics.management.accounts.list().then(handleAccounts);\n     });\n }\n\n function handleAccounts(response) {\n     // Handles the response from the accounts list method.\n     if (response.result.items && response.result.items.length) {\n         // Get the first Google Analytics account.\n         var firstAccountId = response.result.items[0].id;\n\n         // Query for properties.\n         queryProperties(firstAccountId);\n     } else {\n         console.log('No accounts found for this user.');\n     }\n }\n\n function queryProperties(accountId) {\n     // Get a list of all the properties for the account.\n     window.gapi.client.analytics.management.webproperties.list(\n         { 'accountId': accountId })\n       .then(handleProperties)\n       .then(null, function (err) {\n           // Log any errors.\n           console.log(err);\n       });\n }\n\n function handleProperties(response) {\n     // Handles the response from the webproperties list method.\n     if (response.result.items && response.result.items.length) {\n\n         // Get the first Google Analytics account\n         var firstAccountId = response.result.items[0].accountId;\n\n         // Get the first property ID\n         var firstPropertyId = response.result.items[0].id;\n\n         // Query for Views (Profiles).\n         queryProfiles(firstAccountId, firstPropertyId);\n     } else {\n         console.log('No properties found for this user.');\n     }\n }\n\n function queryProfiles(accountId, propertyId) {\n     // Get a list of all Views (Profiles) for the first property\n     // of the first Account.\n     window.gapi.client.analytics.management.profiles.list({\n         'accountId': accountId,\n         'webPropertyId': propertyId\n     })\n     .then(handleProfiles)\n     .then(null, function (err) {\n         // Log any errors.\n         console.log(err);\n     });\n }\n\n function handleProfiles(response) {\n     // Handles the response from the profiles list method.\n     if (response.result.items && response.result.items.length) {\n         // Get the first View (Profile) ID.\n         var firstProfileId = response.result.items[0].id;\n         // Query the Core Reporting API.\n         queryCoreReportingapi(firstProfileId);\n\n     } else {\n         console.log('No views (profiles) found for this user.');\n     }\n }\n\n function queryCoreReportingapi(profileId) {\n     // Query the Core Reporting API for the number sessions for\n     // the past seven days.\n     window.gapi.client.analytics.data.ga.get({\n         'ids': 'ga:' + profileId,\n         // ## 조회 시작일자\n         'start-date': '2020-03-03',\n         // ## 조회 마지막일자\n         'end-date': '2020-03-09',\n         // ##  -- 사용자, 신규 방문자, 세션, 이탈률, 평균세션시간(초), 페이지뷰 수, 세션당 페이지수, 사용자당 세션 수 \n         'metrics': 'ga:users,ga:newUsers,ga:sessions,ga:bounceRate,ga:avgSessionDuration,ga:pageviews,ga:pageviewsPerSession,ga:sessionsPerUser',\n         // ##  -- 소스 , 매체\n         'dimensions': 'ga:source,ga:medium'\n     })\n     .then(function (response) {\n         var formattedJson = JSON.stringify(response.result, null, 2);\n         document.getElementById('query-output').value = formattedJson;\n     })\n     .then(null, function (err) {\n         // Log any errors.\n         console.log(err);\n     });\n }\n\n    const ResponseTable = reponses.map((item, index) => {\n        console.log(\"item\", item)\n        return (\n            <span index={index}>\n                신청자 이메일 :<span style={{fontWeight:'700'}}>{item.email}</span>, 신청 날짜 : {Date(item.created)}\n            </span>\n        )\n    })\n\n    if(loading === true){\n        return (\n            <div className=\"response-container\">\n                {/* 응답 가져오기\n                <input placeholder=\"가져올 ga의 아이디\" value={id} onChange={e => setId(e.target.value)}/>\n                <button onClick={getData}>가져오기</button>\n                <button id=\"auth-button\" onClick={authorize}>Authorize</button>\n                <textarea cols=\"80\" rows=\"20\" id=\"query-output\"></textarea> */}\n                <div>\n                    <span style={{fontSize:'30px'}}> 신청한 사람 수 : 총 {reponses.length} 명 </span>\n                    <div style={{display:'flex', flexDirection:'column', marginTop:'5%'}}>\n                        {ResponseTable}\n                    </div>\n                </div>\n            </div>\n        )\n    }else{\n        return(\n            <></>\n        )\n    }\n}\n\nexport default ResponsePage\n","import React, {useState, useEffect} from 'react'\n\nimport './SubmitPage.css'\n\nfunction SubmitPage() {\n\n    useEffect(() => {\n    })\n\n    return (\n        <div className=\"after-page-one-container\">\n            <div className=\"after-page-desc\">\n                <p>\n                저희 서비스를 이용해주셔서 감사합니다.\n                </p>\n                <p>\n                356-005--7188-33으로 9.900원을 입금해주세요 .\n                </p>\n                <p>\n                입금 확인 후 24시간 이내로 완성된 랜딩페이지 주소와 결과 확인 페이지를 안내드립니다.\n                </p>\n                <p>\n                입금 후 확인문자 전송을 위해 다음을 제출해 주세요 .\n                </p>\n            </div>\n            <div className=\"after-page-message-container\">\n                <button className=\"submit-submit-button\" onClick={() => console.log(\"제출\")}>제출</button>\n            </div>\n        </div>\n    )\n}\n\nexport default SubmitPage\n","import React from 'react'\nimport './utils/CouponPage.css'\n\nfunction CouponPage() {\n    return (\n        <div className=\"coupon-page-one-container\">\n            <div className=\"coupon-page-message-container\">\n                <span className=\"coupon-info-message\">\n                <span style={{fontWeight:'700', fontSize:'25px'}}>저희 서비스에 관심을 가져주셔서 감사합니다.</span> <br/> <br/>\n                아래에 쿠폰을 받을 이메일을 제출해주시면 2022년 2월 28일까지 ~~하게 쓸 수 있는 \n                쿠폰을 메일로 보내드리겠습니다. <br/> <br/>\n                앞으로 템플릿은 계속해서 업데이트될예정이니\n                많은 관심 부탁드립니다.\n                </span>\n\n                <div className=\"info-input\">\n                    <span>\n                    이름\n                    </span>\n                    <span>\n                    이메일\n                    </span>\n                    <span>\n                    직업\n                    </span>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default CouponPage\n","import React, {useState, useEffect} from 'react'\nimport './utils/NavBar.css'\nimport {Link} from 'react-router-dom';\n\n\nfunction NavBar({history}) {\n    const [scrollPosition, setScrollPosition] = useState(0);\n    const [back, setBack] = useState(0);\n\n    const updateScroll = () => {\n        setScrollPosition(window.scrollY || document.documentElement.scrollTop);\n    }\n    useEffect(()=>{\n        window.addEventListener('scroll', updateScroll);\n        if(scrollPosition < 50){\n            setBack(scrollPosition*(1/50));\n        }else{\n            setBack(1);\n        }\n    });\n\n    return (\n        <div className={scrollPosition < 50 ? \"nav-bar-container-top\" : \"nav-bar-container\"} \n        style={{backgroundColor:`rgba(255,255,255,${back})`, color:`rgba(${255-back*149},${255-back*156},${255-back*8},1)`\n        }}>\n            <span className=\"nav-bar-title\" onClick={() => {history.push('/#/'); history.go();}} style={{cursor:'pointer'}}>\n                Surfee\n            </span>\n            <span className=\"nav-on\">\n                <span className=\"nav-button\">사전신청 하기</span>\n            </span>\n        </div>\n    )\n}\n\nexport default NavBar\n","import React, {useState} from 'react';\nimport {HashRouter as Router, Route, Routes} from \"react-router-dom\";\nimport './App.css';\nimport MainPage from '../components/MainPage/MainPage';\nimport MakePage from '../components/MakePage/MakePage';\nimport ResponsePage from '../components/ResponsePage/ResponsePage';\nimport SubmitPage from './MakePage/utils/SubmitPage';\nimport CouponPage from './CouponPage/CouponPage';\nimport NavBar from '../components/NavBar/NavBar';\n\nimport { createBrowserHistory } from 'history';\nconst history = createBrowserHistory();\n\nconst AppRouter = () => {\nreturn(\n    <Router history={history}>\n        <>\n        <div className=\"Container\" style={{ minHeight: 'calc(100vh - 80px)', zIndex:-1 }}>\n        <NavBar history={history}/>\n        <Routes>\n            <Route exact path=\"/\" element={<MainPage/>} />\n            <Route path=\"/make\" element={<MakePage  history={history}/>} />\n            <Route path=\"/seeResponse\" element={<ResponsePage/> }/>\n            <Route path=\"/submit\" element={<SubmitPage/>} />\n            <Route path=\"/coupon\" element={<CouponPage/>} />\n        </Routes>\n        </div>\n        </> \n    </Router>\n)\n}\nexport default AppRouter;","import logo from './logo.svg';\nimport './App.css';\nimport AppRouter from './Router';\nimport NavBar from '../components/NavBar/NavBar';\n\nfunction App() {\n  return (\n    <>\n    <div className=\"App\">\n    <AppRouter />\n    <footer className=\"footer\">\n      <div className=\"footer-item\">\n        <a href=\"https://google.com\" className=\"insta\">📆 Instagram</a>\n        <a href=\"https://naver.com\" className=\"insta\" style={{marginLeft:'3%'}}>문의하기</a>\n        </div>\n        <div className=\"footer-item\">&copyright by soozip {new Date().getFullYear()}</div>\n      </footer>\n    </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}