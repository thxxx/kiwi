<<<<<<< HEAD
[{"/Users/gimhojin/Desktop/soozipweb/kiwi/src/index.js":"1","/Users/gimhojin/Desktop/soozipweb/kiwi/src/reportWebVitals.js":"2","/Users/gimhojin/Desktop/soozipweb/kiwi/src/App.js":"3","/Users/gimhojin/Desktop/soozipweb/kiwi/src/Router.js":"4","/Users/gimhojin/Desktop/soozipweb/kiwi/src/tools/LoadingDisplay.js":"5","/Users/gimhojin/Desktop/soozipweb/kiwi/src/tools/fbase.js":"6","/Users/gimhojin/Desktop/soozipweb/kiwi/src/tools/ScrollToTop.js":"7","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/ExamplePage/ExamplePage.js":"8","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/Landing/MainPageV2.js":"9","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/Response/ResponsePage.js":"10","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/AdminPage/AdminPage.js":"11","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/Customer/CustomerPage.js":"12","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/Login/Login/LoginPage.js":"13","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/Login/Register/RegisterPage.js":"14","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/unused/SubmitPage.js":"15","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/Make/MakePageV2.js":"16","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/Questions/FirstQuestions.js":"17","/Users/gimhojin/Desktop/soozipweb/kiwi/src/tools/ChannelTalk.js":"18","/Users/gimhojin/Desktop/soozipweb/kiwi/src/tools/MiniModal.js":"19","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/NavAndFooter/Footer.js":"20","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/NavAndFooter/NavBarV2.js":"21","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/UserLandingPage/UserContents.js":"22","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/UserLandingPage/UserFoot.js":"23","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/UserLandingPage/UserNavBar.js":"24","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/UserLandingPage/UserSection.js":"25","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/Landing/tools/AskLoginModal.js":"26","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Login/RegisterModal.js":"27","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Customer/PersonalInformation.js":"28","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Customer/QnA.js":"29","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Customer/Term.js":"30","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/baseTypes.js":"31","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/components/TextAuto.js":"32","/Users/gimhojin/Desktop/soozipweb/kiwi/src/tools/ConfirmCustom.js":"33","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Login/LoginModal.js":"34","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/UserLandingPage/Sections/QnaSection.js":"35","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/UserLandingPage/Sections/CtaSection.js":"36","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/UserLandingPage/Sections/GallerySection.js":"37","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/UserLandingPage/Sections/TextSection.js":"38","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/UserLandingPage/Sections/FeaturesSection.js":"39","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/UserLandingPage/Sections/VideoSection.js":"40","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/UserLandingPage/Sections/MockupSection.js":"41","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/UserLandingPage/Sections/ReviewSection.js":"42","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/UserLandingPage/Sections/HeroSection.js":"43","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/UserLandingPage/Sections/DetailSection.js":"44","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Modal/LoadingModal.js":"45","/Users/gimhojin/Desktop/soozipweb/kiwi/src/tools/FeedbackModal.js":"46","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/NewSection.js":"47","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/Landing/old/MainPage.js":"48","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/NavAndFooter/Profile.js":"49","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Footer/MakeFooterV2.js":"50","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/NavBar/MakeNavigationV2.js":"51","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/NewSectionMake.js":"52","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/Make/NavBarInMakePage/NavBarInMakePage.js":"53","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Response/ResultTopTitle.js":"54","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Response/ResponseNavBar.js":"55","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Response/MadeLandingCard.js":"56","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Response/ChromeTapBar.js":"57","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Response/ResultTable.js":"58","/Users/gimhojin/Desktop/soozipweb/kiwi/src/tools/ResponseTutorialModal.js":"59","/Users/gimhojin/Desktop/soozipweb/kiwi/src/tools/MakeTutorialModal.js":"60","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/NavFooterSetting/ContentsIcons.js":"61","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/NavFooterSetting/EditSetting.js":"62","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/EditMockupSection.js":"63","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/EditTextSection.js":"64","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/NavFooterSetting/EditContents.js":"65","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/EditQnaSection.js":"66","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/NavFooterSetting/EditFooterSection.js":"67","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/EditVideoSection.js":"68","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/EditGallerySection.js":"69","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/EditReviewSection.js":"70","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/EditHeroSection.js":"71","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/EditFeaturesSection.js":"72","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/EditDetailSection.js":"73","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/NavFooterSetting/EditNaviSection.js":"74","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/NavBar/NaviConatainer.js":"75","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Footer/FTemplate.js":"76","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/GallerySection.js":"77","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/QnaSection.js":"78","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/VideoSection.js":"79","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/TextSection.js":"80","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/ApplySection.js":"81","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/AppDownloadSection.js":"82","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/MockupSection.js":"83","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/FeaturesSection.js":"84","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/ReviewSection.js":"85","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/CtaSection.js":"86","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/DetailSection.js":"87","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/HeroSection.js":"88","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/NavAndFooter/NavBar/NavBar.js":"89","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/EditCtaSection.js":"90","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Modal/AddingSection.js":"91","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/tools/EditDesign.js":"92","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/tools/Contents.js":"93","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/components/FeatureCard.js":"94","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/components/AnimationDiv.js":"95","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/components/QnaOpenClose.js":"96","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/components/TitleDesc.js":"97","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/tools/Layout.js":"98","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/tools/EditTitleDesc.js":"99","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/tools/LayoutRFG.js":"100","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/tools/ElementsTable.js":"101","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/tools/AddAppButton.js":"102","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/tools/AddCtaButton.js":"103","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/tools/AddGhostButton.js":"104","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/tools/EditNotice.js":"105","/Users/gimhojin/Desktop/soozipweb/kiwi/src/tools/ImageModal.js":"106","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/components/Element.js":"107","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/components/ReturnButton.js":"108","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/components/ImageOrSlide.js":"109","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/UserLandingPage/Sections/components/AnimationDiv.js":"110","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/UserLandingPage/Sections/components/ImageOrSlide.js":"111","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/UserLandingPage/Sections/components/TitleDesc.js":"112","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/UserLandingPage/Sections/components/FeatureCard.js":"113","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/UserLandingPage/Sections/components/Element.js":"114","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/UserLandingPage/Sections/components/ReturnButton.js":"115","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/UserLandingPage/Sections/components/TextAuto.js":"116","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/UserLandingPage/Sections/components/QnaOpenClose.js":"117","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/components/IconTable.js":"118","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/components/FuncImageCarousel.js":"119","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/UserLandingPage/Sections/components/FuncImageCarousel.js":"120","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/ExamplePage/TemplateModal.js":"121","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/Customer/WhatIsSurfee.js":"122","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/EditLineSection.js":"123","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/LineSection.js":"124","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/func/FuncTopBar.js":"125","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/func/TextSizeCustom.js":"126","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/Custom/OnOffCustom.js":"127","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/Custom/AlignCustom.js":"128","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/Custom/ColorCustom.js":"129","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/Custom/SingleColorCustom.js":"130","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/Custom/OpenCloseCustom.js":"131","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/Custom/RadioCustom.js":"132","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/func/FuncYoutubeLink.js":"133","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/func/FuncSlideImg.js":"134","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/func/FuncContentVideo.js":"135","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/Custom/SliderCustom.js":"136","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/func/FuncContentImg.js":"137","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/Custom/ApplyInputCustom.js":"138","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/Custom/CheckBoxCustom.js":"139","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/Custom/InputCustom.js":"140","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/Custom/BoxCustom.js":"141","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/Custom/AnimationCustom.js":"142","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/func/FuncFaviconImg.js":"143","/Users/gimhojin/Desktop/soozipweb/kiwi/src/tools/modal/FeatVote.js":"144","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/tools/Editor.js":"145","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/VotePage/VotePage.js":"146","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/Landing/MainPageV3.js":"147","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Landing/LandingTemplates.js":"148","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/Sourcing/SourcingPage.js":"149","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Landing/ChoiceModal.js":"150","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/UserLanding/UserLandingPage.js":"151","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/UserLanding/NavAndFooter/ErrorPage.js":"152","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/EventPage/GiftPage/GiftPage.js":"153","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/EventPage/GiftPage/KaKaoTalkButton.js":"154","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/EventPage/GiftPage/GiftMake.js":"155","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/EventPage/GiftPage/GiftEnd.js":"156","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/EventPage/GiftPage/GiftBox.js":"157","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/EventPage/ContestPage/ContestPage.js":"158","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/AdminPage/UploadContest.js":"159"},{"size":627,"mtime":1650011145492,"results":"160","hashOfConfig":"161"},{"size":362,"mtime":1643169385982,"results":"162","hashOfConfig":"161"},{"size":1132,"mtime":1649055627813,"results":"163","hashOfConfig":"161"},{"size":5693,"mtime":1650573678587,"results":"164","hashOfConfig":"161"},{"size":501,"mtime":1649055627863,"results":"165","hashOfConfig":"161"},{"size":1279,"mtime":1643169385983,"results":"166","hashOfConfig":"161"},{"size":259,"mtime":1649055627864,"results":"167","hashOfConfig":"161"},{"size":9778,"mtime":1649814215254,"results":"168","hashOfConfig":"161"},{"size":15230,"mtime":1649325747022,"results":"169","hashOfConfig":"161"},{"size":9056,"mtime":1649055748260,"results":"170","hashOfConfig":"161"},{"size":11414,"mtime":1650532627568,"results":"171","hashOfConfig":"161"},{"size":3340,"mtime":1644836376393,"results":"172","hashOfConfig":"161"},{"size":5567,"mtime":1649055627852,"results":"173","hashOfConfig":"161"},{"size":6763,"mtime":1646641015299,"results":"174","hashOfConfig":"161"},{"size":1669,"mtime":1649407066358,"results":"175","hashOfConfig":"161"},{"size":18671,"mtime":1650009305070,"results":"176","hashOfConfig":"161"},{"size":33005,"mtime":1649669805723,"results":"177","hashOfConfig":"161"},{"size":1399,"mtime":1649055627861,"results":"178","hashOfConfig":"161"},{"size":2832,"mtime":1649055748262,"results":"179","hashOfConfig":"161"},{"size":2676,"mtime":1649485165088,"results":"180","hashOfConfig":"161"},{"size":5277,"mtime":1650546064049,"results":"181","hashOfConfig":"161"},{"size":700,"mtime":1649055627848,"results":"182","hashOfConfig":"161"},{"size":7302,"mtime":1649055748255,"results":"183","hashOfConfig":"161"},{"size":6677,"mtime":1649128123813,"results":"184","hashOfConfig":"161"},{"size":4599,"mtime":1649646249304,"results":"185","hashOfConfig":"161"},{"size":3237,"mtime":1649055748257,"results":"186","hashOfConfig":"161"},{"size":7338,"mtime":1649055748241,"results":"187","hashOfConfig":"161"},{"size":8149,"mtime":1643169385968,"results":"188","hashOfConfig":"161"},{"size":2448,"mtime":1643169385968,"results":"189","hashOfConfig":"161"},{"size":8636,"mtime":1643169385968,"results":"190","hashOfConfig":"161"},{"size":22438,"mtime":1649056763760,"results":"191","hashOfConfig":"161"},{"size":1530,"mtime":1649055627841,"results":"192","hashOfConfig":"161"},{"size":2882,"mtime":1649055627862,"results":"193","hashOfConfig":"161"},{"size":7069,"mtime":1649324449667,"results":"194","hashOfConfig":"161"},{"size":2525,"mtime":1649055748254,"results":"195","hashOfConfig":"161"},{"size":2270,"mtime":1649055627844,"results":"196","hashOfConfig":"161"},{"size":4295,"mtime":1649055748253,"results":"197","hashOfConfig":"161"},{"size":735,"mtime":1649055627846,"results":"198","hashOfConfig":"161"},{"size":3526,"mtime":1649907380314,"results":"199","hashOfConfig":"161"},{"size":2011,"mtime":1649733123565,"results":"200","hashOfConfig":"161"},{"size":1319,"mtime":1649055627845,"results":"201","hashOfConfig":"161"},{"size":6260,"mtime":1649055748254,"results":"202","hashOfConfig":"161"},{"size":1588,"mtime":1649725623116,"results":"203","hashOfConfig":"161"},{"size":1588,"mtime":1649725620336,"results":"204","hashOfConfig":"161"},{"size":1442,"mtime":1649055627831,"results":"205","hashOfConfig":"161"},{"size":23054,"mtime":1649055627862,"results":"206","hashOfConfig":"161"},{"size":6957,"mtime":1649319991564,"results":"207","hashOfConfig":"161"},{"size":3974,"mtime":1649322657011,"results":"208","hashOfConfig":"161"},{"size":5705,"mtime":1649055748252,"results":"209","hashOfConfig":"161"},{"size":1902,"mtime":1649055627831,"results":"210","hashOfConfig":"161"},{"size":2113,"mtime":1649055627832,"results":"211","hashOfConfig":"161"},{"size":10530,"mtime":1649055627823,"results":"212","hashOfConfig":"161"},{"size":22910,"mtime":1649485579287,"results":"213","hashOfConfig":"161"},{"size":6385,"mtime":1649216895421,"results":"214","hashOfConfig":"161"},{"size":1237,"mtime":1649485671303,"results":"215","hashOfConfig":"161"},{"size":8917,"mtime":1649055748252,"results":"216","hashOfConfig":"161"},{"size":1241,"mtime":1649055627842,"results":"217","hashOfConfig":"161"},{"size":7013,"mtime":1649055627844,"results":"218","hashOfConfig":"161"},{"size":6360,"mtime":1649055627864,"results":"219","hashOfConfig":"161"},{"size":8084,"mtime":1649055748262,"results":"220","hashOfConfig":"161"},{"size":2266,"mtime":1649055627821,"results":"221","hashOfConfig":"161"},{"size":25333,"mtime":1649485484940,"results":"222","hashOfConfig":"161"},{"size":6411,"mtime":1649055627816,"results":"223","hashOfConfig":"161"},{"size":1682,"mtime":1649055627817,"results":"224","hashOfConfig":"161"},{"size":19535,"mtime":1649484555737,"results":"225","hashOfConfig":"161"},{"size":4588,"mtime":1649055627816,"results":"226","hashOfConfig":"161"},{"size":7143,"mtime":1649055748243,"results":"227","hashOfConfig":"161"},{"size":7132,"mtime":1649055627817,"results":"228","hashOfConfig":"161"},{"size":5232,"mtime":1649055627815,"results":"229","hashOfConfig":"161"},{"size":7312,"mtime":1649055627817,"results":"230","hashOfConfig":"161"},{"size":3186,"mtime":1649055748242,"results":"231","hashOfConfig":"161"},{"size":8081,"mtime":1649055627815,"results":"232","hashOfConfig":"161"},{"size":2480,"mtime":1649055627815,"results":"233","hashOfConfig":"161"},{"size":10800,"mtime":1649055748243,"results":"234","hashOfConfig":"161"},{"size":6110,"mtime":1649055748247,"results":"235","hashOfConfig":"161"},{"size":5967,"mtime":1649055748246,"results":"236","hashOfConfig":"161"},{"size":6399,"mtime":1649055748249,"results":"237","hashOfConfig":"161"},{"size":2782,"mtime":1649055748249,"results":"238","hashOfConfig":"161"},{"size":2452,"mtime":1649055627838,"results":"239","hashOfConfig":"161"},{"size":899,"mtime":1649055627837,"results":"240","hashOfConfig":"161"},{"size":2798,"mtime":1649055748248,"results":"241","hashOfConfig":"161"},{"size":2917,"mtime":1649055748247,"results":"242","hashOfConfig":"161"},{"size":1512,"mtime":1649055627836,"results":"243","hashOfConfig":"161"},{"size":6996,"mtime":1649907378329,"results":"244","hashOfConfig":"161"},{"size":6790,"mtime":1649055748249,"results":"245","hashOfConfig":"161"},{"size":2827,"mtime":1649407509273,"results":"246","hashOfConfig":"161"},{"size":1794,"mtime":1649407505520,"results":"247","hashOfConfig":"161"},{"size":2180,"mtime":1649407503352,"results":"248","hashOfConfig":"161"},{"size":1254,"mtime":1649055627855,"results":"249","hashOfConfig":"161"},{"size":2888,"mtime":1649055748241,"results":"250","hashOfConfig":"161"},{"size":5691,"mtime":1649145068210,"results":"251","hashOfConfig":"161"},{"size":9062,"mtime":1649055748242,"results":"252","hashOfConfig":"161"},{"size":14967,"mtime":1649055748242,"results":"253","hashOfConfig":"161"},{"size":1214,"mtime":1649055627839,"results":"254","hashOfConfig":"161"},{"size":900,"mtime":1649055627839,"results":"255","hashOfConfig":"161"},{"size":4620,"mtime":1649055748250,"results":"256","hashOfConfig":"161"},{"size":4521,"mtime":1649319812531,"results":"257","hashOfConfig":"161"},{"size":8970,"mtime":1649055627820,"results":"258","hashOfConfig":"161"},{"size":1728,"mtime":1649055627820,"results":"259","hashOfConfig":"161"},{"size":2385,"mtime":1649055627820,"results":"260","hashOfConfig":"161"},{"size":982,"mtime":1649055627820,"results":"261","hashOfConfig":"161"},{"size":1661,"mtime":1649055627817,"results":"262","hashOfConfig":"161"},{"size":4492,"mtime":1649055627818,"results":"263","hashOfConfig":"161"},{"size":4601,"mtime":1649055627818,"results":"264","hashOfConfig":"161"},{"size":1534,"mtime":1649055748243,"results":"265","hashOfConfig":"161"},{"size":1546,"mtime":1649055627863,"results":"266","hashOfConfig":"161"},{"size":4802,"mtime":1649323407139,"results":"267","hashOfConfig":"161"},{"size":7499,"mtime":1650507048454,"results":"268","hashOfConfig":"161"},{"size":10196,"mtime":1649322629691,"results":"269","hashOfConfig":"161"},{"size":900,"mtime":1649055627846,"results":"270","hashOfConfig":"161"},{"size":4606,"mtime":1649055627847,"results":"271","hashOfConfig":"161"},{"size":1982,"mtime":1649055748254,"results":"272","hashOfConfig":"161"},{"size":1054,"mtime":1649055627846,"results":"273","hashOfConfig":"161"},{"size":1824,"mtime":1649055627846,"results":"274","hashOfConfig":"161"},{"size":9411,"mtime":1650507044154,"results":"275","hashOfConfig":"161"},{"size":1712,"mtime":1649055627847,"results":"276","hashOfConfig":"161"},{"size":4152,"mtime":1649055748254,"results":"277","hashOfConfig":"161"},{"size":6956,"mtime":1649055627839,"results":"278","hashOfConfig":"161"},{"size":2811,"mtime":1649055627839,"results":"279","hashOfConfig":"161"},{"size":2772,"mtime":1649055627846,"results":"280","hashOfConfig":"161"},{"size":3557,"mtime":1649055748256,"results":"281","hashOfConfig":"161"},{"size":4115,"mtime":1649055627850,"results":"282","hashOfConfig":"161"},{"size":3874,"mtime":1649055627816,"results":"283","hashOfConfig":"161"},{"size":1831,"mtime":1649055627836,"results":"284","hashOfConfig":"161"},{"size":942,"mtime":1649055627829,"results":"285","hashOfConfig":"161"},{"size":4960,"mtime":1649055748246,"results":"286","hashOfConfig":"161"},{"size":1258,"mtime":1649324593885,"results":"287","hashOfConfig":"161"},{"size":1463,"mtime":1649055627824,"results":"288","hashOfConfig":"161"},{"size":5361,"mtime":1649055627825,"results":"289","hashOfConfig":"161"},{"size":4282,"mtime":1649055627827,"results":"290","hashOfConfig":"161"},{"size":2651,"mtime":1649055748245,"results":"291","hashOfConfig":"161"},{"size":12442,"mtime":1649055748245,"results":"292","hashOfConfig":"161"},{"size":2060,"mtime":1649055627829,"results":"293","hashOfConfig":"161"},{"size":1001,"mtime":1649381407223,"results":"294","hashOfConfig":"161"},{"size":924,"mtime":1649381062665,"results":"295","hashOfConfig":"161"},{"size":2561,"mtime":1649055627827,"results":"296","hashOfConfig":"161"},{"size":2716,"mtime":1649381025290,"results":"297","hashOfConfig":"161"},{"size":2391,"mtime":1649055627824,"results":"298","hashOfConfig":"161"},{"size":775,"mtime":1649381321423,"results":"299","hashOfConfig":"161"},{"size":1367,"mtime":1649055627825,"results":"300","hashOfConfig":"161"},{"size":255,"mtime":1649055627824,"results":"301","hashOfConfig":"161"},{"size":5620,"mtime":1649055627824,"results":"302","hashOfConfig":"161"},{"size":1707,"mtime":1649381040942,"results":"303","hashOfConfig":"161"},{"size":1964,"mtime":1649055628255,"results":"304","hashOfConfig":"161"},{"size":6735,"mtime":1649656028284,"results":"305","hashOfConfig":"161"},{"size":11584,"mtime":1650189411497,"results":"306","hashOfConfig":"161"},{"size":30153,"mtime":1649455750369,"results":"307","hashOfConfig":"161"},{"size":15839,"mtime":1649055748240,"results":"308","hashOfConfig":"161"},{"size":8889,"mtime":1649392620002,"results":"309","hashOfConfig":"161"},{"size":4744,"mtime":1649485828543,"results":"310","hashOfConfig":"161"},{"size":5217,"mtime":1649655988523,"results":"311","hashOfConfig":"161"},{"size":210,"mtime":1649055627860,"results":"312","hashOfConfig":"161"},{"size":2292,"mtime":1649748389658,"results":"313","hashOfConfig":"161"},{"size":1855,"mtime":1649761838672,"results":"314","hashOfConfig":"161"},{"size":19862,"mtime":1650189937339,"results":"315","hashOfConfig":"161"},{"size":943,"mtime":1649761658958,"results":"316","hashOfConfig":"161"},{"size":1144,"mtime":1649754113713,"results":"317","hashOfConfig":"161"},{"size":11698,"mtime":1650574704940,"results":"318","hashOfConfig":"161"},{"size":2862,"mtime":1650570781247,"results":"319","hashOfConfig":"161"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"323"},"8v8zpl",{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"323"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328","usedDeprecatedRules":"323"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"323"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"323"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"323"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"323"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340","usedDeprecatedRules":"323"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343","usedDeprecatedRules":"344"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347","usedDeprecatedRules":"323"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350","usedDeprecatedRules":"323"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"353","usedDeprecatedRules":"354"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"357","usedDeprecatedRules":"358"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"361","usedDeprecatedRules":"354"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"364","usedDeprecatedRules":"323"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"367","usedDeprecatedRules":"323"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"370","usedDeprecatedRules":"323"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"323"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"375","usedDeprecatedRules":"323"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"378","usedDeprecatedRules":"323"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"381","usedDeprecatedRules":"323"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"384","usedDeprecatedRules":"323"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"387","usedDeprecatedRules":"323"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"390","usedDeprecatedRules":"323"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"323"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"395","usedDeprecatedRules":"323"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"398","usedDeprecatedRules":"323"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"354"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"407","usedDeprecatedRules":"323"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"410","usedDeprecatedRules":"323"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"323"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"415","usedDeprecatedRules":"323"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"418","usedDeprecatedRules":"323"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"421","usedDeprecatedRules":"323"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"424","usedDeprecatedRules":"323"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"427","usedDeprecatedRules":"323"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"430","usedDeprecatedRules":"323"},{"filePath":"431","messages":"432","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"433","usedDeprecatedRules":"323"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"323"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"438","usedDeprecatedRules":"323"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"441","usedDeprecatedRules":"323"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"323"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"446","usedDeprecatedRules":"323"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"449","usedDeprecatedRules":"323"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"452","usedDeprecatedRules":"323"},{"filePath":"453","messages":"454","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"455","usedDeprecatedRules":"323"},{"filePath":"456","messages":"457","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"458","usedDeprecatedRules":"323"},{"filePath":"459","messages":"460","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"461","usedDeprecatedRules":"323"},{"filePath":"462","messages":"463","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"464","usedDeprecatedRules":"323"},{"filePath":"465","messages":"466","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"467","usedDeprecatedRules":"323"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"470","usedDeprecatedRules":"323"},{"filePath":"471","messages":"472","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"473","usedDeprecatedRules":"323"},{"filePath":"474","messages":"475","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"476","usedDeprecatedRules":"323"},{"filePath":"477","messages":"478","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"479","usedDeprecatedRules":"323"},{"filePath":"480","messages":"481","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"482","usedDeprecatedRules":"323"},{"filePath":"483","messages":"484","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"485","usedDeprecatedRules":"323"},{"filePath":"486","messages":"487","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"488","usedDeprecatedRules":"323"},{"filePath":"489","messages":"490","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"491","usedDeprecatedRules":"323"},{"filePath":"492","messages":"493","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"323"},{"filePath":"494","messages":"495","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"496","usedDeprecatedRules":"323"},{"filePath":"497","messages":"498","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"499","usedDeprecatedRules":"323"},{"filePath":"500","messages":"501","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"502","usedDeprecatedRules":"323"},{"filePath":"503","messages":"504","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"505","usedDeprecatedRules":"323"},{"filePath":"506","messages":"507","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"508","usedDeprecatedRules":"323"},{"filePath":"509","messages":"510","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"511","usedDeprecatedRules":"323"},{"filePath":"512","messages":"513","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"514","usedDeprecatedRules":"323"},{"filePath":"515","messages":"516","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"517","usedDeprecatedRules":"323"},{"filePath":"518","messages":"519","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"520","usedDeprecatedRules":"323"},{"filePath":"521","messages":"522","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"523","usedDeprecatedRules":"323"},{"filePath":"524","messages":"525","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"526","usedDeprecatedRules":"323"},{"filePath":"527","messages":"528","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"529","usedDeprecatedRules":"323"},{"filePath":"530","messages":"531","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"532","usedDeprecatedRules":"323"},{"filePath":"533","messages":"534","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"535","usedDeprecatedRules":"323"},{"filePath":"536","messages":"537","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"538","usedDeprecatedRules":"323"},{"filePath":"539","messages":"540","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"541","usedDeprecatedRules":"323"},{"filePath":"542","messages":"543","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"544","usedDeprecatedRules":"323"},{"filePath":"545","messages":"546","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"547","usedDeprecatedRules":"323"},{"filePath":"548","messages":"549","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"550","usedDeprecatedRules":"323"},{"filePath":"551","messages":"552","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"553","usedDeprecatedRules":"323"},{"filePath":"554","messages":"555","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"556","usedDeprecatedRules":"323"},{"filePath":"557","messages":"558","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"559","usedDeprecatedRules":"323"},{"filePath":"560","messages":"561","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"562","usedDeprecatedRules":"323"},{"filePath":"563","messages":"564","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"565","usedDeprecatedRules":"323"},{"filePath":"566","messages":"567","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"568","usedDeprecatedRules":"323"},{"filePath":"569","messages":"570","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"571","usedDeprecatedRules":"323"},{"filePath":"572","messages":"573","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"574","usedDeprecatedRules":"323"},{"filePath":"575","messages":"576","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"577","usedDeprecatedRules":"323"},{"filePath":"578","messages":"579","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"580","usedDeprecatedRules":"323"},{"filePath":"581","messages":"582","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"583","usedDeprecatedRules":"323"},{"filePath":"584","messages":"585","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"586","usedDeprecatedRules":"323"},{"filePath":"587","messages":"588","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"589","usedDeprecatedRules":"323"},{"filePath":"590","messages":"591","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"592","usedDeprecatedRules":"323"},{"filePath":"593","messages":"594","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"323"},{"filePath":"595","messages":"596","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"597","usedDeprecatedRules":"323"},{"filePath":"598","messages":"599","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"600","usedDeprecatedRules":"323"},{"filePath":"601","messages":"602","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"603","usedDeprecatedRules":"323"},{"filePath":"604","messages":"605","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"606","usedDeprecatedRules":"323"},{"filePath":"607","messages":"608","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"323"},{"filePath":"609","messages":"610","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"611","usedDeprecatedRules":"323"},{"filePath":"612","messages":"613","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"614","usedDeprecatedRules":"323"},{"filePath":"615","messages":"616","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"617","usedDeprecatedRules":"323"},{"filePath":"618","messages":"619","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"620","usedDeprecatedRules":"323"},{"filePath":"621","messages":"622","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"623","usedDeprecatedRules":"323"},{"filePath":"624","messages":"625","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"626","usedDeprecatedRules":"323"},{"filePath":"627","messages":"628","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"629","usedDeprecatedRules":"323"},{"filePath":"630","messages":"631","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"632","usedDeprecatedRules":"323"},{"filePath":"633","messages":"634","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"635","usedDeprecatedRules":"323"},{"filePath":"636","messages":"637","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"323"},{"filePath":"638","messages":"639","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"640","usedDeprecatedRules":"323"},{"filePath":"641","messages":"642","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"643","usedDeprecatedRules":"323"},{"filePath":"644","messages":"645","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"646","usedDeprecatedRules":"323"},{"filePath":"647","messages":"648","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"649","usedDeprecatedRules":"323"},{"filePath":"650","messages":"651","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"652","usedDeprecatedRules":"323"},{"filePath":"653","messages":"654","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"655","usedDeprecatedRules":"323"},{"filePath":"656","messages":"657","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"323"},{"filePath":"658","messages":"659","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"660","usedDeprecatedRules":"323"},{"filePath":"661","messages":"662","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"663","usedDeprecatedRules":"323"},{"filePath":"664","messages":"665","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"666","usedDeprecatedRules":"323"},{"filePath":"667","messages":"668","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"669","usedDeprecatedRules":"323"},{"filePath":"670","messages":"671","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"323"},{"filePath":"672","messages":"673","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"674","usedDeprecatedRules":"323"},{"filePath":"675","messages":"676","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"677","usedDeprecatedRules":"323"},{"filePath":"678","messages":"679","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"680","usedDeprecatedRules":"323"},{"filePath":"681","messages":"682","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"323"},{"filePath":"683","messages":"684","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"685","usedDeprecatedRules":"323"},{"filePath":"686","messages":"687","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"688","usedDeprecatedRules":"323"},{"filePath":"689","messages":"690","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"691","usedDeprecatedRules":"323"},{"filePath":"692","messages":"693","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"694","usedDeprecatedRules":"323"},{"filePath":"695","messages":"696","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"697","usedDeprecatedRules":"323"},{"filePath":"698","messages":"699","errorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":0,"source":"700","usedDeprecatedRules":"323"},{"filePath":"701","messages":"702","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"703","usedDeprecatedRules":"323"},{"filePath":"704","messages":"705","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"323"},{"filePath":"706","messages":"707","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"323"},{"filePath":"708","messages":"709","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"710","usedDeprecatedRules":"323"},{"filePath":"711","messages":"712","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"713","usedDeprecatedRules":"323"},{"filePath":"714","messages":"715","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"323"},{"filePath":"716","messages":"717","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"718","usedDeprecatedRules":"323"},{"filePath":"719","messages":"720","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"721","usedDeprecatedRules":"323"},{"filePath":"722","messages":"723","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"323"},{"filePath":"724","messages":"725","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"726","usedDeprecatedRules":"323"},{"filePath":"727","messages":"728","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"323"},{"filePath":"729","messages":"730","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"731","usedDeprecatedRules":"323"},{"filePath":"732","messages":"733","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"323"},{"filePath":"734","messages":"735","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"736","usedDeprecatedRules":"323"},{"filePath":"737","messages":"738","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"739","usedDeprecatedRules":"323"},{"filePath":"740","messages":"741","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"742","usedDeprecatedRules":"323"},{"filePath":"743","messages":"744","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"745","usedDeprecatedRules":"323"},{"filePath":"746","messages":"747","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"748","usedDeprecatedRules":"323"},{"filePath":"749","messages":"750","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"751","usedDeprecatedRules":"323"},{"filePath":"752","messages":"753","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"323"},{"filePath":"754","messages":"755","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"756","usedDeprecatedRules":"323"},{"filePath":"757","messages":"758","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"759","usedDeprecatedRules":"323"},{"filePath":"760","messages":"761","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"762","usedDeprecatedRules":"323"},{"filePath":"763","messages":"764","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"765","usedDeprecatedRules":"323"},{"filePath":"766","messages":"767","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"768","usedDeprecatedRules":"323"},{"filePath":"769","messages":"770","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"771"},{"filePath":"772","messages":"773","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"774","usedDeprecatedRules":"323"},"/Users/gimhojin/Desktop/soozipweb/kiwi/src/index.js",["775"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport AOS from \"aos\";\nimport \"aos/dist/aos.css\";\nimport \"devices.css\";\nimport {ScrollToTop} from './App'\n\nAOS.init(); \n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["776","777"],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/reportWebVitals.js",[],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/App.js",["778"],"import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport AppRouter from './Router';\nimport { authService } from './tools/fbase'\nimport {RecoilRoot} from 'recoil';\nimport LoadingDisplay from './tools/LoadingDisplay'\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    // 유저가 제작한 랜딩페이지에 들어가는 사람들까지 로그인 검사를 하면 속도가 느려지니까\n    if(window.location.host.split(\".\")[0] === \"surfee\" || window.location.host.split(\".\")[0] === \"localhost:3000\"){\n      authService.onAuthStateChanged((user) => {\n        if(user){\n          setIsLoggedIn(true)\n          setUserObj(user.multiFactor.user);\n        }else{\n          setIsLoggedIn(false)\n        }\n        setInit(true)\n      })\n    }else{\n      setInit(true)\n    }\n  })\n\n  return (\n    <>\n    <RecoilRoot className=\"App\">\n      {init ? <AppRouter userObj={userObj} isLoggedIn={isLoggedIn} /> : <LoadingDisplay />}\n    </RecoilRoot>\n    </>\n  );\n}\n\nexport default App;","/Users/gimhojin/Desktop/soozipweb/kiwi/src/Router.js",[],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/tools/LoadingDisplay.js",[],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/tools/fbase.js",["779"],"import firebase from \"firebase/compat/app\"\n// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\n// import { getAnalytics } from \"firebase/analytics\";\nimport \"firebase/compat/firestore\";\nimport \"firebase/compat/storage\";\nimport \"firebase/compat/auth\"\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDH_xQF-kBsVMEDwLNDJubGrzOp0Qnr_iU\",\n  authDomain: \"kiwi-d5dd3.firebaseapp.com\",\n  projectId: \"kiwi-d5dd3\",\n  storageBucket: \"kiwi-d5dd3.appspot.com\",\n  messagingSenderId: \"335393250887\",\n  appId: \"1:335393250887:web:231c18d1aa6d4356891b62\",\n  measurementId: \"G-7FJX546NWQ\"\n};\n\n// Initialize Firebase\n// export const app = firebase.initializeApp(firebaseConfig);\n// export const firebaseInstance = firebase;\n// const analytics = getAnalytics(app);\n// export const dbService = app.firestore();\n// export const stService = app.storage();\n\nexport const app = firebase.initializeApp(firebaseConfig);\nexport const authService = app.auth();\nexport const firebaseInstance = firebase;\nexport const dbService = firebase.firestore();\nexport const stService = app.storage();","/Users/gimhojin/Desktop/soozipweb/kiwi/src/tools/ScrollToTop.js",[],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/ExamplePage/ExamplePage.js",["780","781"],"import React, {useState} from 'react'\nimport ex1 from '../../tools/img/main/ex1.png'\nimport ex2 from '../../tools/img/main/ex2.png'\nimport ex3 from '../../tools/img/main/ex3.png'\nimport ex4 from '../../tools/img/main/ex4.png'\nimport ex5 from '../../tools/img/main/ex5.png'\nimport ex6 from '../../tools/img/main/ex6.png'\nimport b1 from '../../tools/img/main/b1.png'\nimport b2 from '../../tools/img/main/b2.png'\nimport o1 from '../../tools/img/main/o1.png'\nimport m1 from '../../tools/img/example/m1.webp'\nimport m2 from '../../tools/img/example/m2.webp'\nimport s1 from '../../tools/img/example/s1.webp'\nimport s2 from '../../tools/img/example/s2.webp'\nimport p1 from '../../tools/img/example/p1.webp'\nimport p2 from '../../tools/img/example/p2.webp'\nimport c1 from '../../tools/img/example/c1.webp'\nimport c2 from '../../tools/img/example/c2.webp'\nimport clofos from '../../tools/img/example/clofos.png'\nimport Footer from '../NavAndFooter/Footer'\nimport NavBarV2 from '../NavAndFooter/NavBarV2'\nimport TemplateModal from './TemplateModal'\nimport {Link} from 'react-router-dom'\nimport {isMobile} from 'react-device-detect'\nimport './ExamplePage.css'\n\nconst exs = [\n    {\n        img : ex2,\n        title:\"Template 2\",\n        url:'template1'\n    },\n    {\n        img : ex3,\n        title:\"Template 3\",\n        url:'template2'\n    },\n    {\n        img : ex4,\n        title:\"Template 4\",\n        url:'template3'\n    },\n    {\n        img : ex5,\n        title:\"Template 5\",\n        url:'template5'\n    },\n    {\n        img : ex6,\n        title:\"Template 6\",\n        url:'template4'\n    },\n    {\n        img : m1,\n        title:\"Mercury\",\n        url:'mercurysurfeeex'\n    },\n    {\n        img : m2,\n        title:\"Data\",\n        url:'datasurfeeex'\n    },\n    {\n        img : s2,\n        title:\"Code Note\",\n        url:'codenotesurfeeex'\n    },\n    {\n        img : s1,\n        title:\"Cakehouse\",\n        url:'cakehousesurfeeex'\n    },\n    {\n        img : c1,\n        title:\"Home Bar\",\n        url:'homebarsurfeeex'\n    },\n    {\n        img : c2,\n        title:\"Fillom\",\n        url:'fillomsurfeeex'\n    },\n    {\n        img : clofos,\n        title:\"Clofos\",\n        url:'clofossurfeeex'\n    },\n    {\n        img : p1,\n        title:\"포트폴리오 1\",\n        url:'port1surfeeex'\n    },\n    {\n        img : p2,\n        title:\"포트폴리오 2\",\n        url:'port3surfeeex'\n    },\n]\n\nconst examples = [\n    {\n        img:b1,\n        title:<span>버블리 컴퍼니 - 내 일을 위한 워크로그<br/>by. 퍼블리(PUBLY)</span>,\n        url:'bubblyworksurfeeex'\n    },\n    {\n        img:b2,\n        title:<span>버블리 컴퍼니 - 마케터의 한 문장 북클럽<br/>by. 퍼블리(PUBLY)</span>,\n        url:'bubblywork2surfeeex'\n    },\n    {\n        img:o1,\n        title:<span>OhJandi 🍀<br/>by. OhJandi (@ohjandi_official)</span>,\n        url:'ohjandi'\n    },\n]\n\nexport const ExampleCard = ({img, title, url}) => {\n    return(\n        <div className=\"excard uphover2\" style={{cursor:'pointer'}} onClick={()=>{\n                window.open(\n                        'https://surfee.co.kr/' + url,\n                        '_blank' // <- This is what makes it open in a new window.\n                    );\n                }}>\n            <div className=\"back-image-fit excard-image\"\n                style={{backgroundImage:`url(${img})`}}>\n            </div>\n            <div className=\"excard-title\" style={{backgroundColor:'white', borderRadius:'0px 0px 6px 6px'}}>\n                {title}\n            </div>\n        </div>\n    )\n}\n\nexport const LandingPageExamples = () => {\n    return(\n        <div style={{ boxSizing:'border-box', flexWrap: 'wrap', marginTop:'15px', display:'flex', flexDirection:'row', alignItems:'center', justifyContent: 'center', width:'100%'}}>\n            {examples.map((item, index) => {\n                return(\n                    <ExampleCard key={index} img={item.img} title={item.title} url={item.url}/>\n                )\n            })}\n        </div>\n    )\n}\n\nexport const UserExamples = () => {\n    return(\n        <div style={{ boxSizing:'border-box', flexWrap: 'wrap', marginTop:'15px', display:'flex', flexDirection:'row', alignItems:'center', justifyContent: 'center', width:'100%'}}>\n            {exs.map((item, index) => {\n                return(\n                    <ExampleCard key={index} img={item.img} title={item.title} url={item.url}/>\n                )\n            })}\n        </div>\n    )\n}\n\nexport const ExampleCardInTemplate = ({img, title, url, setUrl, setMakeModal}) => {\n\n    return(\n        <div className=\"excard uphover2\">\n            <div className=\"back-image-fit excard-image\"\n                style={{backgroundImage:`url(${img})`}}>\n                <div className=\"excard-black\">\n                    {\n                        url.length > 1 && \n                        <div className=\"section-add__button\" style={{width:'130px', fontSize:'14px'}} onClick={() => {\n                            if(isMobile){\n                                alert(\"죄송합니다. 현재 제작은 PC 환경에서만 가능합니다!\")\n                            }else{\n                                setMakeModal(true);\n                                setUrl(url)\n                            }\n                            }}>\n                            템플릿 사용하기\n                        </div>\n                    }\n                    <div className=\"excard-button-2\" onClick={()=>{\n                        window.open(\n                                'https://surfee.co.kr/' + url,\n                                '_blank' // <- This is what makes it open in a new window.\n                            );\n                        }}>\n                        페이지 보기\n                    </div>\n                </div>\n            </div>\n            <div className=\"excard-title\">\n                {title}\n            </div>\n        </div>\n    )\n}\n\nexport const TemplatesList = ({exList, setUrl, setMakeModal}) => {\n    return(\n        <div style={{ boxSizing:'border-box', flexWrap: 'wrap', marginTop:'15px', display:'flex', flexDirection:'row', alignItems:'center', justifyContent: 'center', width:'100%'}}>\n            {exList.map((item, index) => {\n                return(\n                    <ExampleCardInTemplate key={index} img={item.img} title={item.title} url={item.url} setUrl={setUrl} setMakeModal={setMakeModal}/>\n                )\n            })}\n        </div>\n    )\n}\n\nfunction ExamplePage({isLoggedIn, history}) {\n    const [makeModal, setMakeModal] = useState(false)\n    const [url, setUrl] = useState('')\n\n    const LandingPageTemplates = () => {\n        return(\n            <div style={{ boxSizing:'border-box', flexWrap: 'wrap', marginTop:'15px', display:'flex', flexDirection:'row', alignItems:'center', justifyContent: 'center', width:'100%'}}>\n                {exs.map((item, index) => {\n                    return(\n                        <ExampleCardInTemplate key={index} img={item.img} title={item.title} url={item.url}/>\n                    )\n                })}\n            </div>\n        )\n    }\n    \n    const ExampleCardInTemplate = ({img, title, url}) => {\n\n        return(\n            <div className=\"excard uphover2\">\n                <div className=\"back-image-fit excard-image\"\n                    style={{backgroundImage:`url(${img})`}}>\n                    <div className=\"excard-black\">\n                        {\n                            url.length > 1 && \n                            <div className=\"section-add__button\" style={{width:'130px', fontSize:'14px'}} onClick={() => {\n                                if(isMobile){\n                                    alert(\"죄송합니다. 현재 제작은 PC 환경에서만 가능합니다!\")\n                                }else{\n                                    setMakeModal(true);\n                                    setUrl(url)\n                                }\n                                }}>\n                                템플릿 사용하기\n                            </div>\n                        }\n                        <div className=\"excard-button-2\" onClick={()=>{\n                            window.open(\n                                    'https://surfee.co.kr/' + url,\n                                    '_blank' // <- This is what makes it open in a new window.\n                                );\n                            }}>\n                            페이지 보기\n                        </div>\n                    </div>\n                </div>\n                <div className=\"excard-title\">\n                    {title}\n                </div>\n            </div>\n        )\n    }\n\n    return (\n        <>\n        <NavBarV2 history={history} isLoggedIn={isLoggedIn} buttonOpen />\n        <div style={{fontSize: '28px'}}>\n            <div className=\"main-page-section1\" style={{flexDirection:'column'}}>\n                <div className=\"main-section-left-topbottom back-gradient\" style={{color:'white', marginTop:'-80px', padding:'150px 0px 40px 0px'}}>\n                    <span className=\"one-section-big osb2\" style={{textAlign: 'center'}}>\n                        Surfee 활용 예시\n                    </span>\n                    <span className=\"one-section-small\" style={{textAlign: 'center'}}>\n                        Surfee를 사용한 페이지 디자인 예시를 참고해보세요!<br/>\n                        마음에 드는 템플릿📄&nbsp;으로 바로 제작할 수도 있습니다.\n                    </span>\n                </div>\n                <LandingPageTemplates />\n            </div>\n            <Footer />\n        </div>\n        <TemplateModal url={url} open={makeModal} setOpen={setMakeModal} />\n        </>\n    )\n}\n\nexport default ExamplePage\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/Landing/MainPageV2.js",["782","783","784","785","786","787","788","789","790","791","792","793","794"],"import React, {useEffect,useRef, useState} from 'react'\nimport './old/MainPage.css'\nimport './MainPageV2.css'\nimport {Link} from 'react-router-dom';\nimport { dbService } from '../../tools/fbase'\nimport Footer from '../NavAndFooter/Footer'\nimport NavBarV2 from '../NavAndFooter/NavBarV2'\nimport { motion } from \"framer-motion\"\nimport AskLoginModal from './tools/AskLoginModal'\nimport RegisterModal from '../../components/Login/RegisterModal'\nimport ChannelTalk from '../../tools/ChannelTalk'\nimport {detect} from 'detect-browser'\nimport {isMobile} from 'react-device-detect'\nimport {LandingPageExamples} from '../ExamplePage/ExamplePage'\nimport \"@lottiefiles/lottie-player\";\n\nimport {DeveloperBoardOff, Animation, DesignServices} from '@styled-icons/material';\nimport {DataPie, MobileOptimized} from '@styled-icons/fluentui-system-regular'\nimport {Template} from '@styled-icons/heroicons-outline';\nimport {MenuButtonWide} from '@styled-icons/bootstrap';\nimport {ImageEdit} from '@styled-icons/remix-fill'\n\nimport s1 from '../../tools/img/surfee1.png';\nimport main1 from '../../tools/img/main/main1.png';\nimport main3 from '../../tools/img/main/main3.gif';\nimport main4 from '../../tools/img/main/main4.gif';\nimport main5 from '../../tools/img/main/main5.gif';\nimport main6 from '../../tools/img/main/main6.gif';\nimport outdoor from '../../tools/img/main/outdoor.png';\n\nconst ourInfos = [\n    {\n        icon : <DeveloperBoardOff className=\"func-icon\" size=\"35\" />,\n        title: '노코드 툴',\n        desc : \"타이핑과 이미지로만!\",\n    },\n    {\n        icon : <DataPie className=\"func-icon\" size=\"35\" />,\n        title: '반응형',\n        desc : '반응형으로 모바일 랜딩페이지도 한번에!',\n    },\n    {\n        icon : <MobileOptimized className=\"func-icon\" size=\"35\" />,\n        title: '데이터 시각화',\n        desc : \"정량적 데이터를 한눈에!\",\n    },\n    {\n        icon : <Animation className=\"func-icon\" size=\"35\" />,\n        title: '애니메이션 효과',\n        desc : \"섹션별 애니메이션 효과도 쉽게\",\n    },\n    { \n        icon : <Template className=\"func-icon\" size=\"35\" />,\n        title: '템플릿 제공',\n        desc : \"멋진 템플릿 디자인 제공\",\n    },\n    {\n        icon : <MenuButtonWide className=\"func-icon\" size=\"35\" />,\n        title: '옵트인 버튼',\n        desc : \"랜딩페이지 안에서 데이터 수집도 가능\",\n    },\n    {\n        icon : <DesignServices className=\"func-icon\" size=\"35\" />,\n        title: '섹션별 커스텀',\n        desc : \"섹션에 따라 취향대로 커스텀 가능\",\n    },\n    {\n        icon : <ImageEdit className=\"func-icon\" size=\"35\" />,\n        title: '파비콘 커스텀',\n        desc : \"아이콘 이미지 커스텀 가능\",\n    },\n];\n\nfunction MainPageV2({history, isLoggedIn, userObj}) {\n    const [email,setEmail] = useState(\"\");\n    const [askOpen,setAskOpen] = useState(false);\n    const [registerOpen,setRegisterOpen] = useState(false);\n    const [loginOpen,setLoginOpen] = useState(false);\n    const targets = useRef(null)\n\n    useEffect(() => {\n        const browser = detect();\n        if(browser.name !== 'chrome' || isMobile){\n            alert(\"본 서비스는 PC 환경과 Chrome 환경에 최적화되어있습니다.\")\n        }\n    },[])\n    \n    ChannelTalk.boot({\n        \"pluginKey\": \"e6b830bc-7731-43fa-8eea-1245d3d4fc3e\", //please fill with your plugin key\"\n    });\n\n    const scrollDown = () => {\n        targets.current.scrollIntoView({behavior: 'smooth'})\n    }\n\n    const ourInfosTable = ourInfos.map((item, index) => {\n        return(\n            <span className=\"main__feature\" key={index}>\n                <div style={{width:'100%', textAlign:'center'}}>\n                    {item.icon}\n                </div>\n                <div className=\"main-feature__title\">\n                    {item.title}\n                </div>\n                <div className=\"main-feature__desc\">\n                    {item.desc}\n                </div>\n            </span>\n        )\n    })\n\n    const checkLoggedIn = () => {\n        if(isLoggedIn === false){\n            alert(\"로그인하셔야 이용가능한 페이지입니다.\");\n            setRegisterOpen(true);\n        }else{\n            history.push('/response');\n            history.go();\n            return;\n        }\n    }\n\n    const SomeoneClickMoveToMake = async () => {\n        const isNew = localStorage.getItem('isNew');\n        if(isNew === null){\n            localStorage.setItem('isNew', false);\n            if(userObj !== null){\n                dbService.collection('SomeoneClickMoveToMake').add({\n                    name:userObj.displayName,\n                    email:userObj.email,\n                    new:true,\n                    createdAt: new Date(),\n                })\n            }else{\n                dbService.collection('SomeoneClickMoveToMake').add({\n                    new:true,\n                    createdAt: new Date(),\n                })\n            }\n        }else{\n            if(userObj !== null){\n                dbService.collection('SomeoneClickMoveToMake').add({\n                    name:userObj.displayName,\n                    email:userObj.email,\n                    new:false,\n                    createdAt: new Date(),\n                })\n            }else{\n                dbService.collection('SomeoneClickMoveToMake').add({\n                    new:false,\n                    createdAt: new Date(),\n                })\n            }\n        }\n    }\n    \n    const moveButton = (top) => {\n        return(<div className=\"main-button__container\">\n            {\n                isMobile ? \n                <>\n                    <button className=\"main__button2 uphover\" onClick={() => alert('죄송합니다. Surfee는 PC 환경에서만 이용할 수 있습니다.')}>\n                        무료로 제작하기\n                    </button>\n                    <Link to='/surfeeintro' className=\"main__button3 uphover\">\n                        Surfee란?\n                    </Link>\n                </>\n                :\n                isLoggedIn ? \n                <>\n                    <Link to='/response' className=\"main__button2 uphover\">\n                        무료로 제작하기\n                    </Link>\n                    <Link to='/surfeeintro' className=\"main__button3 uphover\">\n                        Surfee란?\n                    </Link>\n                </>\n                :\n                <>\n                {\n                    top === 'top' ?\n                    <>\n                        <button className=\"main__button2 uphover\" onClick={() => setAskOpen(true)}>\n                            무료로 제작하기\n                        </button>\n                        <Link to='/surfeeintro' className=\"main__button3 uphover\">\n                            Surfee란?\n                        </Link>\n                    </>\n                    :\n                    <>\n                        <button className=\"main__button2 uphover\" onClick={() => setAskOpen(true)}>\n                            무료로 제작하기\n                        </button>\n                        <Link to='/surfeeintro' className=\"main__button3 uphover\">\n                            Surfee란?\n                        </Link>\n                    </>\n                }\n                </>\n            }\n        </div>)\n    }\n    \n    return (\n        <>\n        <NavBarV2 history={history} isLoggedIn={isLoggedIn} buttonOpen />\n        <div className=\"main-page-container\">\n            <div className=\"main-page-section1\" style={{paddingTop:'30px', marginTop:'50px', flexDirection:'column', background:\"linear-gradient(0deg, #6C63FF 0%, #ffffff 100%)\"}}>\n                <div className=\"main-section-left-topbottom\" style={{color:'black', marginTop:'50px'}}>\n                    <span className=\"one-section-big osb2\" style={{textAlign: 'center'}}>\n                        '랜딩페이지'를 3분 만에 <br/>쉽고 간단하게 제작해 보세요\n                    </span>\n                    <span className=\"one-section-small\" style={{textAlign: 'center'}}>\n                        무엇보다 쉽고 빠르게 만들 수 있는<br/>\n                        나만의 페이지!\n                    </span>\n                    {moveButton('top')}\n                    {/* <button className=\"text-hover\" style={{fontSize:'0.6em', marginTop:'10px', cursor: 'pointer'}} onClick={() => {\n                        window.open(\n                            'https://tally.so/r/wMZ4Yn',\n                            '_blank'\n                        )\n                    }}>Surfee는 항상 여러분의 의견을 듣고 싶어요 😁</button> */}\n                </div>\n                <img src={main1} className=\"section-one-image-main-topbottom mt30\" />\n                <span className=\"one-section-big mt30\" style={{textAlign: 'center', fontSize:'1.2em', color:'white'}}>\n                    고객 검증을 위한 '랜딩페이지'제작은<br/>\n                    이제 선택이 아닌 필수입니다.\n                </span>\n            </div>\n            <div className=\"main-page-section1\" style={{position:'relative'}}>\n                <lottie-player\n                    autoplay\n                    loop\n                    mode=\"normal\"\n                    src=\"https://assets6.lottiefiles.com/packages/lf20_46tauco6.json\"\n                    style={{width:'100%', height:'100%', position:'absolute', zIndex:'0'}}\n                >\n                </lottie-player>\n                <div className=\"one-section-big\" style={{color:'var(--main-color)'}}>\n                    Why Surfee?\n                </div>\n            </div>\n            <div className=\"main-page-section1 bg1\">\n                <div className=\"main-section-right\">              \n                    <img src={main3} className=\"section-image\" />\n                </div>\n                <div className=\"main-section-left\">\n                    <span className=\"one-section-big\" style={{marginTop:`${isMobile ? '30px' : '0px'}`}}>\n                        코딩도 디자인도 필요 없는<br/>\n                        One-stop 랜딩페이지 제작\n                    </span>\n                    <span className=\"one-section-small\">\n                        개발자 없이도, 외주 없이도 직접<br/>\n                        템플릿을 고르고 블로그를 꾸미듯<br/>\n                        쉽고 빠르게 랜딩페이지를 만들어 보세요.\n                    </span>\n                </div>\n            </div>\n            <div className=\"main-page-section1\">\n                <div className=\"main-section-left\">\n                    <span className=\"one-section-big\">\n                        모바일 환경에서도<br/>\n                        불편함 없이, 반응형으로\n                    </span>\n                    <span className=\"one-section-small\">\n                        Surfee를 통해 제작한 랜딩페이지는<br/>\n                        모바일 환경에서도 최적화된<br/>\n                        반응형으로 제공됩니다.\n                    </span>\n                </div>\n                <div className=\"main-section-right\">              \n                    <img src={main4} className=\"section-image\" />\n                </div>\n            </div>\n            <div className=\"main-page-section1 bg1\">\n                <div className=\"main-section-right\">              \n                    <img src={main5} className=\"section-image\" />\n                </div>\n                <div className=\"main-section-left\">\n                    <span className=\"one-section-big\" style={{marginTop:`${isMobile ? '30px' : '0px'}`}}>\n                        잠재 유저 분석을 위한<br/>\n                        유저 데이터를 직관적으로!\n                    </span>\n                    <span className=\"one-section-small\">\n                        조회 수, 사용자 수, 전환율(CVR), 유입 채널 등 <br/>\n                        고객의 반응을 확인할 수 있는 유의미한 데이터로 <br/>\n                        개발자에게 요청할 필요없이 직접 확인해 보세요.\n                    </span>\n                </div>\n            </div>\n            <div className=\"main-page-section1\" style={{padding:'30px 0px', flexDirection:'column'}}>\n                <div className=\"main-section-left-topbottom\" style={{color:'black', marginTop:'10px'}}>\n                    <span className=\"one-section-big2 osb2\" style={{textAlign: 'center'}}>\n                        <span style={{color:'#6c63ff'}}>Surfee</span>로 이렇게 만들 수 있어요!\n                    </span>\n                    <span className=\"one-section-small2\" style={{textAlign: 'center'}}>\n                        🧑🏻‍💻 Surfee를 사용한 페이지 디자인 예시를 참고해보세요.<br/>\n                        원하는 템플릿을 골라 그 디자인으로 바로 제작을 시작할 수도 있어요!\n                    </span>\n                </div>\n                <LandingPageExamples />\n                <Link to='/surfeeexamples' className=\"main__button2 uphover\">\n                    템플릿 사용해서 제작하기\n                </Link>\n            </div>\n            <div className=\"main-page-section1\" style={{flexDirection: \"column\", position:'relative', boxSizing:'border-box'}}>\n                {\n                    !isMobile &&\n                    <lottie-player\n                        autoplay\n                        loop\n                        mode=\"normal\"\n                        src=\"https://assets9.lottiefiles.com/packages/lf20_tkvgymkx.json\"\n                        style={{transform:'rotate(90deg)', position:'absolute', zIndex:'0', width:'100%', height:'200%'}}\n                        >\n                    </lottie-player>\n                }\n                <span className=\"one-section-big bt2\" style={{textAlign:'center'}}>\n                    랜딩페이지를 가장 효율적으로<br/> 제작해 보세요\n                </span>\n                <span className=\"one-section-small\">\n                    Surfee가 제공하는 기능!\n                </span>\n                <div className=\"info__table\">\n                    {ourInfosTable}\n                </div>\n            </div>\n            <div className=\"main-page-section1 back-image-fit\" style={{ color:'white', backgroundImage:`url(${outdoor})`, flexDirection: \"column\", padding:'50px 0px'}}>\n                <span className=\"one-section-big osb2\" style={{textAlign:'center'}}>\n                    Surfee와 함께<br/>랜딩페이지를 제작해 보세요.\n                </span>\n                <div className=\"centera\" style={{backgroundColor:'#6c63ff88', position:'absolute', zIndex:'1'}}></div>\n                {moveButton()}\n            </div>\n        </div>\n        <Footer />\n        <AskLoginModal open={askOpen} setOpen={setAskOpen} SomeoneClickMoveToMake={SomeoneClickMoveToMake} registerOpen={registerOpen} setRegisterOpen={setRegisterOpen}/>\n        <RegisterModal open={registerOpen} setOpen={setRegisterOpen} />\n        {/* <RegisterModal open={loginOpen} setOpen={setLoginOpen} /> */}\n        </>\n    )\n}\n\nexport default MainPageV2",["795","796"],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/Response/ResponsePage.js",["797","798","799","800","801","802"],"import React, {useState, useEffect} from 'react';\nimport './ResponsePage.css';\nimport {dbService} from '../../tools/fbase';\nimport Footer from '../NavAndFooter/Footer'\nimport MadeLandingCard from '../../components/Response/MadeLandingCard'\nimport ResponseNavBar from '../../components/Response/ResponseNavBar'\nimport ChromeTapBar from '../../components/Response/ChromeTapBar'\nimport ResultTable from '../../components/Response/ResultTable'\nimport ResultTopTitle from '../../components/Response/ResultTopTitle'\nimport LoadingDisplay from '../../tools/LoadingDisplay'\nimport { Tooltip, ChakraProvider } from '@chakra-ui/react'\nimport MiniModal from '../../tools/MiniModal'\nimport ChannelTalk from '../../tools/ChannelTalk'\nimport FeatVote from '../../tools/modal/FeatVote'\nimport { Cookies } from 'react-cookie'\n\nconst NOTCLICKED = 10000\n\nconst cookies = new Cookies()\n\nfunction ResponsePage({userObj, history}) {\n    const [loading, setLoading] = useState(false);\n    const [update, setUpdate] = useState(false);\n    const [responses, setResponses] = useState([[]]);\n    const [datas, setDatas] = useState([[]]);\n    const [mylandings, setMylandings] = useState([]);\n    const [published, setPublished] = useState([]);\n    const [part, setPart] = useState(1);\n    const [nowChecking, setNowChecking] = useState(NOTCLICKED);\n    const [copyOpen, setCopyOpen] = useState(false)\n    const [voteOpen, setVoteOpen] = useState(false)\n\n    // useEffect(() => {\n    //     console.log(\"쿠키\", cookies.get('featvote'))\n\n    //     if(cookies.get('featvote')){\n    //         const expires = new Date()\n    //         expires.setDate(expires.getDate() + 7)\n\n    //         setVoteOpen(true);\n    //         cookies.set('featvote', true, {\n    //             expires:expires\n    //         })\n    //     }\n    // }, [])\n    \n    useEffect(() => {\n        ChannelTalk.boot({\n            \"pluginKey\": \"e6b830bc-7731-43fa-8eea-1245d3d4fc3e\", //please fill with your plugin key\"\n        });\n        // to report page view\n        // ReactGa.initialize('UA-213792742-1');\n        // ReactGa.pageview(`/response/${userObj.email}`);\n        getThisUserDatas();\n    },[loading, update])\n\n    const getThisUserDatas = async () => {\n        // setLoading(false);\n        const thisuserDatas = await dbService\n            .collection('saved-page')\n            .where(\"makerEmail\", \"==\", userObj.email)\n            .orderBy(\"created\", \"desc\")\n            .get();\n        \n        let thisuserData = thisuserDatas.docs.map(doc => {\n            return({...doc.data(), id:doc.id})\n        });\n\n        setMylandings(thisuserData);\n\n        getThisPublished();\n        let tempApplyDatas = []\n        let tempDatas = []\n        \n        thisuserData.map(item => {\n            let tempd = []\n            getResponses(item.id).then(i => {\n                tempd = i;\n                tempApplyDatas.push(tempd);\n            })\n            getDatas(item.id).then(i => {\n                tempd = i;\n                tempDatas.push(tempd);\n            })\n        })\n        setResponses(tempApplyDatas);\n        setDatas(tempDatas);\n\n        setLoading(true);\n    }\n\n    const getThisPublished = async () => {\n        const publishedDatas = await dbService\n            .collection('published-page')\n            .where(\"makerEmail\", \"==\", userObj.email)\n            .get();\n        let publishedData = publishedDatas.docs.map(doc => {\n            return({...doc.data(), id:doc.id})\n        });\n        setPublished(publishedData);\n    }\n\n    const getResponses = async (pageId) => {\n        const reDatas = await dbService\n            .collection(\"datas\") // apply-datas는 유저가 만든 랜딩페이지에 들어와서 목표 액션을 한 데이터.\n            .orderBy(\"created\", \"desc\")\n            .where(\"pageId\", \"==\", pageId)\n            .get();\n\n        let reData = reDatas.docs.map(doc => {\n            let day = new Date(doc.data().created)\n            return({...doc.data(), id:doc.id, date:day})\n        });\n\n        return reData;\n    }\n\n    const getDatas = async (pageId) => {\n        const reDatas = await dbService\n            .collection(\"gadata\") // apply-datas는 유저가 만든 랜딩페이지에 들어와서 목표 액션을 한 데이터.\n            .where(\"path\", \"==\", '/' + pageId)\n            .get();\n\n        let result = reDatas.docs.map(doc => {\n            let day = new Date(doc.data().created)\n            return({...doc.data(), id:doc.id, date:day})\n        });\n\n        return result[0];\n    }\n\n    const checkPublished = (urlId) => {\n        let found = false\n        published.map((item,index) => {\n            if(item.urlId === urlId){\n                found = item\n            }\n        })\n        if(found){\n            return found\n        }else{\n            return false\n        }\n    }\n\n    const returnMylandingsTable = mylandings.map((item, index) => {\n        return(\n            <MadeLandingCard \n                history={history} item={item} key={item.id} index={index} \n                published={checkPublished(item.urlId)} setNowChecking={setNowChecking} setCopyOpen={() => {setCopyOpen(true)}}\n                nowChecking={nowChecking} num={mylandings.length} setUpdate={setUpdate} update={update}/>\n        )\n    })\n\n        if(loading === true){\n            return (\n                <ChakraProvider>\n                <div className=\"response__container\">\n                <ResponseNavBar />\n                <div className=\"get-all-container\">\n                    <div className=\"get-up-container\">\n                        <div className=\"get-up-title\">\n                            {\n                                userObj.displayName ? <>{userObj.displayName} 님의 랜딩페이지를 관리해 보세요 :)</>\n                                : <>제작한 랜딩페이지를 관리해 보세요 :)</>\n                            }\n                            \n                            {\n                                mylandings.length > 2 &&\n                               <span className=\"response-subtext\">현재 버전에서 랜딩페이지는 최대 3개까지 만들 수 있습니다. 새로운 페이지를 만들고 싶다면 기존의 페이지를 삭제해 주세요.</span>\n                            }\n                        </div>\n                        <div className=\"get__mylandings-cantainer\">\n                            {returnMylandingsTable}\n                            {\n                                mylandings.length < 3 &&\n                                <MadeLandingCard addNew />\n                            }\n                        </div>\n                    </div>\n                    {\n                    nowChecking !== NOTCLICKED && responses[nowChecking] !== undefined ? \n                    <div className=\"response-down__container\">\n                        <ChromeTapBar content={mylandings[nowChecking]}/>\n                        { part === 1 ? \n                        <div className=\"response-display__container\">\n                            <ResultTopTitle content={mylandings[nowChecking]} myResponses={responses[nowChecking]} checkPublished={checkPublished} datas={datas[nowChecking]} history={history}/>\n                            <ResultTable setUpdate={setUpdate} update={update} responses={responses} nowChecking={nowChecking} setResponses={setResponses} />\n                        </div>\n                        :\n                        <>\n                        {/* 데이터 파트 */}\n                        {/* <div style={{height:'100vh'}}>\n                            <div>\n                                <span className=\"data-one-mini-card\">총 페이지 뷰 수 {myDatas.all_pageViews}</span>\n                                <span className=\"data-one-mini-card\">총 세션 수 {myDatas.all_sessions}</span>\n                            </div>\n                        </div> */}\n                        </>\n                        }\n                    </div>\n                    :\n                    <div style={{marginTop:'15px'}}>\n                        {\n                            mylandings.length === 0 ?\n                            <div>\n                                10분 만에 새로운 랜딩페이지를 만들고 간편하게 유저의 반응을 확인해 보세요!\n                            </div>\n                            :\n                            <div>\n                                확인할 페이지를 클릭하세요\n                            </div>\n                        }\n                    </div>\n                    }\n                </div>\n                <div style={{fontSize:'15px', width:'100%', marginTop:'40vh'}}>\n                    <Footer />\n                </div>\n                </div>\n                <MiniModal open={copyOpen} setOpen={setCopyOpen} copy />\n                <FeatVote open={voteOpen} setOpen={setVoteOpen} />\n                </ChakraProvider>\n            )\n        }else{\n            return(\n                <LoadingDisplay />\n            )\n        }\n}\n\nexport default ResponsePage\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/AdminPage/AdminPage.js",["803","804","805"],"import React, {useState, useEffect} from 'react'\nimport { styled } from '@mui/system';\nimport MainPage from '../Landing/old/MainPage'\nimport { dbService } from '../../tools/fbase'\nimport UploadContest from './UploadContest'\n\nconst RadioButton = styled('div')`\n    margin:10px;\n    background-color:#6c63ff;\n    padding:10px;\n`;\n\nconst Half = styled('div')`\n    margin:10px;\n    width:20%;\n`;\n\nfunction AdminPage({history}) {\n    const [type, setType] = useState(4);\n    const [published, setPublished] = useState([]);\n    const [feedback, setFeedback] = useState([]);\n    const [emails, setEmails] = useState([]);\n    const [saved, setSaved] = useState([]);\n    const [voted, setVoted] = useState([]);\n    const [password, setPassword] = useState('');\n\n    useEffect(() => {\n        getThisPublished()\n        getFeedback()\n        getMails()\n        getSaved()\n        getVoted()\n        setTimeout(() => {\n            console.log(saved.length, \"갯수\")\n            console.log(published.length, \"갯수\")\n        }, 2000)\n    }, emails)\n\n    const getThisPublished = async () => {\n        const publishedDatas = await dbService\n            .collection('published-page')\n            .orderBy(\"created\", \"desc\")\n            .get();\n        let publishedData = publishedDatas.docs.map(doc => {\n            return({...doc.data(), id:doc.id})\n        });\n        setPublished(publishedData);\n    }\n\n    const getFeedback = async () => {\n        const fds = await dbService\n            .collection('feedback')\n            .get();\n        let fd = fds.docs.map(doc => {\n            return({...doc.data(), id:doc.id})\n        });\n        setFeedback(fd);\n    }\n\n    const getMails = async () => {\n        const fds = await dbService\n            .collection('apply-datas')\n            .get();\n        let fd = fds.docs.map(doc => {\n            return({...doc.data(), id:doc.id})\n        });\n        setEmails(fd);\n    }\n\n    const getSaved = async () => {\n        const fds = await dbService\n            .collection('saved-page')\n            .orderBy(\"created\", \"desc\")\n            .get();\n        let fd = fds.docs.map(doc => {\n            return({...doc.data(), id:doc.id})\n        });\n        setSaved(fd);\n    }\n\n    const getVoted = async () => {\n        const fds = await dbService\n            .collection('vote')\n            .orderBy(\"created\", \"desc\")\n            .get();\n        let fd = fds.docs.map(doc => {\n            return({...doc.data(), id:doc.id})\n        });\n        setVoted(fd);\n    }\n\n    const switchType = () => {\n        switch (type){\n            case 0:\n                return(<UploadContest history={history} />)\n            case 1:\n                return(\n                    <div>\n                        <div>\n                            배포된 페이지\n                        </div>\n                        <div>\n                            {published &&\n                            published.map((item, index) => {\n                                let day = new Date(item.created)\n                                let date = `${day.getMonth() + 1}월 ${day.getDate()}일 ${day.getHours()}시 ${day.getMinutes()}분`\n                                return(\n                                    <div className=\"center-row\" style={{margin:'10px'}} key={index}>\n                                    <Half>\n                                        번호 : {index}\n                                    </Half>\n                                        <Half>\n                                            url : {item.urlId}\n                                        </Half>\n                                        <Half>\n                                            날짜 : {date}\n                                        </Half>\n                                        <Half>\n                                            만드신 분 : {item.makerEmail}\n                                        </Half>\n                                    </div>\n                                )\n                            }) \n                            }\n                        </div>\n                    </div>\n                )\n\n            case 2:\n                return(\n                    <div>\n                        <div>\n                            피드백\n                        </div>\n                        <div>\n                            {feedback &&\n                            feedback.map((item, index) => {\n                                let day = new Date(item.created)\n                                let date = `${day.getMonth() + 1}월 ${day.getDate()}일 ${day.getHours()}시 ${day.getMinutes()}분`\n                                return(\n                                    <div className=\"center-row\" style={{margin:'10px', flexWrap:'wrap', backgroundColor:'rgba(0,0,0,0.2)'}} key={index}>\n                                        <Half>\n                                            번호 : {index}\n                                        </Half>\n                                        <Half>\n                                            코멘트 : {item.comment}\n                                        </Half>\n                                        <Half>\n                                            난이도 : {item.difficulty}\n                                        </Half>\n                                        <Half>\n                                            있으면 좋겠는 기능 : {item.function}\n                                        </Half>\n                                        <Half>\n                                            유입 경로 : {item.funnel} {item.funnelEtc}\n                                        </Half>\n                                        <Half>\n                                            불편함 : {item.inconvenience} {item.inconvenienceEtc}\n                                        </Half>\n                                        <Half>\n                                            추천도 : {item.recommendation}\n                                        </Half>\n                                        <Half>\n                                            만족사항 : {item.satisfaction} {item.satisfactionEtc}\n                                        </Half>\n                                        <Half>\n                                            작업 시간 : {item.working_time}\n                                        </Half>\n                                        <Half>\n                                            피드백 시간 : {date}\n                                        </Half>\n                                        <Half>\n                                            작성자 : {item.user}\n                                        </Half>\n                                    </div>\n                                )\n                            }) \n                            }\n                        </div>\n                    </div>\n                )\n\n                case 3:\n                    return(\n                        <div>\n                            <div>\n                                저장된 페이지\n                            </div>\n                            <div>\n                                {saved &&\n                                saved.map((item, index) => {\n                                    let day = new Date(item.created)\n                                    let date = `${day.getMonth() + 1}월 ${day.getDate()}일 ${day.getHours()}시 ${day.getMinutes()}분`\n                                    return(\n                                        <div className=\"center-row\" style={{margin:'10px'}} key={index}>\n                                        <Half>\n                                            번호 : {index}\n                                        </Half>\n                                            <Half>\n                                                url : {item.urlId}\n                                            </Half>\n                                            <Half>\n                                                날짜 : {date}\n                                            </Half>\n                                            <Half>\n                                                만드신 분 : {item.makerEmail}\n                                            </Half>\n                                        </div>\n                                    )\n                                }) \n                                }\n                            </div>\n                        </div>\n                    )\n\n            case 4:\n                return(\n                    <div>\n                        <div>\n                            투표결과\n                        </div>\n                        <div>\n                            {voted &&\n                                voted.map((item, index) => {\n                                    let day = new Date(item.created)\n                                    let date = `${day.getMonth() + 1}월 ${day.getDate()}일 ${day.getHours()}시 ${day.getMinutes()}분`\n                                    return(\n                                        <div className=\"center-row\" style={{margin:'10px'}} key={index}>\n                                            <Half>\n                                                투표 : {item.select.map((item1,index) => {\n                                                    return item1 + ','\n                                                })}\n                                            </Half>\n                                            <Half>\n                                                날짜 : {date}\n                                            </Half>\n                                        </div>\n                                    )\n                            }) \n                            }\n                        </div>\n                    </div>\n                )\n            default:\n                return(<>뭐요</>)\n        }\n    }\n\n    return (\n        password !== 'abcdefghijklmnoppp' ?\n        <div className=\"centero\" style={{width:'100vw', height:'100vh', flexDirection:'column'}}>\n            <input value={password} onChange={e => setPassword(e.currentTarget.value)} />\n            <button onClick={() => {\n                if(password === 'pass'){\n                    setPassword('abcdefghijklmnoppp')\n                }else{\n                    alert('비밀공간입니다!')\n                }\n            }}>비밀번호 입력</button>\n        </div>\n        :\n        <div>\n            <div className=\"center-row\" style={{zIndex:'2000'}}>\n                <RadioButton  onClick={() => setType(0)}>\n                    데이터 용도\n                </RadioButton>\n                <RadioButton  onClick={() => setType(2)}>\n                    피드백(배포 시)\n                </RadioButton>\n                <RadioButton  onClick={() => setType(1)}>\n                    배포된 페이지\n                </RadioButton>\n                <RadioButton  onClick={() => setType(3)}>\n                    저장된 페이지\n                </RadioButton>\n                <RadioButton  onClick={() => setType(4)}>\n                    투표\n                </RadioButton>\n            </div>\n            <div>\n                {switchType()}\n            </div>\n        </div>\n    )\n}\n\nexport default AdminPage\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/Customer/CustomerPage.js",["806","807","808","809","810","811"],"import React, {useState, useEffect} from 'react'\nimport QnA from '../../components/Customer/QnA'\nimport Term from '../../components/Customer/Term'\nimport PersonalInformation from '../../components/Customer/PersonalInformation'\nimport Footer from '../NavAndFooter/Footer'\nimport ReactGa from 'react-ga'\nimport NavBarV2 from '../NavAndFooter/NavBarV2'\n\nimport './CustomerPage.css'\n\nfunction CustomerPage({history, isLoggedIn}) {\n    const [cnum, setCnum] = useState(1);\n    const [cnums, setCnums] = useState([1,2,3]);\n    \n    useEffect(()=>{\n\n        // ReactGa.initialize('UA-213792742-1');\n        // ReactGa.pageview('/customerPage');\n    });\n\n    const tabsTable = cnums.map((item, index) => {\n        let fw = '500';\n        let bb = '0px';\n        let fb = 'gray';\n        if(cnum == item){\n            fw = '700'; \n            bb = '2px solid black';\n            fb = 'black';\n        }\n\n        switch(item){\n            case 1:\n                return(\n                   <span className=\"tab-one\" index={index} style={{color:`${fb}`, fontWeight:`${fw}`, borderBottom:`${bb}`}} onClick={e => setCnum(item)}>자주묻는질문(FAQ)</span>\n                )\n            case 2:\n                return(\n                    <span className=\"tab-one\" index={index} style={{color:`${fb}`, fontWeight:`${fw}`, borderBottom:`${bb}`}} onClick={e => setCnum(item)}>이용약관</span>\n                )\n\n            case 3:\n                return(\n                    <span className=\"tab-one\" index={index} style={{color:`${fb}`, fontWeight:`${fw}`, borderBottom:`${bb}`}} onClick={e => setCnum(item)}>개인정보처리방침</span>\n                )\n\n        }\n    })\n\n    const contentTable = () => {\n        switch(cnum){\n            case 1:\n                return(\n                    <QnA />\n                )\n            case 2:\n                return(\n                    <Term />\n                )\n            case 3:\n                return(\n                    <PersonalInformation />\n                )\n        }\n    }\n\n    return (\n        <>\n        <NavBarV2 history={history} isLoggedIn={isLoggedIn} />\n        <div className=\"questionspage-container\">\n            <div className=\"q-inner\">\n                <div className=\"q-info-top\">\n                    <div className=\"q-title-top\" style={{fontWeight: 'bold'}}>\n                        Surfee에 관심을 가져주셔서 감사합니다.\n                    </div>\n                    <div className=\"q-title-top\" style={{marginTop:'3%'}}>\n                        안녕하세요!<br/>\n                        무엇을 도와드릴까요?\n                    </div>\n                    <div>\n                        <span className=\"q-button\">\n                            직접 문의하기\n                        </span>\n                    </div>\n                </div>\n                <div className=\"quetions-content-bottom\">\n                    <div className=\"q-tabs\">\n                        {tabsTable}\n                    </div>\n                    <div className=\"q-content\">\n                        <div className=\"q-one-content\">\n                            {contentTable()}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <Footer />\n        </>\n    )\n}\n\nexport default CustomerPage\n",["812","813"],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/Login/Login/LoginPage.js",["814","815","816","817"],"import React, {useState, useEffect} from 'react';\nimport './LoginRegister.css'\nimport { authService } from '../../../tools/fbase'\nimport { firebaseInstance } from '../../../tools/fbase'\nimport { dbService } from '../../../tools/fbase'\nimport { Input } from 'antd';\nimport googlelogo from '../../../tools/img/googlelogo.png'\nimport s1 from '../../../tools/img/surfee1.png';\nimport Footer from '../../NavAndFooter/Footer';\nimport {Link} from 'react-router-dom';\nimport NavBarV2 from '../../NavAndFooter/NavBarV2'\n\nfunction LoginPage({history, isLoggedIn}) {\n    const [id, setId] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [done, setDone] = useState(false);\n\n    const socialLogin = async (e) => {\n        const { \n            target : { name }, \n        } = e;\n        let provider;\n        // if (name === \"googleLogin\"){\n        provider = new firebaseInstance.auth.GoogleAuthProvider();\n        // }else{\n        //     console.log(\"이건 뜨면 안되는 메세지.\");\n        // }\n\n        const data = await authService.signInWithPopup(provider);\n        await checkRegister(data.user.multiFactor.user.email);\n        history.push('/');\n        history.go();\n    }\n\n    const submit = async (e) => {\n        var data = '';\n        e.preventDefault();\n        try{\n            data = await authService.signInWithEmailAndPassword(\n                id, password\n            )\n            checkRegister(data.user.multiFactor.user.email)\n        } catch (err){\n            console.log(err)\n        }\n    }\n\n    const checkRegister = async (email) => {\n        const usersCollections = await dbService\n            .collection(\"users\")\n            .where(\"email\", \"==\", email)\n            .get();\n        \n        const usersExist = usersCollections.docs.map(doc => {\n            return({...doc.data(), id: doc.id})\n        })\n\n        if(usersExist.length === 0){\n            // 구글 아이디로 로그인했는데 회원가입에 정보가 없을 때\n            setDone(true);\n        }else{\n            localStorage.setItem(\"name\", usersExist[0].name);\n            localStorage.setItem(\"job\", usersExist[0].job);\n\n            history.push('/');\n            history.go();\n        }\n    }\n\n    return (\n        <>\n        {done ? \n        <div>\n            Initializing... \n            {/* 여기에 회원가입 페이지랑 똑같이 입력받는걸 넣어야 하는 건가..? */}\n        </div>\n        :\n        <div>\n        <NavBarV2 history={history} isLoggedIn={isLoggedIn}/>\n        <div className=\"login-container\">\n            <div className=\"login-container__container\">\n                <div className=\"login__inner\">\n                    <div className=\"login-title\" style={{color:'#6a63f7'}}>\n                        Surfee\n                    </div>\n                    <div className=\"login-title\">\n                        로그인 페이지에 오신 것을 환영합니다.\n                    </div>\n                    <form onSubmit={e => submit(e)} className=\"center\">\n                        <span className=\"login-label\">\n                            Email\n                        </span>\n                        <Input \n                            className=\"login-input input-focus\"\n                            placeholder=\"아이디를 입력해 주세요.\" \n                            required\n                            value={id}   \n                            onChange={e => setId(e.currentTarget.value)}\n                        />\n                        <span className=\"login-label\">\n                            Password\n                        </span>\n                        <Input  \n                            type=\"password\" \n                            className=\"login-input input-focus\"\n                            placeholder=\"비밀번호를 입력해 주세요.\" \n                            required\n                            value={password} \n                            onChange={e => setPassword(e.currentTarget.value)}\n                        />\n                        <Input className=\"login-form-button\" type=\"submit\" value=\"로그인\" />\n                    </form>\n                    <button className=\"google-login-button\" name=\"googleLogin\" onClick={e => socialLogin(e)} style={{marginTop:'2%'}}>\n                        <img src={googlelogo} width={20}/>\n                        <span style={{marginLeft:'5%'}}>구글 로그인</span>\n                    </button>\n                    <div style={{padding:'2% 0%', justifyContent:'flex-start', display:'flex', width:'100%'}}>\n                        <Link to=\"/customer\" className=\"footer-text-click\">\n                            개인정보 처리방침\n                        </Link>\n                        <Link to=\"/customer\" className=\"footer-text-click\" style={{marginLeft:'2%'}}>\n                            이용약관\n                        </Link>\n                    </div>\n                </div>\n            </div>\n            <div className=\"login-background\">\n                <img src={s1} width={600} />\n                <div className=\"login-background__desc\" style={{fontFamily:'Pretendard-ExtraBold', marginTop:'2%'}}>\n                    Surfee와 함께 1분만에 완성하는 랜딩페이지\n                </div>\n                <div className=\"login-background__desc\">\n                    Surfee와 함께 1분만에 완성하는 랜딩페이지\n                </div>\n            </div>\n        </div>\n        <Footer />\n        </div>\n     }</>\n        \n    )\n}\n\nexport default LoginPage\n",["818","819"],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/Login/Register/RegisterPage.js",["820","821","822","823"],"import React, {useState, useEffect} from 'react'\nimport { authService } from '../../../tools/fbase'\nimport { firebaseInstance } from '../../../tools/fbase'\nimport { dbService } from '../../../tools/fbase'\nimport { Input } from 'antd';\nimport googlelogo from '../../../tools/img/googlelogo.png'\nimport s1 from '../../../tools/img/surfee1.png';\nimport {Link} from 'react-router-dom';\nimport NavBarV2 from '../../NavAndFooter/NavBarV2'\n\nfunction RegisterPage({history, isLoggedIn}) {\n    const [id, setId] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [done, setDone] = useState(false);\n    const [name, setName] = useState(\"\");\n    const [job, setJob] = useState(\"\");\n\n    const socialLogin = async (e) => {\n        const { \n            target : { name }, \n        } = e;\n        let provider;\n        if (name === \"googleLogin\"){\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\n        }else{\n        }\n\n        const data = await authService.signInWithPopup(provider);\n        await checkRegister(data.user.multiFactor.user.email);\n        setDone(true);\n\n    }\n\n    const submit = async (e) => {\n        var data = '';\n        e.preventDefault();\n        try{\n            data = await authService.createUserWithEmailAndPassword(\n                id, password\n            )\n        } catch (err){\n            if(err.code === \"auth/email-already-in-use\"){\n                alert(\"이미 존재하는 아이디입니다. 로그인 해 주세요.\");\n                history.push('/login');\n                history.go();\n            }else if(err.code === \"auth/invalid-email\"){\n                alert(\"이메일 양식에 맞게 작성해 주세요.\");\n            }else{\n                alert(\"옳바르지 않은 회원가입 시도입니다.\");\n            }\n            return;\n        }\n        history.push('/');\n        history.go();\n    }\n\n    const checkRegister = async (email) => {\n        const usersCollections = await dbService\n            .collection(\"users\")\n            .where(\"email\", \"==\", email)\n            .get();\n        \n        const usersExist = usersCollections.docs.map(doc => {\n            return({...doc.data(), id: doc.id})\n        })\n\n        if(usersExist.length === 0){\n            // 구글 아이디로 로그인했는데 회원가입에 정보가 없을 때\n        }\n    }\n\n    const submitInfo = async () => {\n        await dbService.collection(\"users\").add({\n            name:name,\n            job:job,\n        })\n        alert(\"회원가입이 완료되었습니다.\");\n        history.push('/');\n        history.go();\n    }\n\n    return (\n        <>\n        <NavBarV2 history={history} isLoggedIn={isLoggedIn}/>\n        {done ? \n        <div className=\"login-container\">\n            <div className=\"login__inner\">\n                <div>\n                    회원가입 페이지에 오신 것을 환영합니다.\n                </div>\n                <form className=\"form-container\" onSubmit={e => submitInfo(e)}>\n                    <input \n                        type=\"text\" \n                        placeholder=\"이름을 입력해 주세요.\" \n                        required\n                        value={name}   \n                        onChange={e => setName(e.currentTarget.value)}\n                    />\n                    <input  \n                        type=\"text\" \n                        placeholder=\"직업을 입력해 주세요.\" \n                        required\n                        value={job} \n                        onChange={e => setJob(e.currentTarget.value)}\n                    />\n                    <input type=\"submit\" value=\"회원가입 완료\" />\n                </form>\n            </div>\n        </div>\n        : \n\n        <div className=\"login-container\">\n            <div className=\"login-container__container\">\n                <div className=\"login__inner\">\n                    <div className=\"login-title\" style={{color:'#6a63f7'}}>\n                        Surfee\n                    </div>\n                    <div className=\"login-title\">\n                        회원가입 페이지에 오신 것을 환영합니다.\n                    </div>\n                    <form onSubmit={e => submit(e)} className=\"center\">\n                        <span className=\"login-label\">\n                            Email\n                        </span>\n                        <Input \n                            type=\"text\" \n                            className=\"login-input\"\n                            placeholder=\"아이디를 입력해 주세요.\" \n                            required\n                            value={id}   \n                            onChange={e => setId(e.currentTarget.value)}\n                        />\n                        <span className=\"login-label\">\n                            Password\n                        </span>\n                        <Input  \n                            type=\"password\" \n                            className=\"login-input\"\n                            placeholder=\"비밀번호를 입력해 주세요.\" \n                            required\n                            value={password} \n                            onChange={e => setPassword(e.currentTarget.value)}\n                        />\n                        <Input className=\"login-form-button\" type=\"submit\" value=\"회원가입\" />\n                    </form>\n                    <button className=\"google-login-button\" onClick={e => socialLogin(e)} style={{marginTop:'2%'}}>\n                        <img src={googlelogo} width={20}/>\n                        <span style={{marginLeft:'5%'}}>구글 회원가입</span>\n                    </button>\n                    <div style={{padding:'2% 0%', justifyContent:'flex-start', display:'flex', width:'100%'}}>\n                        <Link to=\"/customer\" className=\"footer-text-click\">\n                            개인정보 처리방침\n                        </Link>\n                        <Link to=\"/customer\" className=\"footer-text-click\" style={{marginLeft:'2%'}}>\n                            이용약관\n                        </Link>\n                    </div>\n                </div>\n            </div>\n            <div className=\"login-background\">\n                <img src={s1} width={600} />\n                <div className=\"login-background__desc\" style={{fontFamily:'Pretendard-ExtraBold', marginTop:'2%'}}>\n                    Surfee와 함께 1분만에 완성하는 랜딩페이지\n                </div>\n                <div className=\"login-background__desc\">\n                    Surfee와 함께 1분만에 완성하는 랜딩페이지\n                </div>\n            </div>\n        </div>}\n        </>\n    )\n}\n\nexport default RegisterPage\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/unused/SubmitPage.js",["824"],"import React, {useState, useEffect} from 'react'\nimport NavBarV2 from '../../../pages/NavAndFooter/NavBarV2'\nimport Footer from '../../../pages/NavAndFooter/Footer'\n\nimport './SubmitPage.css'\n\nfunction SubmitPage() {\n\n    useEffect(() => {\n    })\n\n    return (\n        <div className=\"after-page-one-container\">\n            <NavBarV2 />\n            <div className=\"after-page\">\n                <div className=\"after-page-title\">\n                축하합니다!\n                랜딩페이지는<br/>\n                https://surfee.co.kr/입력하신 urlID<br/>\n                에서 확인하실 수 있습니다.\n                </div>\n                <div className=\"after-page-desc\">\n                데이터를 확인할 수 있는 페이지에 대한 비밀번호는 12시간 내에 이메일로 보내드리겠습니다.<br/>\n                랜딩페이지에 대한 데이터는 매일 자정 경\n                엑셀 파일로 정리하여 보내드릴 예정입니다.<br/><br/>\n                최대한 빠른 시일 내에 자동화할 수 있도록 노력하겠습니다!<br/>\n                저희 Surfee를 이용해주셔서 감사합니다 :)\n                <br/><br/>\n                👉 Surfee가 도움이 되었다면 / 개선을 바라는 점이 있다면<br/>\n                피드백에 참여해 주세요!\n                </div>\n                <div className=\"after-page-button-container\">\n                    <a className=\"after-page-button\" href=\"https://6cetqycakbc.typeform.com/to/oRcv6Qdu\">🙋🏻‍♂️ 피드백 하러 가기!</a>\n                </div>\n            </div>\n            <Footer />\n        </div>\n    )\n}\n\nexport default SubmitPage\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/Make/MakePageV2.js",["825","826","827","828","829","830"],"import React, {useEffect, useState, useRef, createRef, useMemo} from 'react'\nimport './MakePage.css'\nimport './MakeLanding.css'\n// Recoil , Immer JS 적용\n\nimport NewSection from '../../components/Make/NewSection'\nimport NewSectionMake from '../../components/Make/Edit/NewSectionMake'\nimport NavBarInMakePage from './NavBarInMakePage/NavBarInMakePage'\nimport MakeNavigationV2 from '../../components/Make/NavBar/MakeNavigationV2'\nimport MakeFooterV2 from '../../components/Make/Footer/MakeFooterV2'\nimport LoadingModal from '../../components/Make/Modal/LoadingModal'\nimport OverflowScrolling from 'react-overflow-scrolling';\nimport { useLocation, useParams } from 'react-router';\nimport { base } from '../../components/Make/SectionTypes/baseTypes'\nimport { defaults } from '../../components/Make/SectionTypes/baseTypes'\nimport lodash from 'lodash'\nimport ConfirmCustom from '../../tools/ConfirmCustom'\nimport {dbService} from '../../tools/fbase'\nimport { isMobile } from 'react-device-detect';\nimport {Prompt} from 'react-router-dom';\nimport produce from 'immer'\nimport ChannelTalk from '../../tools/ChannelTalk'\nimport {ButtonEditor} from '../../components/Make/tools/Editor'\nimport ReactGa from 'react-ga'\nimport { Helmet } from 'react-helmet'\n\nexport const MyContext = React.createContext({\n    state : {},\n    action : {}\n});\n\nexport const MySubContext = React.createContext({\n    state : {},\n    action : {}\n});\n\n// const isPhoneState = atom({\n//     key:'isPhoneState',\n//     default: false,\n// })\n\nconst MakePageV2 = ({history, userObj}) => {\n    ChannelTalk.boot({\n        \"pluginKey\": \"e6b830bc-7731-43fa-8eea-1245d3d4fc3e\", //please fill with your plugin key\"\n    });\n\n    // 데이터 베이스에 저장하지 않고 제작을 위해서만 사용되는 것들.\n    const [secNum, setSecNum] = useState(52); // 현재 수정중인 페이지를 의미.\n    const [loading, setLoading] = useState(false);\n    const [editingId, setEditingId] = useState('')\n    const [confirmMessage, setConfirmMessage] = useState('')\n    const [callback, setCallback] = useState()\n\n    const [isPhone, setIsPhone] = useState(false);\n    const [full, setFull] = useState(false);\n    const [load, setLoad] = useState(false);\n    const [editing, setEditing] = useState(false);\n    const [category, setCategory] = useState(0);\n    const [focus, setFocus] = useState('');\n    const location = useLocation();\n\n    // 메인 세팅\n    const [setting, setSetting] = useState(lodash.cloneDeep(defaults.setting));\n    // 새로운 세팅\n    // local storage 저장을 위한 contents 재설정 - video의 용량 초과 때문에 일단..ㅠ\n    const arr = lodash.cloneDeep(base[0])\n    delete arr.video.attachment\n    const [contents, setContents] = useState([ arr, lodash.cloneDeep(base[1]), lodash.cloneDeep(base[4]), lodash.cloneDeep(base[5]), lodash.cloneDeep(base[6]) ])\n\n    // 네비게이션\n    const [navi, setNavi] = useState(lodash.cloneDeep(defaults.navi));\n\n    // 푸터\n    const [foot, setFoot] = useState(lodash.cloneDeep(defaults.foot));\n\n    // 푸터\n    const [openConfirm, setOpenConfirm] = useState(false);\n\n    // 피드백\n    const elementsRef = useRef([0,1,2,3,4,5,6,8,9,7,10,11,12,13,14,15,16,17,18,19,20].map(() => createRef()));\n\n    // 반복 실행되는 useEffect\n    useEffect(() => {\n        setContents(contents)\n        // function repeat(){\n        //     saveLocalStorage();\n        // }\n        // // 30초에 한번 씩 자동 저장\n        // let id = setInterval(repeat, 10000);\n        // return () => clearInterval(id);\n    }, [contents])\n\n    // 처음에 한번만 실행되는 useEffect\n    useEffect(() => {\n        console.log(\"ㅊㅓ음 한번만\")\n        \n        // to report page view\n        ReactGa.initialize('UA-213792742-1');\n        ReactGa.pageview(`/make`);\n        // 관리하기 페이지에서 state.item으로 내용을 가지고 넘어왔다.\n        if(location.state !== undefined){\n            if(location.state.now){\n                console.log(\"첫 제작으로 넘어옴\")\n                setLoad(false);\n                loadLocalStorage()\n                setIsPhone(location.state.isPhone)\n                setLoad(true);\n            }else if(location.state.template){\n                getTemplate()\n            }else{\n                getEdit()\n                // saveLocalStorage();\n            }\n        }else if(location.pathname.length > 10 && location.pathname.split('/')[2]){\n            setLoad(true);\n            setConfirmMessage(<div>공유받은 템플릿을 사용하겠습니까?</div>)\n            setOpenConfirm(true);\n            setCallback(() => getTemplateFromUser);\n        }else{\n            // 로컬스토리지에 저장되어인게 있다면\n            if(localStorage.getItem('temp') !== null){\n                setConfirmMessage(<div>제작 중이던 페이지가 있습니다. 불러오시겠습니까? <br /> 취소 시 이전에 작업하던 내용은 사라집니다.</div>)\n                setOpenConfirm(true);\n                setCallback(() => loadLocalStorage);\n            }else{\n                saveLocalStorage();\n            }\n            setLoad(true);\n        }\n\n    },[])\n\n    const contextValue = {\n        state: { secNum, contents, isPhone, category, setting, focus},\n        action : {setSecNum, setContents, setIsPhone, setCategory, setSetting, setFocus},\n    }\n\n    const contextSubValue = {\n        state: { secNum, isPhone, category, focus},\n        action : {setSecNum, setIsPhone, setCategory, setFocus},\n    }\n\n    const getEdit = async () => {\n        setLoading(true)\n\n        const item = location.state.item;\n\n        let ttem\n\n        const ssede = await dbService.doc(`saved-page/${item}`)\n            .get()\n            .then(snapshot => ttem = {...snapshot.data(), id:snapshot.id});\n\n        setEditing(true);\n        setEditingId(item);\n\n        console.log(\"check1\")\n        \n        setContents(ttem.contents)\n        setNavi(ttem.navi)\n        setFoot(ttem.foot)\n        setSetting(ttem.setting)\n        \n        setTimeout(() => {\n            setLoad(true);\n            setLoading(false);\n        },50)\n    }\n\n    const getTemplateFromUser = async () => {\n        setLoading(true)\n        setLoad(false);\n        let ttem\n\n        const ssede = await dbService.doc(`saved-page/${location.pathname.split('/')[2]}`)\n            .get()\n            .then(snapshot => ttem = {...snapshot.data(), id:snapshot.id});\n        \n        if(!ttem.setting){\n            setLoading(false)\n            alert(\"코드에 해당하는 템플릿이 존재하지 않습니다.\")\n            history.push('/questions')\n            history.go()\n        }else{\n            ttem.setting.urlId = ''\n\n            console.log(\"check1\")\n    \n            setContents(ttem.contents)\n            setNavi(ttem.navi)\n            setFoot(ttem.foot)\n            setSetting(ttem.setting)\n            setTimeout(() => {\n                setLoad(true);\n                setLoading(false);\n            },50)\n        }\n    }\n\n    const getTemplate = async () => {\n\n        const savedPages = await dbService\n            .collection(\"saved-page\")\n            .where(\"urlId\", \"==\", location.state.templateNum)\n            .get(); // uid를 creatorId로 줬었으니까.\n    \n        let savedPage = savedPages.docs.map(doc => {\n            return({...doc.data(), id:doc.id})\n        });\n\n        let tempSetting = savedPage[0].setting;\n        tempSetting.urlId = location.state.urlId\n\n        console.log(\"check1\")\n\n        setContents(savedPage[0].contents)\n        setNavi(savedPage[0].navi)\n        setFoot(savedPage[0].foot)\n        setSetting(tempSetting)\n        \n        saveLocalStorage();\n\n        setTimeout(() => {\n            setLoad(true);\n            setLoading(false);\n        },50)\n    }\n\n    const saveLocalStorage = async () => {\n        if(JSON.stringify([contents, navi, foot, setting, editing, editingId]).length > 48000){\n            // 임시 방편으로 큰 데이터는 건너뛰도록 조치.\n            return\n        }else{\n            localStorage.setItem('temp', JSON.stringify([contents, navi, foot, setting, editing, editingId]));\n        }\n    }\n\n    const loadLocalStorage = () => {\n        setLoading(true);\n        const temp = JSON.parse(localStorage.getItem('temp'));\n\n        console.log(\"check1\")\n\n        setContents(temp[0]);\n        setNavi(temp[1]);\n        setFoot(temp[2]);\n        setSetting(temp[3]);\n        setEditing(temp[4]);\n        setLoading(false);\n    }\n    \n    // const isScroll = useCallback((scroll)=>{\n    //     setScroll(scroll);\n    //     if(scroll){\n    //         // 스크롤 내리기\n    //         scrollRef.current.scrollIntoView({ behavior: 'smooth', block: 'end', inline: 'nearest' });\n    //     }\n    // },[scroll])\n\n    return (<>\n    { isMobile ? \n        <div className=\"mobile-hide\">\n            <div>\n                본 사이트는 PC환경에 최적화되어있습니다. <br />\n                PC로 이동해서 랜딩페이지 제작을 시작해 보세요. 😁\n            </div>\n        </div> \n        :\n    <>\n        <MyContext.Provider value={contextValue}>\n            {/* 유즈티풀 사용 */}\n            <Helmet>\n            <script>\n            {\n            (function (w, d, s) {\n                    var a = d.getElementsByTagName('head')[0];\n                    var r = d.createElement('script');\n                    r.async = 1;\n                    r.src = s;\n                    r.setAttribute('id', 'usetifulScript');\n                    r.dataset.token = \"72cff1a0d5088f1865159a738121aec2\";\n                            a.appendChild(r);\n                })(window, document, \"https://www.usetiful.com/dist/usetiful.js\")\n            }\n            </script>\n            </Helmet>\n           <MySubContext.Provider value={contextSubValue}>\n            <Prompt \n                when={true}\n                message=\"편집내용이 저장되지 않았을 수 있습니다. 정말로 제작을 그만두시겠습니까?\"\n            />\n               <NavBarInMakePage \n                    editing={editing} editingId={editingId}\n                    setEditing={setEditing} setEditingId={setEditingId}\n                    history={history} userObj={userObj}\n                    full={full} setFull={setFull}\n                    isPhone={isPhone} setIsPhone={setIsPhone}\n                    loading={loading} setLoading={setLoading}\n                    navi={navi} foot={foot} setting={setting} setNavi={setNavi}\n                    saveLocalStorage={saveLocalStorage}\n               />\n            {\n            load &&\n            <div className=\"make-page-container\" style={{paddingTop:`${full ? '55px' : '60px'}`}}>\n                {/* 아래는 제작하는 곳 */}\n                {\n                    !full && \n                    <div style={{display:'flex', justifyContent:'center', alignItems: 'center', width:'28vw'}}>\n                        <div className=\"make-page-make-space\">\n                            <OverflowScrolling className='overflow-scrolling' style={{\n                                // backgroundColor:`${bgc}`, \n                                // mozTransition: `all 0.3s ease-in`,\n                                // webkitTransition: `all ${bgc === 'white' ? 0.7 : 0}s ease-in`,\n                                // oTransition: `all 0.3s ease-in`,\n                                // transition: `all 0.3s ease-in`,\n                                }}>\n                                {/* 제작페이지 메인 */}\n                               <NewSectionMake elementsRef={elementsRef} content={contents[secNum]} foot={foot} setFoot={setFoot} navi={navi} setNavi={setNavi} setting={setting} setSetting={setSetting} />\n                            </OverflowScrolling>\n                        </div>\n                        <div className=\"fake-make\">\n                        </div>\n                    </div>\n                }\n                {/* 아래는 미리보기 화면 */}\n                <div className=\"make-left-landing\" style={{width:`${full ? '100vw' : '72vw'}`}}>\n                    <div className=\"scroll-container\" \n                        style={{ \n                            width:`${full ? '100vw' : isPhone ? '26vw' : '70vw'}`,\n                        }}>\n                        {/* 실시간으로 바뀌는 모습이 보이는 랜딩페이지 */}\n                        {(!full && !isPhone) && <div className=\"make-tab-preseen\" onClick={() => setSecNum(52)}>\n                            <div className=\"left\">\n                                <div className=\"make-tab-circle\" style={{marginLeft:'15px'}}></div>\n                                <div className=\"make-tab-circle\"></div>\n                                <div className=\"make-tab-circle\"></div>\n                                <div className=\"make-tab-one-tab\">\n                                    <img src={setting.faviconAttachment} className='make-tab-favicon opacity-hover' onClick={() => {setFocus('setting-favicon'); setCategory(0)}}/>\n                                    <span className=\"opacity-hover\" style={{padding:'0px 3px', borderRadius:'2px'}} onClick={() => {setFocus('setting-title'); setCategory(0)}}>\n                                        {setting.title}\n                                    </span>\n                                </div>\n                            </div>\n                            <div className=\"right\" style={{paddingRight:'23px'}}>\n                                <div className=\"make-tab-url opacity-hover\" onClick={() => {setFocus('setting-urlId'); setCategory(0)}}>\n                                    https://surfee.co.kr/{setting.urlId}\n                                </div>\n                            </div>\n                        </div>}\n                            {\n                                contents &&\n                                <div className=\"make-main-page-container\" style={{borderRadius:`${isPhone ? '7px' : '0px'}`,fontSize:`${isPhone ? '22px' : '28px'}` }}>  \n                                    {/* 네비게이션 */}\n                                    {navi.use && <MakeNavigationV2 full={full} navi={navi} setNavi={setNavi} history={history} /> }\n                                    \n                                    {/* 섹션 디스플레이 */}\n                                    \n                                    {contents.map((item, index) => {\n                                        return(\n                                            <div style={{width:'100%'}}>\n                                                <NewSection elementRef={elementsRef.current[index]} setCategory={setCategory} content={item} key={index} index={index} secNum={secNum} isPhone={isPhone} setSecNum={setSecNum} contents={contents} setContents={setContents} full={full} setting={setting}/>\n                                            </div>\n                                        )\n                                    })}\n                                    {/* 푸터 */}\n                                    {foot.use && \n                                    <MakeFooterV2 full={full} history={history} foot={foot} setFoot={setFoot} /> \n                                    }                             \n                                </div>\n                            }\n                            <>\n                            {  ( setting.fta.use ) &&\n                            <div className=\"fta__container\" style={{width:`${full ? '100vw' : isPhone ? '26vw' : '70vw'}`, fontSize:`${isPhone ? '22px' : '28px'}`}}>\n                                <div className=\"fta-button\"\n                                    onClick={() => {setFocus('setting-fab'); setCategory(0); setSecNum(52)}}\n                                    style={{\n                                        fontFamily: `${setting.smallFont}`,\n                                        backgroundColor:`${setting.fta.backgroundColor}`, \n                                        width:`${isPhone ? 93 : setting.fta.size }%`, \n                                        borderRadius:`${setting.fta.shape}px`, \n                                        border:`${setting.fta.border ? `1px solid ${setting.fta.borderColor}` : 'none'}`,\n                                        boxShadow:`${setting.fta.shadow ? '2px 2px 5px rgba(0,0,0,0.3)' : ''}`,\n                                        fontSize:'0.7em',\n                                        color:`${setting.fta.color}`,\n                                    }}>\n                                    \n                                    <div className=\"alignCenter\"\n                                        style={{width:'100%', cursor:'default'}}>\n                                        <ButtonEditor  \n                                            placeholder=\"플로팅 버튼입니다!\"\n                                            data={setting.fta.text} \n                                            onChange={(event, editor) => {\n                                                const data = editor.getData();\n                                                setSetting(produce(setting, draft => {\n                                                    draft.fta.text = data;\n                                                }))\n                                            }}\n                                            style={{\n                                                fontFamily: `${setting.smallFont}`,\n                                                resize: 'none'\n                                            }}\n                                            color={setting.fta.color} align=\"center\" />\n                                    </div>\n                                </div>\n                            </div> }\n                            </>\n                        </div>\n                    </div>\n                </div>\n            }\n            {/* 모달 모아두기 */}\n            <div>\n                {/* <FirstQuestions saveLocalStorage={saveLocalStorage} setContents={setContents} history={history} foot={foot} setFoot={setFoot} type={makingTypeByUser} setType={setMakingTypeByUser} open={open} setOpen={setOpen} navi={navi} setNavi={setNavi} editing={editing} setEditing={setEditing} setting={setting} setSetting={setSetting} setIsPhone={setIsPhone}/> */}\n                <LoadingModal loading={loading} />\n            </div>\n            <ConfirmCustom open={openConfirm} setOpen={setOpenConfirm} message={confirmMessage} callback={ callback } />\n        </MySubContext.Provider>\n        </MyContext.Provider>\n    </> }\n    </>)\n}\n\nexport default MakePageV2\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/Questions/FirstQuestions.js",["831","832","833","834","835","836","837","838","839","840","841","842","843","844","845","846"],"import React, {useState} from 'react'\nimport { styled, Box } from '@mui/system';\n// import { MyContext } from '../Make/MakePageV2'\nimport '../../components/Make/Modal/Modal.css';\nimport './FirstQuestions.css'\nimport {Link} from 'react-router-dom'\nimport {dbService} from '../../tools/fbase';\nimport MiniModal from '../../tools/MiniModal';\nimport OverflowScrolling from 'react-overflow-scrolling';\nimport { defaults } from '../../components/Make/SectionTypes/baseTypes'\nimport produce from 'immer';\nimport lodash from 'lodash'\nimport { Input } from 'antd';\nimport { base } from '../../components/Make/SectionTypes/baseTypes'\nimport {\n    ChakraProvider,\n    Button,\n    Menu,\n    MenuButton,\n    MenuList,\n    MenuItem,\n  } from '@chakra-ui/react'\nimport { fontOptions } from '../../components/Make/Edit/NavFooterSetting/EditSetting'\n//추가\nimport ex1 from '../../tools/img/main/ex1.png'\nimport ex2 from '../../tools/img/main/ex2.png'\nimport ex3 from '../../tools/img/main/ex3.png'\nimport ex4 from '../../tools/img/main/ex4.png'\nimport ex5 from '../../tools/img/main/ex5.png'\nimport ex6 from '../../tools/img/main/ex6.png'\n\nimport m1 from '../../tools/img/example/m1.webp'\nimport m2 from '../../tools/img/example/m2.webp'\nimport p1 from '../../tools/img/example/p1.webp'\nimport p2 from '../../tools/img/example/p2.webp'\nimport c1 from '../../tools/img/example/c1.webp'\nimport c2 from '../../tools/img/example/c2.webp'\nimport s1 from '../../tools/img/example/s1.webp'\nimport s2 from '../../tools/img/example/s2.webp'\nimport clofos from '../../tools/img/example/clofos.png'\n\nimport TemplateModal from '../../pages/ExamplePage/TemplateModal'\nimport { TemplatesList } from '../../pages/ExamplePage/ExamplePage'\nimport {isMobile} from 'react-device-detect'\n// import { MultiSelect } from \"react-multi-select-component\";\nimport backback from '../../tools/img/main/Elements.jpg';\nimport {Check} from '@styled-icons/bootstrap'\nimport {ChevronDown} from '@styled-icons/bootstrap'\n//추가\n\nconst Div = styled('div')`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction:column;\n  box-sizing:border-box;\n`;\n\nconst progressList = [\n    {\n        num:1,\n        name:'NAME',\n    },\n    {\n        num:2,\n        name:'GOAL',\n    },\n    {\n        num:3,\n        name:'DEVICE',\n    },\n    {\n        num:4,\n        name:'DESIGN',\n    },\n]\n\nconst colorList = [\n    {name:'Surfee', color:'#6c63ff'},\n    {name:'빨강', color:'#FF6464'},\n    {name:'노랑',color:'#FFE162'},\n    {name:'머스타드노랑',color:'#FFBD35'},\n    {name:'초록',color:'#91C483'},\n    {name:'하늘색',color:'#5D8BF4'},\n    {name:'파란색',color:'#2D31FA'},\n    {name:'연보라',color:'#BAABDA'},\n    {name:'진한 보라색',color:'#3B185F'},\n    {name:'검정',color:'#171717'},\n    {name:'진한 회색',color:'#444444'},\n    {name:'갈색',color:'#C99C75'},\n    {name:'상아색',color:'#EEE6C4'},\n]\n\n//추가\nconst exs = [\n    {\n        img : ex2,\n        title:\"Template 2\",\n        url:'template1'\n    },\n    {\n        img : ex3,\n        title:\"Template 3\",\n        url:'template2'\n    },\n    {\n        img : ex4,\n        title:\"Template 4\",\n        url:'template3'\n    },\n    {\n        img : ex5,\n        title:\"Template 5\",\n        url:'template5'\n    },\n    {\n        img : ex6,\n        title:\"Template 6\",\n        url:'template4'\n    },\n]\n\nconst marketingExs = [\n    {\n        img : m1,\n        title:\"이벤트/마케팅\",\n        url:'mercurysurfeeex'\n    },\n    {\n        img : clofos,\n        title:\"이벤트/마케팅\",\n        url:'clofossurfeeex'\n    },\n]\n\nconst singleExs = [\n    {\n        img : c1,\n        title:\"1인 사업가\",\n        url:'homebarsurfeeex'\n    },\n    {\n        img : c2,\n        title:\"1인 사업가\",\n        url:'fillomsurfeeex'\n    },\n]\n\nconst startupExs = [\n    {\n        img : s1,\n        title:\"1인 사업가\",\n        url:'homebarsurfeeex'\n    },\n    {\n        img : s2,\n        title:\"1인 사업가\",\n        url:'codenotesurfeeex'\n    },\n]\n\nconst personalExs = [\n    {\n        img : p1,\n        title:\"퍼스널 브랜딩\",\n        url:'port1surfeeex'\n    },\n    {\n        img : s2,\n        title:\"퍼스널 브랜딩\",\n        url:'port2surfeeex'\n    },\n]\n\nfunction FirstQuestions({history}) {\n    \n    const [setting, setSetting] = useState(lodash.cloneDeep(defaults.setting));\n    const arr = lodash.cloneDeep(base[0])\n    const [contents, setContents] = useState([ arr, lodash.cloneDeep(base[1]), lodash.cloneDeep(base[4]), lodash.cloneDeep(base[5]), lodash.cloneDeep(base[6]) ])\n    const [navi, setNavi] = useState(lodash.cloneDeep(defaults.navi));\n    const [foot, setFoot] = useState(lodash.cloneDeep(defaults.foot));\n    // 모달\n    const [cnum, setCnum] = useState(1);\n    const [title, setTitle] = useState(\"\");\n    const [device, setDevice] = useState(\"\");\n    const [font, setFont] = useState('');\n    //const [smallFont, setSmallFont] = useState('');\n    const [color, setColor] = useState('');\n    const [alarm, setAlarm] = useState(false);\n    const [urlId, setUrlId] = useState('');\n    const [type, setType] = useState('maintemplate');\n    const [start, setStart] = useState(false);\n    const [miniModal, setMiniModal] = useState(false);\n    const [miniModalText, setMiniModalText] = useState('');\n\n    // const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    const handleClose = async () => {\n        // 마지막에는 입력한 정보도 저장한다. 근데 한명껄 여러번 저장해서 헷갈리지 않게..!\n\n        await dbService.collection('question_answers').add({\n            createdAt: new Date(),\n        })\n        // setOpen(false)\n    };\n\n    const onUrlChange = e => {\n        if (isNotNumber(e.nativeEvent.data)){ \n            setAlarm(false)\n            setUrlId(e.currentTarget.value);\n        }else{\n            setAlarm(true)\n            e.preventDefault(); \n            return null; \n        }\n    }\n\n    const nextAndSetDesign = async (e) => {\n\n        setCnum(cnum + 3);\n    \n    }\n    \n    const nextAndSetFont2 = async e => {\n        if(font === '' || color === ''){\n            setMiniModal(true);\n            setMiniModalText('위의 보기 중 한가지를 선택해 주세요.');\n            return\n        }else{\n\n            setCnum(cnum + 2);\n        }\n    }\n    \n    const nextAndSetDone = async e => {\n\n        const urlDatas = await dbService\n            .collection(\"saved-page\")\n            .where(\"urlId\", \"==\", urlId)\n            .get(); // uid를 creatorId로 줬었으니까.\n        \n        let urlData = urlDatas.docs.map(doc => {\n            return({...doc.data(), id:doc.id})\n        });\n\n        if(urlId === ''){\n            e.stopPropagation()\n            e.preventDefault()\n            setMiniModal(true);\n            setMiniModalText('URL을 입력해 주세요. 이후 페이지에서 수정가능합니다.');\n            return\n        }else if(urlData.length > 0){\n            e.stopPropagation()\n            e.preventDefault()\n            setMiniModal(true);\n            setMiniModalText('이미 존재하는 url입니다. 다른 url을 사용해 주세요.');\n            return;\n        }else{\n            setStart(true);\n            setMiniModal(true);\n            setMiniModalText('사용 가능한 url입니다.');\n            const defaults = await dbService\n                .collection(\"saved-page\")\n                .where(\"urlId\", \"==\", type)\n                .get(); // ui\n\n            let defaultTemplate = defaults.docs.map(doc => {\n                return({...doc.data(), id:doc.id})\n            });\n\n            let opacityColor = color + '';\n    \n            defaultTemplate[0].navi.title = ' '+title+' ';\n            defaultTemplate[0].navi.backgroundColor = color+'30';\n            defaultTemplate[0].setting.title = title;\n            defaultTemplate[0].setting.cta.backgroundColor = color;\n            defaultTemplate[0].setting.color = opacityColor;\n            defaultTemplate[0].setting.fta.backgroundColor = color;\n            defaultTemplate[0].setting.ghost.borderColor = color;\n            defaultTemplate[0].setting.ghost.color = color;\n            defaultTemplate[0].setting.urlId = urlId;\n            defaultTemplate[0].setting.font = font;\n            //defaultTemplate[0].setting.smallFont = smallFont;\n            defaultTemplate[0].foot.copyright.text = title;\n\n            defaultTemplate[0].contents = defaultTemplate[0].contents.map((doc, index) => {\n                if(doc.sectionTypeName === 'HeroSection' || doc.sectionTypeName === 'DetailSection' || doc.sectionTypeName === 'ApplySection' ){\n                    doc.backgroundColor = opacityColor+'30';\n                }\n                /*if(index === 1 && doc.sectionTypeName === 'TextSection' ){\n                    doc.backgroundColor = opacityColor;\n                }*/\n                return doc;\n            })\n\n            if(defaultTemplate){\n                setContents(defaultTemplate[0].contents);\n                setNavi(defaultTemplate[0].navi);\n                setFoot(defaultTemplate[0].foot);\n                setSetting(defaultTemplate[0].setting);\n            }\n            \n            const body = {\n                type: type,\n                name: navi.title,\n                font: font,\n                color:color\n            }\n\n            const done = await dbService.collection('after-questions').add(body);\n\n            if(JSON.stringify([defaultTemplate[0].contents, defaultTemplate[0].navi, defaultTemplate[0].foot, defaultTemplate[0].setting, false, '']).length > 48000){\n                // 임시 방편으로 큰 데이터는 건너뛰도록 조치.\n                handleClose()\n            }else{\n                localStorage.setItem('temp', JSON.stringify([defaultTemplate[0].contents, defaultTemplate[0].navi, defaultTemplate[0].foot, defaultTemplate[0].setting, false, '']));\n                handleClose()\n            }\n        }\n    }\n\n    const ModalBox = (props) => {\n        return(\n            <div className=\"modal-flex-column\" style={{paddingTop:`${props.small ? '80px' : '50px'}`}}>\n                <div className=\"modal-title\">\n                    {props.title}\n                </div>\n                <div className=\"modal-main-card\">\n                    {props.children}\n                </div>\n            </div>\n        )\n    }\n\n    const isNotNumber = (v) => {\n        const regExp = /[a-z0-9]/g; \n        return regExp.test(v);\n    }\n\n    //추가\n    const [makeModal, setMakeModal] = useState(false)\n    const [url, setUrl] = useState('')\n\n    const ExampleCardInTemplate = ({img, title, url}) => {\n\n        return(\n            <div className=\"excard uphover2\">\n                <div className=\"back-image-fit excard-image\"\n                    style={{backgroundImage:`url(${img})`}}>\n                    <div className=\"excard-black\">\n                        {\n                            url.length > 1 && \n                            <div className=\"section-add__button\" style={{width:'130px', fontSize:'14px'}} onClick={() => {\n                                if(isMobile){\n                                    alert(\"죄송합니다. 현재 제작은 PC 환경에서만 가능합니다!\")\n                                }else{\n                                    setUrl(url)\n                                    setMakeModal(true);\n                                }\n                                }}>\n                                템플릿 사용하기\n                            </div>\n                        }\n                        <div className=\"excard-button-2\" onClick={()=>{\n                            window.open(\n                                    'https://surfee.co.kr/' + url,\n                                    '_blank' // <- This is what makes it open in a new window.\n                                );\n                            }}>\n                            페이지 보기\n                        </div>\n                    </div>\n                </div>\n                <div className=\"excard-title\">\n                    {title}\n                </div>\n            </div>\n        )\n    }\n\n    const FontSelect = () => {\n        return(\n        <div className=\"edit-element\" style={{flexDirection:'row', justifyContent: 'center'}}>\n            <div className=\"right\" style={{alignContent:'center'}}>\n            <Menu>\n                <MenuButton className=\"font-button opacity-hover\" style={{fontFamily:`${setting.font}`, width:'280px'}}>\n                    {\n                        setting.font === '' ? \n                        <>\n                        폰트를 선택해주세요.\n                        </>\n                        :\n                        <>\n                        {fontOptions.filter(doc => doc.value === setting.font)[0].label}\n                        </>\n                    }\n                    <ChevronDown size=\"15\" style={{position:'absolute', right:'12px'}}/>\n                </MenuButton>\n                <MenuList>\n\n                <div style={{height:'250px'}}>\n                    <OverflowScrolling className='overflow-scrolling2'>\n                    {fontOptions.map((item, index) => {\n                        return(\n                            <MenuItem className={item.value === setting.font ? 'select-hover clicked' : 'select-hover'} onClick={(e) => {setSetting(produce(setting, draft => {\n                                draft.font = item.value\n                                setFont(item.value);\n                            }))}} style={{fontFamily: `${item.value}`, width:'250px'}}>\n                                <div className=\"left\" style={{width:'70%'}}>\n                                    {item.label}\n                                </div>\n                                {\n                                    item.value === setting.font && \n                                    <div className=\"right\">\n                                        <Check size=\"20\"/>\n                                    </div>\n                                }\n                            </MenuItem>\n                        )\n                    })}\n                    </OverflowScrolling>\n                </div>\n                </MenuList>\n            </Menu>\n            </div>\n        </div>\n        )\n    }\n    const ColorSelect = () => {\n        return(\n        <div className=\"edit-element\" style={{flexDirection:'row', justifyContent: 'center'}}>\n            <div className=\"right\" style={{alignContent:'center'}}>\n            <Menu>\n                <MenuButton className=\"font-button opacity-hover\" style={{fontFamily:`Noto Sans KR`, fontWeight: '700', color:`${setting.color}`, width:'250px'}}>\n                    {colorList.filter(doc => doc.color === setting.color)[0].name}\n                    <ChevronDown size=\"15\" style={{position:'absolute', right:'12px'}}/>\n                </MenuButton>\n                <MenuList>\n\n                <div style={{height:'250px'}}>\n                    <OverflowScrolling className='overflow-scrolling2'>\n                    {colorList.map((item, index) => {\n                        return(\n                            <MenuItem className={item.color === setting.color ? 'select-hover clicked' : 'select-hover'} onClick={(e) => {setSetting(produce(setting, draft => {\n                                draft.color = item.color\n                                setColor(item.color);\n                            }))}} style={{fontFamily:`${item.font}`, color: `${item.color}`, width:'250px'}}>\n                                <div style={{backgroundColor:`${item.color}`, width:'25px', height:'25px', borderRadius:'5px'}}>\n                                                    \n                                </div>\n                                <div className=\"left\" style={{width:'50%'}}>\n                                    {item.color} \n                                </div>\n\n                                {\n                                    item.color === setting.color && \n                                    <div className=\"right\">\n                                        <Check size=\"20\"/>\n                                    </div>\n                                }\n                            </MenuItem>\n                        )\n                    })}\n                    </OverflowScrolling>\n                </div>\n                </MenuList>\n            </Menu>\n            </div>\n        </div>\n        )\n    }\n\n    const content = () => {\n        switch(cnum){\n            case 1:\n                return(\n                    <ModalBox \n                        title={<><div className=\"modal-title-test\" style={{marginTop: '35px'}}>\n                            안녕하세요✋ <span style={{color:'#6C63FF'}}>Surfee</span>에 오신 것을 환영합니다.</div></>}>\n                        <div className=\"modal-subtitle-test\" style={{marginBottom: '0.5%'}}>\n                            조금 더 쉽게 사용하실 수 있도록 돕고자 간단한 질문들로 시작하고있어요.<br/><br/>\n                            제작방법을 선택해주세요 🚀\n                        </div>\n                        <>\n                            <div className=\"modal-button-container\">\n                                <div className=\"question-button1\" onClick={e => setCnum(cnum + 1)} style={{flexDirection: 'column', marginRight: '2%', width:'280px', height:'280px', textAlign:'center',  padding:'30px 20px'}}>\n                                    <div style={{color: '#6c63ff', fontSize:'1.2em', fontWeight:'700'}}>\n                                    기본 템플릿<br/>\n                                    이용하기<br/>\n                                    🖌</div>\n                                    <div style={{marginTop: '15%', fontSize: '13px', fontWeight:'400'}}>\n                                    기본으로 제공되는 템플릿을 활용하여<br/> 개성있는 나만의 페이지를 제작해보세요!\n                                    </div>\n                                </div>\n                                <div className=\"question-button2\" onClick={e => nextAndSetDesign()} style={{color: 'white', flexDirection: 'column', marginRight: '2%', width:'280px', height:'280px', textAlign:'center',  padding:'30px 20px'}}>\n                                    <div style={{fontSize:'1.2em', fontWeight:'700'}}>\n                                    디자인 템플릿<br/>\n                                    이용하기<br/>\n                                    ️💡</div>\n                                    <div style={{marginTop: '15%', fontSize: '13px', fontWeight:'400'}}>\n                                    다양한 디자인 템플릿을 이용하여<br/> 완성도 높은 나만의 페이지를<br/> 제작해보세요!\n                                    </div>\n                                </div>\n                            </div>\n                        </>\n                    </ModalBox>\n                )\n                break;\n\n            case 2:\n                return(\n                    <div className=\"modal-flex-column\" style={{paddingTop:'80px', backgroundImage:`url(${backback})`}}>\n                        <div className=\"modal-title-test\" style={{marginBottom: '3%'}}>\n                            코딩없이 만드는<br/>\n                            나만의 페이지 <span style={{color:'#6C63FF'}}>Surfee</span>\n                        </div>\n                        <div className=\"modal-subtitle-test\" style={{marginBottom: '0.5%'}}>\n                            페이지의 이름✏️을 지어볼까요?\n                        </div>\n                        \n                        <div className=\"modal-main-card\">\n                        <form onSubmit={() => setCnum(cnum + 1)} style={{display:'flex', flexDirection:'column', justifyContent: 'center', alignItems: 'center'}}>\n                            <Input \n                                className=\"input-holder input-focus\" \n                                placeholder=\"페이지 이름이 로고 자리에 들어갑니다.\" \n                                value={title} \n                                onChange={e => setTitle(e.currentTarget.value)} />\n                        </form>\n                        <div className=\"modal-mini-text\">\n                            수정 가능하니 편하게 정해주세요 :)\n                        </div>\n                        <div className=\"modal-button-container\" style={{flexDirection:'column'}}>\n                            \n                            <div className=\"modal-move-button\"\n                                onSubmit={e => setCnum(cnum + 1)} style={{visibility:`${title.length > 0 ? 'visible' : 'hidden'}`, display:'flex', marginTop:'2%'}}\n                                onClick={e => setCnum(cnum + 1)}>다음</div>  \n                            </div>\n                            <div className=\"modal-move-button-back\" onClick={e => setCnum(cnum - 1)}>이전</div>\n                        </div>\n                    </div>\n                )\n                break;\n\n            case 3:\n                return(\n                    <OverflowScrolling className=\"scroll\" style={{paddingBottom:'50px'}}>\n                    <ModalBox title={<> <div className=\"modal-title-test\">기본템플릿의<br/>글씨체와 메인색상을 정해볼까요?</div> </>}>\n                        <div className=\"modal-subtitle-test\" style={{marginBottom: '3%'}}>\n                        이곳에서 선택한 글씨체와 색상은 <br/> 제작화면에서 수정가능하니 편하게 선택해주세요😊\n                        </div>\n                        <div className=\"modal-column\" style={{flexDirection: 'row'}}>\n                            <div className=\"modal-column\" style={{float: 'left', width: '30%'}}>\n                                <div className=\"modal-fc-select-title\">\n                                    글씨체\n                                </div>\n                                <div className=\"modal-fc-select-title\" style={{fontSize:'12px', color:'rgba(0,0,0,0.7)'}}>\n                                    전체 폰트를 로딩하는데 약간의 시간이 소요될 수 있습니다.\n                                </div>\n                                {/*추가*/}\n                            \n              \n                                    <ChakraProvider>\n                                        {FontSelect()}\n                                    </ChakraProvider>\n\n                                <div style={{marginTop: '2%', fontSize: '12px',  color:'white'}}>\n                                    메인 색상을 지정해두시면, <br/>나중에 글자색 또는 배경색을 수정하실 때 <br/> 해당 색상으로 편하게 변경하실 수 있어요!\n                                </div>\n                                    \n                            </div>\n                            <div className=\"modal-column\" style={{float: 'left', width: '30%'}}>\n                                {/*추가*/}   \n                                <div className=\"modal-fc-select-title\">\n                                    메인 색상\n                                </div>\n                                {/*추가*/}\n                            \n              \n                                    <ChakraProvider>\n                                        {ColorSelect()}\n                                    </ChakraProvider>\n\n                                <div style={{marginTop: '2%', fontSize: '12px'}}>\n                                    메인 색상을 지정해두시면, <br/>나중에 글자색 또는 배경색을 수정하실 때 <br/> 해당 색상으로 편하게 변경하실 수 있어요!\n                                </div>\n                    \n                                {/*추가*/}  \n                            </div>    \n                        </div>\n                        <div className=\"modal-button-container\">\n                            <div className=\"modal-move-button-back\" onClick={e => setCnum(cnum - 1)}>이전</div>\n                            <div className=\"modal-move-button\" onClick={() => nextAndSetFont2()}>다음</div>\n                        </div>\n                    </ModalBox>\n                    </OverflowScrolling>\n                )\n\n            case 4:\n                return(\n                    <ModalBox\n                    title={<>\n                        <div className=\"modal-title-test\" >디자인 템플릿</div>\n                    </>}>\n                        <div className=\"modal-subtitle-test\" style={{marginBottom: '5%'}}>\n                        마음에 드는 템플릿을 골라서 더 쉽게 시작해보세요😊\n                        </div>\n                        <>\n                        <div className=\"modal-template-title\" style={{width:'84%', marginBottom: '1%'}}>\n                            🎉<span className=\"modal-template-underline\" style={{fontSize:'32px'}}>이벤트/마케팅</span>\n                        </div>\n                        <div style={{fontSize: '28px'}}>\n                            <div className=\"main-page-section1\" style={{paddingTop: '0%', flexDirection:'column'}}>\n                                <TemplatesList exList={marketingExs} setUrl={setUrl} setMakeModal={setMakeModal} />\n                            </div>\n                        </div>\n                        <div className=\"modal-template-title\" style={{width:'84%', marginBottom: '1%', marginTop: '4%'}}>\n                        📢<span className=\"modal-template-underline\" style={{fontSize:'32px'}}>1인 사업가</span>\n                        </div>\n                        <div style={{fontSize: '28px'}}>\n                            <div className=\"main-page-section1\" style={{paddingTop: '0%', flexDirection:'column'}}>\n                                <TemplatesList exList={singleExs} setUrl={setUrl} setMakeModal={setMakeModal} />\n                            </div>\n                        </div>\n                        <div className=\"modal-template-title\" style={{width:'84%', marginBottom: '1%', marginTop: '4%'}}>\n                        🔎<span className=\"modal-template-underline\" style={{fontSize:'32px'}}>예비 창업가</span>\n                        </div>\n                        <div style={{fontSize: '28px'}}>\n                            <div className=\"main-page-section1\" style={{paddingTop: '0%', flexDirection:'column'}}>\n                                <TemplatesList exList={startupExs} setUrl={setUrl} setMakeModal={setMakeModal} />\n                            </div>\n                        </div>\n                        <div className=\"modal-template-title\" style={{width:'84%', marginBottom: '1%', marginTop: '4%'}}>\n                        😎<span className=\"modal-template-underline\" style={{fontSize:'32px'}}>퍼스널 브랜딩</span>\n                        </div>\n                        <div style={{fontSize: '28px'}}>\n                            <div className=\"main-page-section1\" style={{paddingTop: '0%', flexDirection:'column'}}>\n                                <TemplatesList exList={personalExs} setUrl={setUrl} setMakeModal={setMakeModal} />\n                            </div>\n                        </div>\n                        <div className=\"modal-template-title\" style={{width:'84%', marginBottom: '1%', marginTop: '4%'}}>\n                        😎<span className=\"modal-template-underline\" style={{fontSize:'32px'}}>디자인</span>\n                        </div>\n                        <div style={{fontSize: '28px'}}>\n                            <div className=\"main-page-section1\" style={{paddingTop: '0%', flexDirection:'column'}}>\n                                <TemplatesList exList={exs} setUrl={setUrl} setMakeModal={setMakeModal} />\n                            </div>\n                        </div>\n                        <TemplateModal url={url} open={makeModal} setOpen={setMakeModal} />\n                        <div className=\"modal-button-container\">\n                            <div className=\"modal-move-button-back\" style={{marginBottom:'5%'}} onClick={e => setCnum(cnum - 3)}>돌아가기</div>\n                        </div>\n                        </>\n                    </ModalBox>\n                )\n                break;\n\n            case 5:\n                return(\n                    <div className=\"modal-flex-column\" style={{paddingTop:'80px'}}>\n                        <div className=\"modal-title-test\">\n                            마지막으로, <span style={{color:'#6C63FF'}}>{title}</span>의 <br/>\n                            페이지 주소를 설정해주세요!                            \n                        </div>\n                        <div className=\"modal-main-card\">\n                            <div className=\"url-input-box\" style={{marginTop: '2.5%'}}>\n                                <div className=\"modal-title\" style={{fontSize:'23px'}}>\n                                    https://surfee.co.kr/<input className=\"input-holder input-focus\" style={{width: '25vw', padding:'0px 15px', marginLeft: '10px'}} placeholder=\"영문 소문자와 숫자만 사용 가능합니다.\" value={urlId} \n                                    onChange={e => {\n                                        setStart(false);\n                                        onUrlChange(e);\n                                    }} />\n                                </div>\n                                <Button colorScheme='#6c63ff' className=\"dup-button\" onClick={nextAndSetDone}>\n                                    중복 확인\n                                </Button>\n                            </div>\n                            {alarm ? (\n                                <div className=\"text-alarm\">\n                                    ⚠ 영문 소문자와 숫자만 사용가능합니다.\n                                </div>\n                            ):(<div className=\"text-alarm\"> </div>)}\n                            <div style={{color:'gray', paddingLeft:'0%',marginTop:'1%', fontSize:'14px', textAlign:'center', fontFamily:'Pretendard-Regular'}}>\n                                개인 도메인 연결은 다음 버전에 업데이트할 예정입니다.\n                                수정 가능하니 편하게 설정해 주세요 :)\n                            </div>\n                            <div className=\"modal-button-container\">\n                                <div className=\"modal-move-button-back\" onClick={e => setCnum(cnum - 2)}>이전</div>\n                                {\n                                    start ? \n                                    <Link to={{\n                                        pathname: \"/make\", \n                                        state: {\n                                            now: true,\n                                            isPhone: device === 'mobile',\n                                        }\n                                    }} className=\"modal-move-button\">시작하기</Link> \n                                    : \n                                    <div className=\"modal-move-button-back\">시작하기</div>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                )\n                break;\n        }\n    }\n\n    return (\n        <Div>\n            <div className=\"progress-bar__container\">\n                <div onClick={() => history.go(-1)} className=\"arrow-back\">\n                    ←\n                </div> \n                {progressList.map((item, index) => {\n                    let backColor = 'rgba(100,100,100,0)'\n                    let fontColor = '#C4C4C4'\n                    let fontColor2 = 'rgba(0,0,0,0.6)'\n\n                    if(item.num < cnum){\n                        backColor = 'linear-gradient(180deg, #9281FF 0%, #6C63FF 100%)'\n                        fontColor = \"white\"\n                        fontColor2 = 'black'\n                    }else if(item.num === cnum){\n                        backColor = 'white'\n                        fontColor = \"#6C63FF\"\n                        fontColor2 = \"#6C63FF\"\n                    }\n\n                    return(\n                        <span style={{display:'flex', flexDirection:'column', margin:'3%', alignItems: 'center', justifyContent: 'center'}}>\n                            <span className=\"list-component\" style={{background:`${backColor}`, color:`${fontColor}`}}>{item.num}</span>\n                        </span>\n                    )\n                })}\n            </div>\n            <ChakraProvider className=\"center-column\">\n                {content()}\n            </ChakraProvider>\n            <MiniModal open={miniModal} setOpen={setMiniModal} text={miniModalText} />\n        </Div>\n    )\n}\n\nexport default FirstQuestions\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/tools/ChannelTalk.js",[],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/tools/MiniModal.js",["847","848"],"import React, {useEffect, useState} from 'react'\nimport styled from 'styled-components'\nimport { Close } from '@styled-icons/evaicons-solid';\nimport './MiniModal.css'\n\nconst Alert = styled('div')`\n    border-radius:14px;\n    background-color:black;\n    color:white;\n    padding:10px 18px;\n    position: fixed;\n    top:20px;\n    z-index:23000;\n    left:45vw;\n`;\n\nconst Copy = styled('div')`\n    border-radius:14px;\n    background-color:white;\n    color:black;\n    padding:10px 18px;\n    position: fixed;\n    top:20px;\n    z-index:23000;\n    left:45vw;\n    box-shadow:2px 4px 14px #e2e2e2;\n`;\n\nconst Deploy = styled('div')`\n    background: #FFFFFF;\n    margin-top: 10px;\n    box-shadow: 2px 4px 20px #E5E5E5;\n    border-radius: 20px;\n    color:black;\n    padding:10px 18px;\n    position: fixed;\n    top:20px;\n    z-index:23000;\n    left:30vw;\n    box-shadow:2px 4px 14px #e2e2e2;\n    text-align: center;\n`\n\nfunction MiniModal({open, setOpen, copy, deploy, history, text, long}) {\n\n    useEffect(() => {\n        if(open && !deploy){\n            if(long){\n                setTimeout(() => {\n                    setOpen(false);\n                }, 4100)\n            }else{\n                setTimeout(() => {\n                    setOpen(false);\n                }, 2100)\n            }\n        }\n    })\n\n    if(open){\n        if(copy){\n            return (\n                <Copy data-aos=\"zoom-in-down\" data-aos-duration=\"9000\" >\n                    🔗 링크가 복사되었습니다.\n                </Copy>\n            )\n        }\n        else if(deploy){\n            return(\n                <Deploy>\n                    <div className=\"modal-big-title\">\n                        첫 배포가 완료되었습니다! \n                    </div>\n                    <div className=\"modal-big-title sub\">\n                        페이지 수정을 원하시면 '편집하기'를 눌러 편집 후 '저장하기'를 누르고, <br />\n                        관리 페이지에서 '배포하기'를 다시 눌러주세요. <br />\n                        저장만 한 경우 수정사항이 반영되지 않습니다. <br />\n                    </div>\n                    <div className=\"check_button\" onClick={() => {\n                    setOpen(false);\n                    history.go();\n                    }}>확인</div>\n                </Deploy>\n            )\n        }\n        else if(text){\n            return (\n                <Alert data-aos=\"zoom-in-down\" data-aos-duration=\"9000\" >\n                    {text}\n                </Alert>\n            )\n        } else{\n            return (\n                <Alert data-aos=\"zoom-in-down\" data-aos-duration=\"9000\" >\n                    💾 저장되었습니다.\n                </Alert>\n            )\n        }\n    }\n    else{\n        return(<></>)\n    }\n}\n\nexport default MiniModal\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/NavAndFooter/Footer.js",["849","850","851","852","853"],"import React from 'react'\nimport {Instagram} from '@styled-icons/boxicons-logos'\nimport {TelephoneFill} from '@styled-icons/bootstrap'\nimport {Mail} from '@styled-icons/entypo'\nimport {isMobile} from 'react-device-detect'\nimport './Footer.css'\n \nfunction Footer() {\n    return (\n        <div className=\"footer\">\n            <div className=\"footer-more\">\n              <div className=\"footer-half\" style={{flexDirection:'column'}}>\n                <div className=\"footer-el\">\n                  <a href='https://tally.so/r/wMZ4Yn' target=\"_blank\" className=\"insta\" style={{fontSize:'30px', fontWeight:'700', color:'rgb(30,30,30)'}}>Surfee</a>\n                </div>\n                <div className=\"footer-el\">\n                  <TelephoneFill size=\"16\" />&nbsp;&nbsp;&nbsp; 010-4690-5086\n                </div>\n                <div className=\"footer-el\">\n                  <Mail size=\"20\" />&nbsp;&nbsp; surfee.business@gmail.com \n                </div>\n              </div>\n              <div className=\"footer-half\" style={{justifyContent:`${isMobile ? 'start' : 'flex-end'}`}}>\n                <div className=\"footer-el\">\n                  <a href='https://tally.so/r/wMZ4Yn' target=\"_blank\" className=\"insta\">문의하기</a>\n                </div>\n                <div className=\"footer-el\">\n                  <div className=\"insta\" style={{cursor:'pointer'}} onClick={() => {\n                    window.open(\n                      'https://www.instagram.com/surfee.official/'\n                    )\n                  }}>인스타그램</div>\n                </div>\n              </div>\n            </div>\n            <div className=\"footer-bottom\" style={{borderTop:'1px solid rgb(180,180,180)'}}>\n              <div className=\"footer-half\">\n                <div className=\"footer-el\">\n                  © {new Date().getFullYear()} Surfee, All Rights Reserved\n                </div>\n              </div>\n              <div className=\"footer-half\" style={{justifyContent:`${isMobile ? 'start' : 'flex-end'}`}}>\n                <div className=\"footer-el\">\n                  <a href=\"https://striped-cabin-4bf.notion.site/Surfee-be94494cf8c248e7b03a84e4c3966e1e\" target=\"_blank\" className=\"footer-text-click\">\n                    서비스 이용약관\n                  </a>\n                </div>\n                <div className=\"footer-el\">\n                  <a href=\"https://striped-cabin-4bf.notion.site/Surfee-be94494cf8c248e7b03a84e4c3966e1e\" target=\"_blank\" className=\"footer-text-click\">\n                    개인정보 처리방침\n                  </a>\n                </div>\n              </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Footer\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/NavAndFooter/NavBarV2.js",["854","855"],"import React, {useState, useEffect} from 'react'\nimport './NavBarV2.css'\nimport {Link} from 'react-router-dom';\nimport {authService} from '../../tools/fbase'\nimport LoginModal from '../../components/Login/LoginModal'\nimport RegisterModal from '../../components/Login/RegisterModal'\nimport Profile from '../../components/NavAndFooter/Profile'\nimport {isMobile} from 'react-device-detect'\n\nfunction NavBarV2({history, scrollPosition, isLoggedIn, buttonOpen}) {\n    const [loginOpen, setLoginOpen] = useState(false)\n    const [registerOpen, setRegisterOpen] = useState(false)\n\n    return (\n        <div style={{display: 'flex', flexDirection: 'column', alignItems: 'center', width:'100%'}}>\n            {\n                isMobile ? <>\n                <div className=\"nav-bar-container-v2\">\n                    <div className=\"nav-bar-left-v2\" style={{width:'100%'}}>\n                        <Link to=\"/\" className=\"nav-bar-title-v2\" style={{cursor:'pointer', color:'#6a63f7'}}>\n                            Surfee\n                        </Link>\n                        <Link to=\"/surfeeexamples\" className=\"nav-left-text\" style={{marginLeft:'4vw'}}>\n                            템플릿\n                        </Link>\n                        <div className=\"nav-left-text\" style={{marginLeft:'1vw'}} onClick={() => {\n                            window.open(\n                                'https://striped-cabin-4bf.notion.site/Surfee-903d24edba264a9e9a8245803f11db11',\n                                '_blank' // <- This is what makes it open in a new window.\n                            );\n                        }}>\n                            Surfee 소개\n                        </div>\n                        <Link to=\"/surfeecontest\" className=\"nav-left-text\" style={{marginLeft:'1vw'}}>\n                            콘테스트\n                        </Link>\n                    </div>\n                </div>\n                \n                </> : <>\n                    <div className=\"nav-bar-container-v2\">\n                        <div className=\"nav-bar-left-v2\">\n                            <Link to=\"/\" className=\"nav-bar-title-v2\" style={{cursor:'pointer', color:'#6a63f7'}}>\n                                Surfee\n                            </Link>\n                            <Link to=\"/surfeeexamples\" className=\"nav-left-text\" style={{marginLeft:'4vw'}}>\n                                템플릿\n                            </Link>\n                            <div className=\"nav-left-text\" style={{marginLeft:'1vw'}} onClick={() => {\n                                window.open(\n                                    'https://striped-cabin-4bf.notion.site/Surfee-903d24edba264a9e9a8245803f11db11',\n                                    '_blank' // <- This is what makes it open in a new window.\n                                );\n                            }}>\n                                Surfee 소개\n                            </div>\n                            <Link to=\"/vote\" className=\"nav-left-text\" style={{marginLeft:'1vw'}}>\n                                신규 기능 투표\n                            </Link>\n                            <Link to=\"/surfeecontest\" className=\"nav-left-text\" style={{marginLeft:'1vw'}}>\n                                콘테스트\n                            </Link>\n                        </div>\n                        {\n                            !isMobile && \n                            <div className=\"nav-on-v2\">\n                                {isLoggedIn ? \n                                <>\n                                    {/* <span className=\"nav-left-text\" onClick={() => onLogout()}>\n                                        로그아웃\n                                    </span> */}\n                                    <Profile history={history} />\n                                </> \n                                : \n                                <>\n                                    <div className=\"nav-left-text\" onClick={() => setLoginOpen(!loginOpen)}>\n                                        로그인\n                                    </div>\n                                    <div className=\"nav-left-text\" onClick={() => setRegisterOpen(!registerOpen)}>\n                                        회원가입\n                                    </div>\n                                </>\n                                }\n                                {/* {\n                                buttonOpen &&  \n                                    <button className=\"nav-button-square\" onClick={() => window.scrollTo(0,document.body.scrollHeight)}>무료로 체험하기</button>\n                                } */}\n                            </div>\n                        }\n                    </div>\n                    <div style={{borderBottom: '2px solid black', width:`${(scrollPosition/window.innerHeight)*63}%`, position:'fixed', top:'58px', zIndex:'12'}}></div>\n                </>\n            }\n            <LoginModal open={loginOpen} setOpen={setLoginOpen} />\n            <RegisterModal open={registerOpen} setOpen={setRegisterOpen} history={history} loginOpen={loginOpen} setLoginOpen={setLoginOpen} />\n        </div>\n    )\n}\n\nexport default NavBarV2\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/UserLandingPage/UserContents.js",["856"],"import React, {useState} from 'react'\nimport UserSection from './UserSection'\nimport { isMobile } from 'react-device-detect'\n\nfunction UserContents({contents, setting}) {\n    const sectionsReturn = contents.map((item, index) => {\n        return(\n            <>\n            {\n                item.responsive.mobile && isMobile && \n                    <UserSection content={item} setting={setting}/>\n            }\n            {\n                item.responsive.pc && !isMobile && \n                    <UserSection content={item} setting={setting}/>\n            }\n            </>\n        )\n    })\n    \n    return (\n        <>\n            {sectionsReturn}\n        </>\n    )\n}\n\nexport default UserContents\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/UserLandingPage/UserFoot.js",["857"],"import React from 'react'\nimport { isMobile } from 'react-device-detect'\nimport {Youtube, Twitter, Instagram, FacebookSquare, LinkedinSquare} from '@styled-icons/boxicons-logos';\nimport {KakaoTalk} from '@styled-icons/remix-fill/KakaoTalk'\nimport { Notion } from '@styled-icons/simple-icons';\nimport TextareaAutosize from 'react-textarea-autosize';\n\nfunction UserFoot({foot, setting}) {\n\n    const returnLayout = {\n        flexDirection: `${foot.layout === 1 ? 'row' : foot.layout === 2 ? 'column-reverse' : foot.layout === 3 ? 'column' : 'column-reverse'}`,\n    }\n\n    const returnIcons = () => {\n        return(\n            <>\n        {foot.icon.facebook !== '' && \n                    <FacebookSquare color={foot.icon.color} className=\"footer-icon\" \n                        onClick={()=>{\n                            window.open(\n                                foot.icon.facebook,\n                                '_blank' // <- This is what makes it open in a new window.\n                            );\n                        }}\n                    />\n        }\n        {foot.icon.instagram !== '' && \n                    <Instagram size=\"30\" color={foot.icon.color} className=\"footer-icon\" \n                    onClick={()=>{\n                        window.open(\n                            foot.icon.instagram,\n                            '_blank' // <- This is what makes it open in a new window.\n                        );\n                    }}\n                    />\n        }\n        {foot.icon.twitter !== '' && \n                    <Twitter color={foot.icon.color} className=\"footer-icon\" \n                    onClick={()=>{\n                        window.open(\n                            foot.icon.twitter,\n                            '_blank' // <- This is what makes it open in a new window.\n                        );\n                    }}\n                    />\n        }\n         {foot.icon.kakaotalk !== '' && \n                    <KakaoTalk color={foot.icon.color} className=\"footer-icon\" \n                    onClick={()=>{\n                        window.open(\n                            foot.icon.kakaotalk,\n                            '_blank' // <- This is what makes it open in a new window.\n                        );\n                    }}\n                    />\n        }\n         {foot.icon.youtube !== '' && \n                    <Youtube color={foot.icon.color} className=\"footer-icon\" \n                    onClick={()=>{\n                        window.open(\n                            foot.icon.youtube,\n                            '_blank' // <- This is what makes it open in a new window.\n                        );\n                    }}\n                    />\n        }\n        {foot.icon.notion !== '' && \n                    <Notion size=\"30\" color={foot.icon.color} className=\"footer-icon\" \n                    onClick={()=>{\n                        window.open(\n                            foot.icon.notion,\n                            '_blank' // <- This is what makes it open in a new window.\n                        );\n                    }}\n                    />\n        }\n        {foot.icon.linkedIn !== '' && \n                    <LinkedinSquare color={foot.icon.color} className=\"footer-icon\" \n                    onClick={()=>{\n                        window.open(\n                            foot.icon.linkedIn,\n                            '_blank' // <- This is what makes it open in a new window.\n                        );\n                    }}\n                    />\n        }\n            </>\n        )\n    }\n\n    return (\n        <div className=\"make-footer\">\n            <footer className=\"make-footer__container\" \n            style={{backgroundColor:`${foot.backgroundColor}`, \n            padding:`${\n                isMobile ? foot.paddingTop/2.5 : foot.paddingTop}vh \n                ${isMobile ? '15px' : 'calc(14vw + 30px)'}\n                ${isMobile ? foot.paddingBottom/2.5 : foot.paddingBottom}vh \n                ${isMobile ? '15px' : 'calc(14vw + 30px)'}`\n            }}>\n                    <div className=\"footer-section\" style={{fontSize:'0.5em'}}>\n                    <div style={{display:'flex', ...returnLayout}} >\n                        {foot.text.use && \n                            <div \n                                className=\"text-no-input\"\n                                dangerouslySetInnerHTML={{__html:foot.text.text}}\n                                style={{\n                                        color: `${foot.text.color}`,\n                                        textAlign:`${foot.text.align}`,\n                                        backgroundColor: `${foot.backgroundColor}`,\n                                        resize:'none',\n                                        border:'none',\n                                    }}\n                                >\n                            </div>\n                            // <TextareaAutosize \n                            //     disabled \n                            //     className=\"text-no-input\"\n                            //     spellcheck=\"false\"   \n                            //     value = {foot.text.text}\n                            //     style={{\n                            //         fontFamily:`${setting.smallFont}`, \n                            //         color: `${foot.text.color}`,\n                            //         textAlign:`${foot.text.align}`,\n                            //         backgroundColor: `${foot.backgroundColor}`,\n                            //         resize:'none',\n                            //         border:'none',\n                            //         WebkitTextFillColor: `${foot.text.color}`,\n                            //         WebkitOpacity: 1,\n                            //     }}>\n                            // </TextareaAutosize>\n                        }\n                        {foot.icon.use && foot.layout === 1 && \n                            <div className=\"icon-box\" style={{\n                                flexDirection: 'column', justifyContent: 'center', marginLeft:'10%', width:'60%'}}>\n                            {returnIcons()}\n                            </div>\n                        }\n                        {foot.icon.use && foot.layout === 2 && \n                            <div className=\"icon-box\" style={{flexDirection: 'row', justifyContent: `${foot.text.align}`}}>\n                            {returnIcons()}\n                            </div>\n                        }\n                        {foot.icon.use && foot.layout === 3 && \n                            <div className=\"icon-box\" style={{flexDirection: 'row', justifyContent: `${foot.text.align}`}}>\n                            {returnIcons()}\n                            </div>\n                        }\n                    </div>\n                    {foot.copyright.use && \n                        <div \n                            className='copyright-box'\n                            style={{\n                                color:`${foot.text.color}`,\n                            }}>\n                            Copyright 2022 {foot.copyright.text}\n                        </div>\n                    }\n                </div>\n            </footer>\n        </div>\n    )\n}\n\nexport default UserFoot\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/UserLandingPage/UserNavBar.js",["858","859","860"],"import React from 'react'\nimport {dbService} from '../../tools/fbase'\nimport { isMobile } from 'react-device-detect'\nimport TextareaAutosize from '@mui/material/TextareaAutosize';\nimport AutosizeInput from 'react-input-autosize';\n\nfunction UserNavBar({setting, navi}) {\n\n    const CustomButton = (type) => { return (\n        <div className=\"cta-button-edit\" style={{\n            borderRadius:`${setting[type].borderRadius}px`,\n            backgroundColor:`${setting[type].backgroundColor}`,\n            boxShadow:`${setting[type].shadow ? '1px 2px 4px rgba(0,0,0,0.2)' : 'none'}`,\n            border:`${setting[type].border ? `1px solid ${setting[type].borderColor}` : 'none'}`,\n            textAlign: 'center',\n            fontFamily:`Pretendard-Regular`,\n            fontSize:'14px',\n        }} \n        onClick={() => {\n            moveToPage(type)\n            window.open(\n                navi.button[type].link,\n                '_blank' // <- This is what makes it open in a new window.\n              );\n            // window.location.href = navi.button.cta.link\n        }}>\n            <div style={{padding:'10px 15px'}}>\n                <div dangerouslySetInnerHTML={{__html:navi.button[type].text}}\n                style={{\n                    backgroundColor:`rgba(0,0,0,0)`, \n                    cursor:'pointer',\n                    border:'none',\n                    textAlign: 'center',\n                    fontFamily:`${setting.smallFont}`,\n                    color:`${setting[type].color}`\n                }}\n                />\n        {/* <AutosizeInput className=\"text-input-flex\" value={ navi.button[type].text } \n                inputStyle={{\n                    color:`${setting[type].color}`,\n                    cursor:'pointer',\n                    border:'none',\n                    textAlign: 'center',\n                    fontSize:'14px',\n                    fontFamily:`${setting.smallFont}`,\n                    borderRadius:`${setting[type].borderRadius}px`,  \n                    backgroundColor:`rgba(0,0,0,0)`, \n                    padding: `5px 8px`, \n                    WebkitTextFillColor: `${setting[type].color}`,\n                    WebkitOpacity: 1,\n                    }}\n                    disabled/> */}\n            </div>\n        </div>\n    )}\n\n    const moveToPage = async (button) => {\n        // 파이어베이스에 기록\n        await dbService.collection('datas').add({\n            urlId:setting.urlId,\n            type:'click',\n            button:button,\n            from:'내비게이션',\n            created:Date.now(),\n        })\n    }\n\n    return (\n        <div className=\"make-nav-container\" \n            style={{\n                paddingRight: `${isMobile ? '12px' : 'calc(14vw + 30px)'}`,\n                paddingLeft: `${isMobile ? '12px' : 'calc(14vw + 30px)'}`,\n                borderBottom:`${navi.bottomBorder.use ? `1px solid ${navi.bottomBorder.color}` : ''}`, \n                backgroundColor:`${navi.backgroundColor}`, \n                height:`${navi.height}px`, \n                position:`${navi.fixed ? 'relative' : 'fixed'}`\n            }} >\n            <>\n                <div className=\"make-nav-logoc\" style={{\n                    height:`${navi.height}px`, \n                    justifyContent:`${navi.logo.align === 'center' && navi.button.use && !isMobile ? 'right' : navi.logo.align}`,\n                    width: `${navi.logo.align === 'center' && navi.button.use && !isMobile ? '115%' : '100%'}`}}>\n                        {navi.logo.image.use &&  \n                            <img src={navi.logo.image.attachment} width={navi.logo.image.width} />\n                        }\n                        {navi.logo.text.use && \n                        <div style={{\n                                display: 'flex',\n                                zIndex: 5,\n                                color:`${navi.logo.text.color}`, \n                                fontFamily:`${setting.font}`,\n                                fontSize:`${isMobile ? '19px' : '24px'}`,\n                                resize:'none',\n                                padding: '0px',\n                                marginLeft:`${navi.logo.image.use ? '8px' : '0px'}`,\n                                marginRight: `${navi.logo.align === 'center' && navi.button.use ? '-8px' : navi.logo.align === 'center' ? '0px':'0px'}`,\n                                backgroundColor: 'transparent',\n                                WebkitTextFillColor: `${navi.logo.text.color}`,\n                                WebkitOpacity: 1\n                            }}>\n                            {navi.title}\n                        </div>\n                            // <AutosizeInput\n                            //     disabled\n                            //     name=\"text-no-input\"\n                            //     value={navi.title}\n                            //     placeholder=\"서비스명을 입력하세요\"\n                            //     inputStyle={{ \n                            //         // textAlign:`${navi.logo.align === 'center' && navi.button.use ? 'right' : navi.logo.align === 'center' ? 'center' : 'left'}`,\n                            //         display: 'flex',\n                            //         zIndex: 5,\n                            //         color:`${navi.logo.text.color}`, \n                            //         fontFamily:`${setting.font}`,\n                            //         fontSize:'25px',\n                            //         resize:'none',\n                            //         padding: '0px',\n                            //         marginLeft:`${navi.logo.image.use ? '8px' : '0px'}`,\n                            //         marginRight: `${navi.logo.align === 'center' && navi.button.use ? '-8px' : navi.logo.align === 'center' ? '0px':'0px'}`,\n                            //         backgroundColor: 'transparent',\n                            //         WebkitTextFillColor: `${navi.logo.text.color}`,\n                            //         WebkitOpacity: 1,\n                            //     }}\n                            // />\n                        }\n                </div>\n                {\n                navi.button.use && !isMobile &&\n                <div className=\"make-nav-buttonc\" style={{justifyContent:`${navi.button.align}`}}>\n                    { navi.button.cta.use && \n                        <>{CustomButton('cta')}</>\n                    }\n                    { navi.button.ghost.use && \n                        <>{CustomButton('ghost')}</>\n                    }\n                </div>\n                }\n            </>\n        </div>\n    )\n}\n\nexport default UserNavBar\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/UserLandingPage/UserSection.js",[],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/Landing/tools/AskLoginModal.js",["861","862","863"],"import React from 'react'\nimport { styled, Box } from '@mui/system';\nimport ModalUnstyled from '@mui/base/ModalUnstyled';\nimport { Close } from '@styled-icons/evaicons-solid';\nimport {Link} from 'react-router-dom'\nimport d1 from '../../../tools/img/main/3d1.webp'\nimport d2 from '../../../tools/img/main/3d2.webp'\nimport d3 from '../../../tools/img/main/3d3.png'\nimport './AskLoginModal.css'\n\nconst StyledModal = styled(ModalUnstyled)`\n  position: fixed;\n  z-index: 1300;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Backdrop = styled('div')`\n  z-index: -1;\n  position: fixed;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  left: 0;\n  background-color: rgba(0, 0, 0, 0.1);\n  -webkit-tap-highlight-color: transparent;\n`;\n\nconst style = {\n  width: 400,\n  height: 400,\n  bgcolor: 'rgba(255,255,255,1)',\n  borderRadius:'10px',\n  p: 2,\n  px: 4,\n  pb: 3,\n};\n\nfunction AskLoginModal({open, setOpen, SomeoneClickMoveToMake, setRegisterOpen}) {\n    return (\n        <div>\n            <StyledModal\n                aria-labelledby=\"unstyled-modal-title\"\n                aria-describedby=\"unstyled-modal-description\"\n                open={open}\n                onClose={() => setOpen(!open)}\n                BackdropComponent={Backdrop}>\n                <Box sx={style}>\n                <div className=\"ask-modal__inner\">\n                    <div className=\"modal-top__title\">\n                        <div className=\"login-title\" style={{width:\"95%\"}}>\n                            로그인\n                        </div>\n                        <div style={{width:\"5%\", cursor:\"pointer\"}} onClick={() => setOpen(false)}>\n                            <Close size=\"30\" />\n                        </div>\n                    </div>\n                    <div className=\"modal-body\">\n                        로그인 하시면 만들던 페이지를 나중에 <br/>이어서 만들 수 있습니다.<br/><br/>\n                        로그인 하시겠습니까?\n                    </div>\n                    <div className=\"center-row\" style={{height:'30%', marginTop:'40px'}}>\n                        <button className=\"ask-modal-button uphover\" onClick={() => {setRegisterOpen(true); setOpen(false)}}>\n                            <img src={d1} width={140} /> \n                            <div>\n                                네 <br/>( 로그인/회원가입 하러 가기 ) \n                            </div>\n                        </button>\n                        <Link to={{\n                            pathname:`/questions`,\n                            state:{\n                                newMake:true,\n                            }}}  \n                            className=\"ask-modal-button button-second uphover\" onClick={() => SomeoneClickMoveToMake()}>\n                            <img src={d2} width={140} /> \n                            <div>\n                                오늘은 구경만 할게요 <br/>( 비회원으로 이용하기 )\n                            </div>\n                        </Link>\n                    </div>\n                </div>\n                </Box>\n            </StyledModal>\n        </div>\n    )\n}\n\nexport default AskLoginModal\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Login/RegisterModal.js",["864","865","866","867","868","869","870","871"],"import React, {useState, useContext} from 'react'\nimport { styled, Box } from '@mui/system';\nimport ModalUnstyled from '@mui/base/ModalUnstyled';\nimport { Close } from '@styled-icons/evaicons-solid';\nimport {Link} from 'react-router-dom'\nimport { authService } from '../../tools/fbase'\nimport { firebaseInstance } from '../../tools/fbase'\nimport { dbService } from '../../tools/fbase'\nimport { Input } from 'antd';\nimport googlelogo from '../../tools/img/googlelogo.png'\nimport {Check} from '@styled-icons/bootstrap'\nimport LoginModal from './LoginModal'\nimport {Infos} from './LoginModal'\nimport './LoginModal.css'\n\nconst StyledModal = styled(ModalUnstyled)`\n  position: fixed;\n  z-index: 1300;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Backdrop = styled('div')`\n  z-index: -1;\n  position: fixed;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  left: 0;\n  background-color: rgba(0, 0, 0, 0.1);\n  -webkit-tap-highlight-color: transparent;\n`;\n\nconst style = {\n  width: 400,\n  height: 550,\n  bgcolor: 'rgba(255,255,255,1)',\n  borderRadius:'10px',\n  p: 2,\n  px: 4,\n  pb: 3,\n};\n\nfunction RegisterModal({open, setOpen, history, loginButton}) {\n    const [id, setId] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [passwordCheck, setPasswordCheck] = useState(\"\");\n    const [loginOpen, setLoginOpen] = useState(false);\n\n    const socialLogin = async (e) => {\n        const { \n            target : { name }, \n        } = e;\n        let provider;\n        // if (name === \"googleLogin\"){\n        provider = new firebaseInstance.auth.GoogleAuthProvider();\n        // }else{\n        //     console.log(\"이건 뜨면 안되는 메세지.\");\n        // }\n\n        const data = await authService.signInWithPopup(provider);\n        await checkRegister(data.user.multiFactor.user.email);\n        setOpen(false)\n    }\n\n    const submit = async (e) => {\n        var data = '';\n        e.preventDefault();\n        await authService.createUserWithEmailAndPassword(id , password)\n        .then(async (userCredential)=>{\n            // send verification mail.\n            await userCredential.user.sendEmailVerification();\n            authService.signOut();\n            alert(\"계정 인증용 이메일을 발송했습니다.\");\n            return userCredential;\n        })\n        .catch( err => {\n            if(err.code === \"auth/email-already-in-use\"){\n                alert(\"이미 존재하는 아이디입니다. 로그인 해 주세요.\");\n                setOpen(false)\n                setLoginOpen(true)\n            }else if(err.code === \"auth/invalid-email\"){\n                alert(\"이메일 양식에 맞게 작성해 주세요.\");\n            }else{\n                alert(\"옳바르지 않은 회원가입 시도입니다.\");\n            }\n            return;\n        });\n        setOpen(false)\n        history.push('/');\n        history.go();\n    }\n\n    const checkRegister = async (email) => {\n        const usersCollections = await dbService\n            .collection(\"users\")\n            .where(\"email\", \"==\", email)\n            .get();\n        \n        const usersExist = usersCollections.docs.map(doc => {\n            return({...doc.data(), id: doc.id})\n        })\n\n        if(usersExist.length === 0){\n            // 구글 아이디로 로그인했는데 회원가입에 정보가 없을 때\n            console.log(\"회원가입 정보를 받습니다.\");\n        }\n    }\n\n    return (\n        <>\n            <StyledModal\n                aria-labelledby=\"unstyled-modal-title\"\n                aria-describedby=\"unstyled-modal-description\"\n                open={open}\n                onClose={() => setOpen(!open)}\n                BackdropComponent={Backdrop}>\n            <Box sx={style}>\n                <div className=\"login-modal__inner\">\n                    <div className=\"modal-top__title\">\n                        <div className=\"login-title\" style={{width:\"95%\"}}>\n                            회원가입\n                        </div>\n                        <div style={{width:\"5%\", cursor:\"pointer\"}} onClick={() => setOpen(false)}>\n                            <Close size=\"30\" />\n                        </div>\n                    </div>\n                    <button className=\"google-login-button opacity-hover\" name=\"googleLogin\" onClick={e => socialLogin(e)} style={{marginTop:'2%'}}>\n                        <img src={googlelogo} width={20}/>\n                        <span style={{marginLeft:'5%'}}>구글아이디로 3초만에 가입하기</span>\n                    </button>\n                    <div style={{fontSize:'12px', color:'rgba(150,150,150,1)', marginTop:'8px'}}>\n                        위 버튼을 클릭하면 <a href=\"https://striped-cabin-4bf.notion.site/Surfee-be94494cf8c248e7b03a84e4c3966e1e\" target=\"_blank\">약관</a>에 동의한 것으로 간주하고<br/> 자동으로 회원가입/로그인이 진행됩니다.\n                    </div>\n                    <form onSubmit={e => submit(e)}>\n                        <div className=\"login-label\">\n                            이메일\n                        </div>\n                        <Input \n                            className=\"login-input input-focus\"\n                            placeholder=\"이메일 주소를 입력해 주세요.\" \n                            required\n                            value={id}   \n                            onChange={e => setId(e.currentTarget.value)}\n                        />\n                        <div className=\"login-label\">\n                            비밀번호\n                            { password.length < 6 && password.length > 0 &&\n                                <div className=\"text-alarm\" style={{marginLeft:'5px'}}>\n                                    비밀번호는 6글자 이상으로 설정하셔야 합니다.\n                                </div>\n                            }\n                        </div>\n                        <Input  \n                            type=\"password\" \n                            className=\"login-input input-focus\"\n                            placeholder=\"비밀번호를 입력해 주세요.\" \n                            required\n                            value={password} \n                            onChange={e => setPassword(e.currentTarget.value)}\n                        />\n                        <div className=\"login-label\">\n                            <div>비밀번호 확인</div> {password === passwordCheck && passwordCheck !== '' && <Check size=\"20\" style={{color:'#6C63FF'}} />}\n                        </div>\n                        <Input  \n                            type=\"password\" \n                            className=\"login-input input-focus\"\n                            placeholder=\"비밀번호를 입력해 주세요.\" \n                            required\n                            value={passwordCheck} \n                            onChange={e => setPasswordCheck(e.currentTarget.value)}\n                        />\n                        <Input className=\"login-form-button our-hover\" type=\"submit\" value=\"회원가입\" />\n                    </form>\n                    <Infos />\n                </div>\n            </Box>\n        </StyledModal>\n        </>\n    )\n}\n\nexport default RegisterModal\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Customer/PersonalInformation.js",[],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Customer/QnA.js",[],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Customer/Term.js",[],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/baseTypes.js",["872","873","874","875","876","877"],"import heroanimation from '../../../tools/img/heroanimation.gif'\nimport person1 from '../../../tools/img/person1.png'\nimport person2 from '../../../tools/img/person2.png'\nimport person3 from '../../../tools/img/person3.png'\nimport gal1 from '../../../tools/img/gal1.png'\nimport gal2 from '../../../tools/img/gal2.png'\nimport gal3 from '../../../tools/img/gal3.png'\n\nconst commons = {\n    layout: 1,\n    backgroundColor:'#ffffff',\n    backgroundType:'color',\n    backgroundImage:{\n        attachment:'',\n        overlay:false,\n        fixed:false,\n    },\n    title:{\n        use:true,\n        text: '노코드 랜딩페이지 제작 툴',\n        align: 'start',\n        size: 36,\n        color: '#000000'\n    },\n    desc:{\n        use:true,\n        text: 'Surfee에 오신 것을 환영합니다. 자유롭게 사용해 보세요!',\n        align: 'start',\n        size: 18,\n        color: '#000000'\n    },\n    contents:{\n        use: true,\n        type: 'image', // image, mockup, video, slide\n        align: 'space-between',\n    },\n    padding:{\n        top:15,\n        bottom:15,\n    },\n    animation: 'none',\n    box:{\n        use:false,\n        backgroundColor:'#6C63ff1d',\n        borderRadius:5,\n        height: 1,\n    },\n    responsive:{\n        mobile:true,\n        pc:true,\n    },\n    mobile:{\n        align:'center',\n        layout:1,\n        contentSize:50,\n        cardSize: 100,\n        buttonAlign:'center',\n    }\n}\n\nconst contents = {\n    image:{\n        use:true,\n        attachment:'',\n        width:70,\n        border:0,\n        size:60,\n        shadow:false,\n        shadowValue:'none',\n        slide:false,\n    },\n    slide_img:{\n        attachment1: '',\n        attachment2: '',\n        attachment3: '',\n    },\n    video:{\n        use: false,\n        youtube: false,\n        type: 'base',\n        attachment: '',\n        link: '',\n        auto: true,\n        align: '',\n        size: 300,\n    },\n    mockup: {\n        use: false,\n        type: 'mobile',\n        size:200,\n        attachment: '',\n        attachment2: '',\n        // mobile, desktop, mobile2 있음\n    },\n}\n\nconst element = {\n    use:true,\n    type:'image', // image or icon\n    backgroundColor:'#6CCAD0',\n    // borderRaidus:5,'    iconBorder:5,\n    imageBorder:15,\n    size:50,\n    color:'#ffffff',\n}\n\nconst button = {\n    button:{\n        use : true,\n        ctaText:'CTA 버튼',\n        textSize: 12,\n        ghostText:'고스트 버튼',\n        align:'start',\n        ctaUse:true,\n        ctaOption: 'link',\n        ghostOption: 'link',\n        ctaLink:'',\n        ctaApply: '',\n        ghostUseOrLink: true, \n        ghostUse:false,\n        ghostLink:'',\n        ghostApply: '',\n        ctaCheck : false,\n        ghostCheck : false,\n    },\n    appButton:{\n        use: true,\n        apple: '',\n        google: '',\n        align:'start'\n    },\n    ctaApplyInputs: [],\n    ghostApplyInputs: [],\n    caution:{\n        use:true,\n        color: '#000000',\n        align: 'start',\n        size: 14,\n        text:'이 곳에서 유의사항이나 부가설명을 적을 수 있어요.',\n    }\n}\n\nexport const base = [\n    {\n        // 공통적으로 들어갈 확률이 높은 것들\n        ...commons,\n        ...contents,\n        ...button,\n        name:'메인',\n        sectionTypeName:'HeroSection',\n        title:{\n            ...commons.title,\n            text:'당신의 서비스를 Surfee로 소개해 보세요.',\n            size:36\n        },\n        desc:{\n            ...commons.desc,\n            text:'Surfee에 오신 것을 환영합니다. 자유롭게 사용해보세요! \\n여기를 클릭하여 서비스 및 상품에 대한 핵심설명을 적어보세요.'\n        },\n        button:{\n            ...button.button,\n            ctaText:'버튼 클릭을 유도할 문구를 적어보세요.'\n        },\n        appButton:{\n            ...button.appButton,\n            use: false,\n        },\n        image:{\n            ...contents.image,\n            attachment:heroanimation,\n            size:100,\n        }\n    },\n    {\n        ...commons,\n        ...contents,\n        layout: 2,\n        name:'디테일',\n        sectionTypeName:'DetailSection',\n        title:{\n            ...commons.title,\n            text:'핵심 특징에 대해서\\n한 줄 설명을 적어보세요',\n            size:36\n        },\n        desc:{\n            ...commons.desc,\n            text:'Surfee에 오신 것을 환영합니다. 자유롭게 사용해보세요! \\n여기를 클릭하여 서비스 및 상품에 대한 핵심설명을 적어보세요.'\n        },\n        image:{\n            ...contents.image,\n            attachment:heroanimation,\n            size:67,\n        }\n    },\n    {\n        ...commons,\n        ...contents,\n        ...button,\n        align:'start',\n        name:'CTA',\n        sectionTypeName:'CtaSection',\n        title:{\n            ...commons.title,\n            text:'잠재 유저의 행동을 유도해 보세요!',\n            size:32,\n            align:'center'\n        },\n        desc:{\n            ...commons.desc,\n            align:'center',\n            text:'Surfee에 오신 것을 환영합니다. 자유롭게 사용해보세요! \\n여기를 클릭하여 잠재유저의 행동을 유도할 수 있는 문구를 적어보세요.'\n        },\n        button:{\n            ...button.button,\n            align:'center',\n        },\n        caution:{\n            ...button.caution,\n            align:'center',\n        },\n        appButton:{\n            ...button.appButton,\n            align:'center',\n            use: false\n        }\n    },\n    {\n        ...commons,\n        ...button,\n        name:'신청',\n        align:'center',\n        sectionTypeName:'ApplySection',\n        title:{\n            ...commons.title,\n            text:'잠재 유저의 신청을 유도해 보세요!',\n            size:32,\n            align:'center'\n        },\n        desc:{\n            ...commons.desc,\n            align:'center',\n            text:'Surfee에 오신 것을 환영합니다. 자유롭게 사용해보세요! \\n여기를 클릭하여 잠재유저의 신청을 유도할 수 있는 문구를 적어보세요.'\n        },\n        button:{\n            ...button.button,\n            align:'center',\n        },\n        appButton:{\n            ...button.appButton,\n            use:false,\n        },\n        caution:{\n            ...button.caution,\n            align:'center',\n        },\n        appButton:{\n            ...button.appButton,\n            use: false,\n        }\n    },\n    {\n        ...commons,\n        ...button,\n        name:'앱 다운로드',\n        align: 'center',\n        sectionTypeName:'AppDownloadSection', \n        title:{\n            ...commons.title,\n            text:'잠재 유저의 앱 다운로드를 유도해 보세요!',\n            size:42,\n            align: 'center'\n        },\n        desc:{\n            ...commons.desc,\n            align: 'center',\n            size:24,\n            text:'Surfee에 오신 것을 환영합니다. 자유롭게 사용해보세요! \\n여기를 클릭하여 잠재유저의 앱 다운로드를 유도할 수 있는 문구를 적어보세요.'\n        },\n        button:{\n            ...button.button,\n            use:false,\n        },\n        appButton:{\n            use: true,\n            apple: 'https://www.apple.com/kr/app-store/',\n            google: 'https://play.google.com/store/',\n            align:'center'\n        },\n        caution:{\n            ...button.caution,\n            align:'center'\n        }\n    },\n    {\n        ...commons,\n        element:{\n            use:true,\n            type:'image', // image or icon\n            backgroundColor:'#e6e6e6',\n            // borderRaidus:5,'    iconBorder:5,\n            imageBorder:5,\n            iconBorder:5,\n            size:75,\n            color:'#ffffff',\n        },\n        name:'특징',\n        sectionTypeName:'FeaturesSection',\n        align:'justify',\n        numOfElements:3,\n        title:{\n            ...commons.title,\n            text:'특징을 간단하게 나타내 보세요!',\n            align:'center',\n            size:32\n        },\n        desc:{\n            ...commons.desc,\n            text:'여기를 클릭하여 서비스 및 제품의 특징을 간단히 적어보세요.',\n            align:'center',\n        },\n        elementText:{\n            use:true,\n            titleUse:true,\n            titleSize: 20,\n            descUse:true,\n            descSize: 16,\n            titleColor:'#000000',\n            descColor:'#000000',\n            align: 'center'\n        },\n        elements:[\n            {\n                icon:'',\n                attachment:'',\n                title:'특징 1',\n                desc:'여기를 클릭하여 서비스 및 제품의 특징 1을 설명해 주세요.',\n            },\n            {\n                icon:'',\n                attachment:'',\n                title:'특징 2',\n                desc:'여기를 클릭하여 서비스 및 제품의 특징 2를 설명해 주세요.',\n            },\n            {\n                icon:'',\n                attachment:'',\n                title:'특징 3',\n                desc:'여기를 클릭하여 서비스 및 제품의 특징 3을 설명해 주세요.',\n            },\n            {\n                icon:'',\n                attachment:'',\n                title:'특징 4',\n                desc:'여기를 클릭하여 서비스 및 제품의 특징 4를 설명해 주세요.',\n            },\n            {\n                icon:'',\n                attachment:'',\n                title:'특징 5',\n                desc:'여기를 클릭하여 서비스 및 제품의 특징 5를 설명해 주세요.',\n            },\n        ],\n    },\n    {\n        ...commons,\n        element:element,\n        name:'리뷰/추천',\n        sectionTypeName:'ReviewSection',\n        element:{\n            use:true,\n            type:'image', // image or icon\n            backgroundColor:'#e6e6e6',\n            imageBorder:5,\n            iconBorder:5,\n            size:75,\n            color:'#ffffff',\n        },\n        title:{\n            ...commons.title,\n            text:'서비스 및 제품에 대한 리뷰 혹은 추천사를 적어보세요.',\n            size:32,\n            align:'center'\n        },\n        desc:{\n            ...commons.desc,\n            text:'여기를 클릭하여 서비스 및 제품에 대한 리뷰 혹은 추천사를 적어보세요.',\n            align:'center',\n            size:16\n        },\n        align:'center',\n        numOfElements:3,\n        ratingColor:'red',\n        reviewText: true,\n        rating:{\n            use:true,\n            color: '#ffd23a',\n            size: 25,\n        },\n        writer:{\n            use:true,\n            color: '#000000',\n            size: 16,\n        },\n        elementTitle:{\n            use:true,\n            color: '#000000',\n            size: 20,\n        },\n        elementText:{\n            use:true,\n            titleUse:true,\n            titleSize: 28,\n            descUse:true,\n            descSize: 18,\n            color:'#000000',\n            align: 'center',\n        },\n        elements:[\n            {\n                icon:'',\n                attachment:'',\n                title:'\"리뷰 / 추천사의 핵심을 적어보세요.\"',\n                desc:'여기를 클릭하여 서비스 및 제품에 대한\\n리뷰, 추천사를 적어\\n잠재 유저에게 서비스 및 제품의 신뢰도를 높여보세요!',\n                rating:4.5,\n                writer:'ㅇㅇ회사, 대표 ㅇㅇㅇ',\n            },\n            {\n                icon:'',\n                attachment:'',\n                title:'\"리뷰 / 추천사의 핵심을 적어보세요.\"',\n                desc:'여기를 클릭하여 서비스 및 제품에 대한\\n리뷰, 추천사를 적어\\n잠재 유저에게 서비스 및 제품의 신뢰도를 높여보세요!',\n                rating:5,\n                writer:'ㅇㅇ회사, 대표 ㅇㅇㅇ',\n            },\n            {\n                icon:'',\n                attachment:'',\n                title:'\"리뷰 / 추천사의 핵심을 적어보세요.\"',\n                desc:'여기를 클릭하여 서비스 및 제품에 대한\\n리뷰, 추천사를 적어\\n잠재 유저에게 서비스 및 제품의 신뢰도를 높여보세요!',\n                rating:4.5,\n                writer:'ㅇㅇ회사, 대표 ㅇㅇㅇ',\n            },\n            {\n                icon:'',\n                attachment:'',\n                title:'\"리뷰 / 추천사의 핵심을 적어보세요.\"',\n                desc:'여기를 클릭하여 서비스 및 제품에 대한\\n리뷰, 추천사를 적어\\n잠재 유저에게 서비스 및 제품의 신뢰도를 높여보세요!',\n                rating:5,\n                writer:'ㅇㅇ회사, 대표 ㅇㅇㅇ',\n            },\n            {\n                icon:'',\n                attachment:'',\n                title:'\"리뷰 / 추천사의 핵심을 적어보세요.\"',\n                desc:'여기를 클릭하여 서비스 및 제품에 대한\\n리뷰, 추천사를 적어\\n잠재 유저에게 서비스 및 제품의 신뢰도를 높여보세요!',\n                rating:5,\n                writer:'ㅇㅇ회사, 대표 ㅇㅇㅇ',\n            },\n        ],\n    },\n    {\n        ...commons,\n        name:'자주 묻는 질문',\n        sectionTypeName:'QnaSection',\n        title:{\n            ...commons.title,\n            text:'자주 묻는 질문을 적어보세요',\n            size:42\n        },\n        desc:{\n            ...commons.desc,\n            text:'여기를 클릭하여 자주 묻는 질문과 그 답변을 적어보세요.',\n            size:24\n        },\n        layout: 'card',\n        qna:{\n            use:true,\n            shape: 'close',\n            question: '#000000',\n            questionSize: 18,\n            answer: '#000000',\n            answerSize: 18,\n        },\n        qnas:[\n            {\n                question:'여기를 클릭하여 자주 묻는 질문을 적어보세요.',\n                answer:'여기를 클릭하여 자주 묻는 질문의 답변을 적어보세요.',\n            },\n            {\n                question:'여기를 클릭하여 자주 묻는 질문을 적어보세요.',\n                answer:'여기를 클릭하여 자주 묻는 질문의 답변을 적어보세요.',\n            },\n            {\n                question:'여기를 클릭하여 자주 묻는 질문을 적어보세요.',\n                answer:'여기를 클릭하여 자주 묻는 질문의 답변을 적어보세요.',\n            },\n        ],\n    },\n    {\n        ...commons,\n        title:{\n            ...commons.title,\n            text:'글만 쓰고 싶을 때 \\'글\\' 섹션을 이용해 보세요.',\n            size:32,\n            align:'start',\n        },\n        desc:{\n            ...commons.desc,\n            text:'여기를 클릭하여 글을 적어보세요.',\n            align:'start',\n        },\n        padding:{\n            top:15,\n            bottom:15,\n        },\n        responsive:{\n            mobile:true,\n            pc:true,\n        },\n        mobile:{\n            align:'center',\n            layout:3,\n            contentSize:50,\n        },\n        box:{\n            use:false,\n            backgroundColor:'#6CCAD0',\n            borderRadius:5,\n            height: 1,\n        },\n        backgroundImage:{\n            attachment:'',\n            overlay:false,\n        },\n        name:'글',\n        sectionTypeName:'TextSection',\n    },\n    {\n        ...commons,\n        element:element,\n        numOfElements: 3,\n        name:'갤러리',\n        align:'justify',\n        sectionTypeName:'GallerySection',\n        title:{\n            ...commons.title,\n            text:'이미지를 강조하고 싶을 때 \\'갤러리\\'섹션을 이용해 보세요.',\n            size:32\n        },\n        desc:{\n            ...commons.desc,\n            text:'여기를 클릭하여 이미지에 대해 적어보세요.'\n        },\n        element:{\n            ...element,\n            size:300,\n        },\n        card:{\n            use:true,\n            color:'#C4C4C4',\n            shadow:false,\n            borderRadius:0,\n        },\n        text:{\n            use:true,\n            color: '#000000',\n            align: 'justify'\n        },\n        elementText:{\n            color:'#000000'\n        },\n        elements:[\n            {\n                attachment:gal1,\n                text:'여기를 클릭하여 이미지에 대한 설명을 적어보세요.',\n            },\n            {\n                attachment:gal2,\n                text:'여기를 클릭하여 이미지에 대한 설명을 적어보세요.',\n            },\n            {\n                attachment:gal3,\n                text:'여기를 클릭하여 이미지에 대한 설명을 적어보세요.',\n            },\n            {\n                attachment:gal3,\n                text:'여기를 클릭하여 이미지에 대한 설명을 적어보세요.',\n            },\n        ]\n    },\n    {\n        ...commons,\n        ...contents,\n        contents:{\n            use:true,\n            type:'video',\n            align:'space-between',\n        },\n        video:{\n            ...contents.video,\n            use: true,\n            type:'base',\n        },\n        title:{\n            ...commons.title,\n            text:'동영상을 강조하고 싶을 때 \\'동영상\\'섹션을 이용해 보세요.',\n            size:32\n        },\n        desc:{\n            ...commons.desc,\n            text:'좌측 메뉴에서 동영상을 삽입하고, 여기를 클릭하여 동영상에 대해 적어보세요.'\n        },\n        name:'동영상',\n        sectionTypeName:'VideoSection',\n        explanation:{\n            use:true,\n            size: 18,\n            color: '#000000',\n            align: 'center',\n            text:'여기를 클릭하여 동영상에 대한 추가 설명을 적어 보세요.'\n        },\n    },\n    {\n        ...commons,\n        ...contents,\n        name:'목업',\n        sectionTypeName:'MockupSection',\n        title:{\n            ...commons.title,\n            text:'실제 서비스나 프로토타입이 있다면 \\'목업\\'섹션을 이용해보세요.',\n            size:32\n        },\n        desc:{\n            ...commons.desc,\n            text:'좌측 메뉴에서 목업을 고르고, 여기를 클릭하여 서비스에 대해 적어보세요.'\n        },\n    },\n    // {\n    //     ...commons,\n    //     padding:{\n    //         top:1,\n    //         bottom:1,\n    //     },\n    //     name:'구분선',\n    //     sectionTypeName:'LineSection',\n    //     title:{\n    //         ...commons.title,\n    //         text:'섹션을 구분짓기 위한 용도입니다.',\n    //         size:32\n    //     },\n    //     desc:{\n    //         ...commons.desc,\n    //         text:'좌측 메뉴에서 선 종류를 고르세요. 여기를 클릭하여 서비스에 대해 적어보세요.'\n    //     },\n    //     line:{\n    //         use:true,\n    //         type:0,\n    //         color:'#000000',\n    //     }\n    // },\n]\n\nexport const defaults = {\n\n    navi:{\n        appButton:{\n            link: \"\",\n            use: true,\n        },\n        backgroundColor: \"#ffffff\",\n        bottomBorder:{\n            color: \"#F0F0F0\",\n            use: false,\n        },\n        button:{\n            align: \"end\",\n            cta:{\n                link: \"\",\n                padding: 10,\n                text: \"CTA버튼\",\n                use: false,\n            },\n            ghost:{\n                link: \"\",\n                padding: 10,\n                text: \"고스트 버튼\",\n                use: false,\n            },\n            use: false,\n        },\n        fixed: false,\n        height: 80,\n        logo:{\n            align: \"start\",\n            image:{\n                attachment: \"\",\n                use: false,\n                width: 60,\n            },\n            text:{\n                color: \"#000000\",\n                fontSize: 32,\n                text: \"\",\n                use: true,\n            },\n            use: true,\n        },\n        responsive:{\n            mobile: true,\n            pc: true,\n        },\n        sectionTemplateNumber: 1,\n        sectionTypeName: \"상단 바\",\n        title: \"서비스 / 제품 명\",\n        use: true,\n    },\n    foot:{\n        backgroundColor: \"#f9f9f9\",\n        copyright:{\n            color: \"#ffffff\",\n            text: \"앱 다운로드\",\n            use: true,\n        },\n        icon:{\n            align: \"justify\",\n            color: \"#6c63ff\",\n            facebook: \"페이스북 연결\",\n            instagram: \"인스타그램\",\n            kakaotalk: \"\",\n            linkedIn: \"\",\n            notion: \"\",\n            style: \"circle\",\n            twitter: \"\",\n            use: true,\n            youtube: \"\",\n        },\n        layout: 3,\n        padding: 10,\n        paddingBottom: 8,\n        paddingTop: \"5\",\n        sectionTemplateNmber: 1,\n        sectionTypeName: \"푸터 바\",\n        text:{\n            align: \"start\",\n            color: \"#000000\",\n            size: 18,\n            text: \"\",\n            use: true,\n        },\n        use: true\n    },\n    setting : {\n        animation: \"none\",\n        color: \"#6c63ff\",\n        cta:{\n            backgroundColor: \"#6c63ff\",\n            border: false,\n            borderColor: \"#000000\",\n            borderRadius: 5,\n            color: \"#ffffff\",\n            padding: 10,\n            shadow: true,\n        },\n        faviconAttachment: \"\",\n        font: \"\",\n        fta:{\n            backgroundColor: \"#6c63ff\",\n            border: false,\n            borderColor: \"#000000\",\n            borderRadius: 5,\n            color: \"#000000\",\n            link: \"\",\n            shadow: false,\n            shape: 0,\n            size: 50,\n            text: \"\",\n            use: false,\n        },\n        ghost:{\n            backgroundColor: \"#ffffff\",\n            border: true,\n            borderColor: \"#6c63ff\",\n            borderRadius: 5,\n            color: \"#6c63ff\",\n            padding: 10,\n            shadow: false,\n        },\n        smallFont: \"Pretendard-Regular\",\n        title: \"기본템플릿\",\n        urlId: '',\n    },\n    feedback:{\n        path: '',\n        difficulty: '',\n        inconvenience: '',\n        satisfy: '',\n        time: '',\n        function: '',\n        comment: '',\n        recommend: '',\n    }\n}","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/components/TextAuto.js",["878","879"],"import React, {useContext} from 'react'\nimport { MyContext } from '../../../../pages/Make/MakePageV2'\nimport TextareaAutosize from '@mui/material/TextareaAutosize';\nimport produce from 'immer';\n\nfunction TextAuto({small, value, onChange, color, align, size, placeholder}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n    \n    return (\n        <>\n        {\n            small ?\n            <TextareaAutosize \n                className=\"text-input feature-desc\" \n                value={value} \n                onChange={e => onChange(e)}\n                placeholder={placeholder}\n                style={{\n                    color:`${color}`, \n                    textAlign:`${align}`,\n                    resize:'none',\n                    fontSize: `${size}em`,\n                    fontFamily:`${state.setting.smallFont}`\n                }}\n                spellCheck=\"false\"\n            />\n            : \n            <TextareaAutosize \n                className=\"text-input feature-title\" \n                value={value} \n                placeholder={placeholder}\n                onChange={e => onChange(e)}\n                style={{ \n                    color:`${color}`, \n                    textAlign:`${align}`,\n                    resize:'none',\n                    fontSize: `${size}em`,\n                    fontFamily:`${state.setting.font}`\n                }}\n                spellCheck=\"false\"\n            />\n        }\n        </>\n    )\n}\n\nexport default TextAuto\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/tools/ConfirmCustom.js",[],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Login/LoginModal.js",["880","881","882","883","884","885"],"import React, {useState} from 'react'\nimport { styled, Box } from '@mui/system';\nimport ModalUnstyled from '@mui/base/ModalUnstyled';\nimport { Close } from '@styled-icons/evaicons-solid';\nimport { authService } from '../../tools/fbase'\nimport { firebaseInstance } from '../../tools/fbase'\nimport { dbService } from '../../tools/fbase'\nimport { Input } from 'antd';\nimport googlelogo from '../../tools/img/googlelogo.png'\nimport './LoginModal.css'\nimport '../../pages/Login/Login/LoginRegister.css'\n\nconst StyledModal = styled(ModalUnstyled)`\n  position: fixed;\n  z-index: 1300;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Backdrop = styled('div')`\n  z-index: -1;\n  position: fixed;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  left: 0;\n  background-color: rgba(0, 0, 0, 0.1);\n  -webkit-tap-highlight-color: transparent;\n`;\n\nconst style = {\n  width: 400,\n  height: 450,\n  bgcolor: 'rgba(255,255,255,1)',\n  borderRadius:'10px',\n  p: 2,\n  px: 4,\n  pb: 3,\n  fontSize:'12px',\n};\n\nexport const Infos = () => {\n    return(\n        <div style={{padding:'2% 0%', justifyContent:'flex-start', display:'flex', width:'100%'}}>\n            <a href=\"https://striped-cabin-4bf.notion.site/Surfee-be94494cf8c248e7b03a84e4c3966e1e\" target=\"_blank\" className=\"footer-text-click\">\n                개인정보 처리방침\n            </a>\n            <a href=\"https://striped-cabin-4bf.notion.site/Surfee-be94494cf8c248e7b03a84e4c3966e1e\" target=\"_blank\" className=\"footer-text-click\" style={{marginLeft:'2%'}}>\n                이용약관\n            </a>\n        </div>\n    )\n}\n\nfunction LoginModal({open, setOpen}) {\n    const [id, setId] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    const socialLogin = async (e) => {\n        const { \n            target : { name }, \n        } = e;\n        let provider;\n        // if (name === \"googleLogin\"){\n        provider = new firebaseInstance.auth.GoogleAuthProvider();\n        // }else{\n        //     console.log(\"이건 뜨면 안되는 메세지.\");\n        // }\n\n        const data = await authService.signInWithPopup(provider);\n        await checkRegister(data.user.multiFactor.user.email);\n    }\n\n    const submit = async (e) => {\n        var data = '';\n        e.preventDefault();\n        try{\n            data = await authService.signInWithEmailAndPassword(\n                id, password\n            )\n            // if(!data.user.multiFactor.user.emailVerified){\n            //     alert(\"이메일 인증이 완료되지 않았습니다!\");\n            //     authService.signOut();\n            //     return;\n            // }\n            checkRegister(data.user.multiFactor.user.email)\n        } catch (err){\n            if(err.code === \"auth/user-not-found\"){\n                alert(\"가입되어 있지 않은 이메일입니다.\")\n            }else if(err.code === \"auth/wrong-password\"){\n                alert(\"잘못된 비밀번호입니다. 반복해서 잘못된 비밀번호를 입력할 시 일시적으로 로그인이 중단될 수 있습니다.\")\n            }else if(err.code === \"auth/too-many-requests\"){\n                alert(\"반복적으로 잘못된 비밀번호를 입력하여 일시적으로 로그인이 중단되었습니다. 잠시 후 다시 로그인 해주시기 바랍니다.\")\n            }\n        }\n        setOpen(false)\n    }\n\n    const checkRegister = async (email) => {\n        const usersCollections = await dbService\n            .collection(\"users\")\n            .where(\"email\", \"==\", email)\n            .get();\n        \n        const usersExist = usersCollections.docs.map(doc => {\n            return({...doc.data(), id: doc.id})\n        })\n\n        setOpen(!open);\n        \n        // if(usersExist.length === 0){\n        //     // 구글 아이디로 로그인했는데 회원가입에 정보가 없을 때\n        //     console.log(\"회원가입 정보를 받습니다.\");\n        //     setDone(true);\n        // }else{\n        //     console.log(\"로그인 완료\");\n        //     localStorage.setItem(\"name\", usersExist[0].name);\n        //     localStorage.setItem(\"job\", usersExist[0].job);\n        // }\n    }\n\n    return (\n        <div>\n            <StyledModal\n                aria-labelledby=\"unstyled-modal-title\"\n                aria-describedby=\"unstyled-modal-description\"\n                open={open}\n                onClose={() => setOpen(!open)}\n                BackdropComponent={Backdrop}>\n            <Box sx={style}>\n                <div className=\"login-modal__inner\">\n                    <div className=\"modal-top__title\">\n                        <div className=\"login-title\" style={{width:\"95%\"}}>\n                            로그인\n                        </div>\n                        <div style={{width:\"5%\", cursor:\"pointer\"}} onClick={() => setOpen(false)}>\n                            <Close size=\"30\" />\n                        </div>\n                    </div>\n                    <button className=\"google-login-button opacity-hover\" name=\"googleLogin\" onClick={e => socialLogin(e)} style={{marginTop:'2%'}}>\n                        <img src={googlelogo} width={20}/>\n                        <span style={{marginLeft:'5%'}}>구글아이디로 이용하기</span>\n                    </button>\n                    <div style={{fontSize:'12px', color:'rgba(150,150,150,1)', marginTop:'8px'}}>\n                        위 버튼을 클릭하면 <a style={{color:'black'}} href=\"https://striped-cabin-4bf.notion.site/Surfee-be94494cf8c248e7b03a84e4c3966e1e\" target=\"_blank\">약관</a>에 동의한 것으로 간주하고<br/> 자동으로 회원가입/로그인이 진행됩니다.\n                    </div>\n                    <form onSubmit={e => submit(e)}>\n                        <div className=\"login-label\">\n                            이메일\n                        </div>\n                        <Input \n                            className=\"login-input input-focus\"\n                            placeholder=\"이메일 주소를 입력해 주세요.\" \n                            required\n                            value={id}   \n                            onChange={e => setId(e.currentTarget.value)}\n                        />\n                        <div className=\"login-label\">\n                            비밀번호\n                        </div>\n                        <Input  \n                            type=\"password\" \n                            className=\"login-input input-focus\"\n                            placeholder=\"비밀번호를 입력해 주세요.\" \n                            required\n                            value={password} \n                            onChange={e => setPassword(e.currentTarget.value)}\n                        />\n                        <Input className=\"login-form-button our-hover\" type=\"submit\" value=\"로그인\" />\n                    </form>\n                    <Infos />\n                </div>\n            </Box>\n        </StyledModal>\n        </div>\n    )\n}\n\nexport default LoginModal\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/UserLandingPage/Sections/QnaSection.js",["886","887","888","889"],"import React, {useContext, useState} from 'react'\nimport { motion } from 'framer-motion';\nimport TitleDesc from './components/TitleDesc'\nimport QnaOpenClose from './components/QnaOpenClose'\nimport TextAuto from './components/TextAuto'\nimport TextareaAutosize from '@mui/material/TextareaAutosize';\nimport { isMobile } from 'react-device-detect'\n\nfunction QnaSection({content, setting}) {\n\n    const returnQnaCards = content.qnas.map((item, index) => {\n        return(\n            <QnaOpenClose setting={setting} key={index} title={item.question} open={content.qna.shape === 'open'} color={content.qna.question} content={content} type={content.layout} index={index}>\n                <div className=\"edit-element\" style={{alignItems:'start'}}>\n                    <div style={{display:'flex', alignItems: 'start', height:'100%'}}>\n                        <span className=\"qna__word\" style={{ color: `${content.qna.answer}`}}>A. <></></span>\n                    </div>\n                    <div\n                        dangerouslySetInnerHTML={{__html:item.answer}}\n                        style={{\n                            marginTop:'4px', \n                            width:'100%',\n                            color:`${content.qna.answer}`, \n                            textAlign:`start`,\n                            resize:'none',\n                            fontSize: `${0.9}em`,\n                            fontFamily:`${setting.smallFont}`,\n                        }}>\n                        {/* <TextAuto\n                            disabled\n                            small\n                            size={0.9}\n                            value={item.answer} \n                            color={content.qna.answer} align=\"start\" /> */}\n                    </div>\n                </div>\n            </QnaOpenClose>\n        )\n    })\n\n    return (\n        <motion.div \n            className=\"template\"\n            data-aos-easing=\"ease-in-back\"\n            data-aos-delay=\"200\"\n            data-aos-offset=\"0\" data-aos={content.animation.type} aos-duration=\"4000\">\n\n            {/* 큐앤에이 카드의 그림자때문에 텍스트와 정렬이 맞지 않아서 */}\n            <div style={{width : `${isMobile ? '100%' : '95%'}` }}>  \n                <TitleDesc content={content} />\n            </div>\n\n            <div className=\"features__container\" style={{flexDirection: 'column', marginTop:'20px'}}>\n                {returnQnaCards}\n            </div>\n\n        </motion.div>\n    )\n}\n\nexport default QnaSection","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/UserLandingPage/Sections/CtaSection.js",["890"],"import React from 'react'\nimport { motion } from 'framer-motion';\n\nimport TitleDesc from './components/TitleDesc'\nimport ReturnButton from './components/ReturnButton'\nimport AnimationDiv from './components/AnimationDiv'\nimport TextAuto from './components/TextAuto'\nimport isMobile from 'react-device-detect'\n\nfunction CtaSection({content, setting}) {\n\n    const returnLayout = {\n        flexDirection:`${\n            isMobile ? \n                content.mobile.layout === 3 ? 'column' : 'column-reverse'\n            :\n                content.layout === 2 ? 'row' : content.layout === 3 ? 'row-reverse' : 'column'\n        }`\n    }\n    \n    return (\n        <>\n            <motion.div style={{display:'flex', width:'100%', height:'100%', ...returnLayout}} data-aos={content.animation} data-aos-easing=\"ease-in-back\"\n            data-aos-delay=\"200\" data-aos-offset=\"0\" aos-duration=\"4000\" >\n                <div className=\"text__container\">\n                    <TitleDesc content={content} titlePlaceholder=\"잠재 유저의 행동을 유도할 말을 적어보세요.\" descPlaceholder=\"여기를 클릭하여 잠재 유저의 행동을 유도할 수 있는 문구를 적어보세요.\" />\n                </div>\n                <div style={{display:'flex', flexDirection:'column', width:'100%', justifyContent:'center', height:'100%'}}>\n                    <ReturnButton content={content} />\n                    {content.caution.use && \n                        <div className=\"df-margin-big feature-desc\" style={{width:'100%'}}>\n                            <TextAuto \n                                disabled\n                                className=\"text-input\" \n                                small \n                                size = {content.caution.size/20}\n                                value={content.caution.text} \n                                color = {content.caution.color} \n                                align = {isMobile ? content.mobile.align : content.caution.align}\n                                placeholder=\"유의사항이나 부가 설명을 적어보세요.\"\n                            />\n                        </div>\n                    }\n                </div>\n            </motion.div>\n        </>\n    )\n}\n\nexport default CtaSection\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/UserLandingPage/Sections/GallerySection.js",["891","892","893","894","895","896"],"import React, {useContext, useState, useRef} from 'react'\nimport { motion } from 'framer-motion';\nimport TitleDesc from './components/TitleDesc'\nimport TextAuto from './components/TextAuto'\nimport {Upload} from '@styled-icons/bootstrap';\nimport { isMobile } from 'react-device-detect'\nimport FeatureCard from './components/FeatureCard'\n\nfunction GallerySection({content,setting}) {\n\n    const returnElementsCards = content.elements.map((item, index) => {\n       if(index < content.numOfElements){\n           return(\n               <>\n               <FeatureCard section=\"gallery\" content={content} index={index}>\n                       {content.element.use && \n                       <div style={{width:'100%', position:'relative', cursor:'default'}}>\n                           { item.attachment ? \n                            <img \n                                src={item.attachment} \n                                style={{\n                                    width:'100%',\n                                    objectFit:'cover',\n                                    height:`${isMobile ? content.mobile.cardSize : content.element.size}px`, \n                                    borderRadius:`${content.card.borderRadius}px ${content.card.borderRadius}px 0px 0px`\n                                }}/> \n                               :\n                            <div className=\"feature-upload-button uphover\" \n                                style={{ \n                                    height:`${content.element.size}px`, \n                                    backgroundColor:`${content.element.backgroundColor}`, \n                                    borderRadius:`${content.card.borderRadius}px ${content.card.borderRadius}px 0px 0px`\n                                }}>\n                                <Upload size=\"25\" />\n                            </div>\n                           }\n                       </div> \n                       }\n                       {\n                           content.card.use && \n                           <div className=\"df-margin-big feature-title\" style={{\n                               width:'100%', \n                               height:'100%', \n                               alignItems:'start', \n                               display: 'flex', \n                               margin:'0px', \n                               padding:`${isMobile ? '5px' : '8px'}`}}>\n                                <div \n                                    className=\"text-no-input\" \n                                    dangerouslySetInnerHTML={{__html:item.text}}\n                                    style={{\n                                        color:`${content.text.color}`,\n                                        textAlign:`${isMobile ? content.mobile.align : content.align}`,\n                                        fontSize:'0.9em',\n                                        fontFamily:`${setting.smallFont}`,\n                                    }}\n                                >\n\n                                </div>\n                                {/* <TextAuto \n                                    small\n                                    className=\"text-no-input\" \n                                    placeholder=\"여기를 클릭하여 이미지에 대한 설명을 적어보세요.\"\n                                    value={item.text} \n                                    size={0.9}\n                                    color = {content.text.color} \n                                    align = {isMobile ? content.mobile.align : content.align}\n                                    disabled\n                                /> */}\n                           </div>\n                       }\n                   </FeatureCard>\n               </>\n           )\n       }\n    })\n\n    return (\n        <motion.div className=\"template\"data-aos-easing=\"ease-in-back\"\n        data-aos-delay=\"200\"\n        data-aos-offset=\"0\"\n            data-aos={content.animation.type} aos-duration=\"4000\">\n\n            <TitleDesc content={content} />\n\n            <div className=\"features__container\" style={{flexWrap : `${isMobile ? 'wrap' : ''}`}}>\n                {returnElementsCards}\n            </div>\n\n        </motion.div>\n    )\n}\n\nexport default GallerySection\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/UserLandingPage/Sections/TextSection.js",["897","898","899","900"],"import React, {useContext, useState, useEffect} from 'react'\nimport { motion } from 'framer-motion';\nimport TitleDesc from './components/TitleDesc'\nimport isMobile from 'react-device-detect'\n\nfunction TextSection({content, setting}) {\n\n    return (\n        <motion.div style={{ width:'100%', height:'100%'}}\n        data-aos-easing=\"ease-in-back\"\n        data-aos-delay=\"200\"\n        data-aos-offset=\"0\" data-aos={content.animation} aos-duration=\"4000\">\n            <div className=\"text__container\">\n            <TitleDesc content={content} titlePlaceholder=\"제목을 적어보세요.\" descPlaceholder=\"여기를 클릭하여 내용을 적어보세요.\" />\n            </div>\n        </motion.div>\n    )\n}\n\nexport default TextSection\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/UserLandingPage/Sections/FeaturesSection.js",["901","902","903","904","905","906","907"],"import React, {useContext, useEffect, useState, useRef} from 'react'\nimport { motion } from 'framer-motion';\nimport TitleDesc from './components/TitleDesc'\nimport TextAuto from './components/TextAuto'\nimport Element from './components/Element'\nimport TextareaAutosize from '@mui/material/TextareaAutosize';\nimport FeatureCard from './components/FeatureCard'\nimport {isMobile} from 'react-device-detect'\n\nfunction FeaturesSection({content, setting}) {\n\n    const returnFeatureCards = content.elements.map((item, index) => {\n        if (index < content.numOfElements){\n        return(\n            <FeatureCard align={isMobile ? content.mobile.align : content.elementText.align} section=\"feature\" content={content} index={index}>\n                {\n                    content.element.use && \n                    <Element content={content} item={item} index={index} key={index}/>\n                }\n                {\n                    content.elementText.use && \n                    <div style={{width:'100%', marginTop:`${content.element.use ? '10px' : '0px'}`}}>\n                    {\n                        content.elementText.titleUse && \n                            <div className=\"df-margin-big feature-title\" style={{width:'100%'}}>\n                                <div dangerouslySetInnerHTML={{__html:item.title}}\n                                    style={{\n                                        color:`${content.elementText.titleColor}`,\n                                        textAlign:`${isMobile ? content.mobile.align : content.elementText.align}`,\n                                        fontSize:`${content.elementText.titleSize/20}em`,\n                                        fontFamily:`${setting.font}`\n                                    }}\n                                />\n                            </div>\n                    }\n                    {\n                        content.elementText.descUse && \n                            <div className=\"df-margin-small feature-desc\" style={{width:'100%', marginTop:'5px'}}>\n                                <div dangerouslySetInnerHTML={{__html:item.desc}}\n                                    style={{\n                                        color:`${content.elementText.descColor}`,\n                                        textAlign:`${isMobile ? content.mobile.align : content.elementText.align}`,\n                                        fontSize:`${content.elementText.descSize/20}em`, \n                                        fontFamily:`${setting.smallFont}`,\n                                        width:'100%'\n                                    }}>\n                                </div>\n                            </div>\n                    }\n                    </div>\n                }\n            </FeatureCard>\n        )}\n        else{\n        }\n    })\n\n    return (\n        <>\n            <motion.div className=\"template\" data-aos={content.animation} data-aos-easing=\"ease-in-back\"\n                data-aos-delay=\"200\"\n                data-aos-offset=\"0\" aos-duration=\"4000\" >\n                    <TitleDesc content={content} titlePlaceholder=\"특징들의 제목을 적어보세요.\" descPlaceholder=\"여기를 클릭하여 서비스 및 제품의 특징을 간단히 적어보세요.\" />\n\n                <div className=\"features__container\" style={{flexWrap : `${isMobile ? 'wrap' : ''}`}}>\n                    {returnFeatureCards}\n                </div>\n\n            </motion.div>\n        </>\n    )\n}\n\nexport default FeaturesSection\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/UserLandingPage/Sections/VideoSection.js",["908","909"],"import React, {useContext, useState} from 'react'\nimport { motion } from 'framer-motion';\nimport TitleDesc from './components/TitleDesc'\nimport ImageOrSlide from './components/ImageOrSlide'\nimport TextAuto from './components/TextAuto'\nimport AnimationDiv from './components/AnimationDiv'\n\nfunction VideoSection({content, setting}) {\n    const returnLayout = {\n        flexDirection:`${'column'}`,\n        // paddingLeft:`${content.layout === 1 ? '30px' : content.layout === 2 ? '0px' : '30px'}`,\n        // paddingRight:`${content.layout === 1 ? '0px' : content.layout === 2 ? '30px' : '30px'}`,\n    }\n    \n    return (\n        <motion.div \n        data-aos-easing=\"ease-in-back\"\n        data-aos-delay=\"200\"\n        data-aos-offset=\"0\" data-aos={content.animation} aos-duration=\"4000\"\n        style={{ width:'100%', height:'100%'}}>\n            <AnimationDiv content={content} returnLayout={returnLayout} setting={setting}>\n                <div className=\"text__container\">\n                    <TitleDesc content={content} titlePlaceholder=\"제목을 적어보세요.\" descPlaceholder=\"여기를 클릭하여 내용을 적어보세요.\" />\n                </div>\n                <div className=\"image__container\" style={{marginTop:'12px'}}>\n                    <ImageOrSlide content={content} />\n                </div>\n                {\n                content.explanation.use &&\n                <div style={{width:'100%'}}>\n                    <TextAuto small  className=\"text-input\" \n                        placeholder=\"여기를 클릭하여 동영상에 대한 추가 설명을 적어보세요.\"\n                        value={content.explanation.text} \n                        color={content.explanation.color}\n                        align={content.explanation.align}\n                        size={content.explanation.size/20}\n                        \n                    />\n                </div>\n                }\n            </AnimationDiv>\n        </motion.div>\n    )\n}\n\nexport default VideoSection\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/UserLandingPage/Sections/MockupSection.js",[],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/UserLandingPage/Sections/ReviewSection.js",["910","911"],"import React, {useContext} from 'react'\nimport Rating from '@mui/material/Rating';\nimport { motion } from 'framer-motion';\nimport TitleDesc from './components/TitleDesc'\nimport TextareaAutosize from '@mui/material/TextareaAutosize';\nimport Element from './components/Element'\nimport FeatureCard from './components/FeatureCard'\nimport isMobile from 'react-device-detect'\n\nfunction ReviewSection({content, setting}) {\n\n    const returnReviewCards = content.elements.map((item, index) => {\n        if(index < content.numOfElements){\n            if(content.reviewText) {\n            return(\n                <FeatureCard align={isMobile ? content.mobile.align : content.elementText.align} section=\"feature\" content={content} index={index}>\n                    <Element content={content} item={item} index={index} key={index}/>\n                    {\n                        content.elementTitle.use && \n                        <div className=\"df-margin-big feature-title\" style={{width:'100%', marginTop:'8px'}}>            \n                            <TextareaAutosize \n                                placeholder=\"리뷰/추천사의 핵심을 적어보세요.\"\n                                className=\"text-no-input\"  \n                                style={{\n                                    width:'100%',\n                                    resize:'none',\n                                    textAlign:`${isMobile ? content.mobile.align : content.elementText.align}`,\n                                    fontFamily:`${setting.smallFont}`,\n                                    color:`${content.elementTitle.color}`,\n                                    fontSize:`${content.elementTitle.size/20}em`,\n                                    WebkitTextFillColor: `${content.elementTitle.color}`,\n                                    WebkitOpacity: 1,\n                                }}\n                                value={item.title} \n                                spellCheck=\"false\"\n                                disabled\n                                />\n                        </div>\n                    }\n                    {\n                        content.rating.use && \n                        <div className=\"df-margin-small\">\n                            <div style={{\n                                width:'100%', \n                                textAlign:`${isMobile ? content.mobile.align : content.elementText.align}`,\n                                marginTop:'-5px'\n                            }}>\n                            <Rating\n                                value={item.rating} \n                                precision={0.5}\n                                style={{ fontSize: `${content.rating.size}px`, color:`${content.rating.color}` }}\n                                // size={content.rating.size}\n                                // color={content.rating.color}\n                                readOnly\n                                />\n                            </div>\n                        </div>\n                    }\n                    {\n                        content.elementText.use && \n                        <div className=\"df-margin feature-desc\" style={{width:'100%', marginTop:'7px'}}>\n                            <TextareaAutosize\n                                className=\"text-no-input\" \n                                style={{\n                                    width:'100%',\n                                    resize:'none',\n                                    textAlign:`${isMobile ? content.mobile.align : content.elementText.align}`,\n                                    fontFamily:`${setting.smallFont}`,\n                                    color:`${content.elementText.color}`,\n                                    fontSize:`${content.elementText.size/20}em`,\n                                    WebkitTextFillColor: `${content.elementText.color}`,\n                                    WebkitOpacity: 1,\n                                }}\n                                value={item.desc} \n                                disabled\n                                spellCheck=\"false\"\n                                />\n                        </div>\n                    }\n                    {\n                        content.writer.use && \n                        <div className=\"df-margin-big feature-writer\" style={{width:'100%'}}>\n                            <TextareaAutosize \n                                className=\"text-no-input\" \n                                placeholder=\"회사이름, 직함이름\"\n                                style={{\n                                    width:'100%',\n                                    resize:'none',\n                                    textAlign:`${isMobile ? content.mobile.align : content.elementText.align}`,\n                                    color:`${content.writer.color}`,\n                                    fontFamily:`${setting.smallFont}`,\n                                    WebkitTextFillColor: `${content.writer.color}`,\n                                    WebkitOpacity: 1,\n                                    fontSize:`${content.writer.size/17}em`,\n                                }}\n                                value={item.writer} \n                                disabled\n                                />\n                        </div>\n                    }\n                </FeatureCard>\n            )\n        }\n    else {\n        return(<>\n        </>)\n    }\n        }\n    })\n\n    return (\n        <>\n            <motion.div className=\"template\"data-aos-easing=\"ease-in-back\"\n                data-aos-delay=\"200\"\n                data-aos-offset=\"0\" data-aos={content.animation} aos-duration=\"4000\">\n                \n                <TitleDesc content={content} titlePlaceholder=\"서비스 및 제품에 대한 리뷰 혹은 추천사를 적어보세요.\" descPlaceholder=\"여기를 클릭하여 서비스 및 제품에 대한 리뷰 혹은 추천사를 적어보세요.\" />\n\n                <div className=\"features__container\" style={{flexWrap : `${isMobile ? 'wrap' : ''}`}}> \n                    {returnReviewCards}\n                </div>\n\n            </motion.div>\n        </>\n    )\n}\nexport default ReviewSection\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/UserLandingPage/Sections/HeroSection.js",["912","913"],"import React, { useContext } from 'react'\nimport { motion } from 'framer-motion';\nimport TitleDesc from './components/TitleDesc'\nimport AutosizeInput from 'react-input-autosize';\nimport ImageOrSlide from './components/ImageOrSlide'\nimport ReturnButton from './components/ReturnButton'\nimport AnimationDiv from './components/AnimationDiv'\nimport { isMobile } from 'react-device-detect'\n\n\nfunction HeroSection({content, setting}) {\n\n    const returnLayout = {\n        flexDirection:`${\n            isMobile ? \n            content.mobile.layout === 3 ? 'column' : 'column-reverse'\n            :\n            content.layout === 1 ? 'row' : content.layout === 2 ? 'row-reverse' : content.layout === 3 ? 'column' : 'column-reverse'\n        }`,\n    }\n\n    return (\n        <motion.div \n        data-aos-easing=\"ease-in-back\"\n        data-aos-delay=\"50\"\n        data-aos-offset=\"250\" data-aos={content.animation} aos-duration=\"4000\"\n        style={{ width:'100%', height:'100%'}}>\n            <AnimationDiv setting={setting} content={content} returnLayout={returnLayout}>\n                <div className=\"text__container\" style={{marginTop:`${ !isMobile && content.layout === 4 ? '20px'  : isMobile && content.mobile.layout === 4 ? '10px' : '0px'}` }}>\n                    <TitleDesc content={content} />\n                    <ReturnButton content={content} />\n                </div>\n                <div className=\"image__container\">\n                    <ImageOrSlide content={content} />\n                </div>\n            </AnimationDiv>\n        </motion.div>\n    )\n}\n\nexport default HeroSection\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/UserLandingPage/Sections/DetailSection.js",[],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Modal/LoadingModal.js",["914","915"],"import React, {useState} from 'react'\nimport { styled, Box } from '@mui/system';\nimport ModalUnstyled from '@mui/base/ModalUnstyled';\nimport \"@lottiefiles/lottie-player\";\n\nconst StyledModal = styled(ModalUnstyled)`\n  position: fixed;\n  z-index: 1300;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Backdrop = styled('div')`\n  z-index: -1;\n  position: fixed;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  left: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  -webkit-tap-highlight-color: transparent;\n`;\n\nconst style = {\n  width: 300,\n  width: 300,\n  bgcolor: 'rgba(255,255,255,0)',\n  border: '0px solid #000',\n  p: 2,\n  px: 4,\n  pb: 3,\n};\n\nfunction LoadingModal({loading, setLoading}) {\n\n    return (\n        <div>\n            <StyledModal\n                aria-labelledby=\"unstyled-modal-title\"\n                aria-describedby=\"unstyled-modal-description\"\n                open={loading}\n                BackdropComponent={Backdrop}\n            >\n              <Box sx={style}>\n                <lottie-player\n                    autoplay\n                    loop\n                    mode=\"normal\"\n                    src=\"https://assets2.lottiefiles.com/packages/lf20_tiuij39a.json\"\n                    style={{width:'200px'}}\n                >\n                </lottie-player>\n              </Box>\n            </StyledModal>\n        </div>\n    )\n}\n\nexport default LoadingModal\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/tools/FeedbackModal.js",["916","917","918"],"import React, {useState, useContext} from 'react'\nimport {UserContext} from '../Router'\nimport { styled, Box } from '@mui/system';\nimport ModalUnstyled from '@mui/base/ModalUnstyled';\nimport { Close } from '@styled-icons/evaicons-solid';\nimport './FeedbackModal.css';\nimport {dbService} from './fbase'\n\nconst StyledModal = styled(ModalUnstyled)`\n  position: fixed;\n  z-index: 1300;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\nconst Backdrop = styled('div')`\n  z-index: -1;\n  position: fixed;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  left: 0;\n  background-color: rgba(0, 0, 0, 0.2);\n  -webkit-tap-highlight-color: transparent;\n`;\nconst style = {\n    width: 800,\n    height: 620,\n    bgcolor: 'white',\n    // boxShadow: '18px 18px 36px rgba(0, 0, 0, 0.15), inset 6px 4px 16px rgba(108, 99, 255, 0.1), inset -12px -8px 16px rgba(108, 99, 255, 0.25)',\n    borderRadius:2,\n    p: 2,\n    px: 4,\n    pb: 3,\n  };\n\nfunction FeedbackModal({open, setOpen, deploy}) {\n    const {state, action} = useContext(UserContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    const [quest, goQuest] = useState(false);\n    const [page, setPage] = useState(1);\n    const [complete, setComplete] = useState(false);\n    const [clicked, setClicked] = useState(false);\n    const [inputText, setInputText] = useState('');\n    const [job, setJob] = useState('');\n    const [age, setAge] = useState('');\n\n    const [path, setPath] = useState('');\n    const [pathEtc, setPathEtc] = useState('');\n    const [difficul, setDifficul] = useState('');\n    const [inconv, setInconv] = useState('');\n    const [inconvEtc, setInconvEtc] = useState('');\n    const [satisfy, setSatisfy] = useState('');\n    const [satisfyEtc, setSatisfyEtc] = useState('');\n    const [time, setTime] = useState('');\n    const [func, setFunc] = useState('');\n    const [comment, setComment] = useState('');\n    const [recom, setRecom] = useState('');\n\n    const saveFeedback = async () => {\n        // 파이어베이스에 피드백기록\n        await dbService.collection('feedback').add({\n            funnel: path,\n            funnelEtc: pathEtc,\n            difficulty: difficul,\n            inconvenience: inconv,\n            inconvenienceEtc: inconvEtc,\n            satisfaction: satisfy,\n            satisfactionEtc: satisfyEtc,\n            working_time: time,\n            function: func,\n            comment: comment,\n            job:job,\n            age:age,\n            recommendation: recom,\n            created:Date.now(),\n            user : state.userObj.email\n        })\n        localStorage.setItem('feedback',true);\n    }\n\n    const toPrev = () => {\n        if(page>1)\n            setPage(page-1)\n        else\n            return\n    }\n\n    const toNext = () => {\n        if(page<8 && clicked)\n           {\n               setPage(page+1);\n               setClicked(false);\n               setInputText('');\n           }\n        else {\n            alert('답변해주세요!')\n        }\n    }\n\n    const toComplete = () => {\n        if(clicked)\n        {\n            setComplete(true)\n            goQuest(false)\n            setClicked(false)\n            saveFeedback()\n        }\n        else {\n            alert('답변해주세요!')\n        }\n    }\n\n    const setClear = () => {\n        setOpen(false);\n        setClicked(false);\n        goQuest(false);\n        setPage(1);\n    }\n\n    const returnQuestions = () => {\n        switch(page){\n            case 1: return(\n                <>\n                <div className=\"big-title question\">\n                    어떤 경로를 통해 Surfee를 알게 되셨나요?\n                </div>\n                <div className=\"column-ans\">\n                    <div className=\"round-ans-button\" style={{background: `${path === 'kakao' ? `var(--main-color)`: 'white'}`, color: `${path === 'kakao' ? 'white': `var(--main-color)`}`}} onClick={() => {setPath('kakao'); setClicked(true);}}>\n                        카카오톡 오픈채팅방\n                    </div>\n                    <div className=\"round-ans-button\" style={{background: `${path === 'disquiet' ? `var(--main-color)`: 'white'}`, color: `${path === 'disquiet' ? 'white': `var(--main-color)`}`}} onClick={() => {setPath('disquiet'); setClicked(true);}}>\n                        SNS 광고\n                    </div>\n                    <div className=\"round-ans-button\" style={{background: `${path === '지인 추천' ? `var(--main-color)`: 'white'}`, color: `${path === '지인 추천' ? 'white': `var(--main-color)`}`}} onClick={() => {setPath('지인 추천'); setClicked(true);}}>\n                        지인 추천\n                    </div>\n                    <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center', flexDirection:'column'}}>\n                        <div className=\"round-ans-button\" style={{background: `${path === '기타' ? `var(--main-color)`: 'white'}`, color: `${path === '기타' ? 'white': `var(--main-color)`}`}} onClick={() => {setPath('기타'); setClicked(true);}}>\n                            기타\n                        </div>\n                        {\n                            path === '기타' && \n                            <input className=\"text-modal-input inputbox\" value={pathEtc} onChange={e => setPathEtc(e.currentTarget.value)} style={{width:'300px'}}/>\n                        }\n                    </div>\n                </div>\n                <div className=\"prev-next-fbuttons\" style={{justifyContent:'end'}}>\n                    <div className=\"prev-next-fbutton\" style={{width:'100%'}} onClick={toNext}>다음</div>\n                </div>\n                </>\n            )\n            case 2: return(\n                <>\n                <div className=\"big-title question\">\n                Surfee를 통한 랜딩페이지 제작 과정은 어땠나요?\n                </div>\n                <div className=\"row-ans\">\n                    <div className=\"circle-text\">어려움</div>\n                        <div className=\"circle-ans-button\" style={{background: `${difficul === '1' ? `var(--main-color)`: 'white'}`, color: `${difficul === '1' ? 'white': `var(--main-color)`}`}} onClick={() => {setDifficul('1'); setClicked(true);}}>1</div>\n                        <div className=\"circle-ans-button\" style={{background: `${difficul === '2' ? `var(--main-color)`: 'white'}`, color: `${difficul === '2' ? 'white': `var(--main-color)`}`}} onClick={() => {setDifficul('2'); setClicked(true);}}>2</div>\n                        <div className=\"circle-ans-button\" style={{background: `${difficul === '3' ? `var(--main-color)`: 'white'}`, color: `${difficul === '3' ? 'white': `var(--main-color)`}`}} onClick={() => {setDifficul('3'); setClicked(true);}}>3</div>\n                        <div className=\"circle-ans-button\" style={{background: `${difficul === '4' ? `var(--main-color)`: 'white'}`, color: `${difficul === '4' ? 'white': `var(--main-color)`}`}} onClick={() => {setDifficul('4'); setClicked(true);}}>4</div>\n                        <div className=\"circle-ans-button\" style={{background: `${difficul === '5' ? `var(--main-color)`: 'white'}`, color: `${difficul === '5' ? 'white': `var(--main-color)`}`}} onClick={() => {setDifficul('5'); setClicked(true);}}>5</div> \n                    <div className=\"circle-text\">쉬움</div>\n                </div>\n                <div className=\"prev-next-fbuttons\">\n                    <div className=\"prev-next-fbutton\" onClick={toPrev}>이전</div>\n                    <div className=\"prev-next-fbutton\" onClick={toNext}>다음</div>\n                </div>\n                </>\n            )\n            case 3: return(\n                <>\n                <div className=\"big-title question\">\n                Surfee를 사용하면서 가장 불편했던 점이 무엇인가요?\n                </div>\n                <div className=\"column-ans\">\n                    <div className=\"round-ans-button\" style={{background: `${inconv === '낮은 자유도' ? `var(--main-color)`: 'white'}`, color: `${inconv === '낮은 자유도' ? 'white': `var(--main-color)`}`}} onClick={() => {setInconv('낮은 자유도'); setClicked(true);}}>\n                        낮은 자유도\n                    </div>\n                    <div className=\"round-ans-button\" style={{background: `${inconv === '섹션 유형의 부족' ? `var(--main-color)`: 'white'}`, color: `${inconv === '섹션 유형의 부족' ? 'white': `var(--main-color)`}`}} onClick={() => {setInconv('섹션 유형의 부족'); setClicked(true);}}>\n                        섹션 유형의 부족\n                    </div>\n                    <div className=\"round-ans-button\" style={{background: `${inconv === '기능의 오류' ? `var(--main-color)`: 'white'}`, color: `${inconv === '기능의 오류' ? 'white': `var(--main-color)`}`}} onClick={() => {setInconv('기능의 오류'); setClicked(true);}}>\n                        기능의 오류\n                    </div>\n                    <div className=\"round-ans-button\" style={{background: `${inconv === '결과물이 만족스럽지 않음' ? `var(--main-color)`: 'white'}`, color: `${inconv === '결과물이 만족스럽지 않음' ? 'white': `var(--main-color)`}`}} onClick={() => {setInconv('결과물이 만족스럽지 않음'); setClicked(true);}}>\n                        결과물이 만족스럽지 않음\n                    </div>\n                    <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center', flexDirection:'column'}}>\n                        <div className=\"round-ans-button\" style={{background: `${inconv === '기타' ? `var(--main-color)`: 'white'}`, color: `${inconv === '기타' ? 'white': `var(--main-color)`}`}} onClick={() => {setInconv('기타'); setClicked(true);}}>\n                            기타\n                        </div>\n                        {\n                            inconv === '기타' && \n                            <input className=\"text-modal-input inputbox\" value={inconvEtc} onChange={e => setInconvEtc(e.currentTarget.value)} style={{width:'300px'}}/>\n                        }\n                    </div>\n                </div>\n                <div className=\"prev-next-fbuttons\">\n                    <div className=\"prev-next-fbutton\" onClick={toPrev}>이전</div>\n                    <div className=\"prev-next-fbutton\" onClick={toNext}>다음</div>\n                </div>\n                </>\n            )\n            case 4: return(\n                <>\n                <div className=\"big-title question\">\n                Surfee를 사용하면서 가장 만족했던 점이 무엇인가요?\n                </div>\n                <div className=\"column-ans\">\n                    <button className=\"round-ans-button\" style={{background: `${satisfy === '사용이 쉬움' ? `var(--main-color)`: 'white'}`, color: `${satisfy === '사용이 쉬움' ? 'white': `var(--main-color)`}`}} onClick={() => {setSatisfy('사용이 쉬움'); setClicked(true);}}>\n                        사용이 쉬움\n                    </button>\n                    <button className=\"round-ans-button\" style={{background: `${satisfy === '섹션 유형이 다양함' ? `var(--main-color)`: 'white'}`, color: `${satisfy === '섹션 유형이 다양함' ? 'white': `var(--main-color)`}`}} onClick={() => {setSatisfy('섹션 유형이 다양함'); setClicked(true);}}>\n                    섹션 유형이 다양함\n                    </button>\n                    <button className=\"round-ans-button\" style={{background: `${satisfy === '결과물이 유용함' ? `var(--main-color)`: 'white'}`, color: `${satisfy === '결과물이 유용함' ? 'white': `var(--main-color)`}`}} onClick={() => {setSatisfy('결과물이 유용함'); setClicked(true);}}>\n                    결과물이 유용함\n                    </button>\n                    <button className=\"round-ans-button\" style={{background: `${satisfy === '결과물의 디자인' ? `var(--main-color)`: 'white'}`, color: `${satisfy === '결과물의 디자인' ? 'white': `var(--main-color)`}`}} onClick={() => {setSatisfy('결과물의 디자인'); setClicked(true);}}>\n                    결과물의 디자인\n                    </button>\n                    <div style={{display: 'flex', alignItems: 'center', justifyContent: 'center', flexDirection:'column'}}>\n                        <button className=\"round-ans-button\" style={{background: `${satisfy === '기타' ? `var(--main-color)`: 'white'}`, color: `${satisfy === '기타' ? 'white': `var(--main-color)`}`}} onClick={() => {setSatisfy('기타'); setClicked(true);}}>\n                        기타\n                        </button>\n                        {\n                            satisfy === '기타' && \n                            <input className=\"text-modal-input inputbox\" value={satisfyEtc} onChange={e => setSatisfyEtc(e.currentTarget.value)} style={{width:'300px'}}/>\n                        }\n                    </div>\n                </div>\n                <div className=\"prev-next-fbuttons\">\n                    <div className=\"prev-next-fbutton\" onClick={toPrev}>이전</div>\n                    <div className=\"prev-next-fbutton\" onClick={toNext}>다음</div>\n                </div>\n                </>\n            )\n            case 5: return(\n                <>\n                <div className=\"big-title question\">\n                추가되면 좋겠다고 생각하는 기능을 자유롭게 남겨주세요!\n                </div>\n                <div className=\"text-modal-input\">\n                <input className=\"text-modal-input inputbox\" value={inputText} onChange={(e)=>{setInputText(e.target.value); setFunc(e.target.value); setClicked(true);}}/>\n                </div>\n                <div className=\"prev-next-fbuttons\">\n                    <div className=\"prev-next-fbutton\" onClick={toPrev}>이전</div>\n                    <div className=\"prev-next-fbutton\" onClick={toNext}>다음</div>\n                </div>\n                </>\n            )\n            case 6: return(\n                <>\n                <div className=\"big-title question\">\n                Surfee를 위해, 여러분의 소중한 의견을 자유롭게 남겨주세요!\n                </div>\n                <div className=\"text-modal-input\">\n                <input className=\"text-modal-input inputbox\" value={inputText} onChange={(e)=>{setInputText(e.target.value); setComment(e.target.value); setClicked(true);}}/>\n                </div>\n                <div className=\"prev-next-fbuttons\">\n                    <div className=\"prev-next-fbutton\" onClick={toPrev}>이전</div>\n                    <div className=\"prev-next-fbutton\" onClick={toNext}>다음</div>\n                </div>\n                </>\n            )\n            case 7: return(\n                <>\n                <div className=\"big-title question\">\n                Surfee를 주위 친구, 동료, 지인에게 추천할 의향이 얼마나 있나요?\n                </div>\n                <div className=\"row-ans\" style={{width: '750px'}}>\n                    <div className=\"circle-text\">전혀없음</div>\n                        <div className=\"circle-ans-button\" style={{background: `${recom === '0' ? `var(--main-color)`: 'white'}`, color: `${recom === '0' ? 'white': `var(--main-color)`}`}} onClick={()=>{setRecom('0'); setClicked(true);}}>0</div>\n                        <div className=\"circle-ans-button\" style={{background: `${recom === '1' ? `var(--main-color)`: 'white'}`, color: `${recom === '1' ? 'white': `var(--main-color)`}`}} onClick={()=>{setRecom('1'); setClicked(true);}}>1</div>\n                        <div className=\"circle-ans-button\" style={{background: `${recom === '2' ? `var(--main-color)`: 'white'}`, color: `${recom === '2' ? 'white': `var(--main-color)`}`}} onClick={()=>{setRecom('2'); setClicked(true);}}>2</div>\n                        <div className=\"circle-ans-button\" style={{background: `${recom === '3' ? `var(--main-color)`: 'white'}`, color: `${recom === '3' ? 'white': `var(--main-color)`}`}} onClick={()=>{setRecom('3'); setClicked(true);}}>3</div>\n                        <div className=\"circle-ans-button\" style={{background: `${recom === '4' ? `var(--main-color)`: 'white'}`, color: `${recom === '4' ? 'white': `var(--main-color)`}`}} onClick={()=>{setRecom('4'); setClicked(true);}}>4</div>\n                        <div className=\"circle-ans-button\" style={{background: `${recom === '5' ? `var(--main-color)`: 'white'}`, color: `${recom === '5' ? 'white': `var(--main-color)`}`}} onClick={()=>{setRecom('5'); setClicked(true);}}>5</div>\n                        <div className=\"circle-ans-button\" style={{background: `${recom === '6' ? `var(--main-color)`: 'white'}`, color: `${recom === '6' ? 'white': `var(--main-color)`}`}} onClick={()=>{setRecom('6'); setClicked(true);}}>6</div>\n                        <div className=\"circle-ans-button\" style={{background: `${recom === '7' ? `var(--main-color)`: 'white'}`, color: `${recom === '7' ? 'white': `var(--main-color)`}`}} onClick={()=>{setRecom('7'); setClicked(true);}}>7</div>\n                        <div className=\"circle-ans-button\" style={{background: `${recom === '8' ? `var(--main-color)`: 'white'}`, color: `${recom === '8' ? 'white': `var(--main-color)`}`}} onClick={()=>{setRecom('8'); setClicked(true);}}>8</div>\n                        <div className=\"circle-ans-button\" style={{background: `${recom === '9' ? `var(--main-color)`: 'white'}`, color: `${recom === '9' ? 'white': `var(--main-color)`}`}} onClick={()=>{setRecom('9'); setClicked(true);}}>9</div>\n                        <div className=\"circle-ans-button\" style={{background: `${recom === '10' ? `var(--main-color)`: 'white'}`, color: `${recom === '10' ? 'white': `var(--main-color)`}`}} onClick={()=>{setRecom('10'); setClicked(true);}}>10</div>\n                    <div className=\"circle-text\">완전있음</div>\n                </div>\n                <div className=\"prev-next-fbuttons\">\n                    <div className=\"prev-next-fbutton\" onClick={toPrev}>이전</div>\n                    <div className=\"prev-next-fbutton\" onClick={toNext}>완료</div>\n                </div>\n                </>\n            )\n            case 8: return(\n                <>\n                <div className=\"big-title question\">\n                    마지막으로, 다음 답변을 바탕으로 더욱 발전하는 Surfee가 되겠습니다. 감사합니다!\n                </div>\n                <div className=\"column-ans\">\n                    <div style={{margin:'10px'}}>\n                        분야 및 경력\n                    </div>\n                    <input style={{width:'50%'}} placeholder=\"마케팅 3년차/대학생 등\" className=\"text-modal-input inputbox\" value={job} onChange={(e)=>{setJob(e.target.value); setClicked(true);}}/>\n                    <div style={{margin:'10px'}}>\n                        나이\n                    </div>\n                    <div style={{width:'50%', textAlign:'center'}}>\n                        <input style={{width:'50%'}} type=\"number\" placeholder=\"숫자만 입력해주세요\" className=\"text-modal-input inputbox\" value={age} onChange={(e)=>{setAge(e.target.value); setClicked(true);}}/>&nbsp;&nbsp;&nbsp;세\n                    </div>\n                </div>\n                <div className=\"prev-next-fbuttons\">\n                    <div className=\"prev-next-fbutton\" onClick={toPrev}>이전</div>\n                    <div className=\"prev-next-fbutton\" onClick={toComplete}>다음</div>\n                </div>\n                </>\n            )\n        }\n    }\n\n    return (\n        <div>\n            <StyledModal\n                aria-labelledby=\"unstyled-modal-title\"\n                aria-describedby=\"unstyled-modal-description\"\n                open={open}\n                onClose={() => setOpen(!open)}\n                BackdropComponent={Backdrop}\n            >\n                <Box sx={style}>\n                    <div className=\"modal-top__title\" style={{marginTop:'-10px', flexDirection:'row'}}>\n                        <div className=\"big-title\" style={{marginTop:'5px'}}>Surfee 제작 과정 피드백</div>\n                        <div className=\"modal-close-button\" onClick={() => {setClear()}}>\n                            <Close size=\"30\" />\n                        </div>\n                    </div>\n                    { quest ? (\n                        <>\n                            <div className=\"questnum\">Q{page}</div>\n                            {returnQuestions()}\n                        </> \n                    ) :\n                    (<>\n                        {\n                            complete ? (\n                                <>\n                                <div className=\"big-title\" style={{color:'black', marginTop: '70px'}}>감사합니다!</div>\n                                <div className=\"big-title sub\">\n                                    작성해 주신 피드백을 바탕으로 <br />\n                                    더 발전하는 Surfee가 되겠습니다 :)\n                                </div>\n                                <div className=\"feed-button\" style={{width: '167px'}} \n                                onClick={()=>{deploy(true)}}\n                                >\n                                    배포하기\n                                </div>\n                                </>\n                            ):\n                            (\n                                <>      \n                                <div className=\"big-title\" style={{color:'black', marginTop: '70px'}}>제작을 완료하셨나요?</div>\n                                <div className=\"big-title sub\">\n                                    랜딩페이지를 <span style={{color:`var(--main-color)`}}>무료로 배포</span>하기 전에 <br />\n                                    Surfee가 더 나은 서비스를 제공할 수 있도록,<br />\n                                    제작 과정에서 느낀 점에 대한 피드백을 부탁드립니다 :)\n                                </div>\n                                <div className=\"big-title small-text\">\n                                    질문은 총 <span style={{color:`var(--main-color)`}}>8</span>개이며, 예상 소요시간은 <span style={{color:`var(--main-color)`}}>1</span>분입니다.<br/>\n                                    최초 배포 시 한번만 응답하시면 됩니다. 이후에는 나타나지 않습니다.\n                                </div>\n                                <div className=\"feed-button\" onClick={()=>{goQuest(true)}}>\n                                    피드백 하고 배포 완료하기\n                                </div>\n                                </>\n                            )\n                        }\n                    </>)\n                    }\n                    \n                </Box>\n            </StyledModal>\n        </div>\n    )\n}\n\nexport default FeedbackModal\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/NewSection.js",["919"],"import React, {useState, useRef} from 'react'\nimport DetailSection from './SectionTypes/DetailSection'\nimport HeroSection from './SectionTypes/HeroSection'\nimport ReviewSection from './SectionTypes/ReviewSection'\nimport FeaturesSection from './SectionTypes/FeaturesSection'\nimport CtaSection from './SectionTypes/CtaSection'\nimport ApplySection from './SectionTypes/ApplySection'\nimport AppDownloadSection from './SectionTypes/AppDownloadSection'\nimport QnaSection from './SectionTypes/QnaSection'\nimport GallerySection from './SectionTypes/GallerySection'\nimport TextSection from './SectionTypes/TextSection'\nimport MockupSection from './SectionTypes/MockupSection'\nimport VideoSection from './SectionTypes/VideoSection'\nimport LineSection from './SectionTypes/LineSection'\n\nimport './NewSection.css'\n\nfunction NewSection({elementRef, setting, content, index, secNum, setSecNum, isPhone, setCategory, setContents, full}) {\n    const [isHover, setIsHover] = useState('none');\n\n    const setThisSection = () => {\n        setSecNum(index);\n        if(index !== secNum){\n            setCategory(0);\n        }\n    }\n\n    const returnType = () => {\n        switch(content.sectionTypeName){\n            case 'DetailSection':\n                return (\n                    <DetailSection content={content} setting={setting}/>\n                )\n\n            case 'HeroSection':\n                return (\n                    <HeroSection content={content} setting={setting}/>\n                )\n\n            case 'ReviewSection':\n                return (\n                    <ReviewSection content={content} setting={setting}/>\n                )\n\n            case 'FeaturesSection':\n                return (\n                    <FeaturesSection content={content}  setting={setting}/>\n                )\n\n            case 'CtaSection':\n                return (\n                    <CtaSection content={content} type=\"cta\" setting={setting}/>\n                )\n\n            case 'ApplySection' :\n                return(\n                    <ApplySection content={content} type=\"apply\" setting={setting}/>\n                )\n\n            case 'AppDownloadSection' :\n                return(\n                    <AppDownloadSection content={content} type=\"appDownload\" setting={setting}/>\n                )\n\n            case 'QnaSection' :\n                return(\n                    <QnaSection content={content} setting={setting}/>\n                )\n\n            case 'GallerySection' :\n                return(\n                    <GallerySection content={content} setting={setting}/>\n                )\n\n            case 'TextSection' :\n                return(\n                    <TextSection content={content} setting={setting}/>\n                )\n\n            case 'MockupSection' :\n                return(\n                    <MockupSection Section content={content} setting={setting}/>\n                )\n\n            case 'VideoSection' :\n                return(\n                    <VideoSection content={content} setting={setting}/>\n                )\n\n            case 'LineSection' :\n                return(\n                    <LineSection content={content} setting={setting}/>\n                )\n                \n            default:\n                return (\n                    <div>\n                        기본\n                    </div>\n                )\n        }\n    }\n    \n\n    return(\n        <div ref={elementRef} className=\"new-section\" onMouseEnter={() => setIsHover('flex')} onMouseLeave={() => setIsHover('none')} style={{\n                borderTop:`${secNum === index ? '1.5px solid #918bff' : 'none'}`,\n                borderBottom:`${secNum === index ? '1.5px solid #918bff' : 'none'}`,\n                borderLeft:`${secNum === index ? '1.5px solid #918bff' : '1.5px solid #edf0f3'}`,\n                borderRight:`${secNum === index ? '1.5px solid #918bff' : '1.5px solid #edf0f3'}`,\n            }}>\n            {!full && <div className=\"for-section-hover\" style={{backgroundColor: `${isHover === 'flex' ? 'rgba(0,0,0,0.1)' : 'rgba(0,0,0,0)'}`}}>\n            </div>}\n            <div className=\"section__container\" \n                style={{\n                    backgroundImage:`${ content.backgroundType === 'image' ? `url(${content.backgroundImage.attachment})` : ''}`, \n                    backgroundAttachment:`${content.backgroundImage.fixed ? 'fixed' : 'scroll'}`\n                }} \n                onClick={() => setThisSection()}>\n                {\n                    content.backgroundType === 'color' ?\n                    <div style={{backgroundColor:`${content.backgroundColor}`, width:'100%', height:'100%', zIndex:2, position:'absolute'}}>\n                    </div>\n                    :\n                    (content.backgroundImage.overlay && content.backgroundType === 'image') &&\n                    <div style={{backgroundColor:`${content.backgroundColor}`, width:'100%', height:'100%', zIndex:2, position:'absolute'}}>\n                    </div>\n                }\n                {\n                    content.box.use && \n                    <div className=\"section__box\" style={{padding:`1vh ${full ? 'calc(11vw)' : '0vw'}`}}>\n                        <div style={{backgroundColor:`${content.box.backgroundColor}`, borderRadius:`${content.box.borderRadius}px`, width:'100%', height: '100%'}}>\n                        </div>\n                    </div>\n                }\n                {\n                    !content.responsive.pc && !isPhone &&\n                    <div style={{backgroundColor:`rgba(0,0,0,0.7)`, color:'white', width:'100%', height: '100%', position:'absolute', zIndex:4, display:'flex', justifyContent:'center', alignItems:'center', fontSize:'15px'}}>\n                        이 섹션은 PC에서 보이지 않습니다.\n                    </div>\n                }\n                {\n                    !content.responsive.mobile && isPhone &&\n                    <div style={{backgroundColor:`rgba(0,0,0,0.7)`, color:'white', width:'100%', height: '100%', position:'absolute', zIndex:4, display:'flex', justifyContent:'center', alignItems:'center', fontSize:'15px'}}>\n                        이 섹션은 모바일에서 보이지 않습니다.\n                    </div>\n                }\n                <div className=\"section__container-inner\"\n                    style={{padding:\n                        `\n                        ${isPhone ? content.padding.top/2.5 : content.padding.top}vh \n                        ${full ? 'calc(14vw + 30px)' : `${isPhone ? '15px' : '30px'}`} \n                        ${isPhone ? content.padding.bottom/2.5 : content.padding.bottom}vh \n                        ${full ? 'calc(14vw + 30px)' : `${isPhone ? '15px' : '30px'}`}\n                        `}} >\n                    {/* 실제 섹션이 보여지는건 여기밖에 없음,, */}\n                    {returnType()}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default NewSection\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/Landing/old/MainPage.js",["920","921","922","923","924","925","926","927","928","929"],"import React, {useEffect,useRef, useState} from 'react'\nimport './MainPage.css'\nimport {Link} from 'react-router-dom';\nimport { dbService } from '../../../tools/fbase';\nimport NavBar from '../../NavAndFooter/NavBar/NavBar'\nimport Footer from '../../NavAndFooter/Footer'\nimport gadata from '../../../tools/datacodes/gadata.json'\n\nimport section1 from '../../../tools/img/001.png';\nimport section0 from '../../../tools/img/005.png';\nimport section2 from '../../../tools/img/003.png';\n\nimport {Input} from 'antd'\n\nfunction MainPage({history}) {\n    const [email,setEmail] = useState(\"\");\n    const targets = useRef(null)\n\n    useEffect(() => {\n    },[])\n\n    const sendData = async () => {\n        if(email.length < 4){\n            alert(\"올바른 이메일 양식을 입력해 주세요!\");\n            return;\n        }\n        await dbService.collection(\"apply-datas\").add({\n            email:email,\n            created:Date.now(),\n        });\n\n        alert(\"신청되셨습니다. 감사합니다. 빠른 시일내로 연락드리겠습니다.\");\n        setEmail(\"\");\n    }\n\n    const scrollDown = async () => {\n        await dbService.collection('gadata').get().then(function(querySnapshot) {\n            querySnapshot.forEach(function(doc) {\n              doc.ref.delete();\n            });\n          });\n\n        for (var i = 0; i < gadata.length; i++) {\n            await dbService.collection('gadata').add(gadata[i])\n            //Do something\n        }\n        \n            const ee = await dbService.collection('saved-page').where(\"urlId\", '==', '0').get()\n\n            let eee = ee.docs.map(doc => {\n                return({...doc.data(), id:doc.id})\n            });\n\n        targets.current.scrollIntoView({behavior: 'smooth'})\n    }\n\n    return (\n        <>\n        <div className=\"main-page-container\">\n            <div className=\"main-page-section\" style={{backgroundColor:'#6B63F7'}}>\n                <div className=\"main-section-left\" style={{color:'white'}}>\n                    <span className=\"one-section-big\">\n                        랜딩페이지 제작부터<br/>\n                        데이터 분석까지<br/>\n                        빠르고 간단하게\n                    </span>\n                    <span className=\"one-section-small\">\n                    신규 서비스와 이벤트부터 스타트업 아이템 검증까지,<br/>\n                    코딩없이 랜딩페이지를 만들고 실시간 데이터 분석을 통해 <br/>\n                    최고의 고객 전환율을 경험해 보세요.\n                    </span>\n                    {/* <button className=\"apply-button\" onClick={scrollDown} style={{height:'60px', width:'200px', borderRadius:'10px', marginTop:'20px'}}>\n                        지금 바로 시작하기\n                    </button> */}\n                </div>\n                <div className=\"main-section-right\">              \n                    <img src={section0} className=\"section-one-image-main\" />\n                </div>\n            </div>\n            \n            <div ref={targets} className=\"main-page-section\" style={{backgroundColor:\"white\"}}>\n                <div className=\"main-section-left\">\n                    <span className=\"one-section-big\">\n                        코딩도 디자인도 필요없이<br/>One-stop으로<br/>랜딩페이지 제작하기\n                    </span>\n                    <span className=\"one-section-small\">\n                        개발자 없이도, 외주 없이도 직접<br/>\n                        템플릿을 고르고 블로그를 꾸미듯<br/>\n                        쉽고 빠르게 랜딩페이지를 만들어 보세요.\n                    </span>\n                </div>\n                <div className=\"main-section-right\">                   \n                    <img src={section1} className=\"section-one-image\"/>\n                </div>\n            </div>\n            </div>\n           </>\n    )\n}\n\nexport default MainPage","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/NavAndFooter/Profile.js",["930","931","932","933","934","935","936","937","938"],"import React, {useContext, useState} from 'react'\nimport {UserContext} from '../../Router'\nimport ConfirmCustom from '../../tools/ConfirmCustom'\nimport {\n    ChakraProvider,\n    Menu,\n    MenuButton,\n    MenuList,\n    Button,\n    MenuItem,\n  } from '@chakra-ui/react'\nimport './Profile.css'\nimport profileImage from '../../tools/img/main/profile.png'\nimport {BarGraph} from '@styled-icons/entypo'\nimport {QuestionAnswer} from '@styled-icons/material'\nimport {LogOutCircle} from '@styled-icons/boxicons-regular'\nimport {authService} from '../../tools/fbase'\nimport {Link} from 'react-router-dom'\nimport LoginModal from '../Login/LoginModal';\nimport { createBrowserHistory } from 'history';\nconst history = createBrowserHistory();\n\nfunction Profile({make}) {\n    const {state, action} = useContext(UserContext) //ContextAPI로 state와 action을 넘겨받는다.\n    const [loginModal, setLoginModal] = useState(false)\n    const [confirm, setConfirm] = useState(false)\n\n    const onLogout = () => {\n        authService.signOut();\n        alert(\"로그아웃 되셨습니다.\");\n        history.push('/');\n        history.go();\n    }\n\n    const goResponse = async () => {\n        // 관리페이지에서 수정하기를 누른 거라면\n        const check = window.confirm(\"관리페이지로 돌아가시겠습니까?\\n저장하기 버튼을 클릭하지 않으셨다면 저장이 되지 않았을 수 있습니다.\")\n        if(check === true){\n            if(state.userObj === null){\n                alert(\"로그인을 하셔야 관리 페이지로 접속하실 수 있습니다.\");\n                setLoginModal(true);\n            }else{\n                history.push('/response');\n                history.go();\n            }\n        }else{\n            return\n        }\n    }\n\n    return (\n        <ChakraProvider>\n            {\n                state.userObj !== undefined && state.userObj !== null &&\n                <Menu style={{color:'black'}}>\n                    <MenuButton aria-label='Options' variant='outline' style={{marginLeft:'10px'}}>\n                        {\n                            state.userObj.photoURL ? \n                            <img \n                                className=\"profile__image\"\n                                src={state.userObj.photoURL} />\n                            :\n                            <img\n                                className=\"profile__image\"\n                                src={profileImage} />\n                        }\n                    </MenuButton>\n                    <MenuList minWidth='200px' maxWidth='200px'>\n                        <MenuItem className=\"profile__menu-item\" style={{height:'80px', display: 'flex', alignItems: 'center',padding:'5px', justifyContent: 'center'}}>\n                            <div>\n                                {\n                                    state.userObj.photoURL ? \n                                    <img className=\"profile__image\" src={state.userObj.photoURL} />\n                                    :\n                                    <img className=\"profile__image\" src={profileImage} />\n                                }\n                            </div>\n                            <div className=\"flex-column\" style={{marginLeft:'10px'}}>\n                                <div>\n                                    {state.userObj.displayName}\n                                </div>\n                                <div style={{display:'flex', fontSize:'0.8em', flexWrap:'wrap'}}>\n                                    {state.userObj.email}\n                                </div>\n                            </div>\n                        </MenuItem>\n                        <MenuItem className=\"profile__menu-item\" onClick={() => {\n                                window.open(\n                                    'https://tally.so/r/wMZ4Yn',\n                                    '_blank'\n                                )\n                            }}> \n                            {/* <QuestionAnswer className=\"profile__icon\"/>  */}\n                            문의하기\n                        </MenuItem>\n                        <MenuItem className=\"profile__menu-item\"> \n                        {\n                            make ? \n                            <div onClick={() => goResponse()}>\n                                {/* <BarGraph className=\"profile__icon\" /> */}\n                                관리페이지\n                            </div>\n                            :\n                            <Link to=\"/response\">\n                                {/* <BarGraph className=\"profile__icon\" /> */}\n                                관리페이지\n                            </Link>\n                        }\n                        </MenuItem>\n                        <MenuItem onClick={() => setConfirm(true)} className=\"profile__menu-item\" style={{borderTop:'1px solid rgba(0,0,0,0.2)'}}> \n                            {/* <LogOutCircle className=\"profile__icon\"/> */}\n                            로그아웃\n                        </MenuItem>\n                    </MenuList>\n                </Menu>\n            }\n            <LoginModal open={loginModal} setOpen={setLoginModal} />\n            <ConfirmCustom open={confirm} setOpen={setConfirm}  message={<div>\n                <div style={{fontWeight: '800', fontSize:'1.1em', textAlign: 'center', width:'100%'}}>\n                    로그아웃\n                </div>\n                <div style={{marginTop:'20px'}}>\n                    로그아웃 하시겠습니까?\n                </div>\n            </div>} callback={onLogout}/>\n        </ChakraProvider>\n    )\n}\n\nexport default Profile\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Footer/MakeFooterV2.js",["939","940"],"import React, {useContext, useState} from 'react'\nimport { MyContext } from '../../../pages/Make/MakePageV2'\nimport FTemplate from './FTemplate'\nimport {Delete, Options} from '@styled-icons/fluentui-system-filled'\nimport './MakeFooter.css'\n\nfunction MakeFooterV2({full, history, foot, setFoot}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n    const [isHover, setIsHover] = useState('none');\n\n    return (\n        <div className=\"make-footer\" onMouseEnter={() => setIsHover('flex')} onMouseLeave={() => setIsHover('none')} style={{\n            borderTop:`${state.secNum === 51 ? '1.5px solid #918bff' : 'none'}`,\n            borderBottom:`${state.secNum === 51 ? '1.5px solid #918bff' : 'none'}`,\n            borderLeft:`${state.secNum === 51 ? '1.5px solid #918bff' : '1.5px solid #edf0f3'}`,\n            borderRight:`${state.secNum === 51 ? '1.5px solid #918bff' : '1.5px solid #edf0f3'}`,\n        }}>\n            <footer className=\"make-footer__container\" \n            style={{backgroundColor:`${foot.backgroundColor}`, \n            padding:`${\n                state.isPhone ? foot.paddingTop/2.5 : foot.paddingTop}vh \n                ${full ? 'calc(14vw + 30px)' : `${state.isPhone ? '15px' : '30px'}`} \n                ${state.isPhone ? foot.paddingTop/2.5 : foot.paddingBottom}vh \n                ${full ? 'calc(14vw + 30px)' : `${state.isPhone ? '15px' : '30px'}`} `\n            // paddingTop: `${foot.paddingTop}px`, \n            // paddingBottom: `${foot.paddingBottom}px`\n        }} onClick={() => action.setSecNum(51)}>\n                    <FTemplate foot={foot} history={history} setFoot={setFoot} />\n            </footer>\n            <div className=\"for-section-hover\" style={{backgroundColor: `${isHover === 'flex' ? 'rgba(0,0,0,0.1)' : 'rgba(0,0,0,0)'}`}}>\n            </div>\n        </div>\n    )\n}\n\nexport default MakeFooterV2\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/NavBar/MakeNavigationV2.js",["941","942","943","944"],"import React, {useContext, useState} from 'react'\nimport { MyContext } from '../../../pages/Make/MakePageV2'\nimport NaviConatainer from './NaviConatainer'\nimport {Delete, Options} from '@styled-icons/fluentui-system-filled'\nimport { motion } from 'framer-motion'\nimport produce from 'immer'\nimport './MakeNavigation.css'\n\nfunction MakeNavigationV2({full, navi, setNavi, history}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n    const [isHover, setIsHover] = useState('none');\n\n    return (\n        <>\n        <div className=\"make-navigation\" onMouseEnter={() => setIsHover('flex')} onMouseLeave={() => setIsHover('none')} style={{\n                borderTop:`${state.secNum === 50 ? '1.5px solid #918bff' : 'none'}`,\n                borderBottom:`${state.secNum === 50 ? '1.5px solid #918bff' : 'none'}`,\n                borderLeft:`${state.secNum === 50 ? '1.5px solid #918bff' : '1.5px solid #edf0f3'}`,\n                borderRight:`${state.secNum === 50 ? '1.5px solid #918bff' : '1.5px solid #edf0f3'}`,\n            }}>\n            <div className=\"make-nav-container\" \n                style={{\n                    paddingRight: `${full ? 'calc(14vw + 30px)' : `${state.isPhone ? '12px' : '30px'}`}`,\n                    paddingLeft: `${full ? 'calc(14vw + 30px)' : `${state.isPhone ? '12px' : '30px'}`}`,\n                    borderBottom:`${navi.bottomBorder.use ? `1px solid ${navi.bottomBorder.color}` : ''}`, \n                    backgroundColor:`${navi.backgroundColor}`, \n                    height:`${navi.height}px`,\n                    // display: `${navi.logo.align === 'center' && navi.button.use && !state.isPhone ? 'block' : 'flex'}`\n                }} \n                    \n                onClick={() => action.setSecNum(50)}>\n                <NaviConatainer navi={navi} setNavi={setNavi} />\n            </div>\n            <div className=\"for-section-hover\" style={{backgroundColor: `${isHover === 'flex' ? 'rgba(0,0,0,0.1)' : 'rgba(0,0,0,0)'}`}}>\n            </div>\n        </div>\n        </>\n    )\n\n}\n\nexport default MakeNavigationV2\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/NewSectionMake.js",["945","946"],"import React, {useState, useEffect, useContext} from 'react'\nimport { MyContext } from '../../../pages/Make/MakePageV2'\nimport EditNaviSection from './NavFooterSetting/EditNaviSection'\nimport EditDetailSection from './EditTemplates/EditDetailSection'\nimport EditCtaSection from './EditTemplates/EditCtaSection'\nimport EditHeroSection from './EditTemplates/EditHeroSection'\nimport EditReviewSection from './EditTemplates/EditReviewSection'\nimport EditFeaturesSection from './EditTemplates/EditFeaturesSection'\nimport EditQnaSection from './EditTemplates/EditQnaSection'\nimport EditGallerySection from './EditTemplates/EditGallerySection'\nimport EditTextSection from './EditTemplates/EditTextSection'\nimport EditMockupSection from './EditTemplates/EditMockupSection'\nimport EditVideoSection from './EditTemplates/EditVideoSection'\nimport EditLineSection from './EditTemplates/EditLineSection'\nimport EditTopBar from './tools/func/FuncTopBar'\nimport {ArrowIosBack} from '@styled-icons/evaicons-solid'\nimport EditSetting from './NavFooterSetting/EditSetting'\nimport EditFooterSection from './NavFooterSetting/EditFooterSection'\nimport EditContents from './NavFooterSetting/EditContents'\nimport {sectionIcons} from './NavFooterSetting/ContentsIcons';\nimport {Trash} from '@styled-icons/boxicons-solid'\nimport {\n    ChakraProvider,\n  } from '@chakra-ui/react'\nimport './NewSectionMake.css'\n\nconst NAVSECNUM = 50;\nconst FOOTSECNUM = 51;\nconst SETTINGSECNUM = 52;\nconst CONTENTSSECNUM = 53;\n\nconst MARGINTOP = '100px'\n\nconst USEDCOLORS = [\n    \"#ffffff\",\n    \"#00ff00\",\n    \"#ff0000\",\n    \"#0000ff\",\n    \"#636cff\",\n    \"#000000\",\n]\n\nexport const MakeContext = React.createContext({\n    stateC : {usedColors : USEDCOLORS},\n    actionC : {setUsedColors : () => {}}\n});\n\nfunction NewSectionMake({content, foot, setFoot, navi, setNavi, setting, setSetting, elementsRef, setContents}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n    const [usedColors, setUsedColors] = useState(USEDCOLORS);\n\n    const contextValue = {\n        stateC: {usedColors},\n        actionC : {setUsedColors},\n    }\n\n    const deleteSection = (index) => {\n        if(index === 0){\n            action.setContents([\n                ...state.contents.slice(1,state.contents.length)\n            ])\n        }if(index === state.contents.length){\n            action.setContents([\n                ...state.contents.slice(0,index-1),\n            ])\n        }else{\n            action.setContents([\n                ...state.contents.slice(0,index),\n                ...state.contents.slice(index+1, state.contents.length)\n            ])\n        }\n    }\n\n    const sectionMakeTable = () => {\n\n        switch(content.sectionTypeName){\n            case 'DetailSection':\n                return (\n                    <EditDetailSection content={content} category={state.category}/>\n                )\n\n            // 이미지인 경우 편집화면\n            case 'HeroSection':\n                return (\n                    <EditHeroSection content={content} category={state.category}/>\n                )\n\n            case 'CtaSection':\n                return (\n                    <EditCtaSection content={content} category={state.category} type=\"cta\"/>\n                )\n\n            // 리뷰들인 경우 편집화면\n            case 'ReviewSection':\n                return(\n                    <EditReviewSection content={content} category={state.category}/>\n                )\n            \n            case 'FeaturesSection':\n                return(\n                    <EditFeaturesSection content={content} category={state.category}/>\n\n                )\n\n            case 'ApplySection':\n                return(\n                    <EditCtaSection content={content} category={state.category} type=\"apply\"/>\n\n                )\n            \n            case 'AppDownloadSection':\n                return(\n                    <EditCtaSection content={content} category={state.category} type=\"appDownload\"/>\n\n                )\n    \n            case 'QnaSection':\n                return(\n                    <EditQnaSection content={content} category={state.category}/>\n                )\n\n            case 'GallerySection':\n                return(\n                    <EditGallerySection content={content} category={state.category}/>\n                )\n\n            case 'TextSection':\n                return(\n                    <EditTextSection content={content} category={state.category}/>\n                )\n\n            case 'MockupSection':\n                return(\n                    <EditMockupSection content={content} category={state.category}/>\n                )\n\n            case 'VideoSection':\n                return(\n                    <EditVideoSection content={content} category={state.category}/>\n                )\n\n            case 'LineSection':\n                return(\n                    <EditLineSection content={content} category={state.category}/>\n                )\n    \n            default:\n                return(\n                    <div>\n                        섹션 {state.secNum}번이고 템플릿은 뭐지? 디폴트 값입니다.\n                        <br/>\n                    </div>\n                )\n\n        }\n    }\n\n    const returnMake = () => {\n        if(state.secNum === NAVSECNUM){\n            return(\n                <>\n                    <div className=\"top-bar__fixed\">\n                        <div className=\"back__container\">\n                            <div className=\"back__container-button\" onClick={() => action.setSecNum(CONTENTSSECNUM)} style={{cursor:'pointer'}}>\n                                <span className=\"back-button\">\n                                    <ArrowIosBack size=\"20\" />\n                                </span>\n                                <span className=\"content__name\">\n                                    내비게이션 바\n                                </span>\n                            </div>\n                        </div>\n                        <EditTopBar category={state.category} setCategory={action.setCategory} />\n                    </div>\n                    <div style={{marginTop:`${MARGINTOP}`}}></div>\n                    <EditNaviSection navi={navi} setNavi={setNavi} category={state.category}/>\n                </>\n            )\n\n        }else if(state.secNum === FOOTSECNUM ){\n            return(\n                <>\n                    <div className=\"top-bar__fixed\">\n                        <div className=\"back__container\">\n                            <div className=\"back__container-button\" onClick={() => action.setSecNum(CONTENTSSECNUM)} style={{cursor:'pointer'}}>\n                                <span className=\"back-button\">\n                                    <ArrowIosBack size=\"20\" />\n                                </span>\n                                <span className=\"back-text\">\n                                    푸터 바\n                                </span>\n                            </div>\n                        </div>\n                        <EditTopBar category={state.category} setCategory={action.setCategory} />\n                    </div>\n                    <div style={{marginTop:`${MARGINTOP}`}}></div>\n                    <EditFooterSection foot={foot} setFoot={setFoot} category={state.category}/>\n                </>\n            )\n        }else if(state.secNum === SETTINGSECNUM ){\n            return(\n                <>\n                    <div className=\"top-bar__fixed\">\n                        <EditTopBar category={state.category} setCategory={action.setCategory} />\n                    </div>\n                    <div style={{marginTop:`60px`}}></div>\n                    <EditSetting setting={setting} setSetting={setSetting} category={state.category} setContents={setContents} content={content}/>\n                </>\n            )\n        }else if(state.secNum === CONTENTSSECNUM ){\n            return(\n                <EditContents setting={setting} navi={navi} setNavi={setNavi} foot={foot} setFoot={setFoot} elementsRef={elementsRef}/>\n            )\n        }else{\n            return (\n                <>\n                {content && \n                <>\n                    <div className=\"top-bar__fixed\">\n                        <div className=\"back__container\">\n                            <div className=\"centera\" style={{width:'50%', justifyContent:'start'}}>\n                                <div className=\"back__container-button\" onClick={() => action.setSecNum(CONTENTSSECNUM)} style={{cursor:'pointer'}}>\n                                    <span className=\"back-button\">\n                                        <ArrowIosBack size=\"20\" />\n                                    </span>\n                                    {\n                                        sectionIcons.filter(doc => doc.sectionTypeName === content.sectionTypeName)[0].icon\n                                    }\n                                    <span className=\"back-text\">\n                                        {content.name}\n                                    </span>\n                                </div>\n                            </div>\n                            <div style={{width:'50%',display:'flex', justifyContent:'end', paddingRight:'10px'}}>\n                                <span className=\"back__container-button\" style={{padding:'6px', cursor:'pointer'}} \n                                    onClick={() => {\n                                        const yes = window.confirm(\"정말 삭제하시겠습니까?\");\n                                        if(yes){\n                                            deleteSection(state.secNum);\n                                        }\n                                    } }>\n                                    <Trash size=\"20\" style={{color:'rgba(105,105,105,1)'}} />\n                                </span>\n                            </div>\n                        </div>\n                        <EditTopBar category={state.category} setCategory={action.setCategory} />\n                    </div>\n                    <div style={{marginTop:`${MARGINTOP}`}}></div>\n                    {sectionMakeTable()}\n                </> }\n                </>\n            )\n        }\n    }\n\n    return (\n        <MakeContext.Provider value={contextValue} style={{position:'relative'}} onClick={() => action.setFocus('')}>\n            {returnMake()}\n        </MakeContext.Provider>\n    )\n}\n\nexport default NewSectionMake\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/Make/NavBarInMakePage/NavBarInMakePage.js",["947","948","949","950"],"import React, {useContext, useState, useEffect} from 'react';\n// import { Button } from 'antd';\nimport './MakeNavBar.css';\nimport { MyContext } from '../MakePageV2'\nimport {Monitor} from '@styled-icons/feather'\nimport { Phone } from '@styled-icons/bootstrap'\nimport {Fullscreen} from '@styled-icons/bootstrap'\nimport LoginModal from '../../../components/Login/LoginModal'\nimport { dbService } from '../../../tools/fbase';\nimport { stService } from '../../../tools/fbase';\nimport MakeTutorialModal from '../../../tools/MakeTutorialModal';\nimport ChoiceModal from '../../../components/Landing/ChoiceModal'\nimport MiniModal from '../../../tools/MiniModal';\nimport { v4 as uuidv4 } from 'uuid';\nimport {Settings} from '@styled-icons/ionicons-sharp'\nimport {DocumentOnePage} from '@styled-icons/fluentui-system-filled'\nimport {SendPlane} from '@styled-icons/remix-fill'\nimport lodash from 'lodash'\nimport \"@lottiefiles/lottie-player\";\nimport produce from 'immer'\nimport {\n    ChakraProvider,\n    Popover,\n    PopoverTrigger,\n    PopoverContent,\n    PopoverBody,\n    PopoverArrow,\n    Button,\n  } from '@chakra-ui/react'\nimport {QuestionCircle} from '@styled-icons/bootstrap'\nimport Profile from '../../../components/NavAndFooter/Profile'\n\nconst NavBarInMakePage = ({history, userObj, full, setFull, isPhone, setIsPhone, loading, foot, editing,setEditing, setEditingId, editingId, setLoading, setting, navi, setNavi, saveLocalStorage}) => {\n    const [loginModal, setLoginModal] = useState(false)\n    const {state, action} = useContext(MyContext)\n    const [deviceOpen, setDeviceOpen] = useState(false);\n    const [tutorialOpen, setTutorialOpen] = useState(false);\n    const [saveOpen, setSaveOpen] = useState(false);\n    const [saveLoading, setSaveLoading] = useState(false);\n    const [publishLoading, setPublishLoading] = useState(false);\n    const [miniOpen, setMiniOpen] = useState(false)\n\n    useEffect(() => {\n        setMiniOpen(true);\n    }, [])\n  \n    const handleClick = () => {\n        setDeviceOpen(!deviceOpen);\n    };\n  \n    const handleClose = () => {\n        setDeviceOpen(false);\n    };\n\n    const moveToMain = () => {\n        window.open(\n            'https://surfee.co.kr',\n            '_blank' // <- This is what makes it open in a new window.\n        );\n    }\n\n    const checkUnSaved = (attach) => {\n        return attach.length > 1000;\n    }\n\n\nconst saveImages = async () => {\n\n    if(navi.logo.use && navi.logo.image.use && checkUnSaved(navi.logo.image.attachment)){\n        // 사진을 먼저 업로드하고 그 URL을 받아서 데이터로 넣어줘야한다.\n        const attachmentRef = stService.ref().child(`${userObj.uid}/${uuidv4()}`)\n        const response = await attachmentRef.putString(navi.logo.image.attachment, \"data_url\");\n        const attachmentURL = await response.ref.getDownloadURL();\n        \n        setNavi(produce(navi, draft => {\n            draft.logo.image.attachment = attachmentURL;\n        }))\n    }\n    if(checkUnSaved(setting.faviconAttachment)){\n        // 사진을 먼저 업로드하고 그 URL을 받아서 데이터로 넣어줘야한다.\n        const attachmentRef = stService.ref().child(`${userObj.uid}/${uuidv4()}`)\n        const response = await attachmentRef.putString(setting.faviconAttachment, \"data_url\");\n        const attachmentURL = await response.ref.getDownloadURL();\n        \n        action.setSetting(produce(state.setting, draft => {\n            draft.faviconAttachment = attachmentURL;\n        }))\n    }\n\n    let contCopy = lodash.cloneDeep(state.contents)\n\n    for ( const [index, cont] of state.contents.entries() ){\n\n        // 배경 이미지 업로드 배경은 다 있지?\n        if(cont.backgroundType === \"image\" && checkUnSaved(cont.backgroundImage.attachment)){\n            const attachmentRef = stService.ref().child(`${userObj.uid}/${uuidv4()}`)\n            const response = await attachmentRef.putString(cont.backgroundImage.attachment, \"data_url\");\n            const attachmentURL = await response.ref.getDownloadURL();\n\n            contCopy[index].backgroundImage.attachment = attachmentURL;\n        }else if(cont.backgroundType === \"color\"){\n            contCopy[index].backgroundImage.attachment = '';\n        }\n\n        if(cont.sectionTypeName === 'HeroSection' || cont.sectionTypeName === 'DetailSection' || cont.sectionTypeName === 'CtaSection' || cont.sectionTypeName === 'VideoSection' ||  cont.sectionTypeName === 'MockupSection'){\n\n            // 이미지 업로드\n            if(cont.contents.type === 'image') {\n                contCopy[index].video.attachment = ''\n                contCopy[index].slide_img.attachment1 = ''\n                contCopy[index].slide_img.attachment2 = ''\n                contCopy[index].slide_img.attachment3 = ''\n                contCopy[index].mockup.attachment = ''\n                contCopy[index].mockup.attachment2 = ''\n            }\n            // 이미지 업로드\n            if(cont.contents.type === 'video') {\n                contCopy[index].image.attachment = ''\n                contCopy[index].slide_img.attachment1 = ''\n                contCopy[index].slide_img.attachment2 = ''\n                contCopy[index].slide_img.attachment3 = ''\n                contCopy[index].mockup.attachment = ''\n                contCopy[index].mockup.attachment2 = ''\n            }\n\n            if(cont.contents.type === 'slide') {\n                contCopy[index].video.attachment = ''\n                contCopy[index].image.attachment = ''\n                contCopy[index].mockup.attachment = ''\n                contCopy[index].mockup.attachment2 = ''\n            }\n\n            if(cont.contents.type === 'mockup') {\n                contCopy[index].video.attachment = ''\n                contCopy[index].image.attachment = ''\n                contCopy[index].slide_img.attachment1 = ''\n                contCopy[index].slide_img.attachment2 = ''\n                contCopy[index].slide_img.attachment3 = ''\n            }\n\n            if(cont.contents.type === 'image' && checkUnSaved(cont.image.attachment)){\n\n                const attachmentRef = stService.ref().child(`${userObj.uid}/${uuidv4()}`)\n                const response = await attachmentRef.putString(cont.image.attachment, \"data_url\");\n                const attachmentURL = await response.ref.getDownloadURL();\n\n                contCopy[index].image.attachment = attachmentURL;\n            }\n\n            // 목업 업로드\n            if(cont.contents.type === 'mockup' && checkUnSaved(cont.mockup.attachment)){\n                const attachmentRef = stService.ref().child(`${userObj.uid}/${uuidv4()}`)\n                const response = await attachmentRef.putString(cont.mockup.attachment, \"data_url\");\n                const attachmentURL = await response.ref.getDownloadURL();\n\n                contCopy[index].mockup.attachment = attachmentURL;\n            }\n            if(cont.contents.type === 'mockup' && checkUnSaved(cont.mockup.attachment2)){\n                const attachmentRef = stService.ref().child(`${userObj.uid}/${uuidv4()}`)\n                const response = await attachmentRef.putString(cont.mockup.attachment2, \"data_url\");\n                const attachmentURL = await response.ref.getDownloadURL();\n\n                contCopy[index].mockup.attachment2 = attachmentURL;\n            }\n\n            // 슬라이드 업로드\n            if(cont.contents.type === 'slide' && checkUnSaved(cont.slide_img.attachment1)){\n                const attachmentRef = stService.ref().child(`${userObj.uid}/${uuidv4()}`)\n                const response = await attachmentRef.putString(cont.slide_img.attachment1, \"data_url\");\n                const attachmentURL = await response.ref.getDownloadURL();\n\n                contCopy[index].slide_img.attachment1 = attachmentURL;\n            }\n            // 슬라이드 업로드\n            if(cont.contents.type === 'slide' && checkUnSaved(cont.slide_img.attachment2)){\n                const attachmentRef = stService.ref().child(`${userObj.uid}/${uuidv4()}`)\n                const response = await attachmentRef.putString(cont.slide_img.attachment2, \"data_url\");\n                const attachmentURL = await response.ref.getDownloadURL();\n\n                contCopy[index].slide_img.attachment2 = attachmentURL;\n            }\n            // 슬라이드 업로드\n            if(cont.contents.type === 'slide' && checkUnSaved(cont.slide_img.attachment3)){\n                const attachmentRef = stService.ref().child(`${userObj.uid}/${uuidv4()}`)\n                const response = await attachmentRef.putString(cont.slide_img.attachment3, \"data_url\");\n                const attachmentURL = await response.ref.getDownloadURL();\n\n                contCopy[index].slide_img.attachment3 = attachmentURL;\n            }\n            // 슬라이드 업로드\n            if(cont.contents.type === 'video' && cont.video.type === 'base' && checkUnSaved(cont.video.attachment)){\n                const attachmentRef = stService.ref().child(`${userObj.uid}/${uuidv4()}`)\n                const response = await attachmentRef.putString(cont.video.attachment, \"data_url\");\n                const attachmentURL = await response.ref.getDownloadURL();\n\n                contCopy[index].video.attachment = attachmentURL;\n            }\n\n        }\n\n        // 엘리먼츠 업로드\n        if(cont.sectionTypeName === 'FeaturesSection' || cont.sectionTypeName === 'ReviewSection' || cont.sectionTypeName === 'GallerySection'){\n            if(cont.element.type === 'image'){\n                for ( const [index2, value] of cont.elements.entries() ) {\n                    if(checkUnSaved(value.attachment)){\n                        const attachmentRef = stService.ref().child(`${userObj.uid}/${uuidv4()}`)\n                        const response = await attachmentRef.putString(value.attachment, \"data_url\");\n                        const attachmentURL = await response.ref.getDownloadURL();\n                        contCopy[index].elements[index2].attachment = attachmentURL;\n                    }\n                }\n            }else if(cont.element.type === 'icon'){\n                for ( const [index2, value] of cont.elements.entries() ) {\n                    contCopy[index].elements[index2].attachment = '';\n                }\n            }\n        }\n        // 다른 이미지는 더 없는거겠지?\n    }\n    return lodash.cloneDeep(contCopy);\n}\n\nconst afterSaveImage = async (returned) => {\n    if(editing){\n        const savedPages = await dbService\n            .collection(\"saved-page\")\n            .where(\"urlId\", \"==\", setting.urlId)\n            .get(); // uid를 creatorId로 줬었으니까.\n        \n        let savedPage = savedPages.docs.map(doc => {\n            return({...doc.data(), id:doc.id})\n        });\n\n        if(setting.urlId === ''){\n            alert(\"url을 설정해야 합니다.\");\n            setLoading(false);\n        }else if(savedPage.length > 0 && savedPage[0].id !== editingId){\n            alert(\"이미 존재하는 url입니다. 다른 url을 사용해 주세요.\");\n            setLoading(false);\n        }else{\n            const body = {\n                contents:returned,\n                navi:navi,\n                foot:foot,\n                setting:setting,\n                created:Date.now(),\n                makerEmail:userObj.email,\n                // makingTypeByUser:makingTypeByUser,\n                urlId:setting.urlId,\n            }\n\n            await dbService.doc(`saved-page/${editingId}`).update(body);\n            // 자동저장 하던 걸 지운다.\n            window.localStorage.removeItem(\"temp\");\n            setSaveOpen(true);\n        }\n    }else{\n        const savedPages = await dbService\n            .collection(\"saved-page\")\n            .where(\"urlId\", \"==\", setting.urlId)\n            .get(); // uid를 creatorId로 줬었으니까.\n        \n        let savedPage = savedPages.docs.map(doc => {\n            return({...doc.data(), id:doc.id})\n        });\n\n        if(setting.urlId === ''){\n            alert(\"url을 설정해야 합니다.\");\n            setLoading(false);\n        }else if(savedPage.length > 0){\n            alert(\"이미 존재하는 url입니다. 다른 url을 사용해 주세요.\");\n            setLoading(false);\n        }else{\n            const body = {\n                contents:returned,\n                navi:navi,\n                foot:foot,\n                setting:setting,\n                created:Date.now(),\n                makerEmail:userObj.email,\n                // makingTypeByUser:makingTypeByUser,\n                urlId:setting.urlId,\n            }\n\n            const awssss = await dbService.collection(\"saved-page\").add(body);\n            \n            setEditing(true);\n            setEditingId(awssss.id);\n\n            await dbService.collection(\"urlStores\").add({\n                urlId:body.urlId\n            });\n\n            // 자동저장 하던 걸 지운다.\n            window.localStorage.removeItem(\"temp\");\n            setSaveOpen(true);\n        }\n    }\n}\n\n    const onSubmit = async () => {\n        // 배포하기 클릭\n        // 관리페이지에서 수정하기를 누른 거라면\n        saveLocalStorage()\n        if(userObj === null){\n            alert(\"로그인 하셔야 저장 후 배포하실 수 있습니다.\");\n            setLoginModal(true);\n        }else{\n            setSaveLoading(true);\n            setTimeout(async () => {\n                saveLocalStorage();\n                const returned = await saveImages();\n                await afterSaveImage(returned);\n                setSaveLoading(false);\n            }, 250)\n        }\n    }\n    const goSetup = async () => {\n        // 배포하기 클릭\n        // 관리페이지에서 수정하기를 누른 거라면\n        const check = window.confirm(\"관리페이지로 돌아가시겠습니까?\\n저장하기 버튼을 클릭하지 않으셨다면 저장이 되지 않았을 수 있습니다.\")\n        if(check === true){\n            if(userObj === null){\n                alert(\"로그인을 하셔야 관리 페이지로 접속하실 수 있습니다.\");\n                setLoginModal(true);\n            }else{\n                history.push('/response');\n                history.go();\n            }\n        }else{\n            return\n        }\n    }\n\n    \n    const doPublish = async () => {\n        setPublishLoading(true)\n\n        saveLocalStorage()\n\n        if(userObj === null){\n            alert(\"로그인 하셔야 저장 후 배포하실 수 있습니다.\");\n            setLoginModal(true);\n        }else{\n            setSaveLoading(true);\n            setTimeout(async () => {\n                saveLocalStorage();\n                const returned = await saveImages();\n                await afterSaveImage(returned);\n                setSaveLoading(false);\n\n                const saveDatas = await dbService\n                .collection(\"saved-page\")\n                .where(\"urlId\", \"==\", setting.urlId)\n                .get(); // uid를 creatorId로 줬었으니까.\n\n                let saveData = saveDatas.docs.map(doc => {\n                    return({...doc.data(), id:doc.id})\n                });\n\n                let content = saveData[0]\n\n                console.log(content, \"컨텐츠\")\n\n                const urlDatas = await dbService\n                .collection(\"published-page\")\n                .where(\"urlId\", \"==\", content.urlId)\n                .get(); // uid를 creatorId로 줬었으니까.\n                \n                let urlData = urlDatas.docs.map(doc => {\n                    return({...doc.data(), id:doc.id})\n                });\n                \n                if(urlData.length > 0 && urlData[0].pageId !== content.id ){\n                    alert(\"url을 변경한 후 배포해주시기 바랍니다.\");\n                    return;\n                }\n\n                await dbService\n                    .collection('published-page')\n                    .where('pageId', \"==\", content.id)\n                    .get().then( async querySnapshot => \n                        { \n                            if(querySnapshot.empty){\n                                let body = {\n                                    ...content,\n                                    pageId:content.id,\n                                    created:Date.now(),\n                                }\n                                await dbService.collection('published-page').add(body)\n                                setPublishLoading(false)\n                                alert(\"배포 완료되었습니다.\")\n                            }else{\n                                let body = {\n                                    ...content,\n                                    created:Date.now(),\n                                }\n                                querySnapshot.forEach(async (doc) => {\n                                    await dbService.doc(`published-page/${doc.id}`).update(body).then(() => {\n                                        setPublishLoading(false)\n                                        alert(\"배포 완료되었습니다.\")\n                                    })\n                                });\n                            }\n                        }\n                    )\n\n            }, 250)\n        }\n    }\n\n    const deviceSelect = () => {\n        return(\n            <div style={{width:'15%', paddingRight:'20px'}}>\n                <Popover\n                    placement='bottom'\n                    closeOnBlur={false}\n                    isOpen={deviceOpen}\n                    onClose={handleClose}\n                >\n                <PopoverTrigger>\n                    <div className=\"device-button\" onClick={handleClick} style={{marginRight:'20px'}}>\n                        {\n                            isPhone ? <Phone size=\"25\" /> : <Monitor size=\"25\" />\n                        }\n                    </div>\n                </PopoverTrigger>\n                <PopoverContent style={{width:'200px', borderRadius:'20px'}}>\n                    <PopoverArrow />\n                    \n                    <PopoverBody>\n                        <div className=\"device__container\">\n                            <span className={isPhone && !full ? \"device-button clicked\" : \"device-button\" } onClick={e => {setIsPhone(true);setFull(false); handleClick()}}>\n                                <div className=\"left\">\n                                    모바일\n                                </div>\n                                <div className=\"right\">\n                                    <Phone size=\"25\" />\n                                </div>\n                            </span>\n                            <span className={full ? \"device-button clicked\" : \"device-button\" } onClick={e => {\n                                setIsPhone(false);\n                                setFull(true); \n                                handleClick()\n                                }   \n                            }>\n                                <div className=\"left\">\n                                    전체화면\n                                </div>\n                                <div className=\"right\">\n                                    <Fullscreen size=\"25\" />\n                                </div>\n                            </span>\n                            <span className={!isPhone && !full ? \"device-button clicked\" : \"device-button\" } onClick={e => {setIsPhone(false);setFull(false); handleClick()}}>\n                                <div className=\"left\">\n                                    PC\n                                </div>\n                                <div className=\"right\">\n                                    <Monitor size=\"25\" />\n                                </div>\n                            </span>\n                        </div>\n                    </PopoverBody>\n                </PopoverContent>\n                </Popover>\n            </div>\n            )\n    }\n\n    return (\n        <ChakraProvider>\n            <div className=\"make-page-nav\">\n                <div className=\"response-nav-triple-start\" style={{justifyContent: 'start', marginLeft:'1%'}}>\n                    <span className={state.secNum === 52 ? \"make-nav-button nb-clicked\" : \"make-nav-button\"} onClick={e => {\n                        action.setSecNum(52); \n                    }} >\n                        기본 설정 <Settings size=\"16\" style={{ marginLeft:'5px'}} />\n                    </span>\n                    <span className={state.secNum === 53 ? \"make-nav-button nb-clicked\" : \"make-nav-button\"} onClick={e => {\n                        action.setSecNum(53);\n                    }} >\n                        페이지 구성 <DocumentOnePage size=\"16\" style={{ marginLeft:'5px'}} />\n                    </span>\n                    <span className=\"make-nav-button\" onClick={e => setTutorialOpen(true)} style={{boxShadow:'none', width:'180px', color:'#6C63FF', border:'none', fontWeight:'700'}}>\n                        사용이 어려우신가요 ?\n                    </span>\n                </div>\n                <div className=\"response-nav-triple\" style={{width:'35%'}}>\n                    <div className=\"centera\">\n                        <div onClick={() => moveToMain()} className=\"edit-nav-home-button\">\n                            Surfee\n                        </div>\n                    </div>\n                </div>\n                <div className=\"response-nav-triple-end\" style={{justifyContent: 'flex-end', marginRight:'1%'}}>\n                    {deviceSelect()}\n                    <Button fontSize=\"14px\" colorScheme='#6c63ff' isLoading={saveLoading} onClick={() => onSubmit()} className=\"default-button-02\">\n                        저장하기\n                    </Button>\n                    <Button leftIcon={<SendPlane color=\"white\" size=\"15\" />} fontSize=\"14px\" colorScheme='#6c63ff' isLoading={publishLoading} onClick={() => doPublish()} className=\"default-button-02\">\n                        배포하기\n                    </Button>\n                    <Button fontSize=\"14px\" variant='outline' colorScheme='#6c63ff' onClick={() => goSetup()} className=\"default-button-01 opacity-hover\" style={{margin:'0px 5px'}}>\n                        관리페이지\n                    </Button>\n                    <Profile make />\n                </div>\n            </div>\n            <LoginModal open={loginModal} setOpen={setLoginModal}/>\n            <ChoiceModal open={tutorialOpen} setOpen={setTutorialOpen} newTab />\n            {/* <MakeTutorialModal open={tutorialOpen} setOpen={setTutorialOpen} /> */}\n            <MiniModal open={saveOpen} setOpen={setSaveOpen} />\n            {/* <MiniModal open={miniOpen} setOpen={setMiniOpen} long text=\"첫 접속 시 페이지가 안정되기까지 수 초가 소요될 수 있습니다.\" /> */}\n        </ChakraProvider>\n    )\n}\n\nexport default NavBarInMakePage\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Response/ResultTopTitle.js",["951"],"import React,{useState} from 'react'\nimport {Link } from 'react-router-dom'\nimport gadata from '../../tools/datacodes/gadata.json'\nimport { Tooltip, ChakraProvider, Button } from '@chakra-ui/react'\nimport { InformationCircle } from '@styled-icons/ionicons-outline';\nimport {dbService} from '../../tools/fbase';\nimport './ResultTopTitle.css'\nimport FeedbackModal from '../../tools/FeedbackModal'\nimport MiniModal from '../../tools/MiniModal'\n\nfunction ResultTopTitle({content, myResponses, checkPublished, history, datas}) {\n    const [feedbackOpen, setFeedbackOpen] = useState(false);\n    const [deployOpen, setDeployOpen] = useState(false)\n\n    const numOfPerson = (type) => {\n        let numClick = 0\n        myResponses.forEach(doc => doc.type === type ? numClick += 1 : numClick)\n        return numClick\n    }\n\n    const doPublish = async () => {\n        \n        const urlDatas = await dbService\n            .collection(\"published-page\")\n            .where(\"urlId\", \"==\", content.urlId)\n            .get(); // uid를 creatorId로 줬었으니까.\n        \n        let urlData = urlDatas.docs.map(doc => {\n            return({...doc.data(), id:doc.id})\n        });\n        \n        if(urlData.length > 0 && urlData[0].pageId !== content.id ){\n            alert(\"url을 변경한 후 배포해주시기 바랍니다.\");\n            return;\n        }\n\n        await dbService\n            .collection('published-page')\n            .where('pageId', \"==\", content.id)\n            .get().then( async querySnapshot => \n                { \n                    if(querySnapshot.empty){\n                        let body = {\n                            ...content,\n                            pageId:content.id,\n                            created:Date.now(),\n                        }\n                        await dbService.collection('published-page').add(body)\n                        setDeployOpen(true)\n                    }else{\n                        let body = {\n                            ...content,\n                            created:Date.now(),\n                        }\n                        querySnapshot.forEach(async (doc) => {\n                            await dbService.doc(`published-page/${doc.id}`).update(body).then(() => {\n                                alert(\"배포 완료되었습니다.\")\n                                history.go();\n                            })\n                        });\n                    }\n                }\n            )\n    }\n\n    const ResultData = ({data, name, end, type}) => {\n        return(\n            <div className=\"data-result__card\" style={{borderRight:`${end ? 'none' : '1px solid var(--main-light-gray)'}`}}>\n                <div className=\"data-result__data\">\n                    {data}\n                    { type ? type : null}\n                </div>\n                <div className=\"data-result__name\">\n                    {name}\n                </div>\n            </div>\n        )\n    }\n\n    return (\n    <ChakraProvider>\n    <div className=\"response-table-top\">\n        <span className=\"response-table-title\"> \n            <div className=\"left\" style={{width:'80%'}}>\n                {\n                    checkPublished(content.urlId) ? \n                    <div className=\"center-row\" style={{justifyContent:'start'}}>\n                        <div className=\"ga-data__container\"> \n                            <Tooltip hasArrow arrowSize={10} label={\"데이터는 Google Analytics의 업데이트 주기에 맞춰 \\n 30분마다 업데이트 됩니다.\"} placement='top' fontSize='13'>\n                                <InformationCircle size=\"18\" style={{color:'#C4CACF', zIndex:'20', margin:'0px 6px'}}/>\n                            </Tooltip>\n                            {\n                                // 이 페이지 관련 GA 데이터가 있을 때\n                                datas ? \n                                <div className=\"row\">\n                                    <ResultData data={datas.pageViews + \"개\"} name=\"페이지 뷰\" />\n                                    <ResultData data={datas.users + \"명\"} name=\"유입 수\" />\n                                    <ResultData data={Math.round(numOfPerson('apply')*1000 / parseInt(datas.users)) / 10} name=\"신청 전환율\" type=\"%\"/>\n                                    <ResultData data={Math.round(numOfPerson('click')*1000 / parseInt(datas.users)) / 10} name=\"클릭 전환율\" type=\"%\"/>\n                                </div>\n                                :\n                                <div className=\"row\">\n                                    아직 기록된 GA 데이터가 없습니다.\n                                </div>\n                            }\n                            <ResultData data={numOfPerson('click')} name=\"버튼 클릭 수\" />\n                            <ResultData data={numOfPerson('apply')} name=\"신청 수\" end/>\n                        </div>\n                    </div>\n                    :\n                    <div>\n                        이 랜딩페이지는 아직 배포되지 않았습니다. 오른쪽의 ‘배포하기' 버튼을 눌러 페이지를 배포하고, 전환율 및 신청을 확인하세요\n                    </div>\n                }\n            </div>\n            <div className=\"right\" style={{flexDirection: 'row', width:'20%'}}>\n                <Link to={{\n                    pathname:`/make`,\n                    state:{\n                        item:content.id,\n                    }}} \n                    className=\"default-button-01 opacity-hover\" style={{marginLeft:'15px'}}>편집하기</Link>\n                <Button className=\"default-button-02\" style={{marginLeft:'15px'}} colorScheme=\"6c63ff\"\n                    onClick={() => {\n                        if(localStorage.getItem('feedback'))\n                        {\n                            doPublish();\n                        }\n                        else{\n                            setFeedbackOpen(true)\n                        }\n                    }}>\n                    배포하기\n                </Button>\n            </div>\n        </span>\n    </div>\n    <FeedbackModal open={feedbackOpen} setOpen={setFeedbackOpen} deploy={doPublish}/>\n    <MiniModal open={deployOpen} setOpen={setDeployOpen} deploy history={history}/>\n    </ChakraProvider>\n    )\n}\n\nexport default ResultTopTitle\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Response/ResponseNavBar.js",["952","953"],"import React, {useState} from 'react'\nimport './ResponseNavBar.css'\nimport {Link} from 'react-router-dom'\nimport {QuestionCircle} from '@styled-icons/bootstrap'\nimport ResponseTutorialModal from '../../tools/ResponseTutorialModal'\nimport Profile from '../NavAndFooter/Profile'\n\nfunction ResponseNavBar() {\n    const [tutorialOpen, setTutorialOpen] = useState(false)\n\n    return (\n        <div className=\"response-nav__container\">\n            <div className=\"response-nav-triple-start\">\n                <div style={{fontWeight: '600', fontSize:'0.8em'}}>관리 페이지</div>\n                <span className=\"make-nav-button\" onClick={e => {\n                    setTutorialOpen(true);\n                }} style={{boxShadow:'none', color:'#6c63ff', width:'110px', fontSize:'0.8em', border:'none', marginLeft:'30px', color:'black', fontWeight: '500'}}>\n                    사용 방법\n                </span>\n            </div>\n            <Link to=\"/\" className=\"response-nav-triple\">Surfee</Link>\n            <div className=\"response-nav-triple-end\">\n                <Profile />\n            </div>\n            <ResponseTutorialModal open={tutorialOpen} setOpen={setTutorialOpen} />\n        </div>\n    )\n}\n\nexport default ResponseNavBar\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Response/MadeLandingCard.js",["954","955","956","957","958","959","960","961","962"],"import React, {useState} from 'react'\nimport { Link } from 'react-router-dom'\nimport ConfirmCustom from '../../tools/ConfirmCustom'\nimport {dbService, stService} from '../../tools/fbase'\nimport './MadeLandingCard.css'\nimport { CopyToClipboard } from 'react-copy-to-clipboard'\nimport {Copy} from '@styled-icons/boxicons-regular'\nimport lodash from 'lodash'\nimport {Duplicate} from '@styled-icons/ionicons-outline'\nimport {ThreeDots, Share} from '@styled-icons/bootstrap'\nimport {Trash} from '@styled-icons/boxicons-regular'\nimport {\n    ChakraProvider,\n    Popover,\n    PopoverTrigger,\n    PopoverContent,\n    PopoverBody,\n    PopoverArrow,\n    Portal,\n    Button\n  } from '@chakra-ui/react'\n\nfunction MadeLandingCard({item, published, setCopyOpen, id, index, setNowChecking, nowChecking, history, addNew, num, update, setUpdate}) {\n    const [deleteopen, setDeleteOpen] = useState(false)\n\n    const OptionButton = () => {\n        return(\n            <Popover>\n                <PopoverTrigger>\n                    <button className=\"option-trigger-button opacity-hover\">\n                        <ThreeDots color=\"rgb(90, 90, 90)\" size=\"17\" />\n                    </button>\n                </PopoverTrigger>\n                <Portal>\n                    <PopoverContent style={{width:'180px'}}>\n                        <PopoverArrow />\n                        <PopoverBody style={{flexDirection:'column'}}>\n                            <div className=\"option-selects opacity-hover\" style={{color:'#e26a6a'}} onClick={() => {setDeleteOpen(true)}}><Trash size=\"20\" />&nbsp;&nbsp; 페이지 삭제</div>\n                            <div className=\"option-selects opacity-hover\" onClick={() => duplicate()}><Duplicate size=\"20\" />&nbsp;&nbsp; 페이지 복제</div>\n                            <CopyToClipboard text={\"https://surfee.co.kr/make/\" + `${item.id}`}>\n                                <div className=\"option-selects opacity-hover\" onClick={() => alert('템플릿을 복제할 수 있는 링크를 복사했습니다. \\n이 링크를 이용하여 템플릿을 공유할 수 있습니다.')}><Share size=\"15\"/>&nbsp; &nbsp;이 템플릿 공유하기</div>\n                            </CopyToClipboard>\n                        </PopoverBody>\n                    </PopoverContent>\n                </Portal>\n            </Popover>\n            )\n    }\n    \n    const deletePage = async () => {\n\n        // var saved_delete = await dbService.collection('saved-page').where('urlId','==', item.urlId).get().then(function(querySnapshot) {\n        //     querySnapshot.forEach(function(doc) {\n        //       doc.ref.delete();\n        //     });\n        //   });;\n        \n        await dbService.doc(`saved-page/${item.id}`).delete();\n\n        var published_delete = await dbService.collection('published-page').where('urlId','==', item.urlId).get().then(function(querySnapshot) {\n            querySnapshot.forEach(function(doc) {\n              doc.ref.delete();\n            });\n          });\n        \n          var urlStores = await dbService.collection('urlStores').where('urlId','==', item.urlId).get().then(function(querySnapshot) {\n            querySnapshot.forEach(function(doc) {\n              doc.ref.delete();\n            });\n          });\n\n        //   var datas = await dbService.collection('datas').where('pageId','==', item.id).get().then(function(querySnapshot) {\n        //     querySnapshot.forEach(function(doc) {\n        //       doc.ref.delete();\n        //     });\n        //   });\n\n        // 새로고침 시키기\n        alert(\"삭제했습니다.\")\n        setUpdate(!update)\n\n        history.go()\n    }\n\n    const duplicate = async () => {\n        if(num > 2){\n            alert(\"최대 3개의 페이지만 만들 수 있습니다.\")\n        }else{\n            let temp = lodash.cloneDeep(item);\n            temp.urlId = item.urlId + 'copied'\n            temp.setting.urlId = item.setting.urlId + 'copied'\n            temp.created = Date.now();\n            await dbService.collection(\"saved-page\").add(temp);\n\n            // await dbService.collection(\"urlStores\").add({urlId:item.setting.urlId});\n\n            setUpdate(!update)\n            alert(\"복제되었습니다.\")\n            history.go()\n        }\n    }\n\n    const returnDate = (made) => {\n        let day = new Date(Date.now() - made);\n\n        return(\n            <>\n            {\n            day.getDate()-1 > 0 ? <>\n            {day.getDate()-1} 일전</> :\n            day.getHours()-9 > 0 ? <>\n                {day.getHours()-9} 시간전 </> : \n                <>{day.getMinutes()}분전</>}\n            </>\n        )\n    }\n\n    if(addNew){\n        return(\n            <Link to={{\n                pathname:`/questions`,\n                state:{\n                    newMake:true,\n                }}} \n                className=\"response-page-card uphover\">\n                <div className=\"response-card-main-color\">\n                + 새로운 랜딩페이지 만들기\n                </div>\n            </Link>\n        )\n    }\n    return (\n        <div className=\"response-page-card uphover\" onClick={() => setNowChecking(index)} style={{border:`${index === nowChecking ? '0.8px solid #A89AFF' : 'none'}`}}>\n            <div className=\"center-row\" style={{justifyContent: \"start\"}}>\n                <div className=\"card__title\">\n                    {item.setting.title}\n                </div>\n                <div style={{width:`${published ? '45%' : '20%'}`, fontSize:'0.6em', textAlign:'end'}}>\n                    {published ? \n                    <div style={{display: 'flex', justifyContent:'end', alignItems: 'center', flexDirection:'row'}}>\n                    <div style={{\n                        width: '8px',\n                        height: '8px',\n                        borderRadius:'10px',\n                        marginRight:'3px',\n                        background: '#11E533'}}></div>\n                    {returnDate(published.created)} 마지막 배포\n                    </div>\n                    :\n                    <div style={{display: 'flex', justifyContent:'end', alignItems: 'center', flexDirection:'row'}}>\n                    <div style={{\n                        width: '8px',\n                        height: '8px',\n                        borderRadius:'10px',\n                        marginRight:'3px',\n                        background: '#C4C4C4'}}></div>배포 전\n                    </div>\n                    }\n                </div>\n            </div>\n            <div className=\"center-row\" style={{justifyContent: \"start\"}}>\n                <div className=\"left\" style={{fontSize:'0.7em', width:'70%', wordWrap:'break-word', wordBreak:'break-all'}}>\n                    https://surfee.co.kr/{item.setting.urlId} \n                    <CopyToClipboard  text={\"https://surfee.co.kr/\"+`${item.setting.urlId}`} onCopy={setCopyOpen}>\n                        <Copy size={17} color=\"#6B63F7\" style={{marginLeft:'5px'}} />\n                    </CopyToClipboard>\n                </div>\n                <div className=\"right\" style={{fontSize:'15px', width:'30%'}}>\n                    <Popover>\n                        <PopoverTrigger>\n                            <button className=\"option-trigger-button opacity-hover\">\n                                <ThreeDots color=\"rgb(90, 90, 90)\" size=\"17\" />\n                            </button>\n                        </PopoverTrigger>\n                        <Portal>\n                            <PopoverContent style={{width:'180px'}}>\n                                <PopoverArrow />\n                                <PopoverBody style={{flexDirection:'column'}}>\n                                    <div className=\"option-selects opacity-hover\" style={{color:'#e26a6a'}} onClick={() => {setDeleteOpen(true)}}><Trash size=\"20\" />&nbsp;&nbsp; 페이지 삭제</div>\n                                    <div className=\"option-selects opacity-hover\" onClick={() => duplicate()}><Duplicate size=\"20\" />&nbsp;&nbsp; 페이지 복제</div>\n                                    <CopyToClipboard text={\"https://surfee.co.kr/make/\" + `${item.id}`}>\n                                        <div className=\"option-selects opacity-hover\" onClick={() => alert('템플릿을 복제할 수 있는 링크를 복사했습니다. \\n이 링크를 이용하여 템플릿을 공유할 수 있습니다.')}><Share size=\"15\"/>&nbsp; &nbsp;이 템플릿 공유하기</div>\n                                    </CopyToClipboard>\n                                </PopoverBody>\n                            </PopoverContent>\n                        </Portal>\n                    </Popover>\n                </div>\n            </div>\n            <ConfirmCustom warn open={deleteopen} setOpen={setDeleteOpen} message={\"한번 삭제하면 복구할 수 없습니다. 정말 삭제하시겠습니까?\"} callback={deletePage}/>\n        </div>\n    )\n}\n\nexport default MadeLandingCard\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Response/ChromeTapBar.js",["963","964"],"import React from 'react'\nimport surfeelogo from '../../tools/img/surfeelogo.png'\n\nfunction ChromeTapBar({content}) {\n    return (\n        <div className=\"make-tab-preseen\" style={{\n                cursor:'default',\n                borderRadius: '10px 10px 10px 10px'\n            }}>\n            <div className=\"left\">\n                <div className=\"make-tab-circle\" style={{marginLeft:'15px'}}></div>\n                <div className=\"make-tab-circle\"></div>\n                <div className=\"make-tab-circle\"></div>\n                <div className=\"make-tab-one-tab\">\n                    {\n                        content.setting.faviconAttachment === '' ? \n                        <img src={surfeelogo} className='make-tab-favicon' />\n                        :\n                        <img src={content.setting.faviconAttachment} className='make-tab-favicon' />\n                    }\n                    {content.setting.title}\n                </div>\n            </div>\n            <div className=\"right\" style={{paddingRight:'23px'}}>\n                <div className=\"make-tab-url\">\n                    https://surfee.co.kr/{content.setting.urlId}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ChromeTapBar\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Response/ResultTable.js",["965","966"],"import React, {useState} from 'react'\nimport {\n    ChakraProvider,\n    Menu,\n    MenuButton,\n    MenuList,\n    MenuItem,\n    Button,\n    Tooltip\n  } from '@chakra-ui/react'\n  import {ChevronDown} from '@styled-icons/bootstrap'\n  import {dbService} from '../../tools/fbase'\n  import ConfirmCustom from '../../tools/ConfirmCustom'\n  import {produce} from 'immer'\n\nfunction ResultTable({responses, nowChecking, index, update, setUpdate, setResponses}) {\n    const [type, setType] = useState({name : '전체', value:'all'})\n    const [time, setTime] = useState({name : '최신순', value:'new'})\n    const [confirmOpen, setConfirmOpen] = useState(false)\n    const [id, setId] = useState('')\n\n    const deleteData = async id => {\n        await dbService.doc(`datas/${id}`).delete();\n        setResponses(produce(responses, draft => {\n            draft[nowChecking] = draft[nowChecking].filter(doc => doc.id !== id)\n        }))\n    }\n\n    const userOneLine = (item) => {\n        let day = new Date(item.created)\n        let date = `${day.getMonth() + 1}월 ${day.getDate()}일 ${day.getHours()}시 ${day.getMinutes()}분`\n\n        if(item.type === 'click'){\n            return(\n                <div className=\"response__user-datas\" key={index}>\n                    <div className=\"response__user-datas-one\" style={{width:'150px'}}> \n                        클릭\n                    </div>\n                    <div className=\"response__user-datas-one\">   \n                        <span style={{color:'rgb(10,10,10)'}}>{item.from}</span>에서 클릭\n                    </div>\n                    <div className=\"response__user-datas-one\" style={{textAlign:'right'}}>\n                        {date}\n                    </div>\n                    <Button size=\"xs\" style={{backgroundColor:'#EB8A8A', color:'white', border:'none', marginRight:'3px'}} variant='outline' onClick={() => {setId(item.id);setConfirmOpen(true)}}>X</Button>\n                </div>\n            )\n        }else{\n            return(\n                <div className=\"response__user-datas\" key={index}>\n                    <div className=\"response__user-datas-one\" style={{width:'170px'}}> \n                        신청\n                    </div>\n                    {\n                        item.values.map((doc, index) => {\n                            if(doc.length > 1){\n                                return(\n                                    <div className=\"response__user-datas-one\" key={index}>\n                                        {doc}\n                                    </div>\n                                )\n                            }\n                        })\n                    }\n                    <div className=\"response__user-datas-one\" style={{textAlign:'right'}}>\n                        {date}\n                    </div>\n                    <Button size=\"xs\" style={{backgroundColor:'#EB8A8A', color:'white', border:'none', marginRight:'3px'}} variant='outline' onClick={() => {setId(item.id);setConfirmOpen(true)}}>X</Button>\n                </div>\n            )\n        }\n    }\n    \n    return (\n        <ChakraProvider>\n            <div className=\"response-table-middle\">\n                <div className=\"response__user-datas-top\">\n                    <Menu>\n                        <MenuButton className=\"response__user-datas-one rud-hover\" style={{width:'110px', padding:'15px 10px', textAlign:'center', fontWeight:'700'}}>\n                            { type.name }\n                            <ChevronDown size=\"15\" style={{marginLeft:'10px'}}/>\n                        </MenuButton>\n                        <MenuList minWidth='110px' maxWidth='110px'>\n                            <MenuItem className=\"menu-item\" onClick={() => setType({name : '전체', value:'all'})}> \n                                전체\n                                {/* <CheckAll size=\"15\" style={{marginLeft:'15px'}} /> */}\n                            </MenuItem>\n                            <MenuItem className=\"menu-item\" onClick={() => setType({name : '클릭', value:'click'})}> \n                                클릭\n                            </MenuItem>\n                            <MenuItem className=\"menu-item\" onClick={() => setType({name : '신청', value:'apply'})}> \n                                신청 \n                            </MenuItem>\n                        </MenuList>\n                    </Menu>\n                    <div className=\"response__user-datas-one\">\n                        유저의 행동 데이터\n                    </div>\n                    <Menu>\n                        <MenuButton className=\"response__user-datas-one rud-hover\" style={{width:'180px', padding:'15px 10px', textAlign:'center', fontWeight:'700'}}>\n                            시간 ( { time.name } )\n                            <ChevronDown size=\"15\" style={{marginLeft:'10px'}}/>\n                        </MenuButton>\n                        <MenuList minWidth='150px' maxWidth='150px'>\n                            <MenuItem className=\"menu-item\" onClick={() => setTime({name : '최신순', value:'new'})}> \n                                최신순\n                            </MenuItem>\n                            <MenuItem className=\"menu-item\" onClick={() => setTime({name : '오래된 순', value:'old'})}> \n                                오래된 순\n                            </MenuItem>\n                        </MenuList>\n                    </Menu>\n                    <div style={{width:'50px', textAlign:'center', cursor: 'default'}}>            \n                        {/* <Tooltip label='클릭 시 바로 삭제되니 조심하셔야 해요!' placement='top'> */}\n                            ⚠️\n                        {/* </Tooltip> */}\n                    </div>\n                </div>\n                {\n                    typeof responses[nowChecking] !== undefined && \n                    <>\n                        {\n                        responses[nowChecking]\n                            .filter(doc => type.value === 'all' || doc.type === type.value)\n                            .sort((a,b) => {\n                                if(time.value === 'new'){\n                                    return b.created - a.created\n                                }else{\n                                    return a.created - b.created\n                                }\n                            })\n                            .map((item, index) => {\n                                return(\n                                    <>\n                                        {userOneLine(item, index)}\n                                    </>\n                                )\n                            })}\n                    </>\n                }\n            </div>\n            <ConfirmCustom open={confirmOpen} setOpen={setConfirmOpen} message={\"데이터를 삭제하시겠습니까?\"} callback={() => deleteData(id)} warn />\n        </ChakraProvider>\n    )\n}\n\nexport default ResultTable\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/tools/ResponseTutorialModal.js",["967","968","969","970","971"],"import React, {useState, useContext} from 'react'\nimport { styled, Box } from '@mui/system';\nimport ModalUnstyled from '@mui/base/ModalUnstyled';\nimport { Close } from '@styled-icons/evaicons-solid';\nimport rt1 from './img/tutorial/rt1.png'\nimport rt2 from './img/tutorial/rt2.png'\nimport rt3 from './img/tutorial/rt3.png'\nimport rt4 from './img/tutorial/rt4.png'\nimport bgcolor from '../tools/info/sky.svg'\n\nconst StyledModal = styled(ModalUnstyled)`\n  position: fixed;\n  z-index: 1300;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Backdrop = styled('div')`\n  z-index: -3;\n  position: fixed;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  left: 0;\n  background-color: rgba(0, 0, 0, 0.2);\n  -webkit-tap-highlight-color: transparent;\n`;\n\nconst style = {\n  width: 600,\n  height: 550,\n  bgcolor: 'rgba(255,255,255,1)',\n  borderRadius:2,\n  p: 2,\n  px: 4,\n  pb: 3,\n  zIndex:-2,\n  backgroundImage:`url(${bgcolor})`,\n  objectFit:'cover',\n  backgroundSize:'cover',\n  backgroundRepeat: 'no-repeat',\n  backgroundPosition: 'center',\n  position:'relative',\n};\nconst Desc = styled('div')`\n    margin-top:12px;\n    font-size:15px;\n    text-align:center;\n`;\n\nconst Bold = styled('span')`\n    color:var(--main-color);\n`\n\nfunction MakeTutorialModal({open, setOpen}) {\n    const [page, setPage] = useState(1)\n\n    const ModalBody = (props) => {\n        return(\n            <div className=\"center-row\">\n                <div className=\"center-column\" style={{fontSize:'16px'}}>\n                    {props.children}\n                </div>\n            </div>\n        )\n    }\n\n    const returnTutorials = () => {\n        switch(page){\n            case 1: return ( \n                <ModalBody>\n                    <div style={{textAlign:'center', margin:'12px 0px'}}>\n                    안녕하세요 관리페이지에 오신 것을 환영합니다!<br/>\n                    관리페이지에서는 <Bold>페이지 생성 및 삭제</Bold> 그리고 배포한 페이지에 대한 <br/>\n                    <Bold>데이터를 확인</Bold>할 수 있습니다.\n                    </div>\n                    <img src={rt1} style={{width:'60%', border:'1px solid var(--main-light-gray-02', boxShadow:'2px 4px 20px #E8F0F9'}}/>\n                    <Desc>\n                        우선, 새로운 랜딩페이지 만들기 버튼을 눌러 페이지 제작을 시작합니다.\n                    </Desc>\n                </ModalBody>\n            )\n\n            case 2: return ( \n                <ModalBody>\n                    <img src={rt2} style={{width:'70%', border:'1px solid var(--main-light-gray-02', boxShadow:'2px 4px 20px #E8F0F9'}}/>\n                    <Desc>\n                        제작을 완료한 페이지가 있다면 '배포하기' 버튼을 클릭한 뒤<br/>\n                        실제 페이지로 사용할 수 있습니다.\n                    </Desc>\n                </ModalBody>)\n\n            case 3: return ( \n                <ModalBody>\n                    <img src={rt3} style={{width:'70%', border:'1px solid var(--main-light-gray-02', boxShadow:'2px 4px 20px #E8F0F9'}}/>\n                    <Desc>\n                        페이지와 관련된 데이터들은 <br/>\n                        구글 애널리틱스의 업데이트 주기에 맞춰 30분 마다 갱신됩니다.<br/>\n                        내 랜딩페이지에 접속한 유저가 행동한 데이터는 실시간으로 확인이 가능합니다.\n                    </Desc>\n                </ModalBody>)\n\n            case 4: return ( \n                <ModalBody>\n                    <img src={rt4} style={{width:'70%', border:'1px solid var(--main-light-gray-02', boxShadow:'2px 4px 20px #E8F0F9'}}/>\n                    <Desc>\n                        한 계정당 최대 3개의 페이지를 제작할 수 있습니다. <br/>\n                        같은 서비스라도 각기 다른 내용으로 여러개의 페이지를 만들고,<br/>\n                        각각에 대한 전환율을 확인해보세요!\n                    </Desc>\n                </ModalBody>)\n\n            default:\n                return(\n                    <div>\n    \n                    </div>\n                )\n        }\n    }\n\n    return (\n        <div>\n            <StyledModal\n                aria-labelledby=\"unstyled-modal-title\"\n                aria-describedby=\"unstyled-modal-description\"\n                open={open}\n                onClose={() => setOpen(!open)}\n                BackdropComponent={Backdrop}\n            >\n                <Box sx={style}>\n                    {/* <div className=\"centera\" style={{backgroundColor:'rgba(255,255,255,0.8)', position:'absolute', zIndex:'-1'}}></div> */}\n                    <div className=\"modal-top__title\">\n                        <div className=\"centera\">\n                            Surfee 사용방법\n                        </div>\n                        <div className=\"modal-close-button\" onClick={() => setOpen(false)}>\n                            <Close size=\"30\" />\n                        </div>\n                    </div>\n                    <div className=\"centera\" style={{height:'70%'}}>\n                        {returnTutorials()}\n                    </div>\n                    <div className=\"modal-button-container\">\n                        {\n                            page === 4 ? \n                            <>\n                                <div className=\"modal-move-button-back uphover\" onClick={e => setPage(page - 1)} style={{visibility:`${page === 1 ? 'hidden' : 'visible'}`}}>이전</div>\n                                <div className=\"modal-move-button uphover\" onClick={() => {setOpen(false); setPage(1)}}>Surfee와 함께하기</div>\n                            </>\n                            :\n                            <>\n                                <div className=\"modal-move-button-back uphover\" onClick={e => setPage(page - 1)} style={{visibility:`${page === 1 ? 'hidden' : 'visible'}`}}>이전</div>\n                                <div className=\"modal-move-button uphover\" onClick={e => setPage(page + 1)}>다음</div>  \n                            </>\n                        }\n                    </div>\n                </Box>\n            </StyledModal>\n        </div>\n    )\n}\n\nexport default MakeTutorialModal\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/tools/MakeTutorialModal.js",["972","973","974"],"import React, {useState, useContext} from 'react'\nimport { styled, Box } from '@mui/system';\nimport ModalUnstyled from '@mui/base/ModalUnstyled';\nimport { Close } from '@styled-icons/evaicons-solid';\nimport Info1 from '../tools/info/editTutorial/1.png'\nimport Info2 from '../tools/info/editTutorial/2.png'\nimport Info3 from '../tools/info/editTutorial/3.png'\nimport Info4 from '../tools/info/editTutorial/4.png'\nimport Info5 from '../tools/info/editTutorial/5.png'\nimport Info6 from '../tools/info/editTutorial/6.png'\nimport Info7 from '../tools/info/editTutorial/7.png'\nimport bgcolor from '../tools/info/sky.svg'\n\nconst StyledModal = styled(ModalUnstyled)`\n  position: fixed;\n  z-index: 1300;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Backdrop = styled('div')`\n  z-index: -1;\n  position: fixed;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  left: 0;\n  background-color: rgba(0, 0, 0, 0.2);\n  -webkit-tap-highlight-color: transparent;\n\n`;\n\nconst style = {\n    width: 700,\n    height: 500,\n    bgcolor: 'rgba(255,255,255,1)',\n    borderRadius:2,\n    p: 2,\n    px: 4,\n    pb: 3,\n    backgroundImage:`url(${bgcolor})`,\n    objectFit:'cover',\n    backgroundSize:'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center',\n};\n\nconst Desc = styled('div')`\n    margin-top:12px;\n    font-size:15px;\n    text-align:center;\n`;\n\nfunction MakeTutorialModal({open, setOpen}) {\n    const [page, setPage] = useState(1)\n\n    const toPrev = () => {\n        if(page>1)\n            setPage(page-1)\n        else\n            return\n    }\n\n    const toNext = () => {\n        if(page<4)\n            setPage(page+1)\n        else return\n    }\n\n    const returnTutorials = () => {\n        switch(page){\n            case 0:return(\n                <div>\n                    <div>\n                        템플릿\n                    </div>\n                </div>\n            )\n            case 1: return ( \n                <div>\n                    <div className=\"sub-text\">\n                        안녕하세요. Surfee를 사용해주셔서 감사합니다.<br/>\n                        이보다 더 쉬울 수는 없다! Surfee의 사용방법 빠르게 알려드릴게요 😄\n                    </div>\n                    <div className=\"card-container\">\n                        <div className=\"card\">\n                            <img className=\"card-img\" src={Info1} alt=\"1\" />\n                            <Desc>하나의 페이지는 여러 개의 섹션으로 구성되며,</Desc>\n                        </div>\n                        <div className=\"card\">\n                            <img className=\"card-img\" src={Info2} alt=\"2\" />\n                            <Desc>페이지 구성에서 섹션을 생성하고 삭제할 수 있습니다.</Desc>\n                        </div>\n                    </div>\n                </div>\n            )\n\n            case 2: return ( <div>\n                <div className=\"sub-text\" />\n                    <div className=\"card-container\">\n                        <div className=\"card\">\n                            <img className=\"card-img\" src={Info3} alt=\"3\" />\n                            <Desc>페이지 수정을 위해서 디자인은<br/>왼쪽의 제작화면에서,</Desc>\n                        </div>\n                        <div className=\"card\">\n                            <img className=\"card-img\" src={Info4} alt=\"4\" />\n                            <Desc>글과 아이콘 등은<br/>오른쪽의 화면에서 수정할 수 있습니다.</Desc>\n                        </div>\n                    </div>\n                </div>)\n\n            case 3: return ( <div>\n                <div className=\"sub-text\" />\n                    <div className=\"card-container\">\n                        <div className=\"card\">\n                            <img className=\"card-img\" src={Info5} alt=\"5\" />\n                            <Desc>기본 설정에서 사이트 제작에 필수적인 정보와</Desc>\n                        </div>\n                        <div className=\"card\">\n                            <img className=\"card-img\" src={Info6} alt=\"6\" />\n                            <Desc>폰트 및 버튼 디자인을 수정할 수 있습니다.</Desc>\n                        </div>\n                    </div>\n                </div>)\n\n            case 4: return ( \n                <div>\n                    <div className=\"card-container\">\n                        <div className=\"card\">\n                            <img className=\"card-img\" src={Info7} alt=\"7\" />\n                            <Desc>🖥 제작 완료 시 오른쪽 위의 저장하기를 눌러 페이지를 저장하고<br/>관리페이지에서 배포할 수 있습니다.</Desc>\n                        </div>\n                    </div>\n                <div className=\"sub-text\">\n                    Surfee와 함께 3분 만에 쉽고 빠르게 랜딩페이지 제작을 완료해보세요!\n                </div>\n                </div>)\n\n            default:\n                return(\n                    <div>\n    \n                    </div>\n                )\n        }\n    }\n\n    return (\n        <div>\n            <StyledModal\n                aria-labelledby=\"unstyled-modal-title\"\n                aria-describedby=\"unstyled-modal-description\"\n                open={open}\n                onClose={() => setOpen(!open)}\n                BackdropComponent={Backdrop}\n            >\n                <Box sx={style}>\n                    <div className=\"modal-top__title\">\n                        <div className=\"centera\">\n                            <div className=\"modal-text-title\">\n                                아주 쉬운 Surfee의 사용 방법\n                            </div>\n                        </div>\n                        <div className=\"modal-close-button\" onClick={() => setOpen(false)}>\n                            <Close size=\"30\" />\n                        </div>\n                    </div>\n                    <div className=\"tutorial-box\">\n                        {returnTutorials()}\n                    </div>\n                    {\n                        page !== 0 &&\n                            <div className=\"prev-next-buttons\">\n                            {\n                                page === 4 ? \n                                <>\n                                    <div className=\"modal-move-button-back uphover\" onClick={e => setPage(page - 1)} style={{visibility:`${page === 1 ? 'hidden' : 'visible'}`}}>이전</div>\n                                    <div className=\"modal-move-button uphover\" onClick={() => {setOpen(false); setPage(1)}}>제작하러 가기</div>\n                                </>\n                                :\n                                page === 1 ?\n                                <>\n                                    <div className=\"modal-move-button-back uphover\" onClick={e => {\n                                        window.open(\n                                            'https://surfee.co.kr/surfeeexamples',\n                                            '_blank' // <- This is what makes it open in a new window.\n                                        );\n                                    }}>템플릿으로 만들기</div>\n                                    <div className=\"modal-move-button uphover\" onClick={e => setPage(page + 1)}>다음</div>  \n                                </>\n                                :\n                                <>\n                                    <div className=\"modal-move-button-back uphover\" onClick={e => setPage(page - 1)} style={{visibility:`${page === 1 ? 'hidden' : 'visible'}`}}>이전</div>\n                                    <div className=\"modal-move-button uphover\" onClick={e => setPage(page + 1)}>다음</div>  \n                                </>\n                            }\n                        </div>\n                    }\n                </Box>\n            </StyledModal>\n        </div>\n    )\n}\n\nexport default MakeTutorialModal\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/NavFooterSetting/ContentsIcons.js",[],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/NavFooterSetting/EditSetting.js",["975","976"],"import React, {useState, useContext} from 'react'\nimport RadioCustom from '../tools/Custom/RadioCustom'\nimport ColorCustom from '../tools/Custom/ColorCustom'\nimport SingleColorCustom from '../tools/Custom/SingleColorCustom'\nimport InputCustom from '../tools/Custom/InputCustom'\nimport { MyContext } from '../../../../pages/Make/MakePageV2'\nimport './EditSetting.css'\nimport '../EditTemplates/Edit.css'\nimport OpenCloseCustom from '../tools/Custom/OpenCloseCustom'\nimport OnOffCustom from '../tools/Custom/OnOffCustom'\nimport produce from 'immer';\nimport AnimationCustom from '../tools/Custom/AnimationCustom'\nimport AddFaviconImg from '../tools/func/FuncFaviconImg'\nimport {Check} from '@styled-icons/bootstrap'\nimport {ChevronDown} from '@styled-icons/bootstrap'\nimport OverflowScrolling from 'react-overflow-scrolling';\nimport {base} from '../../SectionTypes/baseTypes'\nimport {\n    ChakraProvider,\n    Menu,\n    MenuButton,\n    MenuList,\n    MenuItem,\n  } from '@chakra-ui/react'\nimport './Fonts.css'\n\nexport const fontOptions = [\n    { label: 'Gmarket Sans', value: 'GmarketSansBold' },\n    { label: 'Neo 둥근모', value: 'NeoDunggeunmo' },\n    { label: 'Noto Sans KR', value: 'Noto Sans KR' },\n    { label: 'Pretendard', value: 'Pretendard-Bold' },\n    { label: 'Spoqa Han Sans Neo', value: 'SpoqaHanSansNeo-Bold' },\n    { label: 'Y유니버스체', value: 'YUniverse-B' },\n    { label: '강원교육모두', value: 'GangwonEdu_OTFBoldA' },\n    { label: '경기천년바탕', value : 'GyeonggiBatang'},\n    { label: '고운바탕', value: 'GowunBatang-Bold'},\n    { label: '나눔스퀘어라운드', value: 'NanumSquareRound'},\n    { label: '레페리포인트', value:'LeferiPoint-BlackA'},\n    { label: '리디바탕', value : 'RIDIBatang'},\n    { label: '마포금빛나루', value: 'MapoGoldenPier'},\n    { label: '마포꽃섬', value: 'MapoFlowerIsland'},\n    { label: '바른공군체', value: 'ROKAFSansMedium'},\n    { label: '배달의민족 을지로체', value: 'BMEULJIRO'},\n    { label: '배달의민족 주아체', value: 'BMJUA'},\n    { label: '산돌 삼립호빵체', value: 'SDSamliphopangche_Outline'},\n    { label: '순천체', value: 'SuncheonB'},\n    { label: '아임혜민', value: 'IM_Hyemin'},\n    { label: '에스코어 드림', value: 'S-CoreDream'},\n    { label: '영도체', value: 'Yeongdo-Rg'},\n    { label: '여기어때 잘난체', value: 'yg-jalnan'},\n    { label: '원스토어 모바일POP체', value: 'ONE-Mobile-POP'},\n    { label: '유앤피플 고딕', value: 'UNPGothicKS'},\n    { label: '이서윤체', value: 'LeeSeoyun'},\n    { label: '조선일보명조', value: 'Chosunilbo_myungjo'},\n    { label: '카페24 고운밤', value: 'Cafe24Oneprettynight'},\n    { label: '카페24 써라운드', value: 'Cafe24Ssurround'},\n    { label: '카페24 아네모네', value: 'Cafe24Ohsquare'},\n    { label: '코트라 희망체', value: 'KOTRAHOPE'},\n    { label: '티머니 둥근바람', value: 'TmoneyRoundWindExtraBold'},\n    { label: '함박눈체', value: 'SF_HambakSnow'},\n]\n\nconst smallFontOptions = [\n    { label: 'Gmarket Sans', value: 'GmarketSansLight' },\n    { label: 'Neo 둥근모', value: 'NeoDunggeunmo' },\n    { label: 'Noto Sans KR', value: 'Noto Sans KR' },\n    { label: 'Pretendard', value: 'Pretendard-Regular' },\n    { label: 'Spoqa Han Sans Neo', value: 'SpoqaHanSansNeo-Regular' },\n    { label: 'Y유니버스체', value: 'YUniverse-L' },\n    { label: '강원교육모두', value: 'GangwonEdu_OTFLight' },\n    { label: '경기천년바탕', value : 'GyeonggiBatang'},\n    { label: '고운바탕', value: 'GowunBatang-Regular'},\n    { label: '나눔스퀘어라운드', value: 'NanumSquareRound'},\n    { label: '레페리포인트', value:'LeferiPoint-WhiteA'},\n    { label: '리디바탕', value : 'RIDIBatang'},\n    { label: '마포금빛나루', value: 'MapoGoldenPier'},\n    { label: '마포꽃섬', value: 'MapoFlowerIsland'},\n    { label: '바른공군체', value: 'ROKAFSansBold'},\n    { label: '배달의민족 을지로체', value: 'BMEULJIRO'},\n    { label: '배달의민족 주아체', value: 'BMJUA'},\n    { label: '산돌 삼립호빵체', value: 'SDSamliphopangche_Basic'},\n    { label: '순천체', value: 'SuncheonR'},\n    { label: '아임혜민', value: 'IM_Hyemin'},\n    { label: '에스코어 드림', value: 'S-CoreDream'},\n    { label: '영도체', value: 'Yeongdo-Rg'},\n    { label: '여기어때 잘난체', value: 'yg-jalnan'},\n    { label: '원스토어 모바일POP체', value: 'ONE-Mobile-POP'},\n    { label: '유앤피플 고딕', value: 'UNPGothicKS'},\n    { label: '이서윤체', value: 'LeeSeoyun'},\n    { label: '조선일보명조', value: 'Chosunilbo_myungjo'},\n    { label: '카페24 고운밤', value: 'Cafe24Oneprettynight'},\n    { label: '카페24 써라운드', value: 'Cafe24SsurroundAir'},\n    { label: '카페24 아네모네', value: 'Cafe24Ohsquareair'},\n    { label: '코트라 희망체', value: 'KOTRAHOPE'},\n    { label: '티머니 둥근바람', value: 'TmoneyRoundWindRegular'},\n    { label: '함박눈체', value: 'SF_HambakSnow'},\n]\n\nconst shapeOptions = [\n    { label: '사각형', value: 0 },\n    { label: '라운드', value: 5 },\n    { label: '원형', value: 20 },\n]\n\nconst sizeOptions = [\n    { label: '작게', value: 50 },\n    { label: '보통', value: 75 },\n    { label: '크게', value: 98 },\n]\n\nfunction EdtiSetting({setting, setSetting, category, setContents}) {\n    const [alarm, setAlarm] = useState(false);\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    // 애니메이션 관련 \n    const animationOptions = [\n        {label:'없음', value: 'none'},\n        {label:'떠오르기', value: 'fade-up'},\n        {label:'fade-zoom-in', value: 'fade-zoom-in'}\n    ]\n\n    const changeAnimationOption = e => {\n        setSetting({...setting, animation : e});\n        action.setContents(produce(state.contents, draft => {\n            draft.map(item => item.animation = e)\n        }))\n    }\n\n    // 이미지 업로드\n    const onChangeContentImage= e => {\n        const {target:{files},} = e;\n        const oneFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => { // 로딩이 끝날 때 실행한다는 뜻.\n            const {currentTarget:{result}} = finishedEvent;\n            setSetting(produce(setting, draft=>{\n                draft.faviconAttachment = result;             \n            }))\n        }\n        if(oneFile){\n            reader.readAsDataURL(oneFile);\n        }\n    }\n    // 이미지 삭제\n    const RemoveImage = () => {\n        setSetting(produce(setting, draft=>{\n            draft.faviconAttachment = '';\n        }))\n    }\n\n    const FontSelect = () => {\n        return(\n        <div className=\"edit-element\" style={{flexDirection:'row'}}>\n            <div className=\"left\" style={{width:'20%'}}>제목</div>\n            <div className=\"right\" style={{width:'80%'}}>\n            <Menu>\n                <MenuButton className=\"font-button opacity-hover\" style={{fontFamily:`${setting.font}`, width:'250px'}}>\n                    {\n                    fontOptions.filter(doc => doc.value === setting.font).length !== 0 ?\n                        fontOptions.filter(doc => doc.value === setting.font)[0].label\n                        :\n                        <span>폰트 수정이 필요합니다.</span>\n                    }\n                    <ChevronDown size=\"15\" style={{position:'absolute', right:'12px'}}/>\n                </MenuButton>\n                <MenuList>\n\n                <div style={{height:'350px'}}>\n                    <OverflowScrolling className='overflow-scrolling2'>\n                    {fontOptions.map((item, index) => {\n                        return(\n                            <MenuItem className={item.value === setting.font ? 'select-hover clicked' : 'select-hover'} onClick={(e) => {setSetting(produce(setting, draft => {\n                                draft.font = item.value\n                            }))}} style={{fontFamily: `${item.value}`, width:'250px'}}>\n                                <div className=\"left\" style={{width:'70%'}}>\n                                    {item.label}\n                                </div>\n                                {\n                                    item.value === setting.font && \n                                    <div className=\"right\">\n                                        <Check size=\"20\"/>\n                                    </div>\n                                }\n                            </MenuItem>\n                        )\n                    })}\n                    </OverflowScrolling>\n                </div>\n                </MenuList>\n            </Menu>\n            </div>\n        </div>\n        )\n    }\n\n    const SmallFontSelect = () => {\n        return(\n        <div className=\"edit-element\" style={{flexDirection:'row'}}>\n            <div className=\"left\" style={{width:'20%'}}>본문</div>\n            <div className=\"right\" style={{width:'80%'}}>\n            <Menu>\n                <MenuButton className=\"font-button opacity-hover\" style={{fontFamily:`${setting.smallFont}`, width:'250px'}}>\n                    {smallFontOptions.filter(doc => doc.value === setting.smallFont).length !== 0 ?\n                        smallFontOptions.filter(doc => doc.value === setting.smallFont)[0].label\n                        :\n                        <span>폰트 수정이 필요합니다.</span>\n                }\n                    <ChevronDown size=\"15\" style={{position:'absolute', right:'12px'}}/>\n                </MenuButton>\n                <MenuList>\n\n                <div style={{height:'350px'}}>\n                    <OverflowScrolling className='overflow-scrolling2'>\n                    {smallFontOptions.map((item, index) => {\n                        return(\n                            <MenuItem className={item.value === setting.smallFont ? 'select-hover clicked' : 'select-hover'} onClick={(e) => {setSetting(produce(setting, draft => {\n                                draft.smallFont = item.value\n                            }))}} style={{fontFamily: `${item.value}`, width:'250px'}}>\n                                <div className=\"left\" style={{width:'70%'}}>\n                                    {item.label}\n                                </div>\n                                {\n                                    item.value === setting.smallFont && \n                                    <div className=\"right\">\n                                        <Check size=\"20\"/>\n                                    </div>\n                                }\n                            </MenuItem>\n                        )\n                    })}\n                    </OverflowScrolling>\n                </div>\n                </MenuList>\n            </Menu>\n            </div>\n        </div>\n        )\n    }\n\n    const isNotNumber = (v) => {\n        const regExp = /[a-z0-9]/g; \n        return regExp.test(v);\n    }\n    \n    const returnTable = () => {\n        switch(category){\n            case 0:\n                // case 0은 디자인 수정\n                return(\n                    <>\n                    <div>\n                        <OpenCloseCustom title=\"파비콘\" use={true} tooltip=\"웹 브라우저의 주소창에 표시되는 웹 페이지를 대표하는 아이콘입니다.\" open={ state.focus === 'setting-favicon'}>\n                            <AddFaviconImg text=\"파비콘\" subtext=\"최대 1MB 업로드 가능, 64x64px 권장\" value={setting.faviconAttachment} func={e => onChangeContentImage(e)} removeFunc={e => RemoveImage(e)}/>\n                        </OpenCloseCustom>\n                        <OpenCloseCustom title=\"페이지 이름\" use={true} tooltip=\"웹 브라우저의 주소창에 표시되는 웹 페이지의 이름입니다.\" open={ state.focus === 'setting-title'}>\n                            <InputCustom value={setting.title} placeholder=\"웹 브라우저의 주소창에 표시되는 웹 페이지의 이름입니다.\" func={(e) => setSetting(produce(setting, draft => {\n                                draft.title = e\n                            }))} />\n                        </OpenCloseCustom>\n                        <OpenCloseCustom title=\"URL\" use={true} open={ state.focus === 'setting-urlId'}>\n                            <div style={{flexDirection:'column'}}>\n                                <div style={{display:'flex'}}>\n                                    <div style={{color:'#202936', marginTop: '20px'}}>\n                                        https://surfee.co.kr\n                                    </div>\n                                    <div>\n                                        <InputCustom value={setting.urlId} placeholder=\"사용할 url을 입력하세요\" noKorean func={(e) =>  {\n                                            if (isNotNumber(e.nativeEvent.data)){ \n                                                setAlarm(false)\n                                                setSetting(produce(setting, draft => {\n                                                    draft.urlId = e.currentTarget.value\n                                                }))\n                                            }else{\n                                                setAlarm(true)\n                                                e.preventDefault(); \n                                                return null; \n                                            }}}/>\n                                    </div>\n                                </div>\n                            </div>\n                                <div style={{width:'90%', justifyContent:'center', fontSize:'12px', marginBottom:'16px', color:`${alarm ? 'red' : 'black'}`}}>\n                                    * 영문 소문자와 숫자만 입력 가능합니다.\n                                </div>\n                        </OpenCloseCustom>\n                        <OpenCloseCustom title=\"플로팅 버튼\" use={true} tooltip=\"화면 하단에 고정되어 떠다니는 버튼입니다. 내비게이션의 버튼과 플로팅 버튼 중 하나만 사용하시길 바랍니다.\" open={ state.focus === 'setting-fab'}>\n                            <OnOffCustom text=\"ON/OFF\" value={setting.fta.use} func={(e) => setSetting(produce(setting, draft => {\n                                draft.fta.use = !setting.fta.use\n                            }))} />\n                            {\n                                setting.fta.use && \n                                <>\n                                    <RadioCustom text={state.isPhone ? '사이즈 - 모바일에서는 크기가 고정됩니다.' : '사이즈'} options={sizeOptions} value={setting.fta.size} func={(e) => setSetting(produce(setting, draft => {\n                                        draft.fta.size = e\n                                    }))} />\n                                    <RadioCustom text=\"모양\" options={shapeOptions} value={setting.fta.shape} func={(e) => setSetting(produce(setting, draft => {\n                                        draft.fta.shape = e\n                                    }))} />\n                                    <div className=\"edit-element\">\n                                        {/* 폰트 색상 연결 안해놓음 디자인만! */}\n                                        <SingleColorCustom text=\"폰트 색상\" value={setting.fta.color} func={(e) => setSetting(produce(setting, draft => {\n                                            draft.fta.color = e;\n                                        }))} />\n                                        <div className=\"edit-element-bar\"/>\n                                        <SingleColorCustom text=\"배경 색상\" value={setting.fta.backgroundColor} func={(e) => setSetting(produce(setting, draft => {\n                                            draft.fta.backgroundColor = e;\n                                        }))} />\n                                    </div>\n                                    <OnOffCustom text=\"테두리\" value={setting.fta.border} func={(e) => setSetting(produce(setting, draft => {\n                                        draft.fta.border = !setting.fta.border\n                                    }))} />\n                                    {\n                                        setting.fta.border && \n                                        <ColorCustom text=\"테두리 색상\" value={setting.fta.borderColor} func={(e) => setSetting(produce(setting, draft => {\n                                            draft.fta.borderColor = e;\n                                        }))} />\n                                    }\n                                    <OnOffCustom text=\"그림자\" value={setting.fta.shadow} func={(e) => setSetting(produce(setting, draft => {\n                                        draft.fta.shadow = !setting.fta.shadow\n                                    }))} />\n                                    <InputCustom text=\"링크 연결\" value={setting.fta.link} placeholder=\"링크를 입력하세요\" func={(e) => setSetting(produce(setting, draft => {\n                                        draft.fta.link = e\n                                    }))}/>\n                                </>\n                            }\n                        </OpenCloseCustom>\n                    </div>\n                    </>\n                )\n\n            case 1:\n                // case 1은 템플릿 변경\n                return(\n                    <>\n                    <div>\n                        <OpenCloseCustom title=\"메인 색상\" use={true} tooltip=\"메인 색상으로 설정한 색상은 다른 요소의 색상을 설정할 때 쉽게 적용할 수 있습니다.\">\n                            <SingleColorCustom value={setting.color} func={(e) => setSetting(produce(setting, draft => {\n                                draft.color = e;\n                            }))} />\n                        </OpenCloseCustom>\n                        <OpenCloseCustom title=\"글씨체\" use={true}>\n                            <ChakraProvider>\n                                {FontSelect()}\n                                {SmallFontSelect()}\n                            </ChakraProvider>\n                        </OpenCloseCustom>\n                        <OpenCloseCustom title=\"CTA 버튼\" use={true} preseen={\n                            <div className=\"edit-element\">\n                                <div className=\"centera\" style={{padding:'5px 10px'}}>\n                                    <div className=\"custom-button\" style={{ color:`${setting.cta.color}`, border:`${setting.cta.border ? `1px solid ${setting.cta.borderColor}` : 'none'}`, boxShadow:`${setting.cta.shadow ? '2px 2px 5px rgba(0,0,0,0.3)' : 'none'}`, borderRadius:`${setting.cta.borderRadius}px`, backgroundColor:`${setting.cta.backgroundColor}`}}>\n                                        디자인 미리보기\n                                    </div>\n                                </div>\n                            </div>\n                        }>\n                            <RadioCustom button text=\"모양\" options={shapeOptions} value={setting.cta.borderRadius} func={(e) => setSetting(produce(setting, draft => {\n                                draft.cta.borderRadius = e\n                            }))} />\n                            <div className=\"edit-element\">\n                            <SingleColorCustom text=\"배경 색상\" value={setting.cta.backgroundColor} func={(e) => setSetting(produce(setting, draft => {\n                                draft.cta.backgroundColor = e;\n                            }))} />\n                            <div>\n                            <div className=\"edit-element-bar\"/>\n                            </div>\n                            <SingleColorCustom text=\"폰트 색상\" value={setting.cta.color} func={(e) => setSetting(produce(setting, draft => {\n                                draft.cta.color = e;\n                            }))} />\n                            </div>\n                            <OnOffCustom text=\"테두리\" value={setting.cta.border} func={(e) => setSetting(produce(setting, draft => {\n                                draft.cta.border = !setting.cta.border\n                            }))} />\n                                {\n                                    setting.cta.border && \n                                        <ColorCustom value={setting.cta.borderColor} func={(e) => setSetting(produce(setting, draft => {\n                                            draft.cta.borderColor = e;\n                                        }))} />\n                                }\n                            <OnOffCustom text=\"그림자\" value={setting.cta.shadow} func={(e) => setSetting(produce(setting, draft => {\n                                draft.cta.shadow = !setting.cta.shadow\n                            }))} />\n                            {/* <SliderCustom top=\"여백\" value={setting.cta.padding} max={24} func={e => setSetting(produce(setting, draft => {\n                                draft.cta.padding = e\n                            }))}/> */}\n                        </OpenCloseCustom>\n                        <OpenCloseCustom title=\"고스트 버튼\" use={true} preseen={\n                            <div className=\"edit-element\">\n                                <div className=\"centera\" style={{padding:'5px 10px'}}>\n                                    <div className=\"custom-button\" style={{ color:`${setting.ghost.color}`, border:`${setting.ghost.border ? `1px solid ${setting.ghost.borderColor}` : 'none'}`, boxShadow:`${setting.ghost.shadow ? '2px 2px 5px rgba(0,0,0,0.3)' : 'none'}`, borderRadius:`${setting.ghost.borderRadius}px`, backgroundColor:`${setting.ghost.backgroundColor}`}}>\n                                        디자인 미리보기\n                                    </div>\n                                </div>\n                            </div>\n                        }>\n                            <RadioCustom button text=\"모양\" options={shapeOptions} value={setting.ghost.borderRadius} func={(e) => setSetting(produce(setting, draft => {\n                                draft.ghost.borderRadius = e\n                            }))} />\n                            <div className=\"edit-element\">\n                            <SingleColorCustom text=\"배경 색상\" value={setting.ghost.backgroundColor} func={(e) => setSetting(produce(setting, draft => {\n                                draft.ghost.backgroundColor = e;\n                            }))} />\n                            <div>\n                            <div className=\"edit-element-bar\"/>\n                            </div>\n                            <SingleColorCustom text=\"폰트 색상\" value={setting.ghost.color} func={(e) => setSetting(produce(setting, draft => {\n                                draft.ghost.color = e;\n                            }))} />\n                            </div>\n                            <OnOffCustom text=\"테두리\" value={setting.ghost.border} func={(e) => setSetting(produce(setting, draft => {\n                                draft.ghost.border = !setting.ghost.border\n                            }))} />\n                            {\n                                setting.ghost.border && \n                                <ColorCustom text=\"테두리 색상\" value={setting.ghost.borderColor} func={(e) => setSetting(produce(setting, draft => {\n                                    draft.ghost.borderColor = e;\n                                }))} />\n                            }\n                            <OnOffCustom text=\"그림자\" value={setting.ghost.shadow} func={(e) => setSetting(produce(setting, draft => {\n                                draft.ghost.shadow = !setting.ghost.shadow\n                            }))} />\n                            {/* <SliderCustom top=\"여백\" value={setting.ghost.padding} max={24} func={e => setSetting(produce(setting, draft => {\n                                draft['ghost'].padding = e\n                            }))}/> */}\n                        </OpenCloseCustom>\n                    </div>\n                    <OpenCloseCustom title=\"애니메이션\" use={true}>\n                        <AnimationCustom \n                            text=\"애니메이션\" \n                            options={animationOptions} \n                            value={setting.animation} \n                            func={ e => changeAnimationOption(e)} />\n                    </OpenCloseCustom>\n                    </>\n                )\n        }\n    }\n\n    return(\n        <>\n        <div style={{padding:'0px 10px', fontSize:'15px'}}>\n            <div style={{padding:'7px 11px', backgroundColor:'rgba(0,0,0,0.1)', borderRadius:'6px'}}>\n                <span style={{color:'#6C63FF', fontWeight:'700'}}>기본</span> - 외부에 보여지는 페이지 기본 정보를 설정가능합니다.<br/>\n                <span style={{color:'#6C63FF', fontWeight:'700'}}>디자인</span> - 버튼 디자인, 폰트 등을 설정가능합니다.\n            </div>\n        </div>\n            {returnTable()}\n        </>\n    )\n}\n\nexport default EdtiSetting\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/EditMockupSection.js",["977"],"import React, {useContext} from 'react'\nimport { MyContext } from '../../../../pages/Make/MakePageV2'\nimport EditDesign from './tools/EditDesign'\nimport produce from 'immer';\nimport ElementsTable from './tools/ElementsTable'\nimport OpenCloseCustom from '../tools/Custom/OpenCloseCustom'\nimport SliderCustom from '../tools/Custom/SliderCustom'\nimport EditTitleDesc from './tools/EditTitleDesc'\nimport FuncContentImg from '../tools/func/FuncContentImg'\nimport { Select } from '@chakra-ui/react'\n\nfunction EditMockupSection({content, category}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    const elements = [\n        {\n            title:'제목',\n            use:content.title.use,\n            func:() => action.setContents(produce(state.contents, draft => {\n                draft[state.secNum].title.use = !content.title.use;\n            }))\n        },\n        {\n            title:'본문',\n            use:content.desc.use,\n            func:() => action.setContents(produce(state.contents, draft => {\n                draft[state.secNum].desc.use = !content.desc.use;\n            }))\n        },\n        {\n            title:'목업',\n            use:content.mockup.use,\n            func:() => action.setContents(produce(state.contents, draft => {\n                draft[state.secNum].mockup.use = !content.mockup.use;\n                draft[state.secNum].contents.type= 'mockup';\n            }))\n        },\n    ]\n\n    // 목업 타입\n    const mockOption = e => {\n        action.setContents(produce(state.contents, draft => {\n            draft[state.secNum].mockup.type = e;\n        }))\n    }\n\n    // 목업 모바일 2 이미지 업로드\n    const uploadMockup= e => {\n        const {target:{files},} = e;\n        const oneFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => { // 로딩이 끝날 때 실행한다는 뜻.\n            if(oneFile.size > 3000000){\n                alert(\"파일의 크기가 3MB를 초과합니다.\")\n                return;\n            }\n            const {currentTarget:{result}} = finishedEvent;\n            action.setContents(produce(state.contents, draft=>{\n                draft[state.secNum].mockup.attachment = result;               \n            }))\n        }\n        if(oneFile){\n            reader.readAsDataURL(oneFile);\n        }\n    }\n\n    const returnMockup = () => {\n        switch(content.mockup.type){\n            case 'mobile':\n                return(\n                    <>\n                        <FuncContentImg text='목업' subtext=\"최대 3MB 업로드 가능\" value={content.mockup.attachment} func={uploadMockup}/>\n                        <SliderCustom top=\"크기\" text=\"목업\" value={content.image.size} func={e =>\n                            action.setContents(produce(state.contents, draft => {\n                                draft[state.secNum].image.size = e\n                            }))} max=\"100\"/>\n                    </>\n                )\n            case 'desktop':\n                return(\n                    <>\n                        <FuncContentImg text='목업' subtext=\"최대 3MB 업로드 가능\" value={content.mockup.attachment} func={uploadMockup}/>\n                        <SliderCustom top=\"크기\" text=\"목업\" value={content.image.size} func={e =>\n                            action.setContents(produce(state.contents, draft => {\n                                draft[state.secNum].image.size = e\n                            }))} max=\"100\"/>   \n                    </>\n                )\n            default:\n                return(\n                    <>\n                        <div className=\"edit-element\">\n                            <div className=\"func-title\">\n                            디바이스 \n                            </div>\n                        </div> \n                        <div className='mockup-select'>\n                            <Select  \n                            className='select_list'\n                            onChange={e=>mockOption(e.target.value)}\n                            bg='white'\n                            borderColor='rgba(0, 0, 0, 0.08)'\n                            icon='none'\n                            color='gray'>\n                            <option value='mobile'>모바일</option>\n                            <option value='desktop'>데스크탑</option>\n                            <option value='mobile2'>모바일 2대</option>                     \n                            </Select>\n                        </div>\n                        {returnMockup()}\n                    </>\n                )\n        }\n    }\n\n\n    const returnTable = () => {\n        switch(category){\n            case 0:\n                // case 0은 디자인 수정\n                return(\n                    <div>\n                        <ElementsTable elements={elements} />\n                        <EditTitleDesc content={content} />\n                        <OpenCloseCustom title='목업' use={content.mockup.use}>\n                            <div className=\"edit-element\">\n                                <div className=\"func-title\">\n                                디바이스 \n                                </div>\n                            </div> \n                            <div className='mockup-select'>\n                                <Select  \n                                className='select_list'\n                                onChange={e=>mockOption(e.target.value)}\n                                bg='white'\n                                borderColor='rgba(0, 0, 0, 0.08)'\n                                icon='none'\n                                color='gray'>\n                                <option value='mobile'>모바일</option>\n                                <option value='desktop'>데스크탑</option>                  \n                                </Select>\n                            </div>\n                            {returnMockup()}\n                        </OpenCloseCustom>\n                    </div>\n                )\n            case 1:\n                return(\n                    <div>\n                        <EditDesign content={content} />\n                    </div>\n                )\n        }\n    }\n\n    return (\n        <>\n            {returnTable()}\n        </>\n    )\n}\n\nexport default EditMockupSection\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/EditTextSection.js",["978"],"import React, {useContext} from 'react'\nimport { MyContext } from '../../../../pages/Make/MakePageV2'\nimport EditDesign from './tools/EditDesign'\nimport produce from 'immer';\nimport ElementsTable from './tools/ElementsTable'\nimport EditTitleDesc from './tools/EditTitleDesc'\nimport Layout from './tools/Layout'\n\nfunction EditTextSection({content, category}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    const elements = [\n        {\n            title:'제목',\n            use:content.title.use,\n            func:() => action.setContents(produce(state.contents, draft => {\n                draft[state.secNum].title.use = !content.title.use;\n            }))\n        },\n        {\n            title:'본문',\n            use:content.desc.use,\n            func:() => action.setContents(produce(state.contents, draft => {\n                draft[state.secNum].desc.use = !content.desc.use;\n            }))\n        },\n    ]\n\n    const returnTable = () => {\n        switch(category){\n            case 0:\n                // case 0은 디자인 수정\n                return(\n                    <div>\n                        <ElementsTable elements={elements} />\n                        <Layout content={content} version='text' />\n                        <EditTitleDesc content={content} />\n                    </div>\n                )\n            case 1:\n                return(\n                    <div>\n                        <EditDesign content={content} />\n                    </div>\n                )\n        }\n    }\n\n    return (\n        <>\n            {returnTable()}\n        </>\n    )\n}\n\nexport default EditTextSection\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/NavFooterSetting/EditContents.js",["979","980"],"import React, {useContext, useState, useEffect} from 'react';\nimport { MyContext } from '../../../../pages/Make/MakePageV2';\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport produce from 'immer';\nimport AddingSection from '../../Modal/AddingSection';\nimport {sectionIcons} from './ContentsIcons';\nimport {CustomSwitch2} from '../tools/Custom/OnOffCustom'\nimport lodash from 'lodash'\nimport {base} from '../../SectionTypes/baseTypes'\nimport './EditContents.css';\n// import PlusIcon from '../../../../tools/img/plusButton.png';\n\nconst BCOLOR = 'rgba(230,230,230,0)'\n\nconst getItemStyle = (isDragging, draggableStyle, backColor) => {\n    return {\n        userSelect: \"none\",\n        textAlign: \"right\",\n\n        // change background color if dragging\n        background: isDragging ? \"white\" : BCOLOR,\n        boxShadow: isDragging ? \"2px 4px 20px #E8F0F9\" : 'none',\n\n        // styles we need to apply on draggables\n        ...draggableStyle\n    };\n};\n\nconst sectionDescriptions = {\n    'HeroSection':'이미지를 이용한 설명과 버튼을 사용가능합니다',\n    'DetailSection':'이미지를 이용한 설명이 가능합니다',\n    'CtaSection':'5개의 입력 혹은 앱스토어 버튼을 사용가능합니다',\n    'ApplySection':'최대 5개의 입력을 받을 수 있습니다',\n    'AppDownloadSection':'앱스토어 버튼을 사용가능합니다',\n    'FeaturesSection':'여러개의 특징을 설명할 수 있습니다',\n    'ReviewSection':'별점을 사용해 추천사를 적기 유용합니다',\n    'QnaSection':'질문과 답변을 적을 수 있습니다',\n    'TextSection':'글만을 적을 수 있습니다',\n    'GallerySection':'이미지를 강조하여 설명하는데 유용합니다',\n    'VideoSection':'동영상을 보여줄 수 있습니다',\n    'MockupSection':'휴대폰과 노트북에 이미지를 넣을 수 있습니다',\n}\n\nfunction EditContents({setting, navi, setNavi, foot, setFoot, elementsRef}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n    const [addOpen, setAddOpen] = useState(false);\n\n    const handleChange = result => {\n\n        if (!result.destination) {\n            return\n        }else{\n            let tempContents = lodash.cloneDeep(state.contents)\n            const item = tempContents.splice(result.source.index, 1)\n            action.setContents([].concat(tempContents.slice(0,result.destination.index), item, tempContents.slice(result.destination.index)))\n\n            // action.setContents(produce(state.contents, draft => {\n            //     const [reorderedItem] = draft.splice(result.source.index, 1);\n            //     draft.splice(result.destination.index, 0, reorderedItem);\n            // }));\n        }\n    }\n\n    const optionButton = (num) => {\n        return(\n            <div className=\"content__button\"\n                onClick={() => {\n                    action.setSecNum(num)\n                }}>\n                수정\n            </div>\n        )\n    }\n \n    const deleteSection = (index) => {\n\n        if(index === 0){\n            const tempContents = lodash.cloneDeep(state.contents)\n            action.setContents([].concat(tempContents.slice(1)))\n        }else if(index === state.contents.length - 1){\n            action.setContents(produce(state.contents, draft => {\n                let tt = draft\n                tt.pop()\n                draft = tt\n            }))\n        }else{\n            const tempContents = lodash.cloneDeep(state.contents)\n            action.setContents([].concat(tempContents.slice(0,index), tempContents.slice(index+1)))\n        }\n    }\n\n    const pasteThisSection = (content, index) => {\n        const tempContents = lodash.cloneDeep(state.contents)\n\n        action.setContents([].concat(tempContents.slice(0,index), [content], tempContents.slice(index)))\n    }\n\n    // action.setContents([...tempContents, content]) 는 에러 X \n    // action.setContents(tempContents) 는 에러 X \n    // action.setContents([...tempContents.slice(0,3), content, ...tempContents.slice(0,3)]) 는 에러 X\n    // action.setContents([...tempContents.slice(0, index), content, ...tempContents.slice(0,index)]) 는 에러 X\n    // // action.setContents([...tempContents.slice(0, index), content, ...tempContents.slice(index, index + 2)]) 는 에러 X\n\n    return (\n        <div>\n            <div className=\"back__container\" />\n            <div style={{width:'100%', display: 'flex', justifyContent:'center', alignItems: 'center', flexDirection:'column'}}>\n                <div className=\"one-contents-draggable\" style={{backgroundColor:`${BCOLOR}`}}>\n                    <div className=\"center-row hoverback one-contents__inner\" style={{padding:'20px 10px'}}>\n                        <div className=\"left\">\n                            <div className=\"content__name\">\n                                내비게이션 바\n                            </div>\n                            <div style={{paddingLeft:'7%'}}>\n                                <CustomSwitch2 value={navi.use} onChange={e => setNavi(produce(navi, draft => {\n                                    draft.use = !navi.use\n                                })) }/>\n                            </div>\n                        </div>\n                        <div className=\"right\">\n                            {optionButton(50)}\n                        </div>\n                    </div>   \n                </div>\n                <div className=\"comment\">\n                    <div>\n                        클릭 시 해당 섹션을 보여줍니다.\n                    </div>\n                    <div>\n                        <span style={{fontWeight:'700', fontSize:'1em'}}>드래그 앤 드랍</span>으로 순서를 변경할 수 있습니다\n                    </div>\n                </div>\n                <DragDropContext onDragEnd={handleChange}>\n                    <Droppable droppableId=\"sectionsss\">\n                        {(provided) => \n                            ( <>\n                            <div {...provided.droppableProps} ref={provided.innerRef} style={{width:'100%', display: 'flex', justifyContent:'center', alignItems: 'center', flexDirection:'column'}}>\n                                {state.contents.map((item, index) => {\n                                    return(\n                                        <Draggable draggableId={String(index)} key={index} index={index} style={{width:'100%'}}>\n                                            {(provided, snapshot) => {\n                                                if(index === 0){\n                                                        return(\n                                                            <>\n                                                            <div style={{marginTop: '30px'}}></div>\n                                                            {/* <img className=\"fixed-icon\" src={PlusIcon} alt=\"아이콘\"/> */}\n                                                                <div\n                                                                    className=\"one-contents-draggable\"\n                                                                    ref={provided.innerRef}\n                                                                    {...provided.dragHandleProps}\n                                                                    {...provided.draggableProps}\n                                                                    onClick={() => {window.scrollTo({top:(elementsRef.current[index].current.offsetTop - window.innerHeight/5), left:0, behavior:'smooth'})}}\n                                                                    style={getItemStyle(\n                                                                        snapshot.isDragging,\n                                                                        provided.draggableProps.style,\n                                                                    )}>\n                                                                        <div className=\"center-column hoverback one-contents__inner\">\n                                                                            <div className=\"center-row\">\n                                                                                <div className=\"left\">\n                                                                                    {\n                                                                                        sectionIcons.filter(doc => doc.sectionTypeName === item.sectionTypeName)[0].icon\n                                                                                    }\n                                                                                    <div className=\"content__name\">\n                                                                                        {item.name}\n                                                                                    </div>\n                                                                                </div>\n                                                                                <div className=\"right\">\n                                                                                    {optionButton(index)}\n                                                                                </div>\n                                                                            </div>\n                                                                            <div className=\"center-row\">\n                                                                                <div className=\"left\" style={{width:'92%', textAlign:'left', color:'#737a86', display:'block', textOverflow: 'ellipsis', whiteSpace: 'nowrap', overflow: 'hidden'}}>\n                                                                                    {/* {item.title.text} */}\n                                                                                    {sectionDescriptions[item.sectionTypeName]}\n                                                                                </div>\n                                                                                <div className=\"right\">\n                                                                                    <div className=\"content__button cb-delete\"\n                                                                                        onClick={() => {\n                                                                                            const yes = window.confirm(\"정말 삭제하시겠습니까?\");\n                                                                                            if(yes){\n                                                                                                deleteSection(index);\n                                                                                            }\n                                                                                        } }>\n                                                                                        삭제\n                                                                                    </div>\n                                                                                    <div className=\"content__button cb-duplicate\"\n                                                                                        onClick={() => pasteThisSection(lodash.cloneDeep(state.contents[index]), index) }>\n                                                                                        복제\n                                                                                    </div>\n                                                                                </div>\n                                                                            </div>\n                                                                        </div>   \n                                                                </div>\n                                                                {/* <div className=\"centera small-button__container\">\n                                                                    <span className=\"centera make-section-button__small\">\n                                                                        +\n                                                                    </span>\n                                                                </div> */}\n                                                            </>\n                                                        )}\n                                                        else{\n                                                            return(\n                                                            <>\n                                                            <div\n                                                                className=\"one-contents-draggable\"\n                                                                ref={provided.innerRef}\n                                                                {...provided.dragHandleProps}\n                                                                {...provided.draggableProps}\n                                                                onClick={() => {window.scrollTo({top:(elementsRef.current[index] && elementsRef.current[index].current.offsetTop - window.innerHeight/5), left:0, behavior:'smooth'})}}\n                                                                style={getItemStyle(\n                                                                snapshot.isDragging,\n                                                                provided.draggableProps.style,\n                                                                )}>\n                                                                    <div className=\"center-column hoverback one-contents__inner\">\n                                                                        <div className=\"center-row\">\n                                                                            <div className=\"left\">\n                                                                                {\n                                                                                    sectionIcons.filter(doc => doc.sectionTypeName === item.sectionTypeName)[0].icon\n                                                                                }\n                                                                                <div className=\"content__name\">\n                                                                                    {item.name}\n                                                                                </div>\n                                                                            </div>\n                                                                            <div className=\"right\">\n                                                                                {optionButton(index)}\n                                                                            </div>\n                                                                        </div>\n                                                                        <div className=\"center-row\">\n                                                                            <div className=\"left\" style={{width:'92%', textAlign:'left', color:'#737a86', display:'block', textOverflow: 'ellipsis', whiteSpace: 'nowrap', overflow: 'hidden'}}>\n                                                                                {/* {item.title.text} */}\n                                                                                {sectionDescriptions[item.sectionTypeName]}\n                                                                            </div>\n                                                                            <div className=\"right\">\n                                                                                <div className=\"content__button cb-delete\"\n                                                                                    onClick={() => {\n                                                                                        const yes = window.confirm(\"정말 삭제하시겠습니까?\");\n                                                                                        if(yes){\n                                                                                            deleteSection(index);\n                                                                                        }\n                                                                                    } }>\n                                                                                    삭제\n                                                                                </div>\n                                                                                <div className=\"content__button cb-duplicate\"\n                                                                                    onClick={() => pasteThisSection(lodash.cloneDeep(state.contents[index]), index) }>\n                                                                                    복제\n                                                                                </div>\n                                                                            </div>\n                                                                        </div>\n                                                                    </div>   \n                                                                </div>\n                                                            </>\n                                                        ) }}}\n                                                </Draggable>\n                                            )\n                                        })}\n                                {provided.placeholder}\n                            </div>\n                            </>\n                            )\n                        }\n                    </Droppable>\n                </DragDropContext>\n                <div className=\"center-row\">\n                    <div className=\"section-add__button\" onClick={() => { setAddOpen(true); }}\n                        style={{margin:'15px'}} >\n                        + 섹션 추가하기\n                    </div>\n                </div>\n                <div className=\"one-contents-draggable\">\n                    <div className=\"center-row hoverback one-contents__inner\" style={{padding:'20px 10px'}}>\n                        <div className=\"left\">\n                            <div className=\"content__name\">\n                                푸터 바\n                            </div>\n                            <div style={{paddingLeft:'7%'}}>\n                                <CustomSwitch2 value={foot.use} onChange={e => setFoot(produce(foot, draft => {\n                                    draft.use = !foot.use\n                                })) }/>\n                            </div>\n                        </div>\n                        <div className=\"right\">\n                            {optionButton(51)}\n                        </div>\n                    </div>   \n                </div>\n            </div>\n            <AddingSection setting={setting} open={addOpen} setOpen={setAddOpen} foot={foot}/>\n        </div>\n    )\n}\n\nexport default EditContents\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/EditQnaSection.js",["981"],"import React, {useContext} from 'react'\nimport { MyContext } from '../../../../pages/Make/MakePageV2'\nimport EditDesign from './tools/EditDesign'\nimport ElementsTable from './tools/ElementsTable'\nimport produce from 'immer'\nimport OpenCloseCustom from '../tools/Custom/OpenCloseCustom'\nimport RadioCustom from '../tools/Custom/RadioCustom'\nimport EditTitleDesc from './tools/EditTitleDesc'\nimport ColorCustom from '../tools/Custom/ColorCustom'\nimport AlignCustom from '../tools/Custom/AlignCustom'\n\nconst layoutOptions = [\n    {label: '카드', value: 'card'},\n    {label: '표', value: 'table'},\n]\nconst shapeOptions = [\n    {label: '접혀있기\u001d', value: 'close'},\n    {label: '펼쳐있기', value: 'open'},\n]\nfunction EditQnaSection({content, category}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    const elements = [\n        {\n            title:'제목',\n            use:content.title.use,\n            func:() => action.setContents(produce(state.contents, draft => {\n                draft[state.secNum].title.use = !content.title.use;\n            }))\n        },\n        {\n            title:'본문',\n            use:content.desc.use,\n            func:() => action.setContents(produce(state.contents, draft => {\n                draft[state.secNum].desc.use = !content.desc.use;\n            }))\n        },\n        {\n            title:'QnA',\n            use:content.qna.use,\n            func:() => action.setContents(produce(state.contents, draft => {\n                draft[state.secNum].qna.use = !content.qna.use;\n            }))\n        },\n    ]\n\n    const changeLayoutOption = e => {\n        action.setContents(produce(state.contents, draft => {\n            draft[state.secNum].layout = e;\n        }))\n    }\n\n    const returnTable = () => {\n        switch(category){\n            case 0:\n                // case 0은 디자인 수정\n                return(\n                    <div>\n                        <ElementsTable elements={elements} />\n                        <OpenCloseCustom title=\"레이아웃\" use={true} subtext={state.isPhone ? '모바일' : 'PC'}>\n                            <RadioCustom options={layoutOptions} value={content.layout} func={e => changeLayoutOption(e)} />\n                            <AlignCustom all value={content.align} func={e => action.setContents(produce(state.contents, draft => {\n                                draft[state.secNum].align = e;\n                                draft[state.secNum].title.align = e;\n                                draft[state.secNum].desc.align = e;\n                            }))} />\n                        </OpenCloseCustom>\n                        <EditTitleDesc content={content} />\n                        <OpenCloseCustom title=\"QnA\" use={content.qna.use} open={state.focus === 'qna'}>\n                            <RadioCustom text=\"기본 모양\" options={shapeOptions} value={content.qna.shape} func={e => action.setContents(produce(state.contents, draft => {\n                                draft[state.secNum].qna.shape = e;\n                            }))} />\n                            <ColorCustom text=\"질문\" value={content.qna.question} func={e => action.setContents(produce(state.contents, draft => {\n                                draft[state.secNum].qna.question = e;\n                            }))} />\n                            {/* <TextSizeCustom text=\"질문 크기\" elementTitle value={content.qna.questionSize} func={e =>  action.setContents(produce(state.contents, draft => {\n                                draft[state.secNum].qna.questionSize = e;\n                            }))} /> */}\n                            <ColorCustom text=\"답변\" value={content.qna.answer} func={e => action.setContents(produce(state.contents, draft => {\n                                draft[state.secNum].qna.answer = e;\n                            }))} />\n                            {/* <TextSizeCustom text=\"답변 크기\" elementTitle value={content.qna.answerSize} func={e =>  action.setContents(produce(state.contents, draft => {\n                                draft[state.secNum].qna.answerSize = e;\n                            }))} /> */}\n                        </OpenCloseCustom>\n\n                    </div>\n                )\n            case 1:\n                return(\n                    <div>\n                        <EditDesign content={content} />\n                    </div>\n                )\n        }\n    }\n\n    return (\n        <>\n            {returnTable()}\n        </>\n    )\n}\n\nexport default EditQnaSection\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/NavFooterSetting/EditFooterSection.js",["982","983","984"],"import React, {useContext} from 'react'\nimport { MyContext } from '../../../../pages/Make/MakePageV2'\nimport RadioCustom from '../tools/Custom/RadioCustom'\nimport ColorCustom from '../tools/Custom/ColorCustom'\nimport OpenCloseCustom from '../tools/Custom/OpenCloseCustom'\nimport AlignCustom from '../tools/Custom/AlignCustom'\nimport InputCustom from '../tools/Custom/InputCustom'\nimport ElementsTable from '../EditTemplates/tools/ElementsTable'\nimport SliderCustom from '../tools/Custom/SliderCustom'\nimport produce from 'immer';\nimport Layout from '../EditTemplates/tools/Layout'\n\n// const alignOptions = [\n//     { label: <AlignStart width={30} />, value: 'start' },\n//     { label: <AlignCenter width={30} />, value: 'center' },\n//     { label: <AlignEnd width={30} />, value: 'end' },\n// ]\n\nfunction EditFooterSection({foot, setFoot, category}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    const elements = [\n        {\n            title:'회사 / 팀 정보',\n            use:foot.text.use,\n            func:() => setFoot(produce(foot, draft => {\n                draft.text.use = !foot.text.use;\n            }))\n        },\n        {\n            title:'소셜 아이콘',\n            use:foot.icon.use,\n            func:() => setFoot(produce(foot, draft => {\n                draft.icon.use = !foot.icon.use;\n            }))\n        },\n        {\n            title:'저작권 표시',\n            use:foot.copyright.use,\n            func:() => setFoot(produce(foot, draft => {\n                draft.copyright.use = !foot.copyright.use;\n            }))\n        },\n    ]\n\n    // const returnIconLinkSetting = foot.icon.icons.map((item, index) => {\n    //     return(\n    //         <div className=\"edit-element\">\n    //             <div className=\"edit-element__one\">\n    //                 <div className=\"edit-element__left\">{item.label}</div>\n    //                 <div className=\"edit-element__right\">\n    //                     <input type=\"text\" value={foot.icons.filter(doc => doc.value === item.value)[0].link} \n    //                         onChange={e => setFoot({...foot, icons:[...foot.icons.map((it, index) => it.value === item.value ? {...it, link:e.currentTarget.value} : it )]}) } />\n    //                 </div>\n    //             </div>\n    //         </div>\n    //     )\n    // })\n\n    return (\n        <div>\n            { category === 0 ? \n            <>\n                <div>\n                <ElementsTable elements={elements} />\n                    <Layout foot={foot} setFoot={setFoot} version='footer'/>\n                    {/* <RadioCustom value={foot.layout} options={layoutOptions} func={e => {setFoot(produce(foot, draft => {\n                        draft.layout = e;\n                    }))}} /> */}\n                    <OpenCloseCustom title=\"회사 / 팀 정보\" use={foot.text.use} open={state.focus === 'footer-text'}>\n                        <ColorCustom text=\"색상\" value={foot.text.color} func={e => setFoot(produce(foot, draft => {\n                            draft.text.color = e;\n                        }))} />\n                    </OpenCloseCustom>\n                    <OpenCloseCustom title=\"소셜 아이콘\" use={foot.icon.use} open={state.focus === 'footer-icons'}>\n                        <ColorCustom text=\"색상\" value={foot.icon.color} func={e => {setFoot(produce(foot, draft => {\n                            draft.icon.color = e;\n                        }))}} />\n                        <InputCustom text='페이스북' value={foot.icon.facebook} func={e=>{setFoot(produce(foot, draft => {\n                            draft.icon.facebook = e;\n                        }))}} placeholder='링크를 입력해 주세요.'/>\n                       <InputCustom text='인스타그램' value={foot.icon.instagram} func={e=>{setFoot(produce(foot, draft => {\n                            draft.icon.instagram = e;\n                        }))}} placeholder='링크를 입력해 주세요.'/>\n                        <InputCustom text='트위터' value={foot.icon.twitter} func={e=>{setFoot(produce(foot, draft => {\n                            draft.icon.twitter = e;\n                        }))}} placeholder='링크를 입력해 주세요.'/>\n                        <InputCustom text='카카오톡' value={foot.icon.kakaotalk} func={e=>{setFoot(produce(foot, draft => {\n                            draft.icon.kakaotalk = e;\n                        }))}} placeholder='링크를 입력해 주세요.'/>\n                        <InputCustom text='유튜브' value={foot.icon.youtube} func={e=>{setFoot(produce(foot, draft => {\n                            draft.icon.youtube = e;\n                        }))}} placeholder='링크를 입력해 주세요.'/>\n                        <InputCustom text='노션' value={foot.icon.notion} func={e=>{setFoot(produce(foot, draft => {\n                            draft.icon.notion = e;\n                        }))}} placeholder='링크를 입력해 주세요.'/>\n                        <InputCustom text='링크드인' value={foot.icon.linkedIn} func={e=>{setFoot(produce(foot, draft => {\n                            draft.icon.linkedIn = e;\n                        }))}} placeholder='링크를 입력해 주세요.'/>\n                    </OpenCloseCustom>\n                    <OpenCloseCustom title=\"저작권 표시\" use={foot.copyright.use} open={state.focus === 'footer-copyright'}>\n                        <div className=\"center-column\">\n                            <div className=\"edit-element center-row\" style={{fontSize:'13px', justifyContent:'start'}}>\n                                <div>\n                                    Copyright 2022\n                                </div>\n                                <div style={{width:'180px'}}>\n                                    <InputCustom value={foot.copyright.text} placeholder=\"surfee\" func={(e) => setFoot(produce(foot, draft => {\n                                        draft.copyright.text = e;\n                                    }))}/>\n                                </div>\n                                {/* <div>\n                                    , All rights reserved\n                                </div> */}\n                            </div>\n                        </div>\n                    </OpenCloseCustom>\n                </div>\n            </>\n            : \n            <div>\n                <OpenCloseCustom title=\"배경\" use={true}>\n                    <ColorCustom text=\"색상\" value={foot.backgroundColor} func={e => {setFoot(produce(foot, draft => {\n                        draft.backgroundColor = e;\n                    }))}} />\n                </OpenCloseCustom>\n                <OpenCloseCustom title=\"여백\" use={true}>\n                    <SliderCustom top=\"높이\" max={15} value={foot.paddingTop} func={e => {setFoot(produce(foot, draft => {\n                        draft.paddingTop = e;\n                        draft.paddingBottom = e;\n                    }))}} />\n                </OpenCloseCustom>\n            </div>\n            }\n        </div>\n    )\n}\n\nexport default EditFooterSection","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/EditVideoSection.js",["985","986"],"import React, {useContext} from 'react'\nimport { MyContext } from '../../../../pages/Make/MakePageV2'\nimport EditDesign from './tools/EditDesign'\nimport ElementsTable from './tools/ElementsTable'\nimport produce from 'immer'\nimport OpenCloseCustom from '../tools/Custom/OpenCloseCustom'\nimport RadioCustom from '../tools/Custom/RadioCustom'\nimport AddContentVideo from '../tools/func/FuncContentVideo'\nimport AddYoutubeLink from '../tools/func/FuncYoutubeLink'\nimport SliderCustom from '../tools/Custom/SliderCustom'\nimport {CustomSwitch} from '../tools/Custom/OnOffCustom'\nimport ColorCustom from '../tools/Custom/ColorCustom'\nimport TextSizeCustom from '../tools/func/TextSizeCustom'\nimport EditTitleDesc from './tools/EditTitleDesc'\nimport AlignCustom from '../tools/Custom/AlignCustom'\n\nconst videoOptions = [\n    { label: '업로드', value: 'base'},\n    { label: '유튜브 링크', value: 'youtube'}\n]\n\nfunction EditVideoSection({content, category}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    // video type\n    const changeVideoOption = e => {\n        action.setContents(produce(state.contents, draft => {\n            draft[state.secNum].video.type = e;\n        }));\n    }\n    // video upload - BufferArray를 서버에서 stream으로 처리하는 방식으로 하는게 제일인데.. 포기...\n    const onChangeContentVideo = e => {\n        // let newContents = JSON.parse(JSON.stringify(state.contents))\n        const {target:{files},} = e;\n        const oneFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => { // 로딩이 끝날 때 실행한다는 뜻.\n            const {currentTarget:{result}} = finishedEvent;\n            action.setContents(produce(state.contents, draft=>{\n                draft[state.secNum].video.attachment = result;\n            }))\n            // actionImgCompress(result);\n        }\n        if(oneFile){\n            reader.readAsDataURL(oneFile);\n        }\n    }\n    // video remove\n    const RemoveVideo = () => {\n        action.setContents(produce(state.contents, draft=>{\n            draft[state.secNum].video.attachment = '';\n        }))\n    }\n    // video size\n    const setImgSize = e => {\n        action.setContents(produce(state.contents, draft => {\n            draft[state.secNum].image.size = e\n        }))\n    }\n\n    const videoType = () => {\n        switch(content.video.type){\n            case 'base':\n                return(\n                    <>\n                    <AddContentVideo text=\"동영상\" value={content.video.attachment} func={e => onChangeContentVideo(e)} removeFunc={e => RemoveVideo(e)}/>\n                    <SliderCustom top=\"크기\" text=\"동영상\" value={content.image.size} func={setImgSize} max=\"100\"/>\n                    </>\n                )\n            case 'youtube':\n                return(\n                    <>\n                    <AddYoutubeLink content={content} value={content.video.link} />\n                    <CustomSwitch text=\"자동 재생\" value={content.video.auto} \n                        onChange={ () => action.setContents(produce(state.contents, draft => {\n                            if (content.video.link.includes('autoplay=1'))\n                                {draft[state.secNum].video.link = content.video.link.replace('autoplay=1', 'autoplay=0');\n                                draft[state.secNum].video.auto = false;}\n                            else\n                                {draft[state.secNum].video.link = content.video.link.replace('autoplay=0', 'autoplay=1');\n                                draft[state.secNum].video.auto = true;}\n                        }))}/>\n                    <div className=\"mid-command\">\n                        {\n                            content.video.auto ? <> 유저가 페이지에 들어오면 동영상이 음소거 상태로 자동 재생됩니다. </>\n                            : <> 유저가 페이지에 들어온 후 동영상을 클릭하면 재생됩니다. </>\n                        }\n                    </div>\n                    <SliderCustom top=\"크기\" text=\"동영상\" value={content.image.size} func={setImgSize} max=\"100\"/>\n                    </>\n                )\n        }\n    }\n\n    const elements = [\n        {\n            title:'제목',\n            use:content.title.use,\n            func:() => action.setContents(produce(state.contents, draft => {\n                draft[state.secNum].title.use = !content.title.use;\n            }))\n        },\n        {\n            title:'본문',\n            use:content.desc.use,\n            func:() => action.setContents(produce(state.contents, draft => {\n                draft[state.secNum].desc.use = !content.desc.use;\n            }))\n        },\n        {\n            title:'동영상',\n            use:content.video.use,\n            func:() => action.setContents(produce(state.contents, draft => {\n                draft[state.secNum].video.use = !content.video.use;\n            }))\n        },\n        {\n            title:'설명',\n            use:content.explanation.use,\n            func:() => action.setContents(produce(state.contents, draft => {\n                draft[state.secNum].explanation.use = !content.explanation.use;\n            }))\n        },\n    ]\n\n    const returnTable = () => {\n        switch(category){\n            case 0:\n                // case 0은 디자인 수정\n                return(\n                    <div>\n                        <ElementsTable elements={elements} />\n                        <EditTitleDesc content={content} />\n                        <OpenCloseCustom title=\"동영상\" use={content.video.use}>\n                            <RadioCustom text=\"방식\" options={videoOptions} value={content.video.type} func={e=>changeVideoOption(e)}/>\n                            {videoType()}\n                        </OpenCloseCustom>\n                        <OpenCloseCustom title='설명' use={content.explanation.use}>\n                        <ColorCustom text=\"색상\" value={content.explanation.color} func={e => action.setContents(produce(state.contents, draft => {\n                            draft[state.secNum].explanation.color = e;\n                        }))} />\n                        <AlignCustom value={content.explanation.align} func={e => action.setContents(produce(state.contents, draft => {\n                            draft[state.secNum].explanation.align = e;\n                        }))} />\n                        <TextSizeCustom text=\"크기\" desc value={content.explanation.size} func={e => action.setContents(produce(state.contents, draft => {\n                            draft[state.secNum].explanation.size = e;\n                        }))} />\n                        </OpenCloseCustom>\n                    </div>\n                )\n            case 1:\n                return(\n                    <div>\n                        <EditDesign content={content} />\n                    </div>\n                )\n        }\n    }\n\n    return (\n        <>\n            {returnTable()}\n        </>\n    )\n}\n\nexport default EditVideoSection\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/EditGallerySection.js",["987","988","989"],"import React, {useContext} from 'react'\nimport { MyContext } from '../../../../pages/Make/MakePageV2'\nimport EditDesign from './tools/EditDesign'\nimport produce from 'immer';\nimport ElementsTable from './tools/ElementsTable'\nimport EditTitleDesc from './tools/EditTitleDesc'\nimport RadioCustom from '../tools/Custom/RadioCustom'\nimport OnOffCustom from '../tools/Custom/OnOffCustom'\nimport ColorCustom from '../tools/Custom/ColorCustom'\nimport OpenCloseCustom from '../tools/Custom/OpenCloseCustom'\nimport TextSizeCustom from '../tools/func/TextSizeCustom'\nimport LayoutRFG from './tools/LayoutRFG'\nimport SliderCustom from '../tools/Custom/SliderCustom'\n\nconst layoutOptions = [\n    { label: '1', value: 1},\n    { label: '2', value: 2},\n    { label: '3', value: 3},\n    { label: '4', value: 4},\n]\nconst shapeOptions = [\n    { label: '사각형', value: 0 },\n    { label: '라운드', value: 5 },\n    { label: '원형', value: 20 },\n]\n\nfunction EditGallerySection({content, category}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    const elements = [\n        {\n            title:'제목',\n            use:content.title.use,\n            func:() => action.setContents(produce(state.contents, draft => {\n                draft[state.secNum].title.use = !content.title.use;\n            }))\n        },\n        {\n            title:'본문',\n            use:content.desc.use,\n            func:() => action.setContents(produce(state.contents, draft => {\n                draft[state.secNum].desc.use = !content.desc.use;\n            }))\n        },\n        {\n            title:'이미지',\n            use:content.element.use,\n            func:() => action.setContents(produce(state.contents, draft => {\n                draft[state.secNum].element.use = !content.element.use;\n            }))\n        },\n        {\n            title:'카드',\n            use:content.card.use,\n            func:() => action.setContents(produce(state.contents, draft => {\n                draft[state.secNum].card.use = !content.card.use;\n            }))\n        },\n    ]\n\n    const returnTable = () => {\n        switch(category){\n            case 0:\n                // case 0은 디자인 수정\n                return(\n                    <div>\n                        <ElementsTable elements={elements} />\n                        <LayoutRFG content={content} />\n                        <EditTitleDesc content={content} />\n                        <OpenCloseCustom title=\"이미지\" use={content.element.use} subtext={state.isPhone ? '모바일' : 'PC'} open={state.focus === 'gallery-image'}>\n                            {\n                                state.isPhone ? \n                                <>\n                                    <SliderCustom top=\"크기\" value={content.mobile.cardSize} func={e =>\n                                        action.setContents(produce(state.contents, draft => {\n                                            draft[state.secNum].mobile.cardSize = e\n                                    }))} max=\"400\"/>\n                                </>\n                                :\n                                <>\n                                    <SliderCustom top=\"크기\" value={content.element.size} func={e =>\n                                        action.setContents(produce(state.contents, draft => {\n                                            draft[state.secNum].element.size = e\n                                    }))} max=\"500\"/>\n                                </>\n                            }\n                        </OpenCloseCustom>\n                        <OpenCloseCustom title='카드' use={content.card.use} open={state.focus === 'elementText'}>\n                            <RadioCustom text=\"프레임\" value={content.card.borderRadius} options={shapeOptions} func={e => action.setContents(produce(state.contents, draft => {\n                                    draft[state.secNum].card.borderRadius = e;\n                                }))} />\n                            <ColorCustom text=\"카드 색상\" value={content.card.color} func={e => action.setContents(produce(state.contents, draft => {\n                                draft[state.secNum].card.color = e;\n                            }))} />\n                            <OnOffCustom text=\"그림자 적용\" value={content.card.shadow} func={(e) => action.setContents(produce(state.contents, draft => {\n                                draft[state.secNum].card.shadow = !content.card.shadow\n                            }))} />\n                            <ColorCustom text=\"설명 글 색상\" value={content.text.color} func={e => action.setContents(produce(state.contents, draft => {\n                                    draft[state.secNum].text.color = e;\n                                }))} />\n                        </OpenCloseCustom>\n                    </div>\n                )\n            case 1:\n                return(\n                    <div>\n                        <EditDesign content={content} />\n                    </div>\n                )\n        }\n    }\n\n    return (\n        <>\n            {returnTable()}\n        </>\n    )\n}\n\nexport default EditGallerySection\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/EditReviewSection.js",["990"],"import React, {useContext} from 'react'\nimport { MyContext } from '../../../../pages/Make/MakePageV2'\nimport produce from 'immer';\nimport EditDesign from './tools/EditDesign'\nimport ElementsTable from './tools/ElementsTable'\nimport OpenCloseCustom from '../tools/Custom/OpenCloseCustom'\nimport RadioCustom from '../tools/Custom/RadioCustom'\nimport AlignCustom from '../tools/Custom/AlignCustom'\nimport ColorCustom from '../tools/Custom/ColorCustom'\nimport LayoutRFG from './tools/LayoutRFG'\nimport SingleColorCustom from '../tools/Custom/SingleColorCustom'\nimport {EditImageIcon} from './EditFeaturesSection'\nimport TextSizeCustom from '../tools/func/TextSizeCustom'\nimport EditTitleDesc from './tools/EditTitleDesc'\nimport OnOffCustom from '../tools/Custom/OnOffCustom'\n\nconst ratingSizeOptions = [\n    { label: '작게', value: 15 },\n    { label: '보통', value: 19 },\n    { label: '크게', value: 23 },\n]\n\nfunction EditReviewSection({content, category}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    const elements = [\n        {\n            title:'제목',\n            use:content.title.use,\n            func:() => action.setContents(produce(state.contents, draft => {\n                draft[state.secNum].title.use = !content.title.use;\n            }))\n        },\n        {\n            title:'본문',\n            use:content.desc.use,\n            func:() => action.setContents(produce(state.contents, draft => {\n                draft[state.secNum].desc.use = !content.desc.use;\n            }))\n        },\n        {\n            title:'아이콘/이미지',\n            use:content.element.use,\n            func:() => action.setContents(produce(state.contents, draft => {\n                draft[state.secNum].element.use = !content.element.use;\n            }))\n        },\n        {\n            title:'리뷰 내용',\n            use:content.reviewText,\n            func:() => action.setContents(produce(state.contents, draft => {\n                draft[state.secNum].reviewText = !content.reviewText;\n            }))\n        },\n    ]\n\n    const returnTable = () => {\n        switch(category){\n            case 0:\n                // case 0은 디자인 수정\n                return(\n                    <>\n                        <ElementsTable elements={elements} />\n                        <LayoutRFG content={content} />\n                        <EditTitleDesc content={content} />\n                        <EditImageIcon content={content} />\n                        <OpenCloseCustom title=\"리뷰 내용\" use={content.reviewText} open={state.focus === 'elementText'}>\n                            <div className=\"box-gray__container\">\n                                <ColorCustom text=\"색상\" value={content.elementText.color} func={e => action.setContents(produce(state.contents, draft => {\n                                    draft[state.secNum].elementText.color = e;\n                                    draft[state.secNum].elementTitle.color = e;\n                                    draft[state.secNum].writer.color = e;\n                                }))} />\n                                <AlignCustom value={content.elementText.align} func={e => action.setContents(produce(state.contents, draft => {\n                                    draft[state.secNum].elementText.align = e;\n                                    draft[state.secNum].align = e;\n                                }))} />\n                            </div>\n                            <div className=\"box-gray__container\">\n                                <OnOffCustom text=\"제목\" value={content.elementTitle.use} func={(e) => action.setContents(produce(state.contents, draft => {\n                                    draft[state.secNum].elementTitle.use = !content.elementTitle.use;\n                                }))} />\n                                <TextSizeCustom text=\"제목 크기\" elementTitle value={content.elementTitle.size} func={e => action.setContents(produce(state.contents, draft => {\n                                    draft[state.secNum].elementTitle.size = e;\n                                }))} />\n                            </div>\n                            <div className=\"box-gray__container\">\n                                <OnOffCustom text=\"별점\" value={content.rating.use} func={(e) => action.setContents(produce(state.contents, draft => {\n                                    draft[state.secNum].rating.use = !content.rating.use;\n                                }))} />\n                                <ColorCustom text=\"색상\" value={content.rating.color} func={e => action.setContents(produce(state.contents, draft => {\n                                    draft[state.secNum].rating.color = e;\n                                }))} />\n                                <RadioCustom text=\"크기\" value={content.rating.size} options={ratingSizeOptions} func={e => action.setContents(produce(state.contents, draft => {\n                                    draft[state.secNum].rating.size = e;\n                                }))} />\n                            </div>\n                            <div className=\"box-gray__container\">\n                                <OnOffCustom text=\"내용\" value={content.elementText.use} func={(e) => action.setContents(produce(state.contents, draft => {\n                                    draft[state.secNum].elementText.use = !content.elementText.use;\n                                }))} />\n                                <TextSizeCustom text=\"크기\" elementDesc value={content.elementText.size} func={e => action.setContents(produce(state.contents, draft => {\n                                    draft[state.secNum].elementText.size = e;\n                                }))} />\n                            </div>\n                            <>\n                                <OnOffCustom text=\"이름 / 정보\" value={content.writer.use} func={(e) => action.setContents(produce(state.contents, draft => {\n                                    draft[state.secNum].writer.use = !content.writer.use;\n                                }))} />\n                                <TextSizeCustom text=\"크기\" elementDesc value={content.writer.size} func={e => action.setContents(produce(state.contents, draft => {\n                                    draft[state.secNum].writer.size = e;\n                                }))} />\n                            </>\n                        </OpenCloseCustom>\n                        {/* <div>\n                            {returnRepeatComponents}\n                            <div>\n                                <span className=\"add-feature-button\" onClick={() => addComponent()}>\n                                    Add Feature\n                                </span>\n                            </div>\n                        </div> */}\n                    </>\n                )\n\n            case 1:\n                // case 1은 템플릿 변경\n                return(\n                    <>\n                        <EditDesign content={content} />\n                    </>\n                )\n\n            default:\n                <></>\n        }\n    }\n\n\n    return(\n        <>\n            {returnTable()}\n        </>\n    )\n}\n\nexport default EditReviewSection\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/EditHeroSection.js",["991"],"import React, {useState, useContext} from 'react'\nimport { MyContext } from '../../../../pages/Make/MakePageV2'\nimport EditDesign from './tools/EditDesign'\nimport ElementsTable from './tools/ElementsTable'\nimport produce from 'immer';\nimport OpenCloseCustom from '../tools/Custom/OpenCloseCustom'\nimport Layout from './tools/Layout'\nimport Contents from './tools/Contents'\nimport AddGhostButton from './tools/AddGhostButton'\nimport EditTitleDesc from './tools/EditTitleDesc'\nimport AddCtaButton from './tools/AddCtaButton'\nimport AddAppButton from './tools/AddAppButton'\n\nfunction EditHeroSection({content, category}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    const elements = [\n        {\n            title: '제목',\n            use:content.title.use,\n            func:() => action.setContents(produce(state.contents, draft => {\n                draft[state.secNum].title.use = !content.title.use;\n            }))\n        },\n        {\n            title: '본문',\n            use:content.desc.use,\n            func:() => action.setContents(produce(state.contents, draft => {\n                draft[state.secNum].desc.use = !content.desc.use;\n            }))\n        },\n        {\n            title: '콘텐츠',\n            use:content.contents.use,\n            func:() => action.setContents(produce(state.contents, draft => {\n                draft[state.secNum].contents.use = !content.contents.use;\n            }))\n        },\n        {\n            title: '버튼',\n            use:content.button.use,\n            func:() => action.setContents(produce(state.contents, draft => {\n                draft[state.secNum].button.use = !content.button.use;\n            }))\n        },\n        {\n            title: '앱 다운로드 버튼',\n            use:content.appButton.use,\n            func:() => action.setContents(produce(state.contents, draft => {\n                draft[state.secNum].appButton.use = !content.appButton.use;\n            }))\n        },\n    ]\n    \n    const returnTable = () => {\n        switch(category){\n            case 0:\n                // case 0은 디자인 수정\n                return(\n                    <>\n                    <ElementsTable elements={elements} />\n                    <Layout content={content} version='main'/>\n                    <EditTitleDesc content={content} />\n                    <Contents content={content} />\n                    <OpenCloseCustom title=\"버튼\" use={content.button.use} open={state.focus === 'button'}>\n                        <AddCtaButton content={content} num={1} />\n                        <AddGhostButton content={content} num={1} />\n                    </OpenCloseCustom>\n                    <AddAppButton content={content} />\n                    </>\n                )\n\n            case 1:\n                // case 1은 템플릿 변경\n                return(\n                    <>\n                        <EditDesign content={content} />\n                    </>\n                )\n\n            default:\n                <></>\n        }\n    }\n\n    return(\n        <>\n            {returnTable()}\n        </>\n    )\n}\n\nexport default EditHeroSection\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/EditFeaturesSection.js",["992","993"],"import React, {useState, useContext} from 'react'\nimport { MyContext } from '../../../../pages/Make/MakePageV2'\nimport ElementsTable from './tools/ElementsTable'\nimport RadioCustom from '../tools/Custom/RadioCustom'\nimport AlignCustom from '../tools/Custom/AlignCustom'\nimport produce from 'immer';\nimport EditTitleDesc from './tools/EditTitleDesc'\nimport SingleColorCustom from '../tools/Custom/SingleColorCustom'\nimport ColorCustom from '../tools/Custom/ColorCustom'\nimport OnOffCustom from '../tools/Custom/OnOffCustom'\nimport TextSizeCustom from '../tools/func/TextSizeCustom'\nimport OpenCloseCustom from '../tools/Custom/OpenCloseCustom'\nimport EditDesign from './tools/EditDesign'\nimport LayoutRFG from './tools/LayoutRFG'\n\nconst featureOptions = [\n    { label: '아이콘', value: 'icon' },\n    { label: '이미지', value: 'image'},\n]\nconst shapeOptions = [\n    { label: '사각형', value: 0 },\n    { label: '라운드', value: 5 },\n    { label: '원형', value: 500 },\n]\nconst imageSizeOptions = [\n    { label: '작게', value: 60 },\n    { label: '보통', value: 75 },\n    { label: '크게', value: 100 },\n]\n\nexport const EditImageIcon = ({content}) => {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    return(\n        <OpenCloseCustom title=\"아이콘/이미지\" use={content.element.use} tooltip=\"화면 위에서 아이콘 및 이미지를 업로드 할 수 있습니다.\" open={state.focus === 'element'}>\n            <RadioCustom text=\"특징\" value={content.element.type} options={featureOptions} func={e => action.setContents(produce(state.contents, draft => {\n                draft[state.secNum].element.type = e;\n            }))} />\n            {\n                content.element.type === 'icon' && \n                <>\n                <ColorCustom text=\"색상\" value={content.element.backgroundColor} func={e => action.setContents(produce(state.contents, draft => {\n                    draft[state.secNum].element.backgroundColor = e;\n                }))} />\n                <RadioCustom text=\"프레임\" button value={content.element.iconBorder} options={shapeOptions} func={e => action.setContents(produce(state.contents, draft => {\n                    draft[state.secNum].element.iconBorder = e;\n                }))} />\n                <RadioCustom text=\"크기\" value={content.element.size} options={imageSizeOptions} func={e => action.setContents(produce(state.contents, draft => {\n                    draft[state.secNum].element.size = e;\n                }))} />\n                </>\n            }\n            {\n                content.element.type === 'image' &&\n                <>\n                <RadioCustom text=\"프레임\" button value={content.element.imageBorder} options={shapeOptions} func={e => action.setContents(produce(state.contents, draft => {\n                    draft[state.secNum].element.imageBorder = e;\n                }))} />\n                <RadioCustom text=\"크기\" value={content.element.size} options={imageSizeOptions} func={e => action.setContents(produce(state.contents, draft => {\n                    draft[state.secNum].element.size = e;\n                }))} />\n                </>\n            }\n        </OpenCloseCustom>\n    )\n}\n\nfunction EditFeaturesSection({content, category}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    const elements = [\n        {\n            title:'제목',\n            use:content.title.use,\n            func:() => action.setContents(produce(state.contents, draft => {\n                draft[state.secNum].title.use = !content.title.use;\n            }))\n        },\n        {\n            title:'본문',\n            use:content.desc.use,\n            func:() => action.setContents(produce(state.contents, draft => {\n                draft[state.secNum].desc.use = !content.desc.use;\n            }))\n        },\n        {\n            title:'아이콘/이미지',\n            use:content.element.use,\n            func:() => action.setContents(produce(state.contents, draft => {\n                draft[state.secNum].element.use = !content.element.use;\n            }))\n        },\n        {\n            title:'설명글',\n            use:content.elementText.use,\n            func:() => action.setContents(produce(state.contents, draft => {\n                draft[state.secNum].elementText.use = !content.elementText.use;\n            }))\n        },\n    ]\n\n    const returnTable = () => {\n        switch(category){\n            case 0:\n                // case 0은 디자인 수정\n                return(\n                    <div>\n                        <ElementsTable elements={elements} />\n                        <LayoutRFG content={content} />\n                        <EditTitleDesc content={content} />\n                        <EditImageIcon content={content} />\n                        <OpenCloseCustom title=\"설명글\" use={content.elementText.use} open={state.focus === 'elementText'}>\n                            <div className=\"box-gray__container\">\n                            <AlignCustom value={content.elementText.align} func={e => action.setContents(produce(state.contents, draft => {\n                                draft[state.secNum].elementText.align = e;\n                                draft[state.secNum].align = e;\n                            }))} />\n                            </div>\n                            <OnOffCustom text=\"특징 제목\" value={content.elementText.titleUse} func={(e) => action.setContents(produce(state.contents, draft => {\n                                draft[state.secNum].elementText.titleUse = !content.elementText.titleUse;\n                            }))} />\n                            {\n                                content.elementText.titleUse &&\n                                <>\n                                <ColorCustom text=\"제목 색상\" value={content.elementText.titleColor} func={e => action.setContents(produce(state.contents, draft => {\n                                    draft[state.secNum].elementText.titleColor = e;\n                                }))} />\n                                <TextSizeCustom text=\"제목 크기\" elementTitle value={content.elementText.titleSize} func={e => action.setContents(produce(state.contents, draft => {\n                                    draft[state.secNum].elementText.titleSize = e;\n                                }))} />\n                                </>\n                            }\n                            <OnOffCustom text=\"특징 본문\" value={content.elementText.descUse} func={(e) => action.setContents(produce(state.contents, draft => {\n                                draft[state.secNum].elementText.descUse = !content.elementText.descUse;\n                            }))} />\n                            {\n                                content.elementText.descUse &&\n                                <>\n                                <ColorCustom text=\"본문 색상\" value={content.elementText.descColor} func={e => action.setContents(produce(state.contents, draft => {\n                                    draft[state.secNum].elementText.descColor = e;\n                                }))} />\n                                <TextSizeCustom text=\"본문 크기\" elementDesc value={content.elementText.descSize} func={e => action.setContents(produce(state.contents, draft => {\n                                    draft[state.secNum].elementText.descSize = e;\n                                }))} />\n                                </>\n                            }\n                        </OpenCloseCustom>\n                    </div>\n                )\n\n            case 1:\n                // case 1은 템플릿 변경\n                return(\n                    <div>\n                        <EditDesign content={content} />\n                    </div>\n                )\n\n            default:\n                <></>\n        }\n    }\n\n\n    return(\n        <>\n            {returnTable()}\n        </>\n    )\n}\n\nexport default EditFeaturesSection","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/EditDetailSection.js",["994","995"],"import React, {useState, useContext} from 'react'\nimport { MyContext } from '../../../../pages/Make/MakePageV2'\nimport EditDesign from './tools/EditDesign'\nimport './EditeTemplates.css'\nimport ElementsTable from './tools/ElementsTable'\nimport EditTitleDesc from './tools/EditTitleDesc'\nimport produce from 'immer';\nimport './EditContent.css'\n\nimport Layout from './tools/Layout'\nimport Contents from './tools/Contents'\n\nfunction EditDetailSection({content, category}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    const onChangeButtonLink = (e) => {\n        let newContents = state.contents.map((item, index) => index === state.secNum ? {...item, button:{...item.button, link:e.currentTarget.value}} : item )\n        action.setContents(newContents);\n    }\n\n    const elements = [\n        {\n            title:'제목',\n            use:content.title.use,\n            func:() => action.setContents(produce(state.contents, draft => {\n                draft[state.secNum].title.use = !content.title.use;\n            }))\n        },\n        {\n            title:'본문',\n            use:content.desc.use,\n            func:() => action.setContents(produce(state.contents, draft => {\n                draft[state.secNum].desc.use = !content.desc.use;\n            }))\n        },\n        {\n            title:'콘텐츠',\n            use:content.contents.use,\n            func:() => action.setContents(produce(state.contents, draft => {\n                draft[state.secNum].contents.use = !content.contents.use;\n            }))\n        },\n    ]\n\n    const returnTable = () => {\n        switch(category){\n            case 0:\n                // case 0은 디자인 수정\n                return(\n                    <div className=\"section-make__inner-container\">\n                        <ElementsTable elements={elements} />\n                        <Layout content={content} version='detail' />\n                        <EditTitleDesc content={content} />\n                        <Contents content={content}/>\n                    </div>\n                )\n\n            case 1:\n                // case 1은 템플릿 변경\n                return(\n                    <>\n                        <EditDesign content={content} />\n                    </>\n                )\n\n            default:\n                <></>\n        }\n    }\n\n    return(\n        <>\n            {returnTable()}\n        </>\n    )\n}\n\nexport default EditDetailSection\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/NavFooterSetting/EditNaviSection.js",["996","997","998","999"],"import React, {useState, useContext} from 'react'\nimport { MyContext } from '../../../../pages/Make/MakePageV2'\nimport RadioCustom from '../tools/Custom/RadioCustom'\nimport ColorCustom from '../tools/Custom/ColorCustom'\nimport OpenCloseCustom from '../tools/Custom/OpenCloseCustom'\nimport OnOffCustom from '../tools/Custom/OnOffCustom'\nimport InputCustom from '../tools/Custom/InputCustom'\nimport ElementsTable from '../EditTemplates/tools/ElementsTable'\nimport SliderCustom from '../tools/Custom/SliderCustom'\nimport BoxCustom from '../tools/Custom/BoxCustom'\nimport produce from 'immer';\nimport AddContentImg from '../tools/func/FuncContentImg'\nimport {Phone} from '@styled-icons/bootstrap'\nimport {Desktop} from '@styled-icons/fa-solid'\nimport AlignCustom from '../tools/Custom/AlignCustom'\n\nconst logoOptions = [\n    { label: '로고 이미지', value: 'logo' },\n    { label: '텍스트', value: 'text' },\n]\n\nfunction EditNaviSection({navi, setNavi, category}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    const elements = [\n        {\n            title:'로고',\n            use:navi.logo.use,\n            func:() => setNavi(produce(navi, draft => {\n                draft.logo.use = !navi.logo.use;\n            }))\n        },\n        {\n            title:'버튼',\n            use:navi.button.use,\n            func:() => setNavi(produce(navi, draft => {\n                draft.button.use = !navi.button.use;\n            }))\n        },\n    ]\n\n\n    // 이미지 업로드\n    const onChangeContentImage= e => {\n        const {target:{files},} = e;\n        const oneFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => { // 로딩이 끝날 때 실행한다는 뜻.\n            const {currentTarget:{result}} = finishedEvent;\n            setNavi(produce(navi, draft=>{\n                draft.logo.image.attachment = result;             \n            }))\n        }\n        if(oneFile){\n            reader.readAsDataURL(oneFile);\n        }\n    }\n    // 이미지 삭제\n    const RemoveImage = () => {\n        setNavi(produce(navi, draft=>{\n            draft.logo.image.attachment = '';\n        }))\n    }\n\n    return (\n        <div>\n            { category === 0 ? \n            <>\n                <div>\n                    <ElementsTable elements={elements} />\n                    <OpenCloseCustom title=\"로고\" use={navi.logo.use} open={ state.focus === 'navi-logo' }>\n                        <AlignCustom value={navi.logo.align} func={(e) => setNavi(produce(navi, draft => {\n                            draft.logo.align = e;\n                        }))} />\n\n                        <OnOffCustom value={navi.logo.image.use} func={(e) => setNavi(produce(navi, draft => {\n                            draft.logo.image.use = !navi.logo.image.use;\n                        }))} text=\"로고 (Image)\" />\n                        {\n                            navi.logo.image.use && \n                            <>\n                                <AddContentImg text=\"로고\" value={navi.logo.image.attachment} func={e => onChangeContentImage(e)} removeFunc={e => RemoveImage(e)}/>\n                                <SliderCustom text=\"로고 사이즈\" max='200' func={e => setNavi(produce(navi, draft => {\n                                    draft.logo.image.width = e;\n                                }))} />\n                            </>\n                        }\n                        <OnOffCustom value={navi.logo.text.use} func={(e) => setNavi(produce(navi, draft => {\n                            draft.logo.text.use = !navi.logo.text.use;\n                        }))} text=\"서비스/제품명 (Text)\" />\n                        {\n                            navi.logo.text.use && <>\n                                <ColorCustom text=\"Text 색상\" value={navi.logo.text.color} func={e =>  setNavi(produce(navi, draft => {\n                                    draft.logo.text.color = e;\n                                }))} />\n                            </>\n                        }\n                    </OpenCloseCustom>\n                    <OpenCloseCustom title=\"버튼\" use={navi.button.use}>\n                        <div className=\"box-gray__container\">\n                        <OnOffCustom text=\"CTA 버튼\" value={navi.button.cta.use} func={() => setNavi(produce(navi, draft => {\n                            draft.button.cta.use = !navi.button.cta.use\n                        }))} />\n                        {\n                            navi.button.cta.use && \n                            <>\n                                <InputCustom placeholder=\"연결하고 싶은 URL을 입력해 주세요.\" value={navi.button.cta.link} func={(e) => setNavi(produce(navi, draft => {\n                                    draft.button.cta.link = e\n                                }))} />\n                                {/* <SliderCustom top=\"CTA 여백\" value={navi.button.cta.padding} max={26} func={e => setNavi(produce(navi, draft => {\n                                    draft.button.cta.padding = e;\n                                }))}/> */}\n                            </>\n                        }\n                        </div>\n                        <div className=\"box-gray__container\">\n                        <OnOffCustom text=\"고스트 버튼\" value={navi.button.ghost.use} func={() => setNavi(produce(navi, draft => {\n                            draft.button.ghost.use = !navi.button.ghost.use\n                        }))} />\n                        {\n                            navi.button.ghost.use && \n                            <>\n                                <InputCustom placeholder=\"연결하고 싶은 URL을 입력해 주세요.\" value={navi.button.ghost.link} func={(e) => setNavi(produce(navi, draft => {\n                                    draft.button.ghost.link = e\n                                }))} />\n                                {/* <SliderCustom top=\"고스트 여백\" value={navi.button.ghost.padding} max={26} func={e => setNavi(produce(navi, draft => {\n                                    draft.button.ghost.padding = e;\n                                }))}/> */}\n                            </>\n                        }\n                        </div>\n                    </OpenCloseCustom>\n                    \n                    <BoxCustom>\n                        <OnOffCustom text=\"페이지 상단 고정\" value={navi.fixed} func={e => setNavi({...navi, fixed:!navi.fixed})}/>\n                        <div className=\"edit-element\">\n                            {\n                                navi.fixed ? <p className=\"mid-command\">스크롤을 내리면 내비게이션 바는 더 이상 보이지 않습니다.</p> \n                                    : \n                                <p className=\"mid-command\">스크롤을 내려도 내비게이션 바가 화면 상단에 따라 다닙니다.</p>\n                            }\n                        </div>\n                    </BoxCustom>\n                </div>\n            </>\n            : \n            <>\n            <div>\n                <OpenCloseCustom title=\"배경색\" use={true}>\n                    <ColorCustom func={(e) => setNavi({...navi, backgroundColor:e})} value={navi.backgroundColor} text=\"색상\" />\n                </OpenCloseCustom>\n                <OpenCloseCustom title=\"구분선\" use={true}>\n                    <OnOffCustom text=\"구분선\" value={navi.bottomBorder.use} func={e => setNavi(produce(navi, draft => {\n                        draft.bottomBorder.use = !navi.bottomBorder.use;\n                    }))}/>\n                    {\n                        navi.bottomBorder.use && <>\n                            <ColorCustom func={(e) => setNavi(produce(navi, draft => {\n                                draft.bottomBorder.color = e\n                            }))} value={navi.bottomBorder.color} text=\"색상\" />\n                        </>\n                    }\n                </OpenCloseCustom>\n                <OpenCloseCustom title=\"높이\" use={true}>\n                    <SliderCustom text=\"높이를\" value={navi.height} func={e => setNavi({...navi, height:e})}/>\n                </OpenCloseCustom>\n                <BoxCustom title=\"반응형\">\n                <div className=\"edit-element\">\n                    <div className=\"edit-element__one\" style={{flexDirection: 'column'}}>\n                        <div className=\"edit-element__left\">반응형</div> \n                        <div className=\"radio-container\" style={{justifyContent:'center'}}>\n                            <div className={navi.responsive.pc ? 'radio-element-b' : 'radio-element-b r-unclicked'} onClick={() => setNavi(produce(navi, draft => {\n                                draft.responsive.pc = !navi.responsive.pc\n                            }))}>\n                                <Desktop size=\"30\"/>\n                                <div className=\"radio-shape-text\">\n                                    PC\n                                </div>\n                            </div>\n                            <div className={navi.responsive.mobile ? 'radio-element-b' : 'radio-element-b r-unclicked'} onClick={() => setNavi(produce(navi, draft => {\n                                draft.responsive.mobile = !navi.responsive.mobile\n                            }))}>\n                                <Phone size=\"30\"/>\n                                <div className=\"radio-shape-text\">\n                                    모바일\n                                </div>\n                            </div>\n                        </div>\n                        <div style={{marginTop:'8px'}}>\n                            {\n                                !navi.responsive.pc && !navi.responsive.mobile ? \n                                <div>\n                                    이 섹션은 유저에게 보이지 않습니다.\n                                </div>\n                                :\n                                !navi.responsive.pc ?\n                                <div>\n                                    이 섹션은 PC에서는 보이지 않습니다.\n                                </div>\n                                :\n                                !navi.responsive.mobile ?\n                                <div>\n                                    이 섹션은 모바일에서는 보이지 않습니다.\n                                </div>\n                                :<></>\n                            }\n                        </div>\n                    </div>\n                </div>\n            </BoxCustom>\n            </div>\n            </>\n            }\n        </div>\n    )\n}\n\nexport default EditNaviSection\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/NavBar/NaviConatainer.js",["1000","1001"],"import React, {useContext} from 'react'\nimport { MyContext } from '../../../pages/Make/MakePageV2'\nimport produce from 'immer'\nimport TextareaAutosize from '@mui/material/TextareaAutosize';\nimport AutosizeInput from 'react-input-autosize';\nimport { ButtonEditor } from '../tools/Editor'\nimport '../SectionTypes/components/ReturnButton.css'\n\nfunction NaviConatainer({navi, setNavi}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    const CustomButton = (type) => { return (\n        <>\n        <div className=\"cta-button-edit\" style={{\n            borderRadius:`${state.setting[type].borderRadius}px`,\n            backgroundColor:`${state.setting[type].backgroundColor}`,\n            color:`${state.setting[type].color}`,\n            boxShadow:`${state.setting[type].shadow ? '1px 2px 4px rgba(0,0,0,0.2)' : 'none'}`,\n            border:`${state.setting[type].border ? `1px solid ${state.setting[type].borderColor}` : 'none'}`,\n            textAlign: 'center',\n            fontFamily:`Pretendard-Regular`,\n            fontSize:'14px',\n        }}>\n            {/* <AutosizeInput \n                className=\"text-input-flex\" \n                value={ navi.button[type].text } \n                onChange={(e) => setNavi(produce(navi, draft => {\n                    draft.button[type].text = e.currentTarget.value;\n                }))} \n                inputStyle={{\n                    fontSize:14,\n                    borderRadius:`${state.setting[type].borderRadius}px`,  \n                    backgroundColor:`rgba(0,0,0,0)`, \n                    padding: `2px 8px`, \n                    }} /> */}\n            <div style={{padding:'10px 15px'}}>\n                <ButtonEditor \n                    data={navi.button[type].text}\n                    onChange={(event, editor) => {\n                        const data = editor.getData();\n                        setNavi(produce(navi, draft => {\n                            draft.button[type].text = data;\n                        }))\n                    }}\n                />\n            </div>\n        </div>\n        </>\n        )}\n\n    return (\n        <>\n        {navi.logo.use &&  \n            <div \n                onClick={() => {action.setCategory(0); action.setFocus('navi-logo')}}\n                className=\"make-nav-logoc\" \n                style={{\n                    height:`${navi.height}px`, \n                    justifyContent:`${navi.logo.align === 'center' && navi.button.use && !state.isPhone ? 'right' : navi.logo.align}`,\n                    width: `${navi.logo.align === 'center' && navi.button.use && !state.isPhone ? '115%' : '100%'}`}}>\n                {navi.logo.image.use &&  \n                    <img src={navi.logo.image.attachment} width={navi.logo.image.width} />\n                }\n                {navi.logo.text.use && \n                    <div style={{\n                        // textAlign:`${navi.logo.align === 'center' && navi.button.use ? 'right' : navi.logo.align === 'center' ? 'center' : 'left'}`,\n                        display: 'flex',\n                        zIndex: 5,\n                        color:`${navi.logo.text.color}`, \n                        fontFamily:`${state.setting.font}`,\n                        fontSize:`${state.isPhone ? '19px' : '24px'}`,\n                        resize:'none',\n                        padding: '0px',\n                        marginLeft:`${navi.logo.image.use ? '8px' : '0px'}`,\n                        marginRight: `${navi.logo.align === 'center' && navi.button.use ? '-8px' : navi.logo.align === 'center' ? '0px':'0px'}`,\n                        backgroundColor: 'transparent',\n                    }}>\n                        <AutosizeInput\n                            name=\"form-field-name\"\n                            value={navi.title}\n                            placeholder=\"서비스명을 입력하세요\"\n                            inputStyle={{ \n                                // textAlign:`${navi.logo.align === 'center' && navi.button.use ? 'right' : navi.logo.align === 'center' ? 'center' : 'left'}`,\n                                display: 'flex',\n                                zIndex: 5,\n                                color:`${navi.logo.text.color}`, \n                                fontFamily:`${state.setting.font}`,\n                                fontSize:`${state.isPhone ? '19px' : '24px'}`,\n                                resize:'none',\n                                padding: '0px',\n                                marginLeft:`${navi.logo.image.use ? '8px' : '0px'}`,\n                                marginRight: `${navi.logo.align === 'center' && navi.button.use ? '-8px' : navi.logo.align === 'center' ? '0px':'0px'}`,\n                                backgroundColor: 'transparent',\n                                transition:'all .01s ease-in-out',\n                            }}\n                            onChange={(e) => {\n                                setNavi(produce(navi, draft => {\n                                    draft.title = e.currentTarget.value;\n                                }))\n                            }}\n                            />\n                        {/* <ButtonEditor\n                            data={navi.title}\n                            onChange={(event, editor) => {\n                                const data = editor.getData();\n                                setNavi(produce(navi, draft => {\n                                    draft.title = data;\n                                }))\n                            }}\n                        /> */}\n                    </div>\n                }\n            </div>\n        }  \n        {navi.button.use && !state.isPhone &&\n        <div className=\"make-nav-buttonc\" style={{justifyContent:`${navi.button.align}`}}>\n            <span>\n                { navi.button.cta.use && CustomButton('cta') }\n            </span>\n            <span>\n                { navi.button.ghost.use && CustomButton('ghost')}\n            </span>\n        </div>\n        }     \n        </>\n    )\n}\n\nexport default NaviConatainer\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Footer/FTemplate.js",["1002","1003"],"import React,{useContext} from 'react'\nimport produce from 'immer'\nimport { MyContext } from '../../../pages/Make/MakePageV2'\nimport {Youtube, Twitter,FacebookSquare, Instagram, LinkedinSquare} from '@styled-icons/boxicons-logos';\nimport {KakaoTalk} from '@styled-icons/remix-fill/KakaoTalk'\nimport { Notion } from '@styled-icons/simple-icons';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport Editor from '../tools/Editor'\n\nfunction FTemplate({foot, setFoot, history }) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    const returnLayout = {\n        flexDirection: `${foot.layout === 1 ? 'row' : foot.layout === 2 ? 'column-reverse' : foot.layout === 3 ? 'column' : 'column-reverse'}`,\n    }\n\n    const onChangeText = (data) => {\n        setFoot(produce(foot, draft => {\n            draft.text.text = data;\n        }));\n    }\n\n    const returnIcons = () => {\n        return(\n            <>\n        {foot.icon.facebook !== '' && \n                    <FacebookSquare color={foot.icon.color} className=\"footer-icon\" />\n        }\n        {foot.icon.instagram !== '' && \n                    <Instagram color={foot.icon.color} className=\"footer-icon\" />\n        }\n        {foot.icon.twitter !== '' && \n                    <Twitter color={foot.icon.color} className=\"footer-icon\" />\n        }\n         {foot.icon.kakaotalk !== '' && \n                    <KakaoTalk color={foot.icon.color} className=\"footer-icon\" />\n        }\n         {foot.icon.youtube !== '' && \n                    <Youtube color={foot.icon.color} className=\"footer-icon\" />\n        }\n        {foot.icon.notion !== '' && \n                    <Notion color={foot.icon.color} className=\"footer-icon\" />\n        }\n        {foot.icon.linkedIn !== '' && \n                    <LinkedinSquare color={foot.icon.color} className=\"footer-icon\" />\n        }\n            </>\n        )\n    }\n    return (\n        <>\n            <div className=\"footer-section\" style={{fontSize:'0.5em'}}>\n                <div style={{display:'flex', ...returnLayout}} >\n                    {foot.text.use && \n                        // <TextareaAutosize\n                        //     onClick={() => {action.setFocus('footer-text'); action.setCategory(0)}}\n                        //     // defaultValue={new Array(15).join('Line.')}\n                        //     className=\"text-input\"\n                        //     value={foot.text.text}\n                        //     style={{\n                        //         fontFamily:`${state.setting.smallFont}`, \n                        //         color: `${foot.text.color}`,\n                        //         textAlign:`${foot.text.align}`,\n                        //         resize: 'none',\n                        //         backgroundColor: `${foot.backgroundColor}`\n                        //     }}\n                        //     placeholder='회사 또는 팀 정보를 입력하세요.'\n                        //     onChange={(e) => {\n                        //         onChangeText(e.currentTarget.value);\n                        //     }}\n                        // />\n                        <div\n                            className={ foot.text.align === 'start' ? 'alignLeft' : 'alignCenter' }\n                            style={{\n                                color: `${foot.text.color}`,\n                                textAlign:`${foot.text.align}`,\n                                resize: 'none',\n                                backgroundColor: `${foot.backgroundColor}`\n                            }} onClick={() => {action.setFocus('footer-text'); action.setCategory(0)}}>\n                                <Editor \n                                    placeholder='회사 또는 팀 정보를 입력하세요.'\n                                    className=\"text-input\"\n                                    data={foot.text.text}\n                                    onChange={(event, editor) => {\n                                        const data = editor.getData();\n                                        onChangeText(data)\n                                    }}\n                                />\n                        </div>\n                    }\n                    {foot.icon.use && foot.layout === 1 && \n                        <div className=\"icon-box\" \n                            style={{flexDirection: 'column', justifyContent: 'center', marginLeft:'10%', width:'60%'}}\n                            onClick={() => {action.setFocus('footer-icons'); action.setCategory(0)}}>\n                        {returnIcons()}\n                        </div>\n                    }\n                    {foot.icon.use && foot.layout === 2 && \n                        <div className=\"icon-box\" \n                            style={{flexDirection: 'row', justifyContent: `${foot.text.align}`}}\n                            onClick={() => {action.setFocus('footer-icons'); action.setCategory(0)}}>\n                        {returnIcons()}\n                        </div>\n                    }\n                    {foot.icon.use && foot.layout === 3 && \n                        <div className=\"icon-box\" \n                            style={{flexDirection: 'row', justifyContent: `${foot.text.align}`}}\n                            onClick={() => {action.setFocus('footer-icons'); action.setCategory(0)}}>\n                        {returnIcons()}\n                        </div>\n                    }\n                </div>\n                {foot.copyright.use && \n                    <div onClick={() => { action.setFocus('footer-copyright'); action.setCategory(0)}}\n                        className='copyright-box'\n                        style={{\n                            color:`${foot.text.color}`,\n                        }}>\n                        Copyright 2022 {foot.copyright.text}\n                    </div>\n                }\n            </div>\n        </>\n    )\n}\n\nexport default FTemplate\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/GallerySection.js",["1004","1005","1006","1007","1008"],"import React, {useContext, useState, useRef} from 'react'\nimport { motion } from 'framer-motion';\nimport { MyContext } from '../../../pages/Make/MakePageV2'\nimport {produce} from 'immer'\nimport TitleDesc from './components/TitleDesc'\nimport TextAuto from './components/TextAuto'\nimport {Upload} from '@styled-icons/bootstrap';\nimport FeatureCard from './components/FeatureCard'\nimport Editor from '../tools/Editor'\n\nfunction GallerySection({content,setting}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    const returnElementsCards = content.elements.map((item, index) => {\n       if(index < content.numOfElements){\n           return(\n               <>\n               <FeatureCard section=\"gallery\" content={content} index={index}>\n                       {content.element.use && \n                       <div style={{width:'100%', position:'relative', cursor:'pointer'}} onClick={() => {action.setFocus('gallery-image'); action.setCategory(0)}}>\n                           { item.attachment ? \n                            <img \n                                className=\"uphover\" \n                                src={item.attachment} \n                                style={{\n                                    width:'100%',\n                                    objectFit:'cover',\n                                    height:`${state.isPhone ? content.mobile.cardSize : content.element.size}px`, \n                                    borderRadius:`${content.card.borderRadius}px ${content.card.borderRadius}px 0px 0px`\n                                }}/> \n                               :\n                            <div className=\"feature-upload-button uphover\" \n                                style={{ \n                                    height:`${state.isPhone ? content.element.size/1.5 : content.element.size}px`, \n                                    backgroundColor:`${content.element.backgroundColor}`, \n                                    borderRadius:`${content.card.borderRadius}px ${content.card.borderRadius}px 0px 0px`\n                                }}>\n                                <Upload size=\"25\" />\n                            </div>\n                           }\n                           <input\n                               className=\"feature-upload-file border-hover\"\n                               type=\"file\" \n                               accept=\"image/*\" \n                               id=\"file\" \n                               onChange={ e => {\n                                   const {target:{files},} = e;\n                                   const oneFile = files[0];\n                                   const reader = new FileReader();\n                                   reader.onloadend = (finishedEvent) => { // 로딩이 끝날 때 실행한다는 뜻.\n                                        if(oneFile.size > 3000000){\n                                            alert(\"파일의 크기가 3MB를 초과합니다.\")\n                                            return;\n                                        }\n                                       const {currentTarget:{result}} = finishedEvent;\n                                       action.setContents(produce(state.contents, draft=>{\n                                           draft[state.secNum].elements[index].attachment = result;\n                                       }))\n                                   }\n                                   if(oneFile){\n                                       reader.readAsDataURL(oneFile);\n                                   }\n                               } }\n                           />\n                       </div> \n                       }\n                       {\n                           content.card.use && \n                           <div \n                                className=\"df-margin-big feature-title\" \n                                style={{\n                                    width:'100%', \n                                    height:'100%', \n                                    alignItems:'start', \n                                    display: 'flex', \n                                    margin:'0px', \n                                    padding:`${state.isPhone ? 5 : 8}px`,\n                                    color: `${content.text.color}`,\n                                    fontFamily:`${state.setting.smallFont}`\n                                }} \n                                onClick={() => {action.setFocus('elementText'); action.setCategory(0)}}>\n                                <div \n                                    className={state.isPhone ? content.mobile.align === 'start' ? 'alignLeft' : 'alignCenter' : content.align === 'start' ? 'alignLeft' : 'alignCenter'}\n                                    style={{width:'100%'}}>\n                                    <Editor \n                                        placeholder=\"여기를 클릭하여 이미지에 대한 설명을 적어보세요.\"\n                                        className=\"text-input\"\n                                        data={item.text}\n                                        onChange={(event, editor) => {\n                                            const data = editor.getData();\n                                            action.setContents(produce(state.contents, draft => {\n                                                draft[state.secNum].elements[index].text = data;\n                                            }))\n                                        }}\n                                    />\n                                </div>\n                           </div>\n                       }\n                   </FeatureCard>\n               </>\n           )\n       }\n    })\n\n    return (\n        <motion.div className=\"template\"\n        data-aos-easing=\"ease-in-back\"\n        data-aos-delay=\"200\"\n        data-aos-offset=\"0\" data-aos={content.animation} aos-duration=\"4000\">\n            <TitleDesc content={content} titlePlaceholder=\"제목을 적어보세요.\" descPlaceholder=\"여기를 클릭하여 내용을 적어보세요.\" />\n\n            <div className=\"features__container\" style={{flexWrap : `${state.isPhone ? 'wrap' : ''}`}}>\n                {returnElementsCards}\n            </div>\n\n        </motion.div>\n    )\n}\n\nexport default GallerySection\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/QnaSection.js",["1009","1010"],"import React, {useContext, useState} from 'react'\nimport { motion } from 'framer-motion';\nimport { MyContext } from '../../../pages/Make/MakePageV2'\nimport {produce} from 'immer'\nimport TitleDesc from './components/TitleDesc'\nimport QnaOpenClose from './components/QnaOpenClose'\nimport TextAuto from './components/TextAuto'\nimport Editor from '../../Make/tools/Editor'\n\nfunction QnaSection({content, setting}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    const returnQnaCards = content.qnas.map((item, index) => {\n        return(\n            <QnaOpenClose setting={state.setting} key={index} title={item.question} open={content.qna.shape === 'open'} color={content.qna.question} content={content} type={content.layout} index={index}>\n                <div className=\"edit-element\" style={{alignItems:'start'}}>\n                    <div style={{display:'flex', alignItems: 'start', height:'100%'}}>\n                        <span className=\"qna__word\" style={{ color: `${content.qna.answer}`}}>A. <></></span>\n                    </div>\n                    <div style={{marginTop:'4px', width:`${state.isPhone ? '85.6%' : '91.6%'}`}}>\n                        <div style={{width:'100%', fontSize:'0.9em', color:`${content.qna.answer}`, fontFamily:`${state.setting.smallFont}`}}>\n                            <Editor \n                                data={item.answer}\n                                onChange={(evenet, editor) => {\n                                    const data = editor.getData();\n                                    action.setContents(produce(state.contents, draft => {\n                                        draft[state.secNum].qnas[index].answer = data;\n                                    }))\n                                }}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </QnaOpenClose>\n        )\n    })\n\n    return (\n        <motion.div className=\"template\"\n        data-aos-easing=\"ease-in-back\"\n        data-aos-delay=\"200\"\n        data-aos-offset=\"0\" data-aos={content.animation} aos-duration=\"4000\">\n\n            {/* 큐앤에이 카드의 그림자때문에 텍스트와 정렬이 맞지 않아서 */}\n            <div style={{width : `${state.isPhone ? '100%' : '95%'}` }}>  \n                <TitleDesc content={content} titlePlaceholder=\"자주 묻는 질문을 적어보세요.\" descPlaceholder=\"여기를 클릭하여 자주 묻는 질문과 그 답변을 적어보세요.\" />\n            </div>\n\n            <div className=\"features__container\" style={{flexDirection: 'column', marginTop:'20px'}}>\n                {returnQnaCards}\n            </div>\n\n        </motion.div>\n    )\n}\n\nexport default QnaSection\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/VideoSection.js",["1011","1012"],"import React, {useContext, useState} from 'react'\nimport { MyContext } from '../../../pages/Make/MakePageV2'\nimport {produce} from 'immer'\nimport { motion } from 'framer-motion';\nimport TitleDesc from './components/TitleDesc'\nimport ImageOrSlide from './components/ImageOrSlide'\nimport TextAuto from './components/TextAuto'\nimport TextareaAutosize from '@mui/material/TextareaAutosize';\nimport AnimationDiv from './components/AnimationDiv'\n\nfunction VideoSection({content, setting}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n    const returnLayout = {\n        flexDirection:`${'column'}`,\n        // paddingLeft:`${content.layout === 1 ? '30px' : content.layout === 2 ? '0px' : '30px'}`,\n        // paddingRight:`${content.layout === 1 ? '0px' : content.layout === 2 ? '30px' : '30px'}`,\n    }\n    \n    return (\n        <motion.div \n        data-aos-easing=\"ease-in-back\"\n        data-aos-delay=\"200\"\n        data-aos-offset=\"0\" data-aos={content.animation} aos-duration=\"4000\"\n        style={{ width:'100%', height:'100%'}}>\n            <AnimationDiv content={content} returnLayout={returnLayout} setting={setting}>\n                <div className=\"text__container\">\n                    <TitleDesc content={content} titlePlaceholder=\"제목을 적어보세요.\" descPlaceholder=\"여기를 클릭하여 내용을 적어보세요.\" />\n                </div>\n                <div className=\"image__container\" style={{marginTop:'12px'}}>\n                    <ImageOrSlide content={content} />\n                </div>\n                {\n                content.explanation.use &&\n                <div style={{width:'100%'}}>\n                    <TextAuto small  className=\"text-input\" \n                        placeholder=\"여기를 클릭하여 동영상에 대한 추가 설명을 적어보세요.\"\n                        value={content.explanation.text} \n                        onChange={e => action.setContents(produce(state.contents, draft => {\n                            draft[state.secNum].explanation.text = e.currentTarget.value;\n                        }))}\n                        size={content.explanation.size/20}\n                        color={content.explanation.color}\n                        align={content.explanation.align}\n                    />\n                </div>\n                }\n            </AnimationDiv>\n        </motion.div>\n    )\n}\n\nexport default VideoSection\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/TextSection.js",["1013","1014","1015","1016","1017"],"import React, {useContext, useState, useEffect} from 'react'\nimport { motion } from 'framer-motion';\nimport { MyContext } from '../../../pages/Make/MakePageV2'\nimport {produce} from 'immer'\nimport TitleDesc from './components/TitleDesc'\n\nfunction TextSection({content, setting}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    return (\n        <motion.div style={{ width:'100%', height:'100%'}}\n            data-aos-easing=\"ease-in-back\"\n            data-aos-delay=\"200\"\n            data-aos-offset=\"0\" data-aos={setting.animation} aos-duration=\"4000\">\n            <div className=\"text__container\">\n                <TitleDesc content={content} titlePlaceholder=\"제목을 적어보세요.\" descPlaceholder=\"여기를 클릭하여 내용을 적어보세요.\" />\n            </div>\n        </motion.div>\n    )\n}\n\nexport default TextSection\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/ApplySection.js",["1018"],"import React, {useContext, useState} from 'react'\nimport { motion } from 'framer-motion';\nimport { MyContext } from '../../../pages/Make/MakePageV2'\nimport {produce} from 'immer'\nimport TitleDesc from './components/TitleDesc'\nimport ReturnButton from './components/ReturnButton'\nimport AnimationDiv from './components/AnimationDiv'\nimport TextAuto from './components/TextAuto'\n\nfunction ApplySection({content, setting}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    const returnLayout = {\n        flexDirection:`${\n            state.isPhone ? \n                content.mobile.layout === 3 ? 'column' : 'column-reverse'\n            :\n                content.layout === 2 ? 'row' : content.layout === 3 ? 'row-reverse' : 'column'\n        }`\n    }\n    \n    return (\n        <>\n            <motion.div \n            data-aos-easing=\"ease-in-back\"\n            data-aos-delay=\"200\"\n            data-aos-offset=\"0\" data-aos={content.animation} aos-duration=\"4000\"\n            style={{ width:'100%', height:'100%'}}>\n                <AnimationDiv content={content} setting={setting} returnLayout={returnLayout}>\n                    <div className=\"text__container\">\n                        <TitleDesc content={content} titlePlaceholder=\"잠재 유저의 신청을 유도할 말을 적어보세요.\" descPlaceholder=\"여기를 클릭하여 잠재 유저의 신청을 유도할 수 있는 문구를 적어보세요.\" />\n                    </div>\n                    <div style={{display:'flex', flexDirection:'column', width:'100%', justifyContent:'center', height:'100%'}}>\n                    {content.button.use && \n                        <ReturnButton content={content} />\n                    }\n                    {content.caution.use &&\n                        <div className=\"df-margin-big feature-desc\" style={{width:'100%'}}\n                        onClick={() => {action.setFocus('caution'); action.setCategory(0)}}>\n                            <TextAuto className=\"text-input\" \n                                small   \n                                value={content.caution.text} \n                                color = {content.caution.color} \n                                align = {content.caution.align}\n                                size = {content.caution.size/20}\n                                onChange={e => action.setContents(produce(state.contents, draft => {\n                                        draft[state.secNum].caution.text = e.currentTarget.value;\n                                }))}  \n                            />\n                        </div>\n                    }   \n                    </div>\n                </AnimationDiv>\n            </motion.div>\n        </>\n    )\n}\n\nexport default ApplySection\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/AppDownloadSection.js",["1019"],"import React, {useContext, useState} from 'react'\nimport { motion } from 'framer-motion';\nimport { MyContext } from '../../../pages/Make/MakePageV2'\nimport {produce} from 'immer'\nimport TitleDesc from './components/TitleDesc'\nimport ReturnButton from './components/ReturnButton'\nimport AnimationDiv from './components/AnimationDiv'\nimport TextAuto from './components/TextAuto'\n\nfunction AppDownloadSection({content, setting}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    const returnLayout = {\n        flexDirection:`${\n            state.isPhone ? \n                content.mobile.layout === 3 ? 'column' : 'column-reverse'\n            :\n                content.layout === 2 ? 'row' : content.layout === 3 ? 'row-reverse' : 'column'\n        }`\n    }\n    \n    return (\n        <>\n            <motion.div \n            data-aos-easing=\"ease-in-back\"\n            data-aos-delay=\"200\"\n            data-aos-offset=\"0\" data-aos={content.animation} aos-duration=\"4000\"\n            style={{ width:'100%', height:'100%'}}>\n                <AnimationDiv content={content} setting={setting} returnLayout={returnLayout}>\n                    <div className=\"text__container\">\n                        <TitleDesc content={content} titlePlaceholder=\"잠재 유저의 앱 다운로드를 유도할 말을 적어보세요.\" descPlaceholder=\"여기를 클릭하여 잠재 유저의 앱 다운로드를 유도할 수 있는 문구를 적어보세요.\" />\n                    </div>\n                    <div style={{display:'flex', flexDirection:'column', width:'100%', justifyContent:'center', height:'100%'}}>\n                        {content.appButton.use && \n                            <ReturnButton onlyapp={true} content={content} />\n                        }\n                        {content.caution.use && \n                            <div className=\"df-margin-big feature-desc\" style={{width:'100%'}}\n                            onClick={() => {action.setFocus('caution'); action.setCategory(0)}}>\n                                <TextAuto className=\"text-input\"  \n                                    small\n                                    value={content.caution.text} \n                                    color = {content.caution.color} \n                                    align = {content.caution.align}\n                                    size = {content.caution.size/20}\n                                    onChange={e => action.setContents(produce(state.contents, draft => {\n                                        draft[state.secNum].caution.text = e.currentTarget.value;\n                                    }))}  \n                                />\n                            </div>\n                        }     \n                    </div>\n                </AnimationDiv>\n            </motion.div>\n        </>\n    )\n}\n\nexport default AppDownloadSection\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/MockupSection.js",["1020","1021","1022","1023"],"import React, {useContext, useState, useRef} from 'react'\nimport { motion } from 'framer-motion';\nimport { MyContext } from '../../../pages/Make/MakePageV2'\nimport TitleDesc from './components/TitleDesc'\nimport ImageOrSlide from './components/ImageOrSlide'\nimport AnimationDiv from './components/AnimationDiv'\n\nfunction MockupSection({content, setting}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n    const returnLayout = {\n        flexDirection:`${'column'}`,\n        // paddingLeft:`${content.layout === 1 ? '30px' : content.layout === 2 ? '0px' : '30px'}`,\n        // paddingRight:`${content.layout === 1 ? '0px' : content.layout === 2 ? '30px' : '30px'}`,\n    }   \n    return (\n        <motion.div \n        data-aos-easing=\"ease-in-back\"\n        data-aos-delay=\"200\"\n        data-aos-offset=\"0\" data-aos={content.animation} aos-duration=\"4000\"\n        style={{ width:'100%', height:'100%'}}>\n            <AnimationDiv content={content} returnLayout={returnLayout} setting={setting}>\n                <div className=\"text__container\">\n                    <TitleDesc content={content} />\n                </div>\n                {\n                    content.mockup.use && \n                    <div className=\"image__container\" style={{marginTop:'12px'}}>\n                        <ImageOrSlide content={content} />\n                    </div>\n                }\n                </AnimationDiv>\n        </motion.div>\n    )\n}\n\nexport default MockupSection\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/FeaturesSection.js",["1024","1025","1026","1027","1028","1029"],"import React, {useContext, useEffect, useState, useRef} from 'react'\nimport './FeaturesSection.css'\nimport { motion } from 'framer-motion';\nimport TitleDesc from './components/TitleDesc'\nimport TextAuto from './components/TextAuto'\nimport Element from './components/Element'\nimport { MyContext } from '../../../pages/Make/MakePageV2'\nimport produce from 'immer'\nimport TextareaAutosize from '@mui/material/TextareaAutosize';\nimport FeatureCard from './components/FeatureCard'\nimport Editor from '../tools/Editor'\n\nfunction FeaturesSection({content, setting}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    const returnFeatureCards = content.elements.map((item, index) => {\n        if (index < content.numOfElements){\n        return(\n            <FeatureCard section=\"feature\" align={state.isPhone ? content.mobile.align : content.elementText.align} content={content} index={index}>\n                {\n                    content.element.use && \n                        <Element content={content} item={item} index={index} key={index}/>\n                }\n                {\n                    content.elementText.use && \n                    <div onClick={() => {action.setFocus('elementText'); action.setCategory(0)}} style={{width:'100%', marginTop:`${content.element.use ? '10px' : '0px'}`}}>\n                    {\n                        content.elementText.titleUse && \n                            <div className=\"df-margin-big feature-title\" style={{width:'100%'}}>\n                                <div \n                                    className={state.isPhone ? content.mobile.align === 'start' ? 'alignLeft' : 'alignCenter' : content.elementText.align === 'start' ? 'alignLeft' : 'alignCenter'}\n                                    style={{\n                                        width:'100%', \n                                        color:`${content.elementText.titleColor}`, \n                                        fontFamily:`${setting.font}`,\n                                        fontSize:`${content.elementText.titleSize/20}em`}}>\n                                    <Editor \n                                        data={item.title}\n                                        onChange={(event, editor) => {\n                                            const data = editor.getData();\n                                            action.setContents(produce(state.contents, draft => {\n                                                draft[state.secNum].elements[index].title = data;\n                                            }))\n                                        }}\n                                    />\n                                    {/* <TextAuto className=\"text-input\" \n                                        value={item.title} \n                                        color = {content.elementText.titleColor} \n                                        align = {state.isPhone ? content.mobile.align : content.elementText.align}\n                                        onChange={e => action.setContents(produce(state.contents, draft => {\n                                            draft[state.secNum].elements[index].title = e.currentTarget.value;\n                                        }))} \n                                        size={content.elementText.titleSize/20} \n                                        placeholder=\"특징\"\n                                    /> */}\n                                </div>\n                            </div>\n                    }\n                    {\n                        content.elementText.descUse && \n                            <div className=\"df-margin-small feature-desc\">\n                                <div \n                                    className={state.isPhone ? content.mobile.align === 'start' ? 'alignLeft' : 'alignCenter' : content.elementText.align === 'start' ? 'alignLeft' : 'alignCenter'}\n                                    style={{width:'100%', color:`${content.elementText.descColor}`, \n                                        fontFamily:`${state.setting.smallFont}`, \n                                        fontSize:`${content.elementText.descSize/20}em`}}>\n                                    <Editor \n                                        data={item.desc}\n                                        onChange={(event, editor) => {\n                                            const data = editor.getData();\n                                            action.setContents(produce(state.contents, draft => {\n                                                draft[state.secNum].elements[index].desc = data;\n                                            }))\n                                        }}\n                                    />\n                                </div>\n                                {/* <TextareaAutosize \n                                    className=\"text-input\"  \n                                    value={item.desc} \n                                    color = {content.elementText.descColor}\n                                    onChange={e => action.setContents(produce(state.contents, draft => {\n                                        draft[state.secNum].elements[index].desc = e.currentTarget.value;\n                                    }))}  \n                                    style={{\n                                        fontFamily:`${state.setting.smallFont}`, \n                                        color:`${content.elementText.descColor}`, \n                                        fontSize:`${content.elementText.descSize/20}em`, \n                                        // boxSizing:`border-box`, \n                                        textAlign:`${state.isPhone ? content.mobile.align : content.elementText.align}`,\n                                        resize:'none'\n                                    }}\n                                    placeholder=\"여기를 클릭하여 서비스 및 제품의 특징을 적어보세요.\"\n                                    spellCheck=\"false\"\n                                /> */}\n                            </div>\n                    }\n                    </div>\n                }\n            </FeatureCard>\n        )}\n        else{\n        }\n    })\n\n    return (\n        <>\n            <motion.div className=\"template\" data-aos={content.animation} data-aos-easing=\"ease-in-back\"\n                data-aos-delay=\"200\"\n                data-aos-offset=\"0\" aos-duration=\"4000\" >\n                <TitleDesc content={content} titlePlaceholder=\"특징들의 제목을 적어보세요.\" descPlaceholder=\"여기를 클릭하여 서비스 및 제품의 특징을 간단히 적어보세요.\" />\n                <div className=\"features__container\" style={{flexWrap : `${state.isPhone ? 'wrap' : ''}`}}>\n                    {returnFeatureCards}\n                </div>\n\n            </motion.div>\n        </>\n    )\n}\n\nexport default FeaturesSection\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/ReviewSection.js",["1030"],"import React, {useContext} from 'react'\nimport './ReviewSection.css'\nimport Rating from '@mui/material/Rating';\nimport { motion } from 'framer-motion';\nimport { MyContext } from '../../../pages/Make/MakePageV2';\nimport {produce} from 'immer'\nimport TitleDesc from './components/TitleDesc'\nimport TextareaAutosize from '@mui/material/TextareaAutosize';\nimport Element from './components/Element'\nimport FeatureCard from './components/FeatureCard'\n\nfunction ReviewSection({content, setting}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    const returnReviewCards = content.elements.map((item, index) => {\n        if(index < content.numOfElements){\n            return(\n                <FeatureCard align={state.isPhone ? content.mobile.align : content.elementText.align} section=\"feature\" content={content} index={index}>\n                    <Element content={content} item={item} index={index} key={index}/>\n                    {\n                        content.reviewText &&\n                    <div onClick={() => {action.setFocus('elementText'); action.setCategory(0)}} style={{width:'100%', marginTop:'8px'}}>\n                    {\n                        content.elementTitle.use && \n                        <div className=\"df-margin-big feature-title\" style={{width:'100%'}}>            \n                            <TextareaAutosize \n                                placeholder=\"리뷰/추천사의 핵심을 적어보세요.\"\n                                className=\"text-input\"  \n                                style={{\n                                    width:'100%',\n                                    resize:'none',\n                                    textAlign:`${state.isPhone ? content.mobile.align : content.elementText.align}`,\n                                    fontFamily:`${state.setting.smallFont}`,\n                                    color:`${content.elementTitle.color}`,\n                                    fontSize:`${content.elementTitle.size/20}em`,\n                                }}\n                                value={item.title} \n                                onChange={e => action.setContents(produce(state.contents, draft => {\n                                    draft[state.secNum].elements[index].title = e.currentTarget.value;\n                                }))} \n                                spellCheck=\"false\"\n                            />\n                        </div>\n                    }\n                    {\n                        content.rating.use && \n                        <div className=\"df-margin-small\" style={{justifyContent:`${state.isPhone ? content.mobile.align : content.elementText.align}`, marginTop:'-5px'}}>\n                            <Rating\n                                value={item.rating} \n                                onChange={e => action.setContents(produce(state.contents, draft => {\n                                    draft[state.secNum].elements[index].rating = e.currentTarget.value;\n                                }))}  \n                                precision={0.5}\n                                style={{ fontSize: `${content.rating.size}px`, color:`${content.rating.color}` }}\n                                // size={content.rating.size}\n                                // color={content.rating.color}\n                            />\n                        </div>\n                    }\n                    {\n                        content.elementText.use && \n                        <div className=\"df-margin feature-desc\" style={{width:'100%', marginTop:'7px'}}>\n                            <TextareaAutosize\n                                className=\"text-input\" \n                                style={{\n                                    width:'100%',\n                                    resize:'none',\n                                    textAlign:`${state.isPhone ? content.mobile.align : content.elementText.align}`,\n                                    fontFamily:`${state.setting.smallFont}`,\n                                    color:`${content.elementText.color}`,\n                                    fontSize:`${content.elementText.size/20}em`,\n                                }}\n                                value={item.desc} \n                                onChange={e => action.setContents(produce(state.contents, draft => {\n                                    draft[state.secNum].elements[index].desc = e.currentTarget.value;\n                                }))}  \n                                spellCheck=\"false\"\n                                />\n                        </div>\n                    }\n                    {\n                        content.writer.use && \n                        <div className=\"df-margin-big feature-writer\" style={{width:'100%'}}>\n                            <TextareaAutosize \n                                className=\"text-input\" \n                                placeholder=\"회사이름, 직함이름\"\n                                style={{\n                                    width:'100%',\n                                    resize:'none',\n                                    textAlign:`${state.isPhone ? content.mobile.align : content.elementText.align}`,\n                                    color:`${content.writer.color}`,\n                                    fontFamily:`${state.setting.smallFont}`,\n                                    fontSize:`${content.writer.size/17}em`,\n                                }}\n                                value={item.writer} \n                                onChange={e => action.setContents(produce(state.contents, draft => {\n                                    draft[state.secNum].elements[index].writer = e.currentTarget.value;\n                                }))}  \n                                />\n                        </div>\n                    }\n                    </div>\n                    }\n                </FeatureCard>\n            )\n        }\n    })\n\n    return (\n        <>\n            <motion.div className=\"template\"data-aos-easing=\"ease-in-back\"\n                data-aos-delay=\"200\"\n                data-aos-offset=\"0\" data-aos={content.animation} aos-duration=\"4000\">\n                \n                <TitleDesc content={content} titlePlaceholder=\"서비스 및 제품에 대한 리뷰 혹은 추천사를 적어보세요.\" descPlaceholder=\"여기를 클릭하여 서비스 및 제품에 대한 리뷰 혹은 추천사를 적어보세요.\" />\n\n                <div className=\"features__container\" style={{flexWrap : `${state.isPhone ? 'wrap' : ''}`}}> \n                    {returnReviewCards}\n                </div>\n\n            </motion.div>\n        </>\n    )\n}\nexport default ReviewSection\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/CtaSection.js",["1031","1032"],"import React, {useContext, useState} from 'react'\nimport './CtaSection.css'\nimport { motion } from 'framer-motion';\n\nimport { MyContext } from '../../../pages/Make/MakePageV2'\nimport TitleDesc from './components/TitleDesc'\nimport ReturnButton from './components/ReturnButton'\nimport AnimationDiv from './components/AnimationDiv'\nimport TextAuto from './components/TextAuto'\nimport produce from 'immer'\n\nfunction CtaSection({content, setting}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    const returnLayout = {\n        flexDirection:`${\n            state.isPhone ? \n                content.mobile.layout === 3 ? 'column' : 'column-reverse'\n            :\n                content.layout === 2 ? 'row' : content.layout === 3 ? 'row-reverse' : 'column'\n        }`\n    }\n    \n    return (\n        <>\n            <motion.div style={{display:'flex', width:'100%', height:'100%', ...returnLayout}} data-aos={content.animation} data-aos-easing=\"ease-in-back\"\n                data-aos-delay=\"200\" data-aos-offset=\"0\" aos-duration=\"4000\" >\n                <div className=\"text__container\">\n                    <TitleDesc content={content} titlePlaceholder=\"잠재 유저의 행동을 유도할 말을 적어보세요.\" descPlaceholder=\"여기를 클릭하여 잠재 유저의 행동을 유도할 수 있는 문구를 적어보세요.\" />\n                </div>\n                <div style={{display:'flex', flexDirection:'column', width:'100%', justifyContent:'center', height:'100%'}}>\n                    <ReturnButton content={content} />\n                    {content.caution.use && \n                        <div \n                            className=\"df-margin-big feature-desc\" \n                            style={{width:'100%'}}\n                            onClick={() => {action.setFocus('caution'); action.setCategory(0)}}>\n                            <TextAuto \n                                className=\"text-input\" \n                                small \n                                size = {content.caution.size/20}\n                                value={content.caution.text} \n                                color = {content.caution.color} \n                                align = {state.isPhone ? content.mobile.align : content.caution.align}\n                                onChange={e => action.setContents(produce(state.contents, draft => {\n                                    draft[state.secNum].caution.text = e.currentTarget.value;\n                                }))}  \n                                placeholder=\"유의사항이나 부가 설명을 적어보세요.\"\n                            />\n                        </div>\n                    }\n                </div>\n            </motion.div>\n        </>\n    )\n}\n\nexport default CtaSection\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/DetailSection.js",["1033","1034","1035","1036"],"import React, { useContext, useEffect, useState, useRef } from 'react'\n\nimport { MyContext } from '../../../pages/Make/MakePageV2'\nimport './DetailSection.css'\nimport TitleDesc from './components/TitleDesc'\n\nimport ImageOrSlide from './components/ImageOrSlide'\nimport AnimationDiv from './components/AnimationDiv'\nimport { motion } from 'framer-motion';\n\nfunction DetailSection({content, setting}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    const returnLayout = {\n        flexDirection:`${\n            state.isPhone ? \n                content.mobile.layout === 3 ? 'column' : 'column-reverse'\n            :\n                content.layout === 1 ? 'row' : content.layout === 2 ? 'row-reverse' : content.layout === 3 ? 'column' : 'column-reverse'\n        }`,\n    }\n    \n    return (\n        <motion.div \n        data-aos-easing=\"ease-in-back\"\n        data-aos-delay=\"200\"\n        data-aos-offset=\"0\" data-aos={content.animation} aos-duration=\"4000\"\n        style={{ width:'100%', height:'100%'}}>\n            <AnimationDiv setting={setting} content={content} returnLayout={returnLayout}>\n                <div className=\"text__container\" style={{marginTop:`${ !state.isPhone && content.layout === 4 ? '20px' : state.isPhone && content.mobile.layout === 4 ? '10px' : '0px'}` }}>\n                    <TitleDesc content={content} titlePlaceholder=\"핵심 특징 한 줄을 적어보세요.\" descPlaceholder=\"여기를 클릭하여 상품의 핵심 특징에 대한 설명을 적어보세요.\" />\n                </div>\n                <div className=\"image__container\">\n                    <ImageOrSlide content={content} />\n                </div>\n            </AnimationDiv>\n        </motion.div>\n    )\n}\n\nexport default DetailSection","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/HeroSection.js",["1037","1038","1039","1040","1041","1042"],"import React, { useContext } from 'react'\nimport { Link } from 'react-router-dom' \nimport produce from 'immer';\nimport { motion } from 'framer-motion';\n\nimport { MyContext } from '../../../pages/Make/MakePageV2'\nimport TitleDesc from './components/TitleDesc'\nimport AutosizeInput from 'react-input-autosize';\nimport ImageOrSlide from './components/ImageOrSlide'\nimport ReturnButton from './components/ReturnButton'\nimport AnimationDiv from './components/AnimationDiv'\nimport appstorebutton from '../../../tools/img/appstorebutton.png'\nimport playstorebutton from '../../../tools/img/playstorebutton.png'\n\nimport './DetailSection.css'\nimport './Default.css'\nimport './HeroSection.css'\n\nfunction HeroSection({content, setting, Editor}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    const returnLayout = {\n        flexDirection:`${\n            state.isPhone ? \n            content.mobile.layout === 3 ? 'column' : 'column-reverse'\n            :\n            content.layout === 1 ? 'row' : content.layout === 2 ? 'row-reverse' : content.layout === 3 ? 'column' : 'column-reverse'\n        }`,\n    }\n\n    return (\n        <motion.div \n        data-aos-easing=\"ease-in-back\"\n        data-aos-delay=\"200\"\n        data-aos-offset=\"0\" data-aos={content.animation} aos-duration=\"4000\"\n        style={{ width:'100%', height:'100%'}}>\n            <AnimationDiv setting={setting} content={content} returnLayout={returnLayout}>\n                <div className=\"text__container\" style={{marginTop:`${ !state.isPhone && content.layout === 4 ? '20px'  : state.isPhone && content.mobile.layout === 4 ? '10px' : '0px'}` }}>\n                    <TitleDesc content={content} titlePlaceholder=\"서비스 한 줄 소개를 적어보세요.\" descPlaceholder=\"여기를 클릭하여 서비스 및 상품에 대한 핵심 설명을 적어보세요.\" />\n                    <ReturnButton content={content} />\n                </div>\n                <div className=\"image__container\">\n                    <ImageOrSlide content={content} />\n                </div>\n            </AnimationDiv>\n        </motion.div>\n    )\n}\n\nexport default HeroSection\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/NavAndFooter/NavBar/NavBar.js",["1043","1044"],"import React, {useState, useEffect} from 'react'\nimport './utils/NavBar.css'\nimport {Link} from 'react-router-dom';\n\n\nfunction NavBar({history}) {\n    const [scrollPosition, setScrollPosition] = useState(0);\n    const [back, setBack] = useState(0);\n\n    const updateScroll = () => {\n        setScrollPosition(window.scrollY || document.documentElement.scrollTop);\n    }\n    \n    useEffect(()=>{\n        window.addEventListener('scroll', updateScroll);\n        if(scrollPosition < 50){\n            setBack(scrollPosition*(1/50));\n        }else{\n            setBack(1);\n        }\n    });\n\n    return (\n        <>\n        <div className={scrollPosition < 50 ? \"nav-bar-container-top\" : \"nav-bar-container\"} \n        style={{backgroundColor:`rgba(255,255,255,1)`, color:`rgba(${255-back*149},${255-back*156},${255-back*8},1)`\n        }}>\n            <span className=\"nav-bar-title\" onClick={() => {history.push('/'); history.go();}} style={{cursor:'pointer'}}>\n                Surfee\n            </span>\n            <span className=\"nav-on\">\n                <button className=\"nav-button\" onClick={() => window.scrollTo(0,document.body.scrollHeight)}>사전신청 하기</button>\n            </span>\n        </div>\n        </>\n    )\n}\n\nexport default NavBar\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/EditCtaSection.js",["1045","1046","1047","1048"],"import React, {useState, useContext} from 'react'\nimport { MyContext } from '../../../../pages/Make/MakePageV2'\nimport ElementsTable from './tools/ElementsTable'\nimport EditDesign from './tools/EditDesign'\nimport produce from 'immer'\nimport EditTitleDesc from './tools/EditTitleDesc'\nimport AddAppButton from './tools/AddAppButton'\nimport OpenCloseCustom from '../tools/Custom/OpenCloseCustom'\nimport RadioCustom from '../tools/Custom/RadioCustom'\nimport EditNotice from './tools/EditNotice'\nimport TextSizeCustom from '../tools/func/TextSizeCustom'\n\nimport AddCtaButton from './tools/AddCtaButton'\nimport AddGhostButton from './tools/AddGhostButton'\nimport Layout from './tools/Layout'\n\nconst elementss = ['title', 'desc', 'button', 'appButton', 'caution']\nconst elementDoc = {\n    title:'제목',\n    desc:'본문',\n    button:'버튼',\n    appButton:'앱 다운로드 버튼',\n    caution:'안내사항',\n}\n\nfunction EditCtaSection({content, category, type}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    const elementsAll = elementss.map(doc => {\n        return({\n            title:elementDoc[doc],\n            use:content[doc].use,\n            func:() => action.setContents(produce(state.contents, draft => {\n                draft[state.secNum][doc].use = !content[doc].use;\n            }))\n        })\n    })\n\n    const elements = elementsAll.filter(doc => (type !== 'apply' && doc.title !== '버튼') || (type !== 'appDownload' && doc.title !== '앱 다운로드 버튼'))\n\n    const returnTable = () => {\n        switch(category){\n            case 0:\n                // case 0은 디자인 수정\n                return(\n                    <div>\n                        <ElementsTable elements={elements} />\n                        <Layout content={content} version=\"cta\"/>\n                        <EditTitleDesc content={content} />\n                        {\n                            !(type === 'appDownload') &&\n                            <OpenCloseCustom title=\"버튼\" use={content.button.use} open={state.focus === 'button'}>\n                                <AddCtaButton content={content} num={5}/>\n                                <AddGhostButton content={content} num={5}/>\n                            </OpenCloseCustom>\n                        }\n                        {\n                            !(type === 'apply') &&\n                            <AddAppButton content={content}/>\n                        }\n                        <EditNotice content={content} />\n                    </div>\n                )\n            case 1:\n                return(\n                    <div>\n                        <EditDesign content={content} />\n                    </div>\n                )\n        }\n    }\n\n    return (\n        <>\n            {returnTable()}\n        </>\n    )\n}\n\nexport default EditCtaSection\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Modal/AddingSection.js",["1049","1050","1051"],"import React, {useState, useContext} from 'react'\nimport { styled, Box } from '@mui/system';\nimport ModalUnstyled from '@mui/base/ModalUnstyled';\nimport {base} from '../SectionTypes/baseTypes'\nimport { MyContext } from '../../../pages/Make/MakePageV2'\nimport { Close } from '@styled-icons/evaicons-solid';\nimport {dbService} from '../../../tools/fbase'\nimport './AddingSection.css'\n\nimport hero from '../../../tools/img/addSection/01hero.webp'\nimport detail from '../../../tools/img/addSection/02detail.png'\nimport cta from '../../../tools/img/addSection/03cta.png'\nimport apply from '../../../tools/img/addSection/04apply.webp'\nimport appDownload from '../../../tools/img/addSection/05appDownload.webp'\nimport feature from '../../../tools/img/addSection/06feature.webp'\nimport review from '../../../tools/img/addSection/07review.webp'\nimport qna from '../../../tools/img/addSection/08qna.webp'\nimport text from '../../../tools/img/addSection/09text.webp'\nimport gallery from '../../../tools/img/addSection/10gallery.webp'\nimport video from '../../../tools/img/addSection/11video.webp'\nimport mockup from '../../../tools/img/addSection/12mockup.webp'\nimport line from '../../../tools/img/addSection/12line.png'\n\nconst IMGS = [\n    hero, detail, cta, apply, appDownload, feature, review, qna, text, gallery, video, mockup\n]\n\nconst StyledModal = styled(ModalUnstyled)`\n  position: fixed;\n  z-index: 1300;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Backdrop = styled('div')`\n  z-index: -1;\n  position: fixed;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  left: 0;\n  background-color: rgba(0, 0, 0, 0.1);\n  -webkit-tap-highlight-color: transparent;\n`;\n\nconst style = {\n  width: 800,\n  height: 600,\n  bgcolor: 'rgba(255,255,255,1)',\n  borderRadius:2,\n  p: 2,\n  px: 4,\n  pb: 3,\n};\n\nfunction AddingSection({setting, open, setOpen, foot}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    const addSection = async (typeName) => {\n        // 아래는 state.contents에 섹션 하나를 추가하는 것.\n\n        let tempBody;\n        \n        if(typeName === 'LineSection'){\n            tempBody = base[11]\n        }else{\n            const ee = await dbService.collection('saved-page').where(\"urlId\", '==', '0').get()\n\n            let eee = ee.docs.map(doc => {\n                return({...doc.data(), id:doc.id})\n            });\n\n            tempBody = eee[0].contents.filter(doc => doc.sectionTypeName === typeName)[0]\n\n            if(typeName === 'CtaSection'){\n                tempBody = base[2]\n            }\n        }\n\n        tempBody['animation'] = setting.animation\n\n        // if(tempBody['sectionTypeName'] === 'CtaSection' || tempBody['sectionTypeName'] === 'ApplySection' || tempBody['sectionTypeName'] === 'AppDownloadSection')\n        //     {\n        //         tempBody['backgroundColor'] = setting.color\n        //     }\n\n        let body = JSON.parse(JSON.stringify(tempBody))\n\n        action.setContents([\n            ...state.contents.slice(0, state.contents.length),\n            body,\n        ])\n        window.scrollTo({top:(document.body.scrollHeight - 150), left:0, behavior:'smooth'})\n        setOpen(false)\n        action.setSecNum(state.contents.length)\n    }\n\n    return (\n        <div>\n            <StyledModal\n                aria-labelledby=\"unstyled-modal-title\"\n                aria-describedby=\"unstyled-modal-description\"\n                open={open}\n                onClose={() => setOpen(!open)}\n                BackdropComponent={Backdrop}\n            >\n                <Box sx={style}>\n                    <div className=\"modal-top__title\">\n                        <div className=\"centera\" style={{width:\"95%\", fontSize:'0.8em', fontWeight:'700'}}>\n                            원하는 섹션을 추가하세요\n                        </div>\n                        <div className=\"modal-close-button\" onClick={() => setOpen(false)}>\n                            <Close size=\"25\" />\n                        </div>\n                    </div>\n                    <div className=\"section-modal__container\">\n                        {base.map((item,index) => {\n                            return(\n                                <div className=\"section-modal__button uphover\" key={index} onClick={() => \n                                {addSection(item.sectionTypeName); \n                                    // isScroll(true);\n                                }}>\n                                    <img src={IMGS[index]} width={90} />\n                                    {item.name}\n                                </div>\n                            )\n                        })} \n                    </div>\n                    <div className=\"modal-top__title\" style={{marginTop:'25px', flexDirection:'column', justifyContent:'center'}}>\n                        <div className=\"centera\" style={{width:\"95%\", height:'0%', fontSize:'0.8em'}}>\n                            추가되었으면 하는 기능이 있으신가요?\n                        </div>\n                        <div className=\"section-add__button\" onClick={() => { \n                                window.open(\n                                    'https://tally.so/r/wMZ4Yn',\n                                    '_blank'\n                                )\n                         }} style={{width:'50%', padding:'5px',marginTop:'20px', fontSize:'0.8em'}} >\n                            의견 전달하기\n                        </div>\n                    </div>\n                </Box>\n            </StyledModal>\n        </div>\n    )\n}\n\nexport default AddingSection\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/tools/EditDesign.js",["1052","1053"],"import React, {useState, useContext} from 'react'\nimport { MyContext } from '../../../../../pages/Make/MakePageV2'\nimport RadioCustom from '../../tools/Custom/RadioCustom'\nimport produce from 'immer';\nimport ColorCustom from '../../tools/Custom/ColorCustom'\nimport TextSizeCustom from '../../tools/func/TextSizeCustom'\nimport OpenCloseCustom from '../../tools/Custom/OpenCloseCustom'\nimport AnimationCustom from '../../tools/Custom/AnimationCustom'\nimport BoxCustom from '../../tools/Custom/BoxCustom'\nimport SliderCustom from '../../tools/Custom/SliderCustom'\nimport OnOffCustom from '../../tools/Custom/OnOffCustom'\nimport FuncContentImg from '../../tools/func/FuncContentImg'\nimport {Phone} from '@styled-icons/bootstrap'\nimport {Desktop} from '@styled-icons/fa-solid'\n\n\nconst backOptions = [\n    { label: '단색', value: 'color' },\n    { label: '이미지', value: 'image'},\n]\n\nconst shapeOptions = [\n    { label: '사각형', value: 0 },\n    { label: '약간 둥글게', value: 5 },\n    { label: '많이 둥글게', value: 50 },\n]\n\nfunction EditDesign({content}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    // 콘텐츠 - 이미지 업로드\n    const onChangeContentImage= e => {\n        const {target:{files},} = e;\n        const oneFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => { // 로딩이 끝날 때 실행한다는 뜻.\n            const {currentTarget:{result}} = finishedEvent;\n            action.setContents(produce(state.contents, draft=>{\n                draft[state.secNum].backgroundImage.attachment = result;             \n            }))\n        }\n        if(oneFile){\n            reader.readAsDataURL(oneFile);\n        }\n    }\n    // 콘텐츠 - 이미지 삭제\n    const RemoveImage = () => {\n        action.setContents(produce(state.contents, draft=>{\n            draft[state.secNum].backgroundImage.attachment = '';\n        }))\n    }\n    // 애니메이션 함수\n    const changeAnimationOption = e => {\n        action.setContents(produce(state.contents, draft=>{\n            draft[state.secNum].animation = e;\n        }))\n    }\n\n    const backgroundColorOrImage = () => {\n        switch(content.backgroundType){\n            case 'color':\n                return(\n                    <>\n                        <ColorCustom text={\"배경 색상\"} value={content.backgroundColor} func={e => action.setContents(produce(state.contents, draft => {\n                            draft[state.secNum].backgroundColor = e\n                        }))} />\n                    </>\n                )           \n            case 'image':\n                return(\n                    <>\n                        <FuncContentImg text=\"이미지\" subtext=\"최대 5MB 업로드 가능\" value={content.backgroundImage.attachment} func={e => onChangeContentImage(e)} removeFunc={e => RemoveImage(e)}/>\n                        <OnOffCustom value={content.backgroundImage.fixed} text=\"배경 고정\" func={ e => action.setContents(produce(state.contents, draft => {\n                            draft[state.secNum].backgroundImage.fixed = !content.backgroundImage.fixed;\n                        }))} />\n                        <OnOffCustom value={content.backgroundImage.overlay} text=\"오버레이\" func={ e => action.setContents(produce(state.contents, draft => {\n                            draft[state.secNum].backgroundImage.overlay = !content.backgroundImage.overlay;\n                            if(draft[state.secNum].backgroundColor.length === 7){\n                                draft[state.secNum].backgroundColor = draft[state.secNum].backgroundColor + '88'\n                            }\n                        }))} />\n                        {\n                            content.backgroundImage.overlay && \n                            <ColorCustom text={\"배경 색상\"} value={content.backgroundColor} func={e => action.setContents(produce(state.contents, draft => {\n                                draft[state.secNum].backgroundColor = e\n                            }))} />\n                        }\n                    </>\n                )\n            default:\n                return(<></>)\n        }\n    }\n    \n    return (\n        <div>\n            <OpenCloseCustom title=\"배경\" use={true}>\n                <RadioCustom options={backOptions} value={content.backgroundType} func={e=>action.setContents(produce(state.contents, draft => {\n                    draft[state.secNum].backgroundType = e;\n                }))} />\n                { \n                    backgroundColorOrImage() \n                }\n            </OpenCloseCustom>\n            <OpenCloseCustom title=\"여백\" use={true}>\n                <SliderCustom top=\"상단 여백\" value={content.padding.top} max={40} func={e => action.setContents(produce(state.contents, draft => {\n                    draft[state.secNum].padding.top = e;\n                }))}/>\n                <SliderCustom top=\"하단 여백\" value={content.padding.bottom} max={40} func={e => action.setContents(produce(state.contents, draft => {\n                    draft[state.secNum].padding.bottom = e;\n                }))}/>\n            </OpenCloseCustom> \n            <OpenCloseCustom title=\"애니메이션\" use={true}>\n                <AnimationCustom \n                    text=\"애니메이션\" \n                    value={content.animation} \n                    func={ e => changeAnimationOption(e)} />\n            </OpenCloseCustom>\n            <BoxCustom title=\"박스\" use={true}>\n                <OnOffCustom text=\"박스 사용\" value={content.box.use} func={(e) => action.setContents(produce(state.contents, draft => {\n                    draft[state.secNum].box.use = !content.box.use;\n                }))} />\n                {\n                    content.box.use && <>\n                        <ColorCustom text=\"색상\" value={content.box.backgroundColor} func={e => action.setContents(produce(state.contents, draft => {\n                            draft[state.secNum].box.backgroundColor = e;\n                        }))} />\n                        <RadioCustom text=\"테두리\" options={shapeOptions} value={content.box.borderRadius} func={e => action.setContents(produce(state.contents, draft => {\n                            draft[state.secNum].box.borderRadius = e;\n                        }))} />\n                    </>\n                }\n            </BoxCustom>\n            <BoxCustom title=\"반응형\">\n                <div className=\"edit-element\">\n                    <div className=\"edit-element__one\" style={{flexDirection: 'column'}}>\n                        <div className=\"edit-element__left\">반응형</div> \n                        <div className=\"radio-container\" style={{justifyContent:'center'}}>\n                            <div className={content.responsive.pc ? 'radio-element-b' : 'radio-element-b r-unclicked radio-hover'} onClick={() => action.setContents(produce(state.contents, draft => {\n                                draft[state.secNum].responsive.pc = !content.responsive.pc\n                            }))}>\n                                <Desktop size=\"30\"/>\n                                <div className=\"radio-shape-text \">\n                                    PC\n                                </div>\n                            </div>\n                            <div className={content.responsive.mobile ? 'radio-element-b' : 'radio-element-b r-unclicked radio-hover'} onClick={() => action.setContents(produce(state.contents, draft => {\n                                draft[state.secNum].responsive.mobile = !content.responsive.mobile\n                            }))}>\n                                <Phone size=\"30\"/>\n                                <div className=\"radio-shape-text\">\n                                    모바일\n                                </div>\n                            </div>\n                        </div>\n                        <div style={{marginTop:'8px'}}>\n                            {\n                                !content.responsive.pc && !content.responsive.mobile ? \n                                <div>\n                                    이 섹션은 유저에게 보이지 않습니다.\n                                </div>\n                                :\n                                !content.responsive.pc ?\n                                <div>\n                                    이 섹션은 PC에서는 보이지 않습니다.\n                                </div>\n                                :\n                                !content.responsive.mobile ?\n                                <div>\n                                    이 섹션은 모바일에서는 보이지 않습니다.\n                                </div>\n                                :<></>\n                            }\n                        </div>\n                    </div>\n                </div>\n            </BoxCustom>   \n        </div>\n    )\n}\n\nexport default EditDesign\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/tools/Contents.js",["1054","1055","1056","1057"],"import React,{ useContext } from 'react'\nimport produce from 'immer';\nimport OpenCloseCustom from '../../tools/Custom/OpenCloseCustom'\nimport RadioCustom from '../../tools/Custom/RadioCustom'\nimport { MyContext } from '../../../../../pages/Make/MakePageV2'\nimport AddContentImg from '../../tools/func/FuncContentImg'\nimport AddSlideImg from '../../tools/func/FuncSlideImg'\nimport AddContentVideo from '../../tools/func/FuncContentVideo'\nimport AddYoutubeLink from '../../tools/func/FuncYoutubeLink'\nimport SliderCustom from '../../tools/Custom/SliderCustom'\nimport {CustomSwitch} from '../../tools/Custom/OnOffCustom'\nimport { Select } from '@chakra-ui/react'\nimport './Contents.css'\nimport FuncContentImg from '../../tools/func/FuncContentImg'\nimport { StoreMallDirectoryRounded } from '@mui/icons-material';\n\nconst contentsOptions = [\n    { label:'이미지', value:'image'},\n    { label:'동영상', value:'video'},\n    { label:'목업', value:'mockup'},\n    { label:'슬라이드', value:'slide'},\n]\nconst imageBorderOptions = [\n    { label: '사각형', value: 0 },\n    { label: '라운드', value: 5 },\n    { label: '원형', value: 15 },\n]\n\nconst videoOptions = [\n    { label: '업로드', value: 'base'},\n    { label: '유튜브 링크', value: 'youtube'}\n]\n\n\nfunction Contents({content}) {\n\n    const {state, action} = useContext(MyContext) \n\n    const changeContentOption = e => {\n        action.setContents(produce(state.contents, draft => {\n            draft[state.secNum].contents.type = e;\n        }));\n    }\n    // 콘텐츠 - 이미지 업로드\n    const onChangeContentImage= e => {\n        const {target:{files},} = e;\n        const oneFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => { // 로딩이 끝날 때 실행한다는 뜻.\n            if(oneFile.size > 3000000){\n                alert(\"파일의 크기가 3MB를 초과합니다.\")\n                return;\n            }\n            const {currentTarget:{result}} = finishedEvent;\n            action.setContents(produce(state.contents, draft=>{\n                draft[state.secNum].image.attachment = result;             \n            }))\n        }\n        if(oneFile){\n            reader.readAsDataURL(oneFile);\n        }\n    }\n    // 콘텐츠 - 이미지 삭제\n    const RemoveImage = () => {\n        action.setContents(produce(state.contents, draft=>{\n            draft[state.secNum].image.attachment = '';\n        }))\n    }\n\n    // 슬라이드 - 이미지\n    const onChangeSlideImage= (num, e) => {\n        let numName = ''\n        if(num === 1){\n            numName = 'attachment1'\n        }else if(num === 2){\n            numName = 'attachment2'\n        }else{\n            numName = 'attachment3'\n        }\n        const {target:{files},} = e;\n        const oneFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => { // 로딩이 끝날 때 실행한다는 뜻.\n            if(oneFile.size > 3000000){\n                alert(\"파일의 크기가 3MB를 초과합니다.\")\n                return;\n            }\n            const {currentTarget:{result}} = finishedEvent;\n            action.setContents(produce(state.contents, draft=>{\n                draft[state.secNum].slide_img[numName] = result;\n            }))\n        }\n        if(oneFile){\n            reader.readAsDataURL(oneFile);\n        }\n    }\n    const RemoveSlide = (num) => {\n        let numName = ''\n        if(num === 1){\n            numName = 'attachment1'\n        }else if(num === 2){\n            numName = 'attachment2'\n        }else{\n            numName = 'attachment3'\n        }\n        action.setContents(produce(state.contents, draft=>{\n            draft[state.secNum].slide_img[numName] = '';\n        }))\n    }\n\n    const setImgSize = e => {\n        action.setContents(produce(state.contents, draft => {\n            draft[state.secNum].image.size = e\n        }))\n    }\n\n    // video type\n    const changeVideoOption = e => {\n        action.setContents(produce(state.contents, draft => {\n            draft[state.secNum].video.type = e;\n        }));\n    }\n\n    // video upload - BufferArray를 서버에서 stream으로 처리하는 방식으로 하는게 제일인데.. 포기...\n    const onChangeContentVideo = e => {\n        // let newContents = JSON.parse(JSON.stringify(state.contents))\n        const {target:{files},} = e;\n        const oneFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => { // 로딩이 끝날 때 실행한다는 뜻.\n            const {currentTarget:{result}} = finishedEvent;\n            action.setContents(produce(state.contents, draft=>{\n                draft[state.secNum].video.attachment = result;\n            }))\n            // actionImgCompress(result);\n        }\n        if(oneFile){\n            reader.readAsDataURL(oneFile);\n        }\n    }\n    // video remove\n    const RemoveVideo = () => {\n        action.setContents(produce(state.contents, draft=>{\n            draft[state.secNum].video.attachment = '';\n        }))\n    }\n\n    const videoType = () => {\n        switch(content.video.type){\n            case 'base':\n                return(\n                    <>\n                    <AddContentVideo text=\"동영상\" value={content.video.attachment} func={e => onChangeContentVideo(e)} removeFunc={e => RemoveVideo(e)}/>\n                    <SliderCustom top=\"크기\" text=\"동영상을\" value={content.image.size} func={e => setImgSize(e)} max=\"100\"/>\n                    </>\n                )\n            case 'youtube':\n                return(\n                    <>\n                    <AddYoutubeLink content={content} value={content.video.link} />\n                    {\n                        content.video.link.length !== 0 && \n                    <>\n                        <CustomSwitch text=\"자동 재생\" value={content.video.auto} \n                            onChange={ () => action.setContents(produce(state.contents, draft => {\n                                if (content.video.link.includes('autoplay=1'))\n                                    {draft[state.secNum].video.link = content.video.link.replace('autoplay=1', 'autoplay=0');\n                                    draft[state.secNum].video.auto = false;}\n                                else\n                                    {draft[state.secNum].video.link = content.video.link.replace('autoplay=0', 'autoplay=1');\n                                    draft[state.secNum].video.auto = true;}\n                            }))}/>\n                        <div className=\"mid-command\">\n                            {\n                                content.video.auto ? <> 유저가 페이지에 들어오면 동영상이 음소거 상태로 자동 재생됩니다. </>\n                                : <> 유저가 페이지에 들어온 후 동영상을 클릭하면 재생됩니다. </>\n                            }\n                        </div>\n                    </>\n                    }\n                    <SliderCustom top=\"크기\" text=\"동영상을\" value={content.image.size} func={e => setImgSize(e)} max=\"100\"/>\n                    </>\n                )\n        }\n    }\n\n    // 목업 타입\n    const mockOption = e => {\n        action.setContents(produce(state.contents, draft => {\n            draft[state.secNum].mockup.type = e;\n        }))\n    }\n\n    // 목업 모바일 2 이미지 업로드\n    const uploadMockup= e => {\n        const {target:{files},} = e;\n        const oneFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => { // 로딩이 끝날 때 실행한다는 뜻.\n            if(oneFile.size > 3000000){\n                alert(\"파일의 크기가 3MB를 초과합니다.\")\n                return;\n            }\n            const {currentTarget:{result}} = finishedEvent;\n            action.setContents(produce(state.contents, draft=>{\n                draft[state.secNum].mockup.attachment = result;               \n            }))\n        }\n        if(oneFile){\n            reader.readAsDataURL(oneFile);\n        }\n    }\n    // 목업 모바일 2 이미지 업로드\n    const uploadMockup2= e => {\n        const {target:{files},} = e;\n        const oneFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => { // 로딩이 끝날 때 실행한다는 뜻.\n            if(oneFile.size > 3000000){\n                alert(\"파일의 크기가 3MB를 초과합니다.\")\n                return;\n            }\n            const {currentTarget:{result}} = finishedEvent;\n            action.setContents(produce(state.contents, draft=>{\n                draft[state.secNum].mockup.attachment2 = result;               \n            }))\n        }\n        if(oneFile){\n            reader.readAsDataURL(oneFile);\n        }\n    }\n\n    const returnMockup = () => {\n        switch(content.mockup.type){\n            case 'mobile':\n                return(\n                    <>\n                        <FuncContentImg text='목업' subtext=\"최대 3MB 업로드 가능\" value={content.mockup.attachment} func={uploadMockup}/>\n                        <SliderCustom top=\"크기\" text=\"목업\" value={content.image.size} func={e =>\n                            action.setContents(produce(state.contents, draft => {\n                                draft[state.secNum].image.size = e\n                            }))} max=\"100\"/>\n                    </>\n                )\n            case 'desktop':\n                return(\n                    <>\n                        <FuncContentImg text='목업' subtext=\"최대 3MB 업로드 가능\" value={content.mockup.attachment} func={uploadMockup}/>\n                        <SliderCustom top=\"크기\" text=\"목업\" value={content.image.size} func={e =>\n                            action.setContents(produce(state.contents, draft => {\n                                draft[state.secNum].image.size = e\n                            }))} max=\"100\"/>   \n                    </>\n                )\n            default:\n                return(\n                    <>\n                    </>\n                )\n        }\n    }\n\n    const returnImageOrVideoAdd = () => {\n        switch(content.contents.type){\n            case 'image':\n                return(\n                    <div style={{width:'100%'}}>\n                        <AddContentImg text=\"이미지\" subtext=\"최대 3MB 업로드 가능\" value={content.image.attachment} func={e => onChangeContentImage(e)} removeFunc={e => RemoveImage(e)}/>\n                        <SliderCustom top=\"크기\" text=\"이미지를\" value={content.image.size} func={setImgSize} max=\"100\"/>\n                        <RadioCustom text=\"프레임\" options={imageBorderOptions} value={content.image.border} func={e =>  action.setContents(produce(state.contents, draft => {\n                            draft[state.secNum].image.border = e;\n                        }))} />\n                        <CustomSwitch text=\"그림자\" value={content.image.shadow} onChange={(e) => action.setContents(produce(state.contents, draft => {\n                                draft[state.secNum].image.shadow = !content.image.shadow\n                                if (draft[state.secNum].image.shadow)\n                                    draft[state.secNum].image.shadowValue = \"2px 4px 20px #E8F0F9\"\n                                else\n                                draft[state.secNum].image.shadowValue = \"none\"\n                        }))} />\n                    </div>\n                )\n            case 'slide':\n                return(\n                    <>\n                    <div style={{display: 'flex', marginTop: '10px'}}>\n                    <AddSlideImg value={content.slide_img.attachment1} func={e => onChangeSlideImage(1, e)} removeFunc={e => RemoveSlide(1)}/>\n                    <AddSlideImg value={content.slide_img.attachment2} func={e => onChangeSlideImage(2, e)} removeFunc={e => RemoveSlide(2)}/>\n                    <AddSlideImg value={content.slide_img.attachment3} func={e => onChangeSlideImage(3, e)} removeFunc={e => RemoveSlide(3)}/>\n                    </div>\n                    <div className=\"small-command\">\n                        최대 3MB까지 가능합니다.\n                    </div>\n                    <SliderCustom top=\"크기\" text=\"이미지를\" value={content.image.size} func={setImgSize} max=\"100\"/>\n                    <RadioCustom text=\"프레임\" options={imageBorderOptions} value={content.image.border} func={e =>  action.setContents(produce(state.contents, draft => {\n                            draft[state.secNum].image.border = e;\n                    }))} />\n                    <CustomSwitch text=\"그림자\" value={content.image.shadow} onChange={(e) => action.setContents(produce(state.contents, draft => {\n                                draft[state.secNum].image.shadow = !content.image.shadow\n                                if (draft[state.secNum].image.shadow)\n                                    draft[state.secNum].image.shadowValue = \"2px 4px 20px #E8F0F9\"\n                                else\n                                draft[state.secNum].image.shadowValue = \"none\"\n                        }))} />\n                    </>\n                )         \n            case 'video':\n                return(\n                    <>\n                    <RadioCustom text=\"방식\" options={videoOptions} value={content.video.type} func={e=>changeVideoOption(e)}/>\n                    {videoType()}\n                    </>\n                )\n            case 'mockup':\n                return(\n                    <>\n                    <div className=\"edit-element\">\n                        <div className=\"func-title\">\n                         디바이스 \n                        </div>\n                    </div> \n                    <div className='mockup-select'>\n                        <Select  \n                            className='select_list'\n                            onChange={e=>mockOption(e.target.value)}\n                            bg='white'\n                            borderColor='rgba(0, 0, 0, 0.08)'\n                            icon='none'\n                            color='gray'>\n                            <option value='mobile'>모바일</option>\n                            <option value='desktop'>데스크탑</option>                 \n                        </Select>\n                    </div>\n                    {returnMockup()}\n                    </>\n                )\n        }\n    }\n\n\n    return (\n        <OpenCloseCustom title=\"콘텐츠\" use={content.contents.use} open={state.focus === 'contents'}>\n            <RadioCustom options={contentsOptions} value={content.contents.type} func={e => changeContentOption(e)} />                 \n            {\n                returnImageOrVideoAdd()\n            } \n        </OpenCloseCustom>\n    )\n}\n\nexport default Contents\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/components/FeatureCard.js",["1058"],"import React, {useContext} from 'react'\nimport { MyContext } from '../../../../pages/Make/MakePageV2'\n\nfunction FeatureCard({children, align, section, content, index}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    return (\n        <div key={index} className=\"feature__card\" \n            style={{\n            alignItems: `${align}`,\n            margin : `${ state.isPhone ? `5px 5px 5px 5px` : `0px ${!state.isPhone && index === content.numOfElements - 1 ? '0px' : '5px'} 0px ${!state.isPhone && index === 0 ? '0px' : '5px'}` }`,\n            height : `${state.isPhone ? '' : '100%'}`,\n            width : `${state.isPhone ? \n                content.mobile.layout === 1 ? '100%' \n                : content.mobile.layout === 2 ? '46%' \n                : '30%'\n                : '46%'}`,\n            boxShadow:`${content.card !== undefined  && content.card.shadow ? '2px 2px 4px rgba(0,0,0,0.4)' : ''}`, \n            backgroundColor: `${content.card !== undefined && content.card.color}`, \n            borderRadius:`${content.card !== undefined  &&content.card.borderRadius}px`}}>\n            {children}\n        </div>\n    )\n}\n\nexport default FeatureCard\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/components/AnimationDiv.js",[],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/components/QnaOpenClose.js",["1059","1060","1061"],"import React, { useContext, useState, useRef, useEffect } from 'react'\nimport { MyContext } from '../../../../pages/Make/MakePageV2'\nimport { styled } from '@mui/material/styles';\nimport ArrowForwardIosSharpIcon from '@mui/icons-material/ArrowForwardIosSharp';\nimport MuiAccordion from '@mui/material/Accordion';\nimport MuiAccordionSummary from '@mui/material/AccordionSummary';\nimport MuiAccordionDetails from '@mui/material/AccordionDetails';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport Editor from '../../tools/Editor'\nimport TextAuto from './TextAuto'\nimport produce from 'immer'\nimport { ChakraProvider } from '@chakra-ui/react'\nimport './QnaOpenClose.css'\n\nconst Accordion = styled((props) => (\n  <MuiAccordion disableGutters elevation={0} square {...props} />\n))(({ theme }) => ({\n    border: '1px solid rgba(0,0,0,0.2)',\n    width:'90%',\n    borderRadius:10,\n    backgroundColor:\n      theme.palette.mode === 'dark'\n        ? 'rgba(255, 255, 255, .05)'\n        : 'rgba(0, 0, 0, 0)',\n}));\n\nconst AccordionSummary = styled((props) => (\n  <MuiAccordionSummary\n    expandIcon={<ArrowForwardIosSharpIcon sx={{ fontSize: '0.9rem' }} />}\n    {...props}\n  />\n))(({ theme }) => ({\n  flexDirection: 'row-reverse',\n  '& .MuiAccordionSummary-expandIconWrapper.Mui-expanded': {\n    transform: 'rotate(180deg)',\n  },\n  '& .MuiAccordionSummary-content': {\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nconst AccordionDetails = styled(MuiAccordionDetails)(({ theme }) => ({\n  padding: theme.spacing(0.3),\n}));\n\n// 아래는 열고 닫히는 애니메이션 효과까지 적용\nexport const AccordionCustom = (props) => {\n  return (\n    <div className=\"centera\">\n      <Accordion>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        >\n            <div>\n                {props.title}\n            </div>\n        </AccordionSummary>\n        <AccordionDetails>\n            <div>\n                {props.children}\n            </div>\n        </AccordionDetails>\n      </Accordion>\n    </div>\n  );\n}\n\nconst OpenCloseCustom = (props) => {\n  /**\n   * title, tooltip, preseen 설정 가능\n   */\n  const isopen = props.content.qna.shape\n\n  const [open, setOpen] = useState(false)\n  const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n  return (\n    <div className=\"one-element\" onClick={() => {action.setFocus('qna'); action.setCategory(0)}}>\n      <div className={props.type === 'card' ? 'accordion__card' : 'accordion__plain'}>\n        <div className=\"accordion__header-qna\" onClick={() => setOpen(!open)}>\n          <div className=\"edit-element\">\n            <ChakraProvider>\n            <div className=\"accordion__title\">\n              <div className=\"title_text\" style={{color:`${props.color}`, width:'100%', alignItems: 'start'}}>\n                <div className=\"qna__word\" style={{ marginRight:`${state.isPhone ? '3px' : '5px'}`, fontWeight:'700'}}>Q.</div>\n                <div style={{width:'100%', align:'start', marginTop:'6px', color:`${props.color}`, fontSize:'0.9em', fontFamily:`${state.setting.smallFont}`}}>\n                  <Editor \n                    placeholder=\"여기를 클릭하여 자주 묻는 질문을 적어보세요.\"\n                    data={props.title}\n                    onChange={(event,editor) => {\n                      const data = editor.getData();\n                      action.setContents(produce(state.contents, draft => {\n                        draft[state.secNum].qnas[props.index].question = data;\n                      }))\n                    }}\n                  />\n                </div>\n              </div> \n            </div>\n            </ChakraProvider>\n            <div className=\"centera\" style={{justifyContent: 'end', width:`${state.isPhone ? '7.5%' : '6%'}`}}>\n              {\n                isopen !== 'open' ? \n                <>\n                { open ? <ExpandMoreIcon style={{transform:'rotate(180deg)'}} /> : <ExpandMoreIcon />}\n                </> : \n                <>\n                </>\n              }\n            </div>\n          </div>\n        </div>\n        {isopen === 'open' ? \n          (<div className=\"accordion__body\" style={{display:'flex', flexDirection:'row', justifyContent:'start'}}>\n          {props.children}\n          </div>):\n          (<div className=\"accordion__body\" style={{display:`${open ? 'flex' : 'none'}`, flexDirection:'row', justifyContent:'start'}}>\n          {props.children}\n          </div>)\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default OpenCloseCustom\n\n\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/components/TitleDesc.js",["1062","1063","1064","1065"],"import React, {useContext, useEffect, useState, useRef} from 'react'\nimport { MyContext } from '../../../../pages/Make/MakePageV2'\nimport {produce} from 'immer'\nimport './TitleDesc.css'\nimport TextareaAutosize from '@mui/material/TextareaAutosize';\nimport Editor from '../../tools/Editor'\n\nfunction TitleDesc({content, titlePlaceholder, descPlaceholder}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    return (\n        <div className=\"title-desc__container\">\n            {\n                content.title.use &&\n                <div style={{width:'100%'}}>\n                    <div \n                        className={state.isPhone ? content.mobile.align === 'start' ? 'alignLeft' : 'alignCenter' : content.title.align === 'start' ? 'alignLeft' : 'alignCenter'}\n                        style={{\n                            fontFamily:`${state.setting.font}`, \n                            color:`${content.title.color}`, \n                            fontSize:`${content.title.size/19}em`, \n                        }}\n                        onClick={() => {\n                            action.setCategory(0);\n                            action.setFocus('title');\n                        }}>\n                        <Editor \n                            placeholder={titlePlaceholder}\n                            data={content.title.text}\n                            onChange={(event, editor) => {\n                                const data = editor.getData();\n                                action.setContents(produce(state.contents, draft => {\n                                    if(draft[state.secNum]){\n                                        draft[state.secNum].title.text = data;\n                                    }\n                                }))\n                            }}\n                        />\n                    </div>\n                    {/* <TextareaAutosize \n                        onClick={() => {\n                            action.setCategory(0);\n                            action.setFocus('title');\n                        }}\n                        placeholder={titlePlaceholder}\n                        className=\"text-input\" \n                        value={content.title.text} \n                        onChange={e => action.setContents(produce(state.contents, draft => {\n                            draft[state.secNum].title.text = e.currentTarget.value;\n                        }))}\n                        style={{\n                            fontFamily:`${state.setting.font}`, \n                            color:`${content.title.color}`, \n                            fontSize:`${content.title.size/19}em`, \n                            textAlign:`${state.isPhone ? content.mobile.align : content.title.align}`,\n                            resize:'none'\n                        }}\n                        spellCheck=\"false\"\n                    /> */}\n                </div>\n            }\n            {\n                content.desc.use &&\n                <div style={{width:'100%', marginTop:'10px'}}>\n                    <div \n                        className={state.isPhone ? content.mobile.align === 'start' ? 'alignLeft' : 'alignCenter' : content.title.align === 'start' ? 'alignLeft' : 'alignCenter'}\n                        style={{\n                            fontFamily:`${state.setting.smallFont}`, \n                            color:`${content.desc.color}`, \n                            fontSize:`${content.desc.size/19}em`, \n                        }}\n                        onClick={() => {\n                            action.setCategory(0);\n                            action.setFocus('desc');\n                        }}>\n                        <Editor \n                            placeholder={descPlaceholder}\n                            className=\"text-input\"\n                            data={content.desc.text}\n                            onChange={(event, editor) => {\n                                const data = editor.getData();\n                                action.setContents(produce(state.contents, draft => {\n                                    if(draft[state.secNum]){\n                                        draft[state.secNum].desc.text = data;\n                                    }\n                                }))\n                            }}\n                        />\n                    </div>\n                </div>\n            }\n        </div>\n    )\n}\n\nexport default TitleDesc\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/tools/Layout.js",["1066","1067"],"import React, {useContext} from 'react'\nimport { MyContext } from '../../../../../pages/Make/MakePageV2'\nimport produce from 'immer';\nimport OpenCloseCustom from '../../tools/Custom/OpenCloseCustom'\nimport RadioCustom from '../../tools/Custom/RadioCustom'\nimport AlignCustom from '../../tools/Custom/AlignCustom'\n\nconst layout3Options = [\n    {label: '1', value: 1},\n    {label: '2', value: 2},\n    {label: '3', value: 3},\n]\nconst layout4Options = [\n    {label: '1', value: 1},\n    {label: '2', value: 2},\n    {label: '3', value: 3},\n    {label: '4', value: 4},\n]\n\nconst alignOptions = [\n    { label: '왼쪽', value: 'start' },\n    { label: '중앙', value: 'center' },\n]\n\nfunction Layout({content, version, foot, setFoot}) {\n\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    const ReturnLayout = () => {\n        switch(version){\n            case 'main':\n                return(\n                    <>\n                    {\n                        state.isPhone ? \n                        <>\n                            <RadioCustom layout='on' version='two' options={layout4Options} value={content.mobile.layout} func={e => action.setContents(produce(state.contents, draft => {\n                                draft[state.secNum].mobile.layout = e;\n                            }))} />\n                            <AlignCustom all value={content.mobile.align} func={e => action.setContents(produce(state.contents, draft => {\n                                draft[state.secNum].mobile.align = e;\n                            }))} />\n                        </>\n                        :\n                        <>\n                        <RadioCustom layout='on' version='main' options={layout4Options} value={content.layout} func={(e, align, contAlign) => action.setContents(produce(state.contents, draft => {\n                            draft[state.secNum].layout = e;\n                            draft[state.secNum].title.align = align;\n                            draft[state.secNum].desc.align = align;\n                            draft[state.secNum].button.align = align;\n                            draft[state.secNum].contents.align= contAlign;\n                        }))} />\n                        <AlignCustom all value={content.align} func={e => action.setContents(produce(state.contents, draft => {\n                            draft[state.secNum].title.align = e;\n                            draft[state.secNum].desc.align = e;\n                            draft[state.secNum].button.align = e;\n                            draft[state.secNum].contents.align= e;\n                            draft[state.secNum].align= e;\n                        }))} />\n                        </>\n                    }\n                    </>\n                )\n            case 'detail':\n                return(\n                    <>\n                    {\n                        state.isPhone ? \n                        <>\n                            <RadioCustom layout='on' version='two' options={layout4Options} value={content.mobile.layout} func={e => action.setContents(produce(state.contents, draft => {\n                                draft[state.secNum].mobile.layout = e;\n                            }))} />\n                            <AlignCustom all value={content.mobile.align} func={e => action.setContents(produce(state.contents, draft => {\n                                draft[state.secNum].mobile.align = e;\n                            }))} />\n                        </>\n                        :\n                        <>\n                        <RadioCustom layout='on' version='main' options={layout4Options} value={content.layout} func={(e,align, contAlign) => action.setContents(produce(state.contents, draft => {\n                            draft[state.secNum].layout = e;\n                            draft[state.secNum].title.align = align;\n                            draft[state.secNum].desc.align = align;\n                            draft[state.secNum].contents.align= contAlign;\n                        }))} />\n                        <AlignCustom all value={content.align} func={e => action.setContents(produce(state.contents, draft => {\n                            draft[state.secNum].title.align = e;\n                            draft[state.secNum].desc.align = e;\n                            draft[state.secNum].align= e;\n                        }))} />\n                        </>\n                    }\n                    </>\n                )\n            case 'cta':\n                return(\n                    <>\n                    {\n                        state.isPhone ? \n                        <>\n                            <RadioCustom layout='on' version='two' options={layout4Options} value={content.mobile.layout} func={e => action.setContents(produce(state.contents, draft => {\n                                draft[state.secNum].mobile.layout = e;\n                            }))} />\n                            <AlignCustom all value={content.mobile.align} func={e => action.setContents(produce(state.contents, draft => {\n                                draft[state.secNum].mobile.align = e;\n                                draft[state.secNum].title.align = e;\n                                draft[state.secNum].desc.align = e;\n                                draft[state.secNum].caution.align = e;\n                            }))} />\n                        </>\n                        :\n                        <>\n                        <RadioCustom layout='on' version='cta' options={layout4Options} value={content.layout} func={e => action.setContents(produce(state.contents, draft => {\n                            draft[state.secNum].layout = e;\n                        }))} />\n                        <AlignCustom all value={content.align} func={e => action.setContents(produce(state.contents, draft => {\n                            draft[state.secNum].align = e;\n                            draft[state.secNum].title.align = e;\n                            draft[state.secNum].desc.align = e;\n                            draft[state.secNum].button.align = e;\n                            draft[state.secNum].appButton.align = e;\n                            draft[state.secNum].caution.align = e;\n                        }))} />\n                        </>\n                    }\n                    </>\n                )\n            case 'apply':\n                return(\n                    <RadioCustom layout='on' version='cta' options={layout3Options} value={content.layout} func={e => action.setContents(produce(state.contents, draft => {\n                        draft[state.secNum].layout = e;\n                    }))} />\n                )\n            case 'app':\n                return(\n                    <RadioCustom layout='on' version='cta' options={layout3Options} value={content.layout} func={e => action.setContents(produce(state.contents, draft => {\n                        draft[state.secNum].layout = e;\n                    }))} />\n                )\n            case 'text': \n                return(\n                    <>\n                    { state.isPhone ? \n                        <>\n                            <RadioCustom layout='on' version='text' options={layout3Options} value={content.mobile.layout} func={(e,align,top,bottom) => action.setContents(produce(state.contents, draft => {\n                                draft[state.secNum].mobile.layout = e;\n                                draft[state.secNum].mobile.align = align;\n                            }))} />\n                        </> \n                        :\n                        <>\n                            <RadioCustom layout='on' version='text' options={layout3Options} value={content.layout} func={(e,align,top,bottom) => action.setContents(produce(state.contents, draft => {\n                                draft[state.secNum].layout = e;\n                                draft[state.secNum].title.align = align;\n                                draft[state.secNum].desc.align = align;\n                            }))} />\n                        </>\n                    }\n                    </>\n                )\n            case 'footer':\n                return(\n                    <>\n                    <RadioCustom layout='on' version='footer' options={layout3Options} value={foot.layout} func={e => {setFoot(produce(foot, draft => {\n                            draft.layout = e;\n                        }))}} />\n                    <AlignCustom value={foot.text.align} func={e => setFoot(produce(foot, draft => {\n                        draft.text.align = e;\n                    }))} />\n                    </>\n                )\n        }\n    }\n\n    return (\n        <OpenCloseCustom title=\"레이아웃\" use={true} subtext={state.isPhone ? '모바일' : 'PC'}>\n            {ReturnLayout()}\n        </OpenCloseCustom>\n    )\n}\n\nexport default Layout\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/tools/EditTitleDesc.js",["1068","1069","1070"],"import React, {useState, useContext} from 'react'\nimport { MyContext } from '../../../../../pages/Make/MakePageV2'\nimport RadioCustom from '../../tools/Custom/RadioCustom'\nimport produce from 'immer';\nimport ColorCustom from '../../tools/Custom/ColorCustom'\nimport AlignCustom from '../../tools/Custom/AlignCustom'\nimport TextSizeCustom from '../../tools/func/TextSizeCustom'\nimport OpenCloseCustom from '../../tools/Custom/OpenCloseCustom'\n\nfunction EditTitleDesc({content}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    return (\n        <>\n        <OpenCloseCustom title=\"제목\" use={content.title.use} open={state.focus === 'title'}>\n            <ColorCustom text=\"색상\" value={content.title.color} func={e => action.setContents(produce(state.contents, draft => {\n                draft[state.secNum].title.color = e;\n            }))} />\n            <TextSizeCustom text=\"크기\" title value={content.title.size} func={e => action.setContents(produce(state.contents, draft => {\n                draft[state.secNum].title.size = e;\n            }))} />\n        </OpenCloseCustom>\n        <OpenCloseCustom title=\"본문\" use={content.desc.use} open={state.focus === 'desc'}>\n            <ColorCustom text=\"색상\" value={content.desc.color} func={e => action.setContents(produce(state.contents, draft => {\n                draft[state.secNum].desc.color = e;\n            }))} />\n            <TextSizeCustom text=\"크기\" desc value={content.desc.size} func={e => action.setContents(produce(state.contents, draft => {\n                draft[state.secNum].desc.size = e;\n            }))} />\n        </OpenCloseCustom>\n        </>\n    )\n}\n\nexport default EditTitleDesc\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/tools/LayoutRFG.js",[],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/tools/ElementsTable.js",["1071","1072","1073"],"import React, {useContext} from 'react'\nimport { MyContext } from '../../../../../pages/Make/MakePageV2'\nimport CheckBoxCustom from '../../tools/Custom/CheckBoxCustom'\nimport produce from 'immer'\nimport './ElementsTable.css'\n\nfunction ElementsTable({elements, content}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    return (\n        <div className=\"one-element\">\n            <div className=\"edit-element__box\">\n                <div className=\"edit-element__title\" style={{margin:'5px 0px 5px 10px'}}>\n                    요소 ON/OFF\n                </div>\n                <div>\n                    {elements.map((item,index) => {\n                        return(\n                            <CheckBoxCustom value={item.use} func={item.func} key={index} text={item.title}/>\n                        )\n                    })}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ElementsTable\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/tools/AddAppButton.js",["1074"],"import React, {useContext} from 'react'\nimport { MyContext } from '../../../../../pages/Make/MakePageV2'\nimport produce from 'immer';\nimport OpenCloseCustom from '../../tools/Custom/OpenCloseCustom'\nimport InputCustom from '../../tools/Custom/InputCustom'\nimport RadioCustom from '../../tools/Custom/RadioCustom'\n\nfunction AddAppButton({content}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    return (\n        <OpenCloseCustom title=\"앱 다운로드 버튼\" use={content.appButton.use}>\n            <div className=\"edit-element\">\n                <div className=\"edit-element__one\" style={{flexDirection: 'column'}}>\n                    <div className=\"edit-element__left\">Google Play Store</div> \n                    <InputCustom placeholder=\"링크를 입력해 주세요.\" value={content.appButton.google} func = {(e) => action.setContents(produce(state.contents, draft => {\n                        draft[state.secNum].appButton.google = e\n                    }))} />\n                </div>\n            </div>\n            <div className=\"edit-element\">\n                <div className=\"edit-element__one\" style={{flexDirection: 'column'}}>\n                    <div className=\"edit-element__left\">Apple App Store</div> \n                    <InputCustom placeholder=\"링크를 입력해 주세요.\" value={content.appButton.apple} func = {(e) => action.setContents(produce(state.contents, draft => {\n                        draft[state.secNum].appButton.apple = e\n                    }))} />\n                </div>\n            </div>\n        </OpenCloseCustom>\n    )\n}\n\nexport default AddAppButton\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/tools/AddCtaButton.js",["1075","1076"],"import React, {useContext} from 'react'\nimport produce from 'immer';\nimport { MyContext } from '../../../../../pages/Make/MakePageV2'\nimport {CustomSwitch} from '../../tools/Custom/OnOffCustom'\nimport RadioCustom from '../../tools/Custom/RadioCustom'\nimport InputCustom from '../../tools/Custom/InputCustom'\nimport ApplyInputCustom from '../../tools/Custom/ApplyInputCustom'\nimport OnOffCustom from '../../tools/Custom/OnOffCustom'\nimport TextSizeCustom from '../../tools/func/TextSizeCustom'\n\nconst buttonOptions = [\n    {label: '링크 연결', value: 'link'},\n    {label: '신청', value: 'apply'},\n]\n\nconst buttonTextOptions = [\n    { label: '작게', value: 10 },\n    { label: '보통', value: 12 },\n    { label: '크게', value: 14 }\n]\n\nfunction AddCtaButton({content, num}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    const ctaOpen = () => {\n        if(!(content.button.ghostUse && content.button.ghostOption === 'apply')){\n        action.setContents(produce(state.contents, draft => {\n            draft[state.secNum].button.ctaUse = !content.button.ctaUse}))\n        }\n    }\n\n    const changeCtaOption = (e) => {\n        action.setContents(produce(state.contents, draft => {\n            if (draft[state.secNum].button.ctaOption === 'link'){\n                draft[state.secNum].button.ctaOption = 'apply'\n                draft[state.secNum].button.ghostUse = false\n            }else{\n                draft[state.secNum].button.ctaOption = 'link'\n            }\n        }))\n    }\n\n    const returnCtaOptions = () => {\n        switch(content.button.ctaOption){\n            case 'link':\n                return(\n                    <>\n                    <InputCustom placeholder=\"연결하고 싶은 URL을 입력해 주세요\" value={content.button.ctaLink} func = {(e) => action.setContents(produce(state.contents, draft => {\n                        draft[state.secNum].button.ctaLink = e\n                    }))} />\n                    </>\n                )\n            case 'apply':\n                return(\n                    <>\n                    {\n                        content.ctaApplyInputs.length >= num ?  \n                        <ApplyInputCustom disabled /> \n                        :\n                        <ApplyInputCustom func={e => action.setContents(produce(state.contents, draft => {\n                            draft[state.secNum].ctaApplyInputs.push(e)\n                        }))} /> \n                    }\n                    \n                    { content.ctaApplyInputs.length > 0 && \n                    <>\n                        { content.ctaApplyInputs.map((item, index) => {\n                                return(\n                                    <ApplyInputCustom made value={item} func={e => action.setContents(produce(state.contents, draft => {\n                                        if(index === 0 ){\n                                            draft[state.secNum].ctaApplyInputs.shift()\n                                        }else{\n                                            draft[state.secNum].ctaApplyInputs.splice(index, index)\n                                        }\n                                    }))} key={index}/>\n                                )\n                            })\n                        } \n                    </> }\n                    <div className=\"mid-command-light\"> 최대 {num}개의 신청 박스만 생성 가능합니다. \n                    </div>\n                    <OnOffCustom text=\"개인정보 동의 확인 사용\" value={content.button.ctaCheck} func={e => {\n                        action.setContents(produce(state.contents, draft => {\n                            draft[state.secNum].button.ctaCheck = !content.button.ctaCheck\n                        }))\n                        console.log(content.button)\n                    }}/>\n                    </>\n                )\n            default:\n                return(\n                <> </>\n                )\n        }\n    }\n\n    return (\n        <div className=\"box-gray__container\">\n        <CustomSwitch text=\"CTA 버튼\" value={content.button.ctaUse} onChange = {e => ctaOpen(e)}/>\n        { content.button.ctaUse && (\n            <>\n                <RadioCustom options={buttonOptions} value={content.button.ctaOption} func={e => changeCtaOption(e)}/>\n                {returnCtaOptions()}\n            </>\n        )}\n        </div>\n    )\n}\n\nexport default AddCtaButton\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/tools/AddGhostButton.js",["1077"],"import React, {useContext} from 'react'\nimport produce from 'immer';\nimport { MyContext } from '../../../../../pages/Make/MakePageV2'\nimport {CustomSwitch} from '../../tools/Custom/OnOffCustom'\nimport RadioCustom from '../../tools/Custom/RadioCustom'\nimport InputCustom from '../../tools/Custom/InputCustom'\nimport ApplyInputCustom from '../../tools/Custom/ApplyInputCustom'\nimport OnOffCustom from '../../tools/Custom/OnOffCustom'\n\nconst buttonOptions = [\n    {label: '링크 연결', value: 'link'},\n    {label: '신청', value: 'apply'},\n]\n\nfunction AddGhostButton({content, num}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    const ghostOpen = () => {\n        if(!(content.button.ctaUse && content.button.ctaOption === 'apply')){\n        action.setContents(produce(state.contents, draft => {\n            draft[state.secNum].button.ghostUse = !content.button.ghostUse}))\n        }\n    }\n\n    const changeGhostOption = () => {\n        action.setContents(produce(state.contents, draft => {\n            if (draft[state.secNum].button.ghostOption == 'link'){\n                draft[state.secNum].button.ghostOption = 'apply'\n                draft[state.secNum].button.ctaUse = false\n            }\n            else\n                draft[state.secNum].button.ghostOption = 'link'\n        }))\n    }\n\n    const returnGhostOptions = () => {\n        switch(content.button.ghostOption){\n            case 'link':\n                return(\n                    <>\n                    <InputCustom placeholder=\"연결하고 싶은 URL을 입력해 주세요\" value={content.button.ghostLink} func = {(e) => action.setContents(produce(state.contents, draft => {\n                        draft[state.secNum].button.ghostLink = e\n                    }))} />\n                    {/* <SliderCustom top=\"고스트 여백\" value={content.button.ghostPadding} max={18} func={e => action.setContents(produce(state.contents, draft => {\n                        draft[state.secNum].button.ghostPadding = e\n                    }))}/> */}\n                    </>\n                )\n            case 'apply':\n                return(\n                    <>\n                    {\n                        content.ghostApplyInputs.length >= num ?  \n                        <ApplyInputCustom disabled /> \n                        :\n                        <ApplyInputCustom func={e => action.setContents(produce(state.contents, draft => {\n                            draft[state.secNum].ghostApplyInputs.push(e)\n                        }))} /> \n                    }\n                    \n                    { content.ghostApplyInputs.length > 0 && \n                    <>\n                        { content.ghostApplyInputs.map((item, index) => {\n                                return(\n                                    <ApplyInputCustom made value={item} func={e => action.setContents(produce(state.contents, draft => {\n                                        if(index === 0 ){\n                                            draft[state.secNum].ghostApplyInputs.shift()\n                                        }else{\n                                            draft[state.secNum].ghostApplyInputs.splice(index, index)\n                                        }\n                                    }))} key={index}/>\n                                )\n                            })\n                        } \n                    </> }\n                    <div className=\"mid-command-light\"> 최대 {num}개의 신청 박스만 생성 가능합니다. \n                    </div>\n                    <OnOffCustom text=\"개인정보 동의 확인 사용\" value={content.button.ghostCheck} func={e => {\n                        action.setContents(produce(state.contents, draft => {\n                            draft[state.secNum].button.ghostCheck = !content.button.ghostCheck\n                        }))\n                        console.log(content.button)\n                    }}/>\n                    </>\n                )\n            default:\n                return(\n                <> </>\n                )\n        }\n    }\n\n    return (\n        <>\n        <CustomSwitch text=\"고스트 버튼\" value={content.button.ghostUse} onChange = {e => ghostOpen(e)}/>\n            { content.button.ghostUse && (\n                <>\n                    <RadioCustom options={buttonOptions} value={content.button.ghostOption} func={e => changeGhostOption(e)}/>\n                    {returnGhostOptions()}\n                </>\n            )}\n        </>\n    )\n}\n\nexport default AddGhostButton\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/tools/EditNotice.js",["1078","1079"],"import React, { useContext } from 'react'\nimport { MyContext } from '../../../../../pages/Make/MakePageV2'\nimport produce from 'immer'\nimport OpenCloseCustom from '../../tools/Custom/OpenCloseCustom'\nimport ColorCustom from '../../tools/Custom/ColorCustom'\nimport TextSizeCustom from '../../tools/func/TextSizeCustom'\nimport RadioCustom from '../../tools/Custom/RadioCustom'\nimport AlignCustom from '../../tools/Custom/AlignCustom'\n\nconst sizeOptions = [\n    { label: '작게', value: 14 },\n    { label: '보통', value: 16 },\n    { label: '크게', value: 18 },\n]\n\nfunction EditNotice({content}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    return (\n        <OpenCloseCustom title=\"안내사항\u001d\" use={content.caution.use} open={state.focus === 'caution'} >\n            <ColorCustom text=\"색상\" value={content.caution.color} func={e => action.setContents(produce(state.contents, draft => {\n                draft[state.secNum].caution.color = e;\n            }))} />\n            {/* <AlignCustom value={content.caution.align} func={e => action.setContents(produce(state.contents, draft => {\n                draft[state.secNum].caution.align = e;\n            }))} /> */}\n            <TextSizeCustom text=\"크기\" desc options={sizeOptions} value={content.caution.size} func={e => action.setContents(produce(state.contents, draft => {\n                draft[state.secNum].caution.size = e;\n            }))} />\n        </OpenCloseCustom>\n    )\n}\n\nexport default EditNotice\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/tools/ImageModal.js",["1080"],"import React from 'react'\nimport iconscouts from './img/iconscouts.json';\nimport { styled, Box } from '@mui/system';\nimport ModalUnstyled from '@mui/base/ModalUnstyled';\nimport OverflowScrolling from 'react-overflow-scrolling';\n\nconst StyledModal = styled(ModalUnstyled)`\n  position: fixed;\n  z-index: 1300;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Backdrop = styled('div')`\n  z-index: -1;\n  position: fixed;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  left: 0;\n  background-color: rgba(0, 0, 0, 0.1);\n  -webkit-tap-highlight-color: transparent;\n`;\n\nconst style = {\n  width: 800,\n  height: 500,\n  bgcolor: 'rgba(255,255,255,1)',\n  borderRadius:2,\n  p: 2,\n  px: 4,\n  pb: 3,\n};\n\nfunction ImageModal({open, setOpen}) {\n    return (\n        <StyledModal\n            aria-labelledby=\"unstyled-modal-title\"\n            aria-describedby=\"unstyled-modal-description\"\n            open={open}\n            onClose={() => setOpen(!open)}\n            BackdropComponent={Backdrop}\n        >\n            <Box sx={style}>\n            <OverflowScrolling className='overflow-scrolling'>\n                <div className=\"center-row\" style={{flexWrap:'wrap'}}>\n                {iconscouts.response.items.data.map((item) => {\n                    return(\n                        <img src={item.urls.svg} width={120} />\n                    )\n                })}\n                </div>\n            </OverflowScrolling>\n            </Box>\n        </StyledModal>\n    )\n}\n\nexport default ImageModal\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/components/Element.js",["1081","1082"],"import React, {useContext, useState} from 'react'\nimport { MyContext } from '../../../../pages/Make/MakePageV2'\nimport produce from 'immer'\nimport IconTable from '../components/IconTable'\nimport {icons} from '../components/IconTable'\nimport {Upload} from '@styled-icons/bootstrap';\nimport {\n    ChakraProvider,\n    Popover,\n    PopoverTrigger,\n    PopoverContent,\n    PopoverHeader,\n    PopoverBody,\n    PopoverFooter,\n    PopoverArrow,\n  } from '@chakra-ui/react'\n\nfunction Element({content, item, index, gallery}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n    const [open, setOpen] = useState([false, false, false]);\n    const handleClick = (index) => {\n        setOpen(produce(open, draft => {\n            draft[index] = !open[index];\n        }));\n    };\n  \n    const handleClose = (index) => {\n        setOpen(produce(open, draft => {\n            draft[index] = false;\n        }));\n    };\n\n    const returnIcon = (name) => {\n        return icons.filter(doc => doc.name === name)[0].icon\n    }\n\n    return (\n    <ChakraProvider>\n    {\n        content.element.use && \n        <div style={{justifyContent: `${content.elementText.align}`}} onClick={() => {action.setFocus('element'); action.setCategory(0)}}>\n            <div style={{width:`${content.element.size}px`, height:`${content.element.size}px`, position:'relative', cursor:'pointer'}}>\n            {\n            content.element.type === 'image' ? \n                <div className=\"feature-upload-button border-hover\">\n                { item.attachment ? \n                    <img src={item.attachment} style={{width:`${content.element.size}px`, height:`${content.element.size}px`, borderRadius:`${content.element.imageBorder}px`, objectFit:'cover'}}/> \n                    :\n                    <div className=\"feature-upload-button\" style={{borderRadius:`${content.element.imageBorder}px`, backgroundColor:`${content.element.backgroundColor}`}}>\n                        <Upload size=\"25\" />\n                    </div>\n                }\n                <input\n                    className=\"feature-upload-file\"\n                    type=\"file\" \n                    accept=\"image/*\" \n                    id=\"file\" \n                    style={{width:'100%', height:'100%', borderRadius:`${content.element.imageBorder}px`}}\n                    onChange={ e => {\n                        const {target:{files},} = e;\n                        const oneFile = files[0];\n                        const reader = new FileReader();\n                        reader.onloadend = (finishedEvent) => { // 로딩이 끝날 때 실행한다는 뜻.\n                            if(oneFile.size > 3000000){\n                                alert(\"파일의 크기가 3MB를 초과합니다.\")\n                                return;\n                            }\n                            const {currentTarget:{result}} = finishedEvent;\n                            action.setContents(produce(state.contents, draft=>{\n                                draft[state.secNum].elements[index].attachment = result;\n                            }))\n                        }\n                        if(oneFile){\n                            reader.readAsDataURL(oneFile);\n                        }\n                    } }\n                /> \n            </div> : \n            <>\n                <Popover\n                    style={{zIndex: 6, position: 'relative'}}\n                    placement='top'\n                    closeOnBlur={false}\n                    isOpen={open[index]}\n                    onClose={() => handleClose(index)}>\n                <PopoverTrigger>\n                    <div className=\"feature-upload-button border-hover\" style={{borderRadius:`${content.element.iconBorder}px`, backgroundColor:`${content.element.backgroundColor}`}} onClick={() => handleClick(index)}>\n                        {item.icon ? \n                            <>{returnIcon(item.icon)}</> \n                            :\n                            <Upload size=\"25\" />\n                        }\n                    </div>\n                </PopoverTrigger>\n                <PopoverContent style={{zIndex:1900}}>\n                    <PopoverArrow />\n                    <PopoverHeader>아이콘을 선택하세요.</PopoverHeader>\n                    <PopoverBody>\n                        <IconTable func={ e => action.setContents(produce(state.contents, draft => {\n                            draft[state.secNum].elements[index].icon = e;\n                        })) } handleClose={() => handleClose(index)} />\n                    </PopoverBody>\n                </PopoverContent>\n                </Popover>\n            </>\n            }\n        </div> \n    </div>\n    }\n</ChakraProvider>\n    )\n}\n\nexport default Element","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/components/ReturnButton.js",["1083","1084","1085","1086","1087","1088","1089","1090"],"import React, { useContext, useState, useRef } from 'react'\nimport { MyContext } from '../../../../pages/Make/MakePageV2'\nimport AutosizeInput from 'react-input-autosize';\nimport appstorebutton from '../../../../tools/img/appstorebutton.png'\nimport playstorebutton from '../../../../tools/img/playstorebutton.png'\nimport {ButtonEditor} from '../../tools/Editor'\nimport produce from 'immer';\nimport { Checkbox, ChakraProvider } from '@chakra-ui/react'\nimport './ReturnButton.css'\n\nfunction ReturnButton({content, onlyapp}){\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    const CustomButton = (type) => { return (\n        <div className=\"cta-button-edit\" style={{\n            borderRadius:`${state.setting[type].borderRadius}px`,\n            backgroundColor:`${state.setting[type].backgroundColor}`,\n            color:`${state.setting[type].color}`,\n            boxShadow:`${state.setting[type].shadow ? '1px 2px 4px rgba(0,0,0,0.2)' : 'none'}`,\n            border:`${state.setting[type].border ? `1px solid ${state.setting[type].borderColor}` : 'none'}`,\n            textAlign: 'center',\n            fontSize:`${state.isPhone ? '10px' : '14px'}`,\n        }}>\n            <div style={{\n                padding:'10px 15px',\n                fontFamily:`Pretendard-Regular`,\n                fontWeight:'500',\n            }}>\n            <ButtonEditor \n                data={content.button[type === \"cta\" ? 'ctaText' : 'ghostText']}\n                onChange={(event, editor) => {\n                    const data = editor.getData();\n                    action.setContents(produce(state.contents, draft => {\n                        draft[state.secNum].button[type === \"cta\" ? 'ctaText' : 'ghostText'] = data;\n                    }))\n                }}\n            />\n            </div>\n        </div>\n        )}\n    \n    const returnInputs = (type) => {\n        return(\n            <div className=\"centera\" style={{\n                    flexDirection:`${state.isPhone || content[type === 'cta' ? 'ctaApplyInputs' : 'ghostApplyInputs'].length > 1 ? 'column' : 'row'}`, \n                    alignItems:`${state.isPhone || content[type === 'cta' ? 'ctaApplyInputs' : 'ghostApplyInputs'].length > 1 ? 'center' : 'start'}`, \n                    justifyContent:`${state.isPhone ? content.mobile.buttonAlign : content.button.align}`\n                }}>\n                <div style={{ display:'flex', flexDirection:'column', justifyContent:`${state.isPhone ? content.mobile.buttonAlign : content.button.align}`}}>\n                    {content[type === 'cta' ? 'ctaApplyInputs' : 'ghostApplyInputs'].map((item, index) => {\n                        return <input readOnly\n                                    className=\"input-placeholder\" \n                                    placeholder={item} \n                                    key={index} \n                                    style={{  margin:'4px', padding: `13px 10px`, }}/>\n                    })} \n                    {\n                        content.button[type === 'cta' ? 'ctaCheck' : 'ghostCheck'] && \n                        <div className=\"input-before\">\n                            <Checkbox colorScheme='gray' />&nbsp;(필수) <a href=\"https://www.notion.so/377223464ebd42e6adb9095f4b6548e5\" target='_blank' style={{textDecoration:'underline'}}>&nbsp;개인정보 수집 및 이용</a>&nbsp;동의\n                        </div> \n                    }\n                </div>\n                <div style={{marginTop:`${state.isPhone || ( content.button[type === 'cta' ? 'ctaCheck' : 'ghostCheck'] && content[type === 'cta' ? 'ctaApplyInputs' : 'ghostApplyInputs'].length > 1 ) \n                    ? '7px' : '0px'}`}}>\n                {\n                    type === 'cta' && <>{CustomButton('cta')}</>\n                }\n                {\n                    type === 'ghost' && <>{CustomButton('ghost')}</>\n                }\n                </div>\n            </div>\n        )\n    }\n\n    return (\n        <ChakraProvider>\n    {onlyapp ? \n        (content.appButton.use && \n               <div className=\"button__container\" style={{justifyContent:`${state.isPhone ? content.mobile.align : content.appButton.align}`}}>\n                {\n                    content.appButton.google.length > 0 && \n                        <img src={playstorebutton} className=\"store-button\" style={{height:`${state.isPhone ? '31px' : '51px'}`}} />\n                }\n                {/* onClick={() => {window.open(`${content.button.ghostLink}`)}} */}\n                {\n                    content.appButton.apple.length > 0 && \n                        <img src={appstorebutton} className=\"store-button\" style={{height:`${state.isPhone ? '30px' : '50px'}`}} />\n                }\n            </div>) \n        : \n        <>\n        {content.button.use && \n                    <div style={{width:'100%'}} onClick={() => action.setFocus('button')}>\n                        <div className=\"button__container\" style={{\n                            justifyContent:`${state.isPhone ? content.mobile.align : content.button.align}`,\n                            flexDirection:`${ \n                                ((content.button.ctaUse && content.button.ctaOption === 'apply') && \n                                (content.button.ghostUse && content.button.ghostOption === 'apply') )|| \n                                ((content.button.ctaUse && content.button.ctaOption === 'apply') && \n                                (content.button.ghostUse && content.button.ghostOption === 'link') )||\n                                ((content.button.ctaUse && content.button.ctaOption === 'link') &&\n                                (content.button.ghostUse && content.button.ghostOption === 'apply')) ? 'column' : 'row' \n                                }`\n                            }}>\n                            <>\n                            {\n                                content.button.ctaUse && \n                                <>\n                                    { content.button.ctaOption === 'link' ? CustomButton('cta') : returnInputs('cta') }\n                                </>\n                            }\n                            </>\n                            <>\n                            {\n                                content.button.ghostUse &&\n                                <>\n                                    { content.button.ghostOption === 'link' ? CustomButton('ghost') : returnInputs('ghost') }\n                                </>\n                            }\n                            </>\n                        </div>\n                    </div>\n        }\n        {\n            content.appButton.use && \n            <div className=\"button__container\" style={{justifyContent:`${state.isPhone ? content.mobile.align : content.button.align}`}}>\n                {\n                    content.appButton.google.length > 0 && \n                        <img src={playstorebutton} className=\"store-button\" style={{height:`${state.isPhone ? '31px' : '51px'}`}} />\n                }\n                {/* onClick={() => {window.open(`${content.button.ghostLink}`)}} */}\n                {\n                    content.appButton.apple.length > 0 && \n                        <img src={appstorebutton} className=\"store-button\" style={{height:`${state.isPhone ? '30px' : '50px'}`}} />\n                }\n            </div>\n        }\n        </>}\n        </ChakraProvider>\n    )\n}\n\n\nexport default ReturnButton","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/components/ImageOrSlide.js",["1091","1092","1093","1094","1095","1096","1097"],"import React, {useRef, useState, useContext} from 'react';\nimport FuncImageCarousel from './FuncImageCarousel'\nimport produce from 'immer';\nimport { MyContext } from '../../../../pages/Make/MakePageV2'\nimport Phone from '../../../../tools/img/mockup/mobile.png'\nimport Desktop from '../../../../tools/img/mockup/desktop.png'\nimport ourA from '../../../../tools/img/005.png'\nimport './ImageOrSlide.css'\n\nfunction ImageOrSlide({content}){\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n    const imgRef=useRef(null)\n    const photoInput = useRef();\n    const inputClick = () => {\n        photoInput.current.click();\n    };\n\n    const imageWidth = (desktop) => {\n        if(desktop){\n            return state.isPhone ? (content.image.size/2.7 + 50)/1.22 : content.image.size/1.22\n        }else{\n            return state.isPhone ? content.image.size/2.7 + 50 : content.image.size\n        }\n    }\n\n    const imageLeft = (desktop) => {\n        if(desktop){\n            return state.isPhone ? 50 - ((content.image.size/2.7 + 50)/1.22)/2 : 50 - (content.image.size/1.22)/2\n        }else{\n            return state.isPhone ? 50 - (content.image.size/2.7 + 50)/2 : 50 - content.image.size/2\n        }\n    }\n\n    // 화면에서 이미지 업로드\n    const upload_img = (e) => {\n        const {target:{files},} = e;\n        const oneFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => { // 로딩이 끝날 때 실행한다는 뜻.\n            if(oneFile.size > 3000000){\n                alert(\"파일의 크기가 3MB를 초과합니다.\")\n                return;\n            }\n            const {currentTarget:{result}} = finishedEvent;\n            action.setContents(produce(state.contents, draft=>{\n                draft[state.secNum].image.attachment = result;            \n            }))\n        }\n        if(oneFile){\n            reader.readAsDataURL(oneFile);\n        }\n    }\n\n    // 화면에서 목업 업로드\n    const upload_mockup = (e) => {\n        const {target:{files},} = e;\n        const oneFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => { // 로딩이 끝날 때 실행한다는 뜻.\n            if(oneFile.size > 3000000){\n                alert(\"파일의 크기가 3MB를 초과합니다.\")\n                return;\n            }\n            const {currentTarget:{result}} = finishedEvent;\n            action.setContents(produce(state.contents, draft=>{\n                draft[state.secNum].mockup.attachment = result;           \n            }))\n        }\n        if(oneFile){\n            reader.readAsDataURL(oneFile);\n        }\n    }\n\n    const returnContent = () => {\n        if (content.contents.use) {\n            // 동영상 - 유튜브 링크\n            if(content.video.type === 'youtube' && content.contents.type === 'video' ) \n                return(\n                    <iframe ref={imgRef} className=\"video-content\" src={`${content.video.link}`} frameborder=\"0\" allow='autoplay' allowfullscreen style={{ width:`${imageWidth()}%`, height:`${imgRef.current && imgRef.current.scrollWidth * 0.56}px` }}/>\n                )\n            // 동영상 - 비디오 업로드\n            if(content.video.type === 'base' && content.contents.type === 'video' )\n                return(\n                    <video \n                    className=\"video\"\n                    src={`${content.video.attachment}`} \n                    type=\"video/mp4\" \n                    autoPlay\n                    muted\n                    loop\n                    style={{borderRadius:`${content.image.border}%`, width:`${content.image.size}%`}}\n                    >\n                    </video>\n                )\n            // 슬라이드\n            if( content.contents.type === 'slide' )\n                return(\n                    <div className=\"centera\">\n                        <FuncImageCarousel content={content}/>\n                    </div>\n                )\n            // 이미지\n            if( content.contents.type === 'image' )\n                return (\n                    <div id=\"attach\" onChange = {e => upload_img(e)} onClick={() => {\n                        inputClick();\n                        action.setCategory(0);\n                        action.setFocus('contents');\n                    }} className=\"centera\" style={{width:`${imageWidth()}%`}}>\n                         <input\n                            ref={photoInput}\n                            style={{\n                                display: 'none', \n                                cursor: 'pointer', \n                                objectFit:'cover',\n                            }}\n                            type=\"file\"\n                            accept=\"image/*\"\n                            id=\"file\"\n                            onChange = {e => upload_img(e)} />\n                        <img \n                            src={`${content.image.attachment === '' ? ourA : content.image.attachment}`} \n                            className=\"image border-hover\" \n                            style={{\n                                borderRadius:`${content.image.border}px`,\n                                width:`100%`, \n                                boxShadow: `${content.image.shadowValue}`\n                            }} />\n                    </div>\n                )\n            // 목업 - 모바일\n            if(content.mockup.type === 'mobile' && content.contents.type === 'mockup' )\n                return( \n                <div className=\"mock-container\" id=\"attach\" onChange = {e => upload_mockup(e)} onClick={() => inputClick}>\n                    <input\n                        ref={photoInput}\n                        style={{display: 'none', cursor: 'pointer', objectFit:'cover'}}\n                        type=\"file\"\n                        accept=\"image/*\"\n                        id=\"file\"\n                        onChange = {e => upload_mockup(e)}\n                    />\n                   <img className=\"mobile-ex  border-hover\" src={Phone} alt=\"목업틀\" style={{ width:`${imageWidth()}%` }} />\n                    { content.mockup.attachment === '' ?\n                    <></>:\n                    <img className=\"upload-mobile  border-hover\" src={content.mockup.attachment} style={{ \n                        width:`${imageWidth()-2}%`, \n                        left:`${imageLeft()+1}%`}} />\n                    }         \n               </div>)\n            // 목업 - 데스크탑\n            if(content.mockup.type === 'desktop' && content.contents.type === 'mockup' )\n                return(\n                    <div className=\"mock-container\" id=\"attach\" onChange = {e => upload_mockup(e)} onClick={() => inputClick}>\n                        <input\n                        ref={photoInput}\n                        style={{display: 'none', cursor: 'pointer', objectFit:'cover'}}\n                        type=\"file\"\n                        accept=\"image/*\"\n                        id=\"file\"\n                        onChange = {e => upload_mockup(e)}\n                    />\n                        <img className=\"mobile-ex border-hover\" src={Desktop} alt=\"목업틀\" style={{width: `${imageWidth()}%`}} />\n                        { content.mockup.attachment === '' ? \n                        <></> :\n                        <img  className=\"upload-desk border-hover\" src={`${content.mockup.attachment}`} style={{ \n                            width:`${imageWidth(true)}%`, \n                            left:`${imageLeft(true)}%`}} />\n                        }\n                    </div>\n                )\n            // 목업 - 모바일 2개\n        if(content.mockup.type === 'mobile2' && content.contents.type === 'mockup')\n            return( \n                <>\n                <div className=\"mock-container\" id=\"attach\" onChange = {e => upload_mockup(e)} onClick={() => inputClick}>\n                    <input\n                        ref={photoInput}\n                        style={{display: 'none', cursor: 'pointer', objectFit:'cover'}}\n                        type=\"file\"\n                        accept=\"image/*\"\n                        id=\"file\"\n                        onChange = {e => upload_mockup(e)}\n                    />\n                <img className=\"mobile-ex  border-hover\" src={Phone} alt=\"목업틀\" style={{ width:`${imageWidth()}%` }} />\n                    { content.mockup.attachment === '' ?\n                    <></>:\n                    <img className=\"upload-mobile  border-hover\" src={content.mockup.attachment} style={{ \n                        width:`${imageWidth()}%`, \n                        left:`${imageLeft()}%`}} />\n                    }         \n            </div>\n            <div className=\"mock-container\" id=\"attach\" onChange = {e => upload_mockup(e)} onClick={() => inputClick}>\n                    <input\n                        ref={photoInput}\n                        style={{display: 'none', cursor: 'pointer', objectFit:'cover'}}\n                        type=\"file\"\n                        accept=\"image/*\"\n                        id=\"file\"\n                        onChange = {e => upload_mockup(e)}\n                    />\n                <img className=\"mobile-ex  border-hover\" src={Phone} alt=\"목업틀\" style={{ width:`${imageWidth()}%` }} />\n                    { content.mockup.attachment2 === '' ?\n                    <></>:\n                    <img className=\"upload-mobile  border-hover\" src={content.mockup.attachment2} style={{ \n                        width:`${imageWidth()}%`, \n                        left:`${imageLeft()}%`}} />\n                    }         \n            </div>\n            </>\n            )\n        }\n        else{\n            return(<>\n            </>)\n        }\n    }\n\n    return(\n        <div className=\"centera\" style={{marginTop:`${!state.isPhone && content.layout === 3 ? '20px' : state.isPhone && content.mobile.layout === 3 ? '10px' : '0px'}`}}\n            onClick={() => {action.setFocus('contents'); action.setCategory(0)}}\n        >\n            {returnContent()}\n        </div>\n    )\n}\n\nexport default ImageOrSlide","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/UserLandingPage/Sections/components/AnimationDiv.js",[],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/UserLandingPage/Sections/components/ImageOrSlide.js",["1098","1099","1100","1101","1102","1103"],"import React, {useRef, useState, useContext} from 'react';\nimport FuncImageCarousel from './FuncImageCarousel'\nimport Phone from '../../../../tools/img/mockup/mobile.png'\nimport Desktop from '../../../../tools/img/mockup/desktop.png'\nimport ourA from '../../../../tools/img/005.png'\nimport { isMobile } from 'react-device-detect'\n\nfunction ImageOrSlide({content}){\n    const imgRef=useRef(null)\n\n    const imageWidth = (desktop) => {\n        if(desktop){\n            return isMobile ? (content.image.size/2.7 + 50)/1.22 : content.image.size/1.22\n        }else{\n            return isMobile ? content.image.size/2.7 + 50 : content.image.size\n        }\n    }\n\n    const imageLeft = (desktop) => {\n        if(desktop){\n            return isMobile ? 50 - ((content.image.size/2.7 + 50)/1.22)/2 : 50 - (content.image.size/1.22)/2\n        }else{\n            return isMobile ? 50 - (content.image.size/2.7 + 50)/2 : 50 - content.image.size/2\n        }\n    }\n\n    const returnContent = () => {\n        if (content.contents.use) {\n            // 동영상 - 유튜브 링크\n            if(content.video.type === 'youtube' && content.contents.type === 'video' ) \n                return(\n                    <iframe ref={imgRef} className=\"video-content\" src={`${content.video.link}`} frameborder=\"0\" allow='autoplay' allowfullscreen style={{ width:`${imageWidth()}%`, height:`${imgRef.current && imgRef.current.scrollWidth * 0.56}px` }}/>\n                )\n            // 동영상 - 비디오 업로드\n            if(content.video.type === 'base' && content.contents.type === 'video' )\n                return(\n                    <video \n                    className=\"video\"\n                    src={`${content.video.attachment}`} \n                    type=\"video/mp4\" \n                    autoPlay\n                    muted\n                    loop\n                    style={{borderRadius:`${content.image.border}%`, width:`${content.image.size}%`}}\n                    >\n                    </video>\n                )\n            // 슬라이드\n            if( content.contents.type === 'slide' )\n                return(\n                    <div className=\"centera\">\n                        <FuncImageCarousel content={content}/>\n                    </div>\n                )\n            // 이미지\n            if( content.contents.type === 'image' )\n                return (\n                    // <div style={{width:'100%'}}>\n                    <img \n                        src={`${content.image.attachment === '' ? ourA : content.image.attachment}`} \n                        className=\"image\" \n                        style={{\n                            borderRadius:`${content.image.border}px`,\n                            width:`${imageWidth()}%`, \n                            boxShadow: `${content.image.shadowValue}`\n                        }}\n                        />\n                    // </div>\n                )\n            // 목업 - 모바일\n            if(content.mockup.type === 'mobile' && content.contents.type === 'mockup' )\n                return( \n                <div className=\"mock-container\">\n                    <img className=\"mobile-ex\" src={Phone} alt=\"목업틀\" style={{ width:`${imageWidth()}%` }} />\n                    { content.mockup.attachment === '' ?\n                    <></>:\n                    <img className=\"upload-mobile\" src={content.mockup.attachment} style={{ \n                        width:`${imageWidth()}%`, \n                        left:`${imageLeft()}%`}} />\n                    }\n                </div>)\n            // 목업 - 데스크탑\n            if(content.mockup.type === 'desktop' && content.contents.type === 'mockup' )\n                return(\n                    <div className=\"mock-container\">\n                        <img className=\"mobile-ex\" src={Desktop} alt=\"목업틀\" style={{width: `${imageWidth()}%`}} />\n                        { content.mockup.attachment === '' ? \n                        <></> :\n                        <img  className=\"upload-desk\" src={`${content.mockup.attachment}`} style={{ \n                            width:`${imageWidth(true)}%`, \n                            left:`${imageLeft(true)}%`}} />\n                        }\n                    </div>\n                )\n        }\n        else{\n            return(<>\n            </>)\n        }\n    }\n\n    return(\n        <div className=\"centera\" style={{marginTop:`${!isMobile && content.layout === 3 ? '20px' : isMobile && content.mobile.layout === 3 ? '10px' : '0px'}`}}>\n            {returnContent()}\n        </div>\n    )\n}\n\nexport default ImageOrSlide","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/UserLandingPage/Sections/components/TitleDesc.js",["1104","1105"],"import React, {useContext} from 'react'\nimport { UserContext } from '../../../../pages/UserLanding/UserLandingPage'\nimport { isMobile } from 'react-device-detect'\nimport TextareaAutosize from 'react-textarea-autosize';\n\nfunction TitleDesc({content, titlePlaceholder, descPlaceholder}) {\n    const {state, action} = useContext(UserContext)\n\n    return (\n        <div className=\"title-desc__container\">\n            {\n                content.title.use &&\n                <div style={{width:'100%',\n                color:`${content.title.color}`}}>\n                    <div \n                        className=\"text-no-input\" \n                        dangerouslySetInnerHTML={{__html:content.title.text}}\n                        style={{\n                            fontFamily:`${state.setting.font}`, \n                            fontSize:`${isMobile ? content.title.size/22 : content.title.size/19}em`, \n                            textAlign:`${isMobile ? content.mobile.align : content.title.align}`,\n                            resize:'none',\n                        }}\n\n                    />\n                </div>\n            }\n            {\n                content.desc.use &&\n                <div style={{\n                    width:'100%', \n                    marginTop:'10px',\n                    color:`${content.desc.color}`}}>\n                    <div className=\"text-no-input\" \n                        dangerouslySetInnerHTML={{__html:content.desc.text}} \n                        style={{\n                            fontFamily:`${state.setting.smallFont}`, \n                            fontSize:`${isMobile ? content.desc.size/19 : content.desc.size/19}em`, \n                            // boxSizing:`border-box`, \n                            textAlign:`${isMobile ? content.mobile.align : content.desc.align}`,\n                            resize:'none',\n                        }} />\n                </div>\n            }\n        </div>\n    )\n}\n\nexport default TitleDesc\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/UserLandingPage/Sections/components/FeatureCard.js",["1106"],"import React, {useContext} from 'react'\nimport { isMobile } from 'react-device-detect'\n\nfunction FeatureCard({children, align, section, content, index}) {\n\n    return (\n        <div key={index} className=\"feature__card\" \n            style={{\n            alignItems: `${align}`,\n            margin : `${ isMobile ? `5px 5px 5px 5px` : `0px ${!isMobile && index === content.numOfElements - 1 ? '0px' : '5px'} 0px ${!isMobile && index === 0 ? '0px' : '5px'}` }`,\n            height : `${isMobile ? '' : '100%'}`,\n            width : `${isMobile ? \n                content.mobile.layout === 1 ? '100%' \n                : content.mobile.layout === 2 ? '46%' \n                : '30%'\n                : '46%'}`,\n            boxShadow:`${section === 'gallery' && content.card.shadow ? '2px 2px 4px rgba(0,0,0,0.4)' : ''}`, \n            backgroundColor: `${section === 'gallery' && content.card.color}`, \n            borderRadius:`${section === 'gallery' &&content.card.borderRadius}px`}}>\n            {children}\n        </div>\n    )\n}\n\nexport default FeatureCard","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/UserLandingPage/Sections/components/Element.js",["1107","1108","1109"],"import React from 'react'\nimport { MyContext } from '../../../../pages/Make/MakePageV2'\nimport IconTable from '../../../../components/Make/SectionTypes/components/IconTable'\nimport {icons} from '../../../../components/Make/SectionTypes/components/IconTable'\nimport {Upload} from '@styled-icons/bootstrap';\n\nfunction Element({content, item}) {\n\n    const returnIcon = (name) => {\n        return icons.filter(doc => doc.name === name)[0].icon\n    }\n\n    return (\n    <>\n    {\n        content.element.use && \n        <div style={{justifyContent: `${content.elementText.align}`}}>\n            <div style={{width:`${content.element.size}px`, height:`${content.element.size}px`, position:'relative', cursor:'pointer'}}>\n            {\n            content.element.type === 'image' ? \n            <div className=\"feature-upload-button\" style={{cursor:'default'}}>\n            { item.attachment ? \n                <img src={item.attachment} style={{width:`${content.element.size}px`, height:`${content.element.size}px`, borderRadius:`${content.element.imageBorder}px`, objectFit:'cover'}}/> \n                :\n                <div className=\"feature-upload-button\" style={{borderRadius:`${content.element.imageBorder}px`, backgroundColor:`${content.element.backgroundColor}`}}>\n                    <Upload size=\"25\" />\n                </div>\n            }\n            </div> \n            : \n            <div className=\"feature-upload-button\" style={{cursor:'default', borderRadius:`${content.element.iconBorder}px`, backgroundColor:`${content.element.backgroundColor}`}}>\n                {item.icon ? \n                    <>{returnIcon(item.icon)}</> \n                    :\n                    <Upload size=\"25\" />\n                }\n            </div>\n            }\n        </div> \n    </div>\n    }\n</>\n    )\n}\n\nexport default Element","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/UserLandingPage/Sections/components/ReturnButton.js",["1110","1111","1112","1113","1114"],"import React, { useState, useContext, useMemo } from 'react'\nimport appstorebutton from '../../../../tools/img/appstorebutton.png'\nimport playstorebutton from '../../../../tools/img/playstorebutton.png'\nimport { UserContext } from '../../../../pages/UserLanding/UserLandingPage'\nimport {dbService} from '../../../../tools/fbase'\nimport { isMobile } from 'react-device-detect'\nimport produce from 'immer'\nimport { Checkbox, ChakraProvider } from '@chakra-ui/react'\nimport { createBrowserHistory } from 'history';\nconst history = createBrowserHistory();\n\nfunction ReturnButton({content}){\n    const [values, setValues] = useState(['', '', '', '', ''])\n    const [check, setCheck] = useState(true)\n    const {state, action} = useContext(UserContext)\n\n    const moveToPage = async (button) => {\n        // 파이어베이스에 기록\n        await dbService.collection('datas').add({\n            pageId:state.pageId,\n            type:'click',\n            from:content.name,\n            button:button,\n            created:Date.now(),\n        })\n    }\n\n    const apply = async () => {\n        // 파이어베이스에 기록\n        if(!check){\n            alert(\"개인정보 수집 및 이용에 동의해주세요.\");\n        }else if(values === ['','','','','']){\n            alert(\"정보를 입력해주세요.\");\n        }else{\n            await dbService.collection('datas').add({\n                pageId:state.pageId,\n                type:'apply',\n                values:values,\n                from:content.name,\n                created:Date.now(),\n            })\n            setValues(['','','','',''])\n            alert(\"완료되었습니다.\");\n            history.go();\n        }\n    }\n\nconst CustomButton = (type) => { return (\n    <div className=\"cta-button-edit\" style={{\n        borderRadius:`${state.setting[type].borderRadius}px`,\n        backgroundColor:`${state.setting[type].backgroundColor}`,\n        boxShadow:`${state.setting[type].shadow ? '1px 2px 4px rgba(0,0,0,0.2)' : 'none'}`,\n        border:`${state.setting[type].border ? `1px solid ${state.setting[type].borderColor}` : 'none'}`,\n        color:`${state.setting[type].color}`,\n        fontWeight:'500',\n    }} onClick={() => {\n        if(content.button[type === \"cta\" ? 'ctaOption' : 'ghostOption'] === 'link'){\n            moveToPage(type)\n            window.open(\n                content.button[[type === \"cta\" ? 'ctaLink' : 'ghostLink']],\n                '_blank' // <- This is what makes it open in a new window.\n            );\n        }else{\n            apply()\n        }\n    }}>\n    <div className=\"text-input-flex\" \n        dangerouslySetInnerHTML={{__html:content.button[type === \"cta\" ? 'ctaText' : 'ghostText']}}\n        style={{\n            cursor:'pointer',\n            border:'none',\n            textAlign: 'center',\n            fontSize:`${isMobile ? '12px' : '15px'}`,\n            fontFamily:`Pretendard-Regular`,\n            borderRadius:`${state.setting[type].borderRadius}px`,  \n            backgroundColor:`rgba(0,0,0,0)`, \n            padding:'12px 16px',\n        }} />\n        {/* <div className=\"text-input-flex\" \n            dangerouslySetInnerHTML={{__html:content.button[type === \"cta\" ? 'ctaText' : 'ghostText']}}\n        />\n        <AutosizeInput value={ content.button[type === \"cta\" ? 'ctaText' : 'ghostText'] } \n            inputStyle={{\n                cursor:'pointer',\n                border:'none',\n                textAlign: 'center',\n                fontSize:'14px',\n                fontFamily:`${state.setting.smallFont}`,\n                borderRadius:`${state.setting[type].borderRadius}px`,  \n                backgroundColor:`rgba(0,0,0,0)`, \n                padding: '5px 8px', \n                WebkitTextFillColor: `${state.setting[type].color}`,\n                WebkitOpacity: 1,\n                }}\n                disabled/> */}\n    </div>)}\n    \n    const returnInputs = (type) => {\n        return(\n            <div className=\"centera\" style={{\n                flexDirection:`${isMobile || content[type === 'cta' ? 'ctaApplyInputs' : 'ghostApplyInputs'].length > 1 ? 'column' : 'row'}`, \n                alignItems:`${isMobile || content[type === 'cta' ? 'ctaApplyInputs' : 'ghostApplyInputs'].length > 1 ? 'center' : 'start'}`, \n                justifyContent:`${isMobile ? content.mobile.align : content.button.align}`\n                }}>\n                <div style={{ display:'flex', flexDirection:'column', justifyContent:`${isMobile ? content.mobile.buttonAlign : content.button.align}`}}>\n                    {content[type === 'cta' ? 'ctaApplyInputs' : 'ghostApplyInputs'].map((item, index) => {\n                        return (\n                            <input \n                                className=\"input-placeholder\" \n                                placeholder={item} \n                                style={{ margin:'4px', padding: '13px 10px', }}\n                                onChange={e => setValues(produce(values, draft => {\n                                    draft[index] = e.currentTarget.value\n                                }))} \n                                key={index} />\n                        )\n                    })}\n                    {\n                        content.button[type === 'cta' ? 'ctaCheck' : 'ghostCheck'] && \n                        <div className=\"input-before\">\n                            <Checkbox defaultChecked={check} value={check} onChange={() => {setCheck(!check)}} colorScheme='gray' />&nbsp;(필수) <a href=\"https://www.notion.so/377223464ebd42e6adb9095f4b6548e5\" target='_blank' style={{textDecoration:'underline'}}>&nbsp;개인정보 수집 및 이용</a>&nbsp;동의\n                        </div>\n                    }\n                </div>\n                <div style={{marginTop:`${isMobile  || ( content.button[type === 'cta' ? 'ctaCheck' : 'ghostCheck'] && content[type === 'cta' ? 'ctaApplyInputs' : 'ghostApplyInputs'].length > 1 ) \n                     ? '7px' : '0px'}`}}>\n                {\n                    type === 'cta' && <>{CustomButton('cta')}</>\n                }\n                {\n                    type === 'ghost' && <>{CustomButton('ghost')}</>\n                }\n                </div>\n            </div>\n        )\n    }\n\n    return (\n        <ChakraProvider>\n        {\n        content.sectionTypeName !== 'AppDownloadSection' && content.button.use && \n            <div style={{width:'100%'}}>\n                <div className=\"button__container\" style={{\n                    justifyContent:`${isMobile ? content.mobile.align : content.button.align}`,\n                    flexDirection:`${ \n                        ((content.button.ctaUse && content.button.ctaOption === 'apply') && \n                        (content.button.ghostUse && content.button.ghostOption === 'apply') )|| \n                        ((content.button.ctaUse && content.button.ctaOption === 'apply') && \n                        (content.button.ghostUse && content.button.ghostOption === 'link') )||\n                        ((content.button.ctaUse && content.button.ctaOption === 'link') &&\n                        (content.button.ghostUse && content.button.ghostOption === 'apply')) ? 'column' : 'row' \n                        }` \n                    }}>\n                    <>\n                    {\n                        content.button.ctaUse && \n                        <>\n                            { content.button.ctaOption === 'link' ? CustomButton('cta') : returnInputs('cta') }\n                        </>\n                    }\n                    </>\n                    <>\n                    {\n                        content.button.ghostUse &&\n                        <>\n                            { content.button.ghostOption === 'link' ? CustomButton('ghost') : returnInputs('ghost') }\n                        </>\n                    }\n                    </>\n                </div>\n            </div>\n        }\n        {\n            content.sectionTypeName !== 'ApplySection' && content.appButton.use && \n            <div className=\"button__container\" style={{justifyContent:`${state.isPhone ? content.mobile.align : content.button.align}`}}>\n                {\n                    content.appButton.google.length > 0 && \n                        <img src={playstorebutton} className=\"store-button\" style={{height:`${isMobile ? '41px' : '51px'}`}} onClick={e => {\n                            window.open(\n                                content.appButton.google,\n                                '_blank' // <- This is what makes it open in a new window.\n                              )\n                              moveToPage('google')\n                            }}/>\n                }\n                {/* onClick={() => {window.open(`${content.button.ghostLink}`)}} */}\n                {\n                    content.appButton.apple.length > 0 && \n                        <img src={appstorebutton} className=\"store-button\" style={{height:`${isMobile ? '40px' : '50px'}`}} onClick={e => {\n                            window.open(\n                                content.appButton.apple,\n                                '_blank' // <- This is what makes it open in a new window.\n                              )\n                              moveToPage('apple')\n                            }}/>\n                }\n            </div>\n        }\n        </ChakraProvider>\n    )\n}\n\n\nexport default ReturnButton","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/UserLandingPage/Sections/components/TextAuto.js",["1115"],"import React, {useContext} from 'react'\nimport { UserContext } from '../../../../pages/UserLanding/UserLandingPage'\nimport TextareaAutosize from 'react-textarea-autosize';\n\nfunction TextAuto({small, value, color, setting, align, size, disabled}) {\n    const {state, action} = useContext(UserContext)\n    \n        return (\n            <>\n            {\n                small ?\n                <TextareaAutosize \n                    className=\"text-no-input feature-desc\" \n                    value={value} \n                    style={{\n                        color:`${color}`, \n                        textAlign:`${align}`,\n                        resize:'none',\n                        fontSize: `${size}em`,\n                        fontFamily:`${state.setting.smallFont}`,\n                        WebkitTextFillColor: `${color}`,\n                        WebkitOpacity: 1,\n                    }}\n                    spellCheck=\"false\"\n                    disabled={disabled}\n                />\n                : \n                <TextareaAutosize \n                    className=\"text-no-input feature-title\" \n                    value={value} \n                    style={{ \n                        color:`${color}`, \n                        textAlign:`${align}`,\n                        resize:'none',\n                        fontSize: `${size}em`,\n                        fontFamily:`${state.setting.font}`,\n                        WebkitTextFillColor: `${color}`,\n                        WebkitOpacity: 1,\n                    }}\n                    spellCheck=\"false\"\n                    disabled={disabled}\n                />\n            }\n            </>\n        )\n    }\n    \n    export default TextAuto\n    ","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/UserLandingPage/Sections/components/QnaOpenClose.js",[],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/components/IconTable.js",["1116"],"import * as bi from '@styled-icons/boxicons-logos'\nimport * as bs from '@styled-icons/bootstrap'\nimport * as hs from '@styled-icons/heroicons-solid'\nimport * as ho from '@styled-icons/heroicons-outline'\nimport * as fd from '@styled-icons/foundation'\nimport * as fs from '@styled-icons/fluentui-system-regular'\nimport {Email} from '@styled-icons/entypo'\nimport {EmailOutline} from '@styled-icons/evaicons-outline'\nimport {KakaoTalk} from '@styled-icons/remix-fill'\nimport OverflowScrolling from 'react-overflow-scrolling';\n\nimport React, {useState} from 'react'\n\nconst ICONSIZE = 30;\n\nexport const icons = [\n    {\n        icon:<fd.Link size={ICONSIZE}/>,\n        name:'Link'\n    },\n    {\n        icon:<fd.Laptop size={ICONSIZE}/>,\n        name:'Laptop'\n    },\n    \n    {\n        icon:<fd.GraphBar size={ICONSIZE}/>,\n        name:'GraphBar'\n    },\n    \n    {\n        icon:<fd.Crop size={ICONSIZE}/>,\n        name:'Crop'\n    },\n    {\n        icon:<bi.Mastercard size={ICONSIZE} />,\n        name:'Mastercard'\n    },\n    {\n        icon:<bi.Periscope size={ICONSIZE} />,\n        name:'Periscope'\n    },\n    {\n        icon:<bi.PlayStore size={ICONSIZE} />,\n        name:'PlayStore'\n    },\n    {\n        icon:<bi.Slack size={ICONSIZE} />,\n        name:'Slack'\n    },\n    {\n        icon:<bi.Soundcloud size={ICONSIZE} />,\n        name:'Soundcloud'\n    },\n    {\n        icon:<fs.VideoClip size={ICONSIZE} />,\n        name:'VideoClip'\n    },\n    {\n        icon:<fs.Wand size={ICONSIZE} />,\n        name:'Wand'\n    },\n    {\n        icon:<fs.WebAsset size={ICONSIZE} />,\n        name:'WebAsset'\n    },\n    {\n        icon:<fd.ArrowsOut size={ICONSIZE} />,\n        name:'ArrowsOut'\n    },\n    {\n        icon:<fd.Checkbox size={ICONSIZE} />,\n        name:'Checkbox'\n    },\n    {\n        icon:<ho.Annotation size={ICONSIZE} />,\n        name:'Annotation'\n    },\n    {\n        icon:<ho.CurrencyDollar size={ICONSIZE} />,\n        name:'CurrencyDollar'\n    },\n    {\n        icon:<ho.Database size={ICONSIZE} />,\n        name:'Database'\n    },\n    {\n        icon:<ho.Star size={ICONSIZE} />,\n        name:'Star'\n    },\n    {\n        icon:<ho.TrendingUp size={ICONSIZE} />,\n        name:'TrendingUp'\n    },\n    {\n        icon:<hs.Fire size={ICONSIZE} />,\n        name:'Fire'\n    },\n    {\n        icon:<bs.StarFill size={ICONSIZE} />,\n        name: \"StarFill\"\n    },\n    {\n        icon:<bs.BookmarkStarFill size={ICONSIZE} />,\n        name: \"BookmarkStarFill\"\n    },\n    {\n        icon:<bs.BookFill size={ICONSIZE} />,\n        name: \"BookFill\"\n    },\n    {\n        icon:<bs.CardImage size={ICONSIZE}/>,\n        name:'CardImage'\n    },\n    {\n        icon:<bs.AlarmFill size={ICONSIZE}/>,\n        name:'AlarmFill'\n    },\n    {\n        icon:<bs.BagFill size={ICONSIZE}/>,\n        name:'BagFill'\n    },\n    {\n        icon:<bs.BasketFill size={ICONSIZE}/>,\n        name:'BasketFill'\n    },\n    {\n        icon:<bs.Basket3Fill size={ICONSIZE}/>,\n        name:'Basket3Fill'\n    },\n    {\n        icon:<bs.BellFill size={ICONSIZE}/>,\n        name:'BellFill'\n    },\n    {\n        icon:<bs.BoxSeam size={ICONSIZE}/>,\n        name:'BoxSeam'\n    },\n    {\n        icon:<bs.CalculatorFill size={ICONSIZE}/>,\n        name:'CalculatorFill'\n    },\n    {\n        icon:<bs.CalendarEventFill size={ICONSIZE}/>,\n        name:'CalendarEventFill'\n    },\n    {\n        icon:<bs.CameraFill size={ICONSIZE}/>,\n        name:'CameraFill'\n    },\n    {\n        icon:<bs.CameraVideoFill size={ICONSIZE}/>,\n        name:'CameraVideoFill'\n    },\n    {\n        icon:<bs.CapslockFill size={ICONSIZE}/>,\n        name:'CapslockFill'\n    },\n    {\n        icon:<bs.CartFill size={ICONSIZE}/>,\n        name:'CartFill'\n    },\n    {\n        icon:<bs.ChatLeftTextFill size={ICONSIZE}/>,\n        name:'ChatLeftTextFill'\n    },\n    {\n        icon:<bs.ChatDotsFill size={ICONSIZE}/>,\n        name:'ChatDotsFill'\n    },\n    {\n        icon:<bs.Check2All size={ICONSIZE}/>,\n        name:'Check2All'\n    },\n    {\n        icon:<bs.Check2Circle size={ICONSIZE}/>,\n        name:'Check2Circle'\n    },\n    {\n        icon:<bs.Dice5Fill size={ICONSIZE}/>,\n        name:'Dice5Fill'\n    },\n    {\n        icon:<bs.DisplayFill size={ICONSIZE}/>,\n        name:'DisplayFill'\n    },\n    {\n        icon:<bs.EmojiSmileFill size={ICONSIZE}/>,\n        name:'EmojiSmileFill'\n    },\n    {\n        icon:<bs.FileEarmarkArrowDownFill size={ICONSIZE}/>,\n        name:'FileEarmarkArrowDownFill'\n    },\n    {\n        icon:<bs.FlagFill size={ICONSIZE}/>,\n        name:'FlagFill'\n    },\n    {\n        icon:<bs.Front size={ICONSIZE}/>,\n        name:'Front'\n    },\n    {\n        icon:<bs.GearFill size={ICONSIZE}/>,\n        name:'GearFill'\n    },\n    {\n        icon:<bs.GeoAltFill size={ICONSIZE}/>,\n        name:'GeoAltFill'\n    },\n    {\n        icon:<bs.GiftFill size={ICONSIZE}/>,\n        name:'GiftFill'\n    },\n    {\n        icon:<bs.HandThumbsUpFill size={ICONSIZE}/>,\n        name:'HandThumbsUpFill'\n    },\n    {\n        icon:<bs.HeartFill size={ICONSIZE}/>,\n        name:'HeartFill'\n    },\n    {\n        icon:<bs.HouseDoorFill size={ICONSIZE}/>,\n        name:'HouseDoorFill'\n    },\n    {\n        icon:<bs.InfoCircleFill size={ICONSIZE}/>,\n        name:'InfoCircleFill'\n    },\n    {\n        icon:<bs.LayersFill size={ICONSIZE}/>,\n        name:'LayersFill'\n    },\n    {\n        icon:<bs.PlayBtnFill size={ICONSIZE}/>,\n        name:'PlayBtnFill'\n    },\n    {\n        icon:<bs.Printer size={ICONSIZE}/>,\n        name:'Printer siz'\n    },\n    {\n        icon:<bs.TelephoneFill size={ICONSIZE}/>,\n        name:'TelephoneFill'\n    },\n    {\n        icon:<bs.TrashFill size={ICONSIZE}/>,\n        name:'TrashFill'\n    },\n    {\n        icon:<bs.VolumeUpFill size={ICONSIZE}/>,\n        name:'VolumeUpFill'\n    },\n    {\n        icon:<bi.Android size={ICONSIZE} />,\n        name:'Android',\n    },\n    {\n        icon:<bi.Apple size={ICONSIZE} />,\n        name:'Apple',\n    },\n    {\n        icon:<bi.Airbnb size={ICONSIZE} />,\n        name:'Airbnb',\n    },\n    {\n        icon:<bi.FacebookCircle size={ICONSIZE} />,\n        name:'FacebookCircle',\n    },\n    {\n        icon:<bi.PlayStore size={ICONSIZE} />,\n        name:'PlayStore',\n    },\n    {\n        icon:<Email size={ICONSIZE} />,\n        name:'Email',\n    },\n    {\n        icon:<EmailOutline size={ICONSIZE} />,\n        name:'EmailOutline',\n    },\n    {\n        icon:<KakaoTalk size={ICONSIZE} />,\n        name:'KakaoTalk',\n    },\n]\n\nfunction IconTable({func, handleClose}) {\n\n    return(\n        <OverflowScrolling className='overflow-scrolling3'>\n            {\n                icons.map((item, i) => {\n                    return(\n                        <div className=\"one-icon-select\" onClick={() => {\n                            func(item.name)\n                            handleClose()\n                        }} key={i}>\n                            {item.icon}\n                        </div>\n                    )\n                })\n            }\n        </OverflowScrolling>\n    )\n}\n\nexport default IconTable\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/components/FuncImageCarousel.js",["1117","1118","1119","1120"],"import React, {useRef, useEffect, useContext} from 'react'\nimport Slider from \"react-slick\"\nimport \"slick-carousel/slick/slick.css\"\nimport \"slick-carousel/slick/slick-theme.css\"\nimport { MyContext } from '../../../../pages/Make/MakePageV2'\nimport styled from 'styled-components'\nimport {NavigateBefore, NavigateNext} from '@styled-icons/material'\n\nconst IFPHONE = 100/24;\nconst IFUPDOWN = 100/70;\nconst IFSIDE = 100/32;\n\nfunction FuncImageCarousel({content}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    const imgRef = useRef(null)\n\n    // const PrevArrow=({currentSlide,slideCount,...props})=>(\n    //     <Prev {...props} src={prevButton} className=\"slick-prev\" /> \n    // )\n\n    // const NextArrow=({currentSlide,slideCount,...props})=>(\n    //     <Next {...props} src={nextButton} className=\"slick-next\" /> \n    // )\n\n    const settings = {\n        dots: false, // 캐러셀이미지가 몇번째인지 알려주는 점을 보여줄지 정한다.\n        speed: 500, // 애미메이션의 속도, 단위는 milliseconds\n        slidesToShow: 1, // 한번에 몇개의 슬라이드를 보여줄 지\n        slidesToScroll: 1, // 한번 스크롤시 몇장의 슬라이드를 넘길지\n        nextArrow: <NavigateNext size=\"20\" />,\n        prevArrow: <NavigateBefore size=\"20\" />,\n        autoplay: true,\n        autoPlaySpeed: 5000,\t\n      };\n\n\n    const numReturn = () => {\n        if(state.isPhone){\n            return (content.image.size/IFPHONE)/2.7 + 16\n        }else if(content.layout === 3 || content.layout === 4){\n            return content.image.size/IFUPDOWN\n        }else{\n            return content.image.size/IFSIDE\n        }\n    }\n    \n    const Slide = ({im}) => {\n          return(\n              <div className=\"centera\" style={{width:`${numReturn()}vw`, height:`${imgRef.current && imgRef.current.scrollWidth * 0.56}px`}}>\n                  <img src={`${im}`} style={{width:'100%'}}/>\n              </div>\n          )\n      }\n\n    return (\n        <div ref={imgRef} className=\"slide-box\" style={{\n            borderRadius: `${content.image.border}%`, \n            width:`${numReturn()}vw`, \n            height:`${imgRef.current && imgRef.current.scrollWidth * 0.56}px`,\n            boxShadow: `${content.image.shadowValue}`\n        }} >\n            <Slider {...settings}> \n            {\n                (content.slide_img.attachment1) && <Slide im={content.slide_img.attachment1} />\n            }\n            {\n                (content.slide_img.attachment2) && <Slide im={content.slide_img.attachment2} />\n            }\n            {\n                (content.slide_img.attachment3) && <Slide im={content.slide_img.attachment3} />\n            }\n            </Slider>\n        </div>\n    )\n\n}\n\nexport default FuncImageCarousel","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/UserLandingPage/Sections/components/FuncImageCarousel.js",["1121","1122","1123"],"import React, {useRef, useEffect, useContext} from 'react'\nimport Slider from \"react-slick\"\nimport \"slick-carousel/slick/slick.css\"\nimport \"slick-carousel/slick/slick-theme.css\"\nimport { MyContext } from '../../../../pages/Make/MakePageV2'\nimport {NavigateBefore, NavigateNext} from '@styled-icons/material'\n\nconst IFPHONE = 100/24;\nconst IFUPDOWN = 100/70;\nconst IFSIDE = 100/32;\n\nfunction FuncImageCarousel({content}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    const imgRef = useRef(null)\n\n    // const PrevArrow=({currentSlide,slideCount,...props})=>(\n    //     <Prev {...props} src={prevButton} className=\"slick-prev\" /> \n    // )\n\n    // const NextArrow=({currentSlide,slideCount,...props})=>(\n    //     <Next {...props} src={nextButton} className=\"slick-next\" /> \n    // )\n\n    const settings = {\n        dots: false, // 캐러셀이미지가 몇번째인지 알려주는 점을 보여줄지 정한다.\n        speed: 500, // 애미메이션의 속도, 단위는 milliseconds\n        slidesToShow: 1, // 한번에 몇개의 슬라이드를 보여줄 지\n        slidesToScroll: 1, // 한번 스크롤시 몇장의 슬라이드를 넘길지\n        nextArrow: <NavigateNext size=\"20\" />,\n        prevArrow: <NavigateBefore size=\"20\" />,\n        autoplay: true,\n        autoPlaySpeed: 5000,\t\n      };\n\n\n    const numReturn = () => {\n        if(state.isPhone){\n            return (content.image.size/IFPHONE)/2.7 + 16\n        }else if(content.layout === 3 || content.layout === 4){\n            return content.image.size/IFUPDOWN\n        }else{\n            return content.image.size/IFSIDE\n        }\n    }\n    \n    const Slide = ({im}) => {\n          return(\n              <div className=\"centera\" style={{width:`${numReturn()}vw`, height:`${imgRef.current && imgRef.current.scrollWidth * 0.56}px`}}>\n                  <img src={`${im}`} style={{width:'100%'}}/>\n              </div>\n          )\n      }\n\n    return (\n        <div ref={imgRef} className=\"slide-box\" style={{\n            borderRadius: `${content.image.border}%`, \n            width:`${numReturn()}vw`, \n            height:`${imgRef.current && imgRef.current.scrollWidth * 0.56}px`,\n            boxShadow: `${content.image.shadowValue}`\n        }} >\n            <Slider {...settings}> \n            {\n                (content.slide_img.attachment1) && <Slide im={content.slide_img.attachment1} />\n            }\n            {\n                (content.slide_img.attachment2) && <Slide im={content.slide_img.attachment2} />\n            }\n            {\n                (content.slide_img.attachment3) && <Slide im={content.slide_img.attachment3} />\n            }\n            </Slider>\n        </div>\n    )\n\n}\n\nexport default FuncImageCarousel","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/ExamplePage/TemplateModal.js",["1124"],"import React, {useState} from 'react'\nimport { styled, Box } from '@mui/system';\nimport ModalUnstyled from '@mui/base/ModalUnstyled';\nimport {Link} from 'react-router-dom'\nimport { Input } from 'antd';\n\nconst StyledModal = styled(ModalUnstyled)`\n  position: fixed;\n  z-index: 1300;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius:10px;\n`;\n\nconst Backdrop = styled('div')`\n  z-index: -1;\n  position: fixed;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  left: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  -webkit-tap-highlight-color: transparent;\n`;\n\nconst style = {\n  width: '33vw',\n  height: '30vh',\n  bgcolor: 'rgba(255,255,255,1)',\n  border: '0px solid #000',\n  flexDirection:'column',\n  p: 2,\n  px: 4,\n  pb: 3,\n  display:'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  borderRadius:'5px',\n  position:'relative',\n  fontFamily:'Noto Sans KR'\n}\n\n\nfunction TemplateModal({open, setOpen, url}) {\n    const [alarm, setAlarm] = useState(false);\n    const [urlId, setUrlId] = useState('')\n\n    const isNotNumber = (v) => {\n        const regExp = /[a-z0-9]/g; \n        return regExp.test(v);\n    }\n\n    const onUrlChange = e => {\n        if (isNotNumber(e.nativeEvent.data)){ \n            setAlarm(false)\n            setUrlId(e.currentTarget.value);\n        }else{\n            setAlarm(true)\n            e.preventDefault(); \n            return null; \n        }\n    }\n\n    return (\n        <div>\n        <StyledModal    \n            aria-labelledby=\"unstyled-modal-title\"\n            aria-describedby=\"unstyled-modal-description\"\n            open={open}\n            onClose={() => {setOpen(!open); setUrlId('')}}\n            BackdropComponent={Backdrop}\n        >\n            <Box sx={style}>\n                <div style={{fontWeight:'700'}}>\n                    템플릿으로 페이지 제작\n                </div>\n                <div className=\"modal-title\" style={{fontSize:'17px'}}>\n                    surfee.co.kr/<input className=\"input-holder input-focus\" style={{width: '18vw', padding:'10px 15px', marginLeft: '10px', fontSize:'15px'}} placeholder=\"URL\" value={urlId} \n                    onChange={e => {\n                        onUrlChange(e);\n                    }} />\n                </div>\n                {alarm ? (\n                    <div className=\"text-alarm\">\n                        ⚠ 영문 소문자와 숫자만 사용가능합니다.\n                    </div>\n                ):(<div className=\"text-alarm\"> </div>)}\n                {/* <Input \n                    className=\"input-holder input-focus\" \n                    placeholder=\"사용할 url을 입력해주세요.\" \n                    value={urlId} \n                    onChange={e => setUrlId(e.currentTarget.value)} /> */}\n                {\n                    urlId.length === 0 ? \n\n                    <div className=\"section-add__button\" onClick={() => alert(\"사용할 url을 입력해주세요.\")}>\n                        템플릿 생성하기\n                    </div>\n                    :\n                    <Link className=\"section-add__button\" to={{\n                        pathname:`/make`,\n                        state:{\n                            template:true,\n                            templateNum:url,\n                            urlId:urlId\n                        }}}>\n                        템플릿 생성하기\n                    </Link>\n\n                }\n            </Box>\n        </StyledModal>\n        </div>\n    )\n}\n\nexport default TemplateModal\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/Customer/WhatIsSurfee.js",[],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/EditLineSection.js",["1125"],"import React, {useState, useContext} from 'react'\nimport { MyContext } from '../../../../pages/Make/MakePageV2'\nimport EditDesign from './tools/EditDesign'\nimport ElementsTable from './tools/ElementsTable'\nimport produce from 'immer';\nimport OpenCloseCustom from '../tools/Custom/OpenCloseCustom'\nimport ColorCustom from '../tools/Custom/ColorCustom'\n\nfunction EditLineSection({content, category}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    const elements = [\n        {\n            title: '구분선',\n            use:content.line.use,\n            func:() => action.setContents(produce(state.contents, draft => {\n                draft[state.secNum].line.use = !content.line.use;\n            }))\n        },\n    ]\n\n    const Lines = () => {\n        return(\n            <div className=\"center-column\">\n                <div className=\"opacity-hover hr__container\" onClick={() => {\n                    action.setContents(produce(state.contents, draft => {\n                        draft[state.secNum].line.type = 0;\n                    }))\n                }}>\n                    <hr className=\"hr_style1\" style={{borderTop:`1px solid ${content.line.color}`}} />\n                </div>\n                <div className=\"opacity-hover hr__container\" onClick={() => {\n                    action.setContents(produce(state.contents, draft => {\n                        draft[state.secNum].line.type = 1;\n                    }))\n                }}>\n                    <hr className=\"hr_style2\" style={{borderTop:`1px solid ${content.line.color}`}} />\n                </div>\n                <div className=\"opacity-hover hr__container\" onClick={() => {\n                    action.setContents(produce(state.contents, draft => {\n                        draft[state.secNum].line.type = 2;\n                    }))\n                }}>\n                    <hr className=\"hr_style3\"/>\n                    <hr className=\"hr_style3\"/>\n                </div>\n                <div className=\"opacity-hover hr__container\" onClick={() => {\n                    action.setContents(produce(state.contents, draft => {\n                        draft[state.secNum].line.type = 3;\n                    }))\n                }}>\n                    <hr className=\"hr_style4\" style={{borderTop:`1px solid ${content.line.color}`}} />\n                </div>\n                <div className=\"opacity-hover hr__container\" onClick={() => {\n                    action.setContents(produce(state.contents, draft => {\n                        draft[state.secNum].line.type = 4;\n                    }))\n                }}>\n                    <hr className=\"hr_style5\" style={{borderTop:`1px solid ${content.line.color}`}} />\n                </div>\n            </div>\n        )\n    }\n    \n    const returnTable = () => {\n        switch(category){\n            case 0:\n                // case 0은 디자인 수정\n                return(\n                    <>\n                    <ElementsTable elements={elements} />\n                    <OpenCloseCustom title=\"선\" use={content.line.use} open={state.focus === 'line'}>\n                        <ColorCustom text=\"색상\" value={content.line.color} func={e => action.setContents(produce(state.contents, draft => {\n                                draft[state.secNum].line.color = e;\n                            }))} />\n                        <Lines />\n                    </OpenCloseCustom>\n                    </>\n                )\n\n            case 1:\n                // case 1은 템플릿 변경\n                return(\n                    <>\n                        <EditDesign content={content} />\n                    </>\n                )\n\n            default:\n                <></>\n        }\n    }\n\n    return(\n        <>\n            {returnTable()}\n        </>\n    )\n}\n\nexport default EditLineSection\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/LineSection.js",["1126","1127","1128","1129"],"import React, {useContext, useState, useRef} from 'react'\nimport { motion } from 'framer-motion';\nimport { MyContext } from '../../../pages/Make/MakePageV2'\nimport AnimationDiv from './components/AnimationDiv'\nimport './LineSection.css'\nimport aa from '../../../tools/img/surfeelogo.png'\n\nfunction LineSection({content, setting}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    const returnLayout = {\n        flexDirection:`${'column'}`,\n        // paddingLeft:`${content.layout === 1 ? '30px' : content.layout === 2 ? '0px' : '30px'}`,\n        // paddingRight:`${content.layout === 1 ? '0px' : content.layout === 2 ? '30px' : '30px'}`,\n    }   \n\n    const Lines = [\n        <hr className=\"hr_style1\" style={{borderTop:`1px solid ${content.line.color}`}}/>,\n        <hr className=\"hr_style2\" style={{borderTop:`1px solid ${content.line.color}`}}/>,\n        <span className=\"hr_style3\"/>,\n        <hr className=\"hr_style4\" style={{borderTop:`1px solid ${content.line.color}`}}/>,\n        <hr className=\"hr_style5\" style={{borderTop:`1px solid ${content.line.color}`}}/>,\n    ]\n\n    return (\n        <motion.div \n            data-aos-easing=\"ease-in-back\"\n            data-aos-delay=\"200\"\n            data-aos-offset=\"0\" data-aos={content.animation} aos-duration=\"4000\"\n            style={{ width:'100%', height:'100%'}}>\n            <AnimationDiv content={content} returnLayout={returnLayout} setting={setting}>\n                {\n                    content.line.use && \n                    <div style={{width:'100%'}} onClick={() => {action.setFocus('line'); action.setCategory(0)}}>\n                        {Lines[content.line.type]}\n                    </div>\n                }\n                </AnimationDiv>\n        </motion.div>\n    )\n}\n\nexport default LineSection\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/func/FuncTopBar.js",["1130","1131","1132","1133"],"import React, {useContext} from 'react'\nimport {MyContext} from '../../../../../pages/Make/MakePageV2'\nimport { Template } from '@styled-icons/heroicons-outline'\nimport { DesignServices } from '@styled-icons/material-outlined'\nimport './EditTopBar.css'\n\nfunction FuncTopBar({category, setCategory}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    return (\n        <>\n        <div className=\"edit__top-bar\">\n            <div className=\"edit__top-bar\">\n                <div className={category === 1 ? 'edit-radios' : 'edit-radios er-clicked'} onClick={() => setCategory(0)}>\n                    기본\n                </div>\n                <div className={category === 0 ? 'edit-radios' : 'edit-radios er-clicked'} onClick={() => setCategory(1)}>\n                    디자인\n                </div>\n            </div>\n        </div>\n        </>\n    )\n}\n\nexport default FuncTopBar\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/func/TextSizeCustom.js",[],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/Custom/OnOffCustom.js",["1134","1135"],"import React from 'react'\nimport { styled } from '@mui/material/styles';\nimport Switch from '@mui/material/Switch';\nimport './OnOffCustom.css'\n\nexport const CustomSwitch = ({text, value, onChange}) => {\n  return(\n    <div className=\"switch-element\" >\n      <div className=\"switch-text\">\n          {text}\n      </div>\n      <div>\n        <div className={value ? 'custom-switch' : 'custom-switch unclicked'} onClick={onChange}>\n          <div className=\"custom-switch-thumb\" style={{left : `${value ? '30px' : '2px'}`}}></div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport const CustomSwitch2 = ({text, value, onChange}) => {\n  return(\n    <div className={value ? 'custom-switch' : 'custom-switch unclicked'} onClick={onChange}>\n      <div className=\"custom-switch-thumb\" style={{left : `${value ? '30px' : '2px'}`}}></div>\n    </div>\n  )\n}\n\nfunction OnOffCustom({text, value, func}) {\n    return (\n      <div className=\"edit-element\">\n        <div className=\"edit-element__left\">\n            {text}\n        </div>\n        <div className=\"edit-element__right\">\n            <CustomSwitch2 value={value} onChange={e => func(e)} checkedChildren=\"ON\" unCheckedChildren=\"OFF\" defaultChecked />\n        </div>\n      </div>\n    )\n}\n\nexport default OnOffCustom\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/Custom/AlignCustom.js",["1136","1137"],"import React, {useContext} from 'react'\nimport { MyContext } from '../../../../../pages/Make/MakePageV2'\nimport {AlignLeft} from '@styled-icons/fa-solid'\nimport {AlignCenter} from '@styled-icons/fa-solid'\n\nconst alignOptions = [\n    {label:<AlignLeft size=\"20\"/>, value: 'start'},\n    {label:<AlignCenter size=\"20\"/>, value: 'center'}\n]\n\nexport function EditAlignRadio({options, value, onChange}) {\n    return (\n        <div className=\"radio-container\">\n            {options.map((item, index) => {\n                return(\n                    <div className={value === item.value ? 'radio-element' : 'radio-element r-unclicked radio-hover'} onClick={() => onChange(item.value)} key={index}>\n                        {item.label}\n                    </div>\n                )\n            })}\n        </div>\n    )\n}\n\nfunction AlignCustom({value, func, all}) {\n    return (\n        <div className=\"edit-element\">\n            <div className=\"edit-element__one\" style={{flexDirection: 'column'}}>\n                <div className=\"edit-element__left\">\n                    {all ? '전체 정렬' : '정렬'}\n                </div> \n                <div className=\"radio-container\">\n                    <EditAlignRadio \n                        options={alignOptions}\n                        onChange={e => {func(e)}}\n                        value={value}\n                        />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default AlignCustom\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/Custom/ColorCustom.js",["1138","1139"],"import React, {useContext, useState, useRef} from 'react'\nimport { MyContext } from '../../../../../pages/Make/MakePageV2'\nimport { MakeContext } from '../../NewSectionMake'\nimport produce from 'immer'\nimport { ColorPicker, useColor } from \"react-color-palette\";\nimport \"react-color-palette/lib/css/styles.css\";\nimport './ColorCustom.css'\nimport {\n    ChakraProvider,\n    Popover,\n    PopoverTrigger,\n    PopoverContent,\n    PopoverBody,\n    PopoverArrow,\n    Portal,\n  } from '@chakra-ui/react'\n\n\nexport function EditColor({onChange, value}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n    const {stateC, actionC} = useContext(MakeContext) //ContextAPI로 state와 action을 넘겨받는다.\n    const [color, setColor] = useColor(\"hex\", value);\n    const [newColor, setNewColor] = useState(true);\n    \n    const closeSave = () => {\n        if(stateC.usedColors.includes(value)){\n            return\n        }else{\n            if(stateC.usedColors.length > 6){\n                actionC.setUsedColors(produce(stateC.usedColors, draft => {\n                    draft.shift()\n                    draft.push(value)\n                }))\n            }else{\n                actionC.setUsedColors(produce(stateC.usedColors, draft => {\n                    draft.push(value)\n                }))\n            }\n        }\n    }\n\n    return (\n        <ChakraProvider>\n        <div className=\"center-row\" style={{justifyContent: \"start\"}}>\n            <div className=\"color-button\" \n                style={{\n                    backgroundColor : `${state.setting.color}`, \n                    color:`${state.setting.color === '#ffffff' ? '#555C67' : 'white'}`,\n                    border: `${newColor ? ('2px solid #ffffff'): ('2px solid #6B63F7')}`,\n                }} \n                onClick={() => {\n                    setNewColor(false)\n                    onChange(`${state.setting.color}`)\n                    }}>\n                {/* <div style={{color:'rgba(255,255,255,0.8)'}}>\n                    main\n                </div> */}\n                <div>메인 색상\n                    {state.setting.color}\n                </div>\n            </div>\n                <Popover\n                    placement='right'\n                    onClose={() => {\n                        closeSave()\n                    }}>\n                <PopoverTrigger>\n                    <button className=\"color-button\" \n                        style={{\n                            backgroundColor:`${value}`, \n                            color:`${value === '#ffffff' ? '#555C67' : 'white'}`,\n                            border: `${!newColor ? ('2px solid #ffffff'): ('2px solid #6B63F7')}`,\n                        }} onClick={() => setNewColor(true)}>    \n                            새로운 색상\n                            {value}\n                    </button>\n                </PopoverTrigger>\n                <Portal>\n                <PopoverContent style={{zIndex: 100}}>\n                    <PopoverArrow />\n                    <PopoverBody>\n                        <div className=\"center-column\">\n                            <ColorPicker\n                                width={300}\n                                height={150}\n                                color={color}\n                                onChange={(e) => {\n                                    setColor(e);\n                                    onChange(e.hex);\n                                }}\n                                hideHSV\n                                alpha\n                            />\n                            <div style={{width:'95%', textAlign:'left'}}>최근에 사용한 색상</div>\n                            <div className=\"center-row\" style={{marginTop:'7px', justifyContent:'start'}}>\n                                {stateC.usedColors.map((item, index) => {\n                                    return(\n                                        <div onClick={() => {onChange(item); setColor({...color, hex:item})}} key={index}>\n                                            <div className=\"recent-color-button\" style={{backgroundColor:`${item}`}}>\n                                                \n                                            </div>\n                                            {/* <div className=\"recent-color-text\">\n                                                {item}\n                                            </div> */}\n                                        </div>\n                                    )\n                                })}\n                            </div>\n                        </div>\n                    </PopoverBody>\n                </PopoverContent>\n                </Portal>\n                </Popover>\n        </div>\n        </ChakraProvider>\n    )\n}\n\nconst ColorCustom = ({text, value, func}) => {\n    return(\n        <div className=\"edit-element\">\n            <div className=\"edit-element__one\" style={{flexDirection: 'column'}}>\n                {\n                    text && <div className=\"edit-element__left\">{text}</div>\n                }\n                <div className=\"edit-element__bottom\">\n                    <EditColor onChange={(e) => func(e)} value={value || 'white'} />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ColorCustom\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/Custom/SingleColorCustom.js",["1140","1141","1142","1143"],"import React, {useContext, useState, useRef} from 'react'\nimport { MakeContext } from '../../NewSectionMake'\nimport { MyContext } from '../../../../../pages/Make/MakePageV2'\nimport produce from 'immer'\nimport { ColorPicker, useColor } from \"react-color-palette\";\nimport \"react-color-palette/lib/css/styles.css\";\nimport './ColorCustom.css'\nimport {\n    ChakraProvider,\n    Popover,\n    PopoverTrigger,\n    PopoverContent,\n    PopoverBody,\n    PopoverArrow,\n    Portal,\n  } from '@chakra-ui/react'\n\nexport function EditColor({onChange, value}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n    const {stateC, actionC} = useContext(MakeContext) //ContextAPI로 state와 action을 넘겨받는다.\n    const [color, setColor] = useColor(\"hex\", value);\n    const popover = useRef();    \n\n    return (\n        <ChakraProvider>\n        <div className=\"center-row\" style={{justifyContent: \"center\"}}>\n            <Popover\n                    placement='right'\n                    onClose={() => {\n                        if(stateC.usedColors.includes(value)){\n                            return\n                        }else{\n                            if(stateC.usedColors.length > 5){\n                                actionC.setUsedColors(produce(stateC.usedColors, draft => {\n                                    draft.shift()\n                                    draft.push(value)\n                                }))\n                            }else{\n                                actionC.setUsedColors(produce(stateC.usedColors, draft => {\n                                    draft.push(value)\n                                }))\n                            }\n                        }\n                    }}>\n                <PopoverTrigger>\n                    <button className=\"color-button\" style={{backgroundColor:`${value}`, color:`${value === '#ffffff' ? '#555C67' : 'white'}`}}>    \n                        {value}\n                    </button>\n                </PopoverTrigger>\n                <Portal>\n                <PopoverContent style={{zIndex: 100}}>\n                    <PopoverArrow />\n                    <PopoverBody>\n                        <div className=\"center-column\">\n                            <ColorPicker\n                              width={300}\n                                height={150}\n                                color={color}\n                                onChange={(e) => {\n                                    setColor(e);\n                                    onChange(e.hex);\n                                }}\n                                hideHSV\n                                alpha\n                            />\n                            <div className=\"center-row\">\n                                {stateC.usedColors.map((item, index) => {\n                                    return(\n                                        <div onClick={() => {onChange(item); setColor({...color, hex:item})}} key={index}>\n                                            <div className=\"recent-color-button\" style={{backgroundColor:`${item}`}}>\n                                                \n                                            </div>\n                                            {/* <div className=\"recent-color-text\">\n                                                {item}\n                                            </div> */}\n                                        </div>\n                                    )\n                                })}\n                            </div>\n                        </div>\n                    </PopoverBody>\n                </PopoverContent>\n                </Portal>\n                </Popover>\n        </div>\n        </ChakraProvider>\n    )\n}\n\nconst SingleColorCustom = ({text, value, func}) => {\n    return(\n        <div className=\"edit-element\">\n            <div className=\"edit-element__one\" style={{flexDirection: 'column'}}>\n                <div className=\"edit-element__left\">{text}</div>\n                <div className=\"edit-element__bottom\">\n                    <EditColor onChange={(e) => func(e)} value={value || 'white'} />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default SingleColorCustom\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/Custom/OpenCloseCustom.js",["1144","1145","1146","1147"],"import React, {useState, useEffect, useMemo} from 'react'\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport { Tooltip, ChakraProvider } from '@chakra-ui/react'\nimport './OpenCloseCustom.css'\nimport './SelectCustom.css'\n// import Accordion from '@mui/material/Accordion';\n\nconst OpenCloseCustom = (props) => {\n  /**\n   * title, tooltip, preseen 설정 가능\n   */\n  const [open, setOpen] = useState(props.open ? true : false)\n  const [focused, setFocused] = useState(props.open)\n  const [bgc, setBgc] = useState('white')\n\n  useMemo(() => {\n    setOpen(props.open)\n    setFocused(props.open)\n    setTimeout(() => {\n      setFocused(false)\n    },2000)\n  }, [props.open])\n\n  return (\n    props.use ? ( \n    <div className=\"one-element\">\n      <div className=\"accordion\" style={{ border:`1px solid ${focused ? '#6c63ff' : 'white'}`}}>\n        <div className=\"accordion__header\" onClick={() => setOpen(!open)}>\n          <div className=\"edit-element\">\n            <ChakraProvider>\n            <div className=\"accordion__title\">\n              <div className=\"title_text\">\n                {props.title}\n              </div> \n              {\n                props.subtext && \n                <div className=\"title_subtext\">\n                  {props.subtext}\n                </div> \n              }\n            </div>\n            </ChakraProvider>\n            <div className=\"centera\" style={{justifyContent: 'flex-end'}}>\n              { open ? <ExpandMoreIcon style={{transform:'rotate(180deg)'}} /> : <ExpandMoreIcon style={{color:'gray'}} />}\n            </div>\n          </div>\n          { props.preseen && \n            <div>\n              {props.preseen}\n            </div> }\n        </div>\n        <div className=\"accordion__body\" style={{display:`${open ? 'flex' : 'none'}`}}>\n          {\n            props.tooltip && \n              <div style={{fontSize:'13px', width:'100%', textAlign:'left', paddingLeft:'10px'}}>\n                {props.tooltip}\n              </div>\n          }\n          {props.children}\n        </div>\n      </div>\n    </div>\n    ) : \n    <div className=\"one-element\">\n    <div className=\"dis-accordion\">\n      <div className=\"dis-accordion__header\">\n        <div className=\"edit-element\">\n          <ChakraProvider>\n          <div className=\"accordion__title\">\n            <div className=\"title_text\">\n              {props.title}\n            </div>      \n          </div>\n          </ChakraProvider>\n          <div className=\"centera\" style={{justifyContent: 'flex-end'}}>\n             <ExpandMoreIcon />\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  );\n}\n\nexport default OpenCloseCustom\n\n\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/Custom/RadioCustom.js",["1148","1149","1150","1151","1152","1153","1154","1155","1156","1157","1158","1159","1160","1161","1162","1163","1164","1165","1166","1167","1168","1169","1170","1171","1172","1173","1174","1175","1176","1177","1178","1179"],"import React, {useContext} from 'react'\nimport { MyContext } from '../../../../../pages/Make/MakePageV2'\nimport '../custom.css'\nimport produce from 'immer';\nimport Blay1G from '../../../../../tools/img/layoutMainDetail/base1G.png'\nimport Blay1W from '../../../../../tools/img/layoutMainDetail/base1W.png'\nimport Blay2G from '../../../../../tools/img/layoutMainDetail/base2G.png'\nimport Blay2W from '../../../../../tools/img/layoutMainDetail/base2W.png'\nimport Blay3G from '../../../../../tools/img/layoutMainDetail/base3G.png'\nimport Blay3W from '../../../../../tools/img/layoutMainDetail/base3W.png'\nimport Blay4G from '../../../../../tools/img/layoutMainDetail/base4G.png'\nimport Blay4W from '../../../../../tools/img/layoutMainDetail/base4W.png'\nimport Flay11 from '../../../../../tools/img/layoutFooter/lay1-1.png'\nimport Flay12 from '../../../../../tools/img/layoutFooter/lay1-2.png'\nimport Flay21 from '../../../../../tools/img/layoutFooter/lay2-1.png'\nimport Flay22 from '../../../../../tools/img/layoutFooter/lay2-2.png'\nimport Flay31 from '../../../../../tools/img/layoutFooter/lay3-1.png'\nimport Flay32 from '../../../../../tools/img/layoutFooter/lay3-2.png'\nimport Clay11 from '../../../../../tools/img/layoutCta/layout1W.png'\nimport Clay12 from '../../../../../tools/img/layoutCta/layout1G.png'\nimport Clay21 from '../../../../../tools/img/layoutCta/layout2W.png'\nimport Clay22 from '../../../../../tools/img/layoutCta/layout2G.png'\nimport Clay31 from '../../../../../tools/img/layoutCta/layout3W.png'\nimport Clay32 from '../../../../../tools/img/layoutCta/layout3G.png'\nimport Tlay1G from '../../../../../tools/img/layoutText/text1G.png'\nimport Tlay1W from '../../../../../tools/img/layoutText/text1W.png'\nimport Tlay23G from '../../../../../tools/img/layoutText/text23G.png'\nimport Tlay23W from '../../../../../tools/img/layoutText/text23W.png'\n\nexport function EditRadio({options, value, onChange}) {\n    return (\n        <div className=\"radio-container\">\n            {options.map((item, index) => {\n                return(\n                    <div className={value === item.value ? 'radio-element' : 'radio-element r-unclicked radio-hover'} onClick={() => onChange(item.value)} key={index}>\n                        {item.label}\n                    </div>\n                )\n            })}\n        </div>\n    )\n}\n\nexport function EditRadioLayout({content, options, value, onChange, version}){\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n    \n    switch(version){\n        case 'main':\n            return(\n                <div className=\"radio-container\">\n                    <div className={value === 1 ? 'radio-element-f' : 'radio-element-f r-unclicked radio-hover'} onClick={(e, align, contAlign) => onChange(e=1, align='start', contAlign='space-between')}>\n                        {value === 1 ? (\n                            <img src={Blay1W} />\n                        ):(\n                            <img src={Blay1G} />\n                        )}\n                    </div>\n                    <div className={value === 2 ? 'radio-element-f' : 'radio-element-f r-unclicked radio-hover'} onClick={(e, align,contAlign) => onChange(e=2, align='start', contAlign='space-between')}>\n                        {value === 2 ? (\n                            <img src={Blay2W} />\n                        ):(\n                            <img src={Blay2G} />\n                        )}\n                    </div>\n                    <div className={value === 3 ? 'radio-element-f' : 'radio-element-f r-unclicked radio-hover'} onClick={(e, align, contAlign) => {\n                        onChange(e=3, align='center', contAlign='center') \n                    }}>\n                    {value === 3 ? (\n                            <img src={Blay3W} />\n                        ):(\n                            <img src={Blay3G} />\n                        )}\n                    </div>\n                    <div className={value === 4 ? 'radio-element-f' : 'radio-element-f r-unclicked radio-hover'} onClick={(e, align, contAlign) => onChange(e=4, align='center', contAlign='center')}>\n                    {value === 4 ? (\n                            <img src={Blay4W} />\n                        ):(\n                            <img src={Blay4G} />\n                        )}\n                    </div>\n                </div>\n            )\n        case 'cta': \n            return(\n                <div className=\"radio-container\">\n                    <div className={value === 1 ? 'radio-element-b' : 'radio-element-b r-unclicked radio-hover'} onClick={(e, align, contAlign) => {\n                        onChange(e=1, align='center', contAlign='center')}} >\n                        {value === 1 ? (\n                            <img src={Clay11} />\n                        ):(\n                            <img src={Clay12} />\n                        )}\n                    </div>\n                    <div className={value === 2 ? 'radio-element-b' : 'radio-element-b r-unclicked radio-hover'} onClick={(e, align, contAlign) => {\n                        onChange(e=2, align='center', contAlign='center')}} >\n                        {value === 2 ? (\n                            <img src={Clay21} />\n                        ):(\n                            <img src={Clay22} />\n                        )}\n                    </div>\n                    <div className={value === 3 ? 'radio-element-b' : 'radio-element-b r-unclicked radio-hover'} onClick={(e, align, contAlign) => {\n                        onChange(e=3, align='center', contAlign='center')}}>\n                    {value === 3 ? (\n                            <img src={Clay31} />\n                        ):(\n                            <img src={Clay32} />\n                        )}\n                    </div>\n                </div>\n            )\n        case 'two': \n            return(\n                <div className=\"radio-container\">\n                    <div className={value === 3 ? 'radio-element-b' : 'radio-element-b r-unclicked radio-hover'} onClick={() => onChange(3)}>\n                    {value === 3 ? (\n                            <img src={Blay3W} />\n                        ):(\n                            <img src={Blay3G} />\n                        )}\n                    </div>\n                    <div className={value === 4 ? 'radio-element-b' : 'radio-element-b r-unclicked radio-hover'} onClick={() => onChange(4)}>\n                    {value === 4 ? (\n                            <img src={Blay4W} />\n                        ):(\n                            <img src={Blay4G} />\n                        )}\n                    </div>\n                </div>\n            )\n        case 'text':\n            return (\n                <div className=\"radio-container\">\n                    <div className={value === 2 ? 'radio-element-b' : 'radio-element-b r-unclicked radio-hover'} onClick={(e, align, top, bottom) => onChange(e=2, align='start', top=15, bottom=15)}>\n                    {value === 2 ? (\n                            <img className='text-layout3' src={Tlay23W} />\n                        ):(\n                            <img className='text-layout3' src={Tlay23G} />\n                        )}\n                    </div>\n                    <div className={value === 1 ? 'radio-element-b' : 'radio-element-b r-unclicked radio-hover'} onClick={(e, align, top, bottom) => onChange(e=1, align='center', top=15, bottom=15)}>\n                        {value === 1 ? (\n                            <img src={Tlay1W} />\n                        ):(\n                            <img src={Tlay1G} />\n                        )}\n                    </div>\n                </div>\n            )\n        case 'footer':\n            return (\n                <div className=\"radio-container\">\n                    <div className={value === 1 ? 'radio-element-b' : 'radio-element-b r-unclicked radio-hover'} onClick={() => onChange(1)}>\n                        {value === 1 ? (\n                            <img src={Flay12} />\n                        ):(\n                            <img src={Flay11} />\n                        )}\n                    </div>\n                    <div className={value === 2 ? 'radio-element-b' : 'radio-element-b r-unclicked radio-hover'} onClick={() => onChange(2)}>\n                        {value === 2 ? (\n                            <img src={Flay22} />\n                        ):(\n                            <img src={Flay21} />\n                        )}\n                    </div>\n                    <div className={value === 3 ? 'radio-element-b' : 'radio-element-b r-unclicked radio-hover'} onClick={() => onChange(3)}>\n                    {value === 3 ? (\n                            <img src={Flay32} />\n                        ):(\n                            <img src={Flay31} />\n                        )}\n                    </div>\n                </div>\n            )\n    }\n}\n\nexport function EditRadioButtom({options, value, onChange}) {\n    const ROUNDBORDER = 5;\n    const CIRCLEBORDER = 500;\n\n    return (\n        <div className=\"radio-container\">\n            <div className={value === 0 ? 'radio-element-b' : 'radio-element-b r-unclicked radio-hover'} onClick={() => onChange(0)}>\n                <div className=\"radio-shape box\">\n\n                </div>\n                <div className=\"radio-shape-text\">\n                    사각형\n                </div>\n            </div>\n            <div className={value === ROUNDBORDER ? 'radio-element-b' : 'radio-element-b r-unclicked radio-hover'} onClick={() => onChange(ROUNDBORDER)}>\n                <div className=\"radio-shape round\">\n\n                </div>\n                <div className=\"radio-shape-text\">\n                    라운드\n                </div>\n            </div>\n            <div className={value === CIRCLEBORDER ? 'radio-element-b' : 'radio-element-b r-unclicked radio-hover'} onClick={() => onChange(CIRCLEBORDER)}>\n                <div className=\"radio-shape circle\">\n\n                </div>\n                <div className=\"radio-shape-text\">\n                    원형\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst RadioCustom = ({text, options, value, func, button, layout, version}) => {\n    if (button === true){\n        return(\n        <div className=\"edit-element\">\n            <div className=\"edit-element__one\" style={{flexDirection: 'column'}}>\n                {text ? \n                    <div className=\"edit-element__left\">{text}</div> \n                    : \n                    <div className=\"edit-element__left\">{text}</div> \n                }\n                <div className=\"radio-container\">\n                    <EditRadioButtom\n                        options={options}\n                        onChange={e => {func(e)}}\n                        value={value}\n                        />\n                </div>\n            </div>\n        </div>\n        )\n    }else{\n        if (layout === 'on'){\n            return(\n                <>\n                 <div className=\"edit-element\">\n                    <div className=\"edit-element__one\" style={{flexDirection: 'column'}}>\n                        <div className=\"radio-container\">\n                            <EditRadioLayout \n                                options={options}\n                                onChange={(e,align,contAlign) => {func(e, align, contAlign)}}\n                                value={value}\n                                version={version}\n                            />\n                        </div>\n                    </div>\n                </div>\n                </>\n            )\n        }else{\n            return(\n            <div className=\"edit-element\">\n                <div className=\"edit-element__one\" style={{flexDirection: 'column'}}>\n                    {text ? \n                        <div className=\"edit-element__left\">{text}</div> \n                        : \n                        <div className=\"edit-element__left\">{text}</div> \n                    }\n                    <div className=\"radio-container\">\n                        <EditRadio \n                            options={options}\n                            onChange={e => {func(e)}}\n                            value={value}\n                            />\n                    </div>\n                </div>\n            </div>\n            )\n        }   \n    }\n}\n\nexport default RadioCustom\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/func/FuncYoutubeLink.js",["1180","1181","1182"],"import React, {useRef, useContext, useState} from 'react'\nimport produce from 'immer';\nimport { MyContext } from '../../../../../pages/Make/MakePageV2'\nimport '../Custom/InputCustom.css'\n\nfunction FuncYoutubeLink({content}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n    const [text, setText] = useState('')\n\n    const onChangeLink = e => {\n        e.preventDefault()\n        setText(e.target.value)\n        // action.setContents(produce(state.contents, draft => {\n        //     draft[state.secNum].video.link = e.target.value\n        // }))\n    }\n    const onYoutube = e => {\n        e.preventDefault()\n        if (text.includes('www.youtube.com')) {\n            const submitLink = text.replace('watch?v=', 'embed/');\n            action.setContents(produce(state.contents, draft => {\n                draft[state.secNum].video.link = submitLink+'?autoplay=1'+'&mute=1'\n                draft[state.secNum].image.slide = false\n                draft[state.secNum].video.use = true\n                draft[state.secNum].video.type = 'youtube'\n                draft[state.secNum].image.slide = false\n                draft[state.secNum].image.use = false \n            }))\n        }\n    }\n\n    return (\n        <>\n        <form className=\"center-row\">\n            <div className=\"centera\" style={{justifyContent:'start', marginTop:'12px'}}>\n                    <input className=\"apply-input\" type='text' placeholder=\"유튜브 링크를 입력해 주세요.\"\n                        onChange={e => setText(e.currentTarget.value)} \n                        value={text}\n                        onKeyPress={e => onYoutube(e)}\n                    >\n                    </input>\n                    <input type=\"button\" value=\"입력\" className=\"content__button\" style={{zIndex:4, marginLeft:'-65px'}} onClick={(e) => {\n                        onYoutube(e)\n                    }}/>\n                </div>\n        </form>\n        <div className=\"mid-command\"/>\n        </>\n    )\n}\n\nexport default FuncYoutubeLink\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/func/FuncSlideImg.js",[],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/func/FuncContentVideo.js",[],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/Custom/SliderCustom.js",["1183","1184","1185","1186","1187","1188","1189"],"import React, {useState, useEffect} from 'react'\nimport './SliderCustom.css'\nimport {\n  Slider,\n  SliderTrack,\n  SliderFilledTrack,\n  SliderThumb,\n  Box,\n  SliderMark,\n  ChakraProvider,\n  NumberInput,\n  NumberInputField,\n  NumberInputStepper,\n  NumberIncrementStepper,\n  NumberDecrementStepper,\n} from '@chakra-ui/react'\nimport { RamenDiningOutlined } from '@mui/icons-material';\n\nfunction SliderCustom({top, text, func, value, max}) {\n    const [range, setRange] = useState(value);\n\n    useEffect(() => {\n      setRange(value)\n    }, [value])\n\n    return (\n      <div className=\"edit-element slider__container\">\n        <div className=\"edit-element__one\" style={{flexDirection: 'column'}}>\n          <div stlye={{display: 'flex', flexDirection: 'row', alignItems: 'start', justifyContent:'start'}}>\n          {\n            top && <div className=\"slider-medium-command\">{top}</div>\n          }\n          </div>\n          <div style={{display: 'flex', flexDirection: 'row', justifyContent:'center', alignItems: 'center', width:'100%', height:'100%'}}>\n            <ChakraProvider>\n                <Slider\n                  step={1}\n                  focusThumbOnChange={false}\n                  min={0}\n                  max={max ? max : 100}\n                  value={range}\n                  onChange={e => {func(e); setRange(e)}}\n                >\n                  <SliderTrack bg='white'>\n                    <Box position='relative' right={10} />\n                    <SliderFilledTrack bg='#A89AFF' />\n                  </SliderTrack>\n                  <SliderThumb bg='linear-gradient(180deg, #9281FF 0%, #6C63FF 100%)' fontSize='sm' boxSize='26px' style={{boxShadow: '4px 4px 15px #D0CDFF'}}/>\n                </Slider>\n                {/* <NumberInput className=\"number-input\" size='md' maxW='50px' step={1} max={max ? max : 100} value={range} onChange={e => {func(e); setRange(e)}}> */}\n                <input className=\"number-input\" type=\"number\" value={range} min={1} max={max ? max : 100} onChange={e => {\n                  func(e.currentTarget.value);\n                // if(range <= max){\n                //   //   // setRange(e.currentTarget.value);\n                //   } else{\n                //     func(max)\n                //   }\n                  }}/>\n            </ChakraProvider>\n          </div>\n            {/* {\n            text && <div className=\"slider-small-command\" style={{marginLeft:'65px'}}>{text}의 세로 길이를 조절해 주세요.</div>\n            }  */}\n        </div>\n      </div>\n    )\n}\n\nexport default SliderCustom\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/func/FuncContentImg.js",["1190","1191","1192","1193"],"import React, {useRef, useState} from 'react'\nimport ourA from '../../../../../tools/img/005.png'\nimport ImageModal from '../../../../../tools/ImageModal'\n\nfunction FuncContentImg({text, value, func, removeFunc, subtext}) {\n    const [imageModalOpen, setImageModalOpen] = useState(false)\n    const photoInput = useRef();\n    const inputClick = () => {\n        photoInput.current.click();\n    };\n\n    return (\n        <div className=\"edit-element\">\n        <div className=\"top-img-div\">\n            <div style={{width:'80%'}}>\n                <div className=\"put-img-div\" \n                    onClick={inputClick}\n                    onChange={e => func(e)}\n                    id='attach'\n                    style={{backgroundImage: `url(${value === '' && (text === '목업' || text === '로고' || text === '목업1' || text === '목업2')  ? '' : value!='' ? value : ourA}`, backgroundSize:'cover', backgroundRepeat: 'no-repeat'}}\n                    >\n                    {/* <div \n                        className=\"img-remove\"\n                        onClick={ e => removeFunc(e) }\n                    >X</div> */}\n                    <input\n                        type=\"file\" \n                        accept=\"image/*\" \n                        id=\"file\" \n                        onChange={ e => func(e) }\n                        ref={photoInput}\n                        style={{display: 'none', cursor: 'pointer', objectFit:'cover'}}\n                    /> \n                    {/* <div className=\"img-command\">\n                    5MB 이하, <br />가로 1200px를 권장합니다!\n                    </div> */}\n                </div>\n            </div>\n            <div className=\"upload-div\">\n                <div className=\"insta\" onClick={() => {\n                    window.open(\n                        'https://striped-cabin-4bf.notion.site/549e0378f8024c5f9c79d432127dd974',\n                        '_blank'\n                    )\n                }}\n                style={{marginTop:'30px', width:'100%', textAlign:'center', fontSize:'13px'}}\n                >\n                    이미지 찾기가 어려우신가요?\n                </div>\n                <div className=\"upload-img-click\"\n                    onClick={inputClick}\n                    onChange={e => func(e)}\n                    id='attach'\n                    style={{marginTop:'10px'}}\n                >\n                    {\n                        value ? `${text} 수정` : `${text} 업로드`\n                    }\n                </div>\n                <div className=\"small-command\">\n                {subtext}\n                </div>\n            </div>\n        </div>\n        </div>\n    )\n}\n\nexport default FuncContentImg\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/Custom/ApplyInputCustom.js",[],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/Custom/CheckBoxCustom.js",["1194"],"import React from 'react'\nimport Checkbox from '@mui/material/Checkbox';\nimport {Check} from '@styled-icons/bootstrap';\n\nexport const EditCheckbox = ({value, func}) => {\n    return(\n        <>\n        <div className={value ? 'custom-check' : 'custom-check cc-unclicked'}>\n            <Check color='white' />\n        </div>\n        </>\n    )\n}\n\nfunction CheckboxCustom({text, value, func}) {\n    return(\n        <div className=\"element__container opacity-hover\" onClick={func}>\n            <EditCheckbox \n                value={value || false}\n                func={func}/>\n            <div className=\"element_list_text\" style={{color:`${value ? 'black' : 'var(--main-gray)'}`}}>\n                {text}\n            </div>\n        </div>\n    )\n}\n\nexport default CheckboxCustom\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/Custom/InputCustom.js",["1195","1196"],"import React from 'react'\nimport {Link45deg} from '@styled-icons/bootstrap'\nimport './InputCustom.css'\n\nfunction EditInput({value, func, placeholder, noKorean}) {\n    return (\n        <div className=\"edit-element\" style={{justifyContent:'start'}}>\n            {/* <div>\n                <Link45deg size=\"25\" />\n            </div> */}\n            <div className=\"centera\">\n                <input className=\"edit-input\" placeholder={placeholder} value={value} onChange={e => func(e.currentTarget.value)} />\n            </div>\n        </div>\n    )\n}\n\nexport function InputCustom({value, func, placeholder, text, noKorean}) {\n    const onChangeHandler = (e) => {\n        if(noKorean){\n            func(e)\n        }else{\n            func(e.currentTarget.value)\n        }\n    }\n\n    return (\n        <div className=\"edit-element\" style={{justifyContent:'start', flexDirection:'column'}}>\n            {\n                text &&\n                <div className=\"centera\" style={{justifyContent:'start'}}>\n                    {text}\n                </div>\n            }\n            <div className=\"input-centera\" style={{marginTop:`${text ? '12px' : '0px'}`, justifyContent:'start'}}>\n                <input className=\"edit-input\" placeholder={placeholder} value={value} onChange={e => onChangeHandler(e)} />\n            </div>\n        </div>\n    )\n}\n\nexport default InputCustom\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/Custom/BoxCustom.js",[],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/Custom/AnimationCustom.js",["1197","1198","1199","1200","1201","1202","1203"],"import React from 'react'\nimport RiseW from '../../../../../tools/img/animationIcon/riseUpW.png'\nimport RiseG from '../../../../../tools/img/animationIcon/riseUpG.png'\nimport FadeW from '../../../../../tools/img/animationIcon/fadeInW.png'\nimport FadeG from '../../../../../tools/img/animationIcon/fadeInG.png'\nimport {ArrowRightSquareFill, ArrowLeftSquareFill } from '@styled-icons/bootstrap'\nimport {ExpandUpRight} from '@styled-icons/fluentui-system-filled'\n\n// 애니메이션 관련 \nconst animationOptions = [\n    {label:'없음', value: 'none'},\n    {label:'떠오르기', value: 'fade-up'},\n    {label:'fade-zoom-in', value: 'fade-zoom-in'},\n    {label:'fade-right', value: 'fade-right'},\n    {label:'fade-left', value:'fade-left'},\n    {label:'zoom-in', value:'zoom-in'},\n]\n\nfunction EditAnimation({options, value, onChange}) {\n    const NONE = 'none'\n    const FADEUP = 'fade-up'\n    const FADEIN = 'fade-in'\n    const FADERIGHT = 'fade-right'\n    const FADELEFT = 'fade-left'\n    const ZOOMIN = 'zoom-in'\n\n    return (\n        <div>\n            <div className=\"radio-container\">\n                <div className={value === NONE ? 'radio-element-b' : 'radio-element-b r-unclicked'} onClick={() => onChange(NONE)}>\n                    <div className=\"radio-shape round\">\n            \n                    </div>\n                    <div className=\"radio-shape-text\">\n                        없음\n                    </div>\n                </div>\n\n                <div className={value === FADEUP ? 'radio-element-b' : 'radio-element-b r-unclicked'} onClick={() => onChange(FADEUP)}>\n                    {value === FADEUP ? (\n                    <>\n                        <img src={RiseW} />\n                        <div className=\"radio-shape-text\">\n                            떠오르기\n                        </div>\n                    </>\n                    ):(\n                        <>\n                        <img src={RiseG} />\n                        <div className=\"radio-shape-text\">\n                            떠오르기\n                        </div>\n                        </>\n                    )}\n                </div>\n\n                <div className={value === FADEIN ? 'radio-element-b' : 'radio-element-b r-unclicked'} onClick={() => onChange(FADEIN)}>\n                    {value === FADEIN ? (\n                    <>\n                        <img src={FadeW} />\n                        <div className=\"radio-shape-text\">\n                            페이드 인                           \n                        </div>\n                    </>\n                    ):(\n                        <>\n                        <img src={FadeG} />\n                        <div className=\"radio-shape-text\">\n                            페이드 인\n                        </div>\n                        </>\n                    )}\n                </div>\n            </div>\n            <div className=\"radio-container\">\n                <div className={value === FADERIGHT ? 'radio-element-b' : 'radio-element-b r-unclicked'} onClick={() => onChange(FADERIGHT)}>\n                    {value == FADERIGHT ? (\n                        <>\n                        <ArrowRightSquareFill style={{width: '28px', height: '28px'}}/>\n                        <div className=\"radio-shape-text\">\n                            페이드 R\n                        </div>\n                        </>\n                    ):(\n                        <>\n                        <ArrowRightSquareFill style={{width: '28px', height: '28px'}}/>\n                        <div className=\"radio-shape-text\">\n                            페이드 R\n                        </div>\n                        </>\n                    )}\n                </div>\n                <div className={value === FADELEFT ? 'radio-element-b' : 'radio-element-b r-unclicked'} onClick={() => onChange(FADELEFT)}>\n                {value == FADELEFT ? (\n                        <>\n                        <ArrowLeftSquareFill style={{width: '28px', height: '28px'}}/>\n                        <div className=\"radio-shape-text\">\n                            페이드 L\n                        </div>\n                        </>\n                    ):(\n                        <>\n                        <ArrowLeftSquareFill style={{width: '28px', height: '28px'}}/>\n                        <div className=\"radio-shape-text\">\n                            페이드 L\n                        </div>\n                        </>\n                    )}\n                </div>\n                <div className={value === ZOOMIN ? 'radio-element-b' : 'radio-element-b r-unclicked'} onClick={() => onChange(ZOOMIN)}>\n                {value == ZOOMIN ? (\n                        <>\n                        <ExpandUpRight style={{width: '30px', height: '30px'}}/>\n                        <div className=\"radio-shape-text\">\n                            줌 인\n                        </div>\n                        </>\n                    ):(\n                        <>\n                        <ExpandUpRight style={{width: '30px', height: '30px'}}/>\n                        <div className=\"radio-shape-text\">\n                            줌 인\n                        </div>\n                        </>\n                    )}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nconst AnimationCustom = ({options, value, func}) => {\n    return(\n            <EditAnimation \n                options={animationOptions}\n                onChange={e => {func(e)}}\n                value={value}\n            />\n\n    )\n}\n\nexport default AnimationCustom\n\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/func/FuncFaviconImg.js",[],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/tools/modal/FeatVote.js",["1204","1205","1206","1207"],"import React, {useState, useContext} from 'react'\nimport {UserContext} from '../../Router'\nimport {\n    Modal,\n    ModalOverlay,\n    ModalContent,\n    ModalHeader,\n    ModalFooter,\n    ModalBody,\n    ModalCloseButton,\n    ChakraProvider\n  } from '@chakra-ui/react'\nimport {dbService} from '../fbase'\n\nfunction FeatVote({open, setOpen}) {\n    const {state, action} = useContext(UserContext) //ContextAPI로 state와 action을 넘겨받는다.\n    const [thank, setThank] = useState(false)\n\n    const closeAfterSeconds = async (chose) => {\n\n        const body = {\n            answer:chose,\n            created:Date.now(),\n            email:state.userObj.email,\n        }\n        \n        await dbService.collection('votes').add(body)\n\n        // setTimeout(() => {\n        //     setOpen(false)\n        // },500)\n    }\n\n    return (\n        <ChakraProvider>\n            <Modal isOpen={open} onClose={setOpen(false)}>\n            <ModalOverlay />\n            <ModalContent>\n                <ModalHeader>Modal Title</ModalHeader>\n                <ModalCloseButton />\n                <ModalBody>\n                    <div className=\"ask-modal-button uphover\" onClick={() => {closeAfterSeconds('A/B테스트')}}>\n                        <div>\n                            A / B 테스트\n                        </div>\n                    </div>\n                    <div className=\"ask-modal-button uphover\" onClick={() => {closeAfterSeconds('입력')}}>\n                        <div>\n                            입력의 다양화\n                        </div>\n                    </div>\n                    <div className=\"ask-modal-button uphover\" onClick={() => {closeAfterSeconds('기타')}}>\n                        <div>\n                            기타\n                        </div>\n                    </div>\n                </ModalBody>\n            </ModalContent>\n            </Modal>            \n        </ChakraProvider>\n    )\n}\n\nexport default FeatVote\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/tools/Editor.js",[],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/VotePage/VotePage.js",["1208","1209","1210","1211","1212","1213","1214","1215"],"import React, {useState, useEffect} from 'react'\nimport NavBarV2 from '../NavAndFooter/NavBarV2'\nimport Footer from '../NavAndFooter/Footer'\nimport {Link} from 'react-router-dom'\nimport styled from 'styled-components'\nimport {ChakraProvider, Button} from '@chakra-ui/react'\nimport {dbService} from '../../tools/fbase'\nimport produce from 'immer'\nimport './VotePage.css'\nimport { Cookies } from 'react-cookie'\n\nconst cookies = new Cookies()\n\nconst TC = styled('span')`\n    color:#6c63ff\n`\nconst Left = styled('span')`\n    width:30%;\n    text-align:center;\n    font-weight:700;\n`\n\nconst Purple = styled('div')`\n    display:flex;\n    justify-content:center;\n    align-items:center;\n    width:300px;\n    padding:15px 0px;\n    background: linear-gradient(180deg, #885DF1 0%, #6610F2 100%);\n    color:white;\n    border-radius:20px;\n    margin:8px;\n`\n\nconst FEATURES = [\n    '신청폼 고도화',\n    '신청 유저 명단 엑셀 파일 추출',\n    '무료 이미지 및 아이콘 제공',\n    '위클리 페이지 콘테스트',\n]\n\nfunction VotePage({history, isLoggedIn}) {\n    const [select, setSelect] = useState([false, false, false, false])\n    const [ranks, setRanks] = useState([0,0,0,0])\n    const [update, setUpdate] = useState(false)\n\n    useEffect(() => {\n        getRanks()\n    }, [select, update])\n\n    const getRanks = async () => {\n        const votes = await dbService.collection('vote').get()\n\n        let votess = votes.docs.map(doc => {\n            return({...doc.data(), id:doc.id})\n        });\n\n        let tempRanks = [0,0,0,0];\n\n        votess.map((item, index) => {\n            item.select.map((vote, index) => {\n                if(vote){\n                    tempRanks[index] = tempRanks[index] + 1;\n                }\n            })\n        })\n        setRanks(tempRanks);\n    }\n\n    const vote = async () => {\n        if(select === [false, false, false, false]){\n            alert(\"원하시는 기능을 선택해주세요!\")\n            return\n        }\n        if(!cookies.get('featvote')){\n            const expires = new Date()\n            expires.setDate(expires.getDate() + 7)\n\n            let selectList = select.map((item, index) => {\n                if(item){\n                    return FEATURES[index]\n                }else{\n                    return ''\n                }\n            })\n\n            const body = {\n                created:Date.now(),\n                select:selectList,\n            }\n    \n            await dbService.collection('vote').add(body);\n    \n            alert(\"투표가 완료되었습니다.\");\n            \n            cookies.set('featvote', true, {\n                expires:expires\n            })\n        }else{\n            alert('기능 투표는 일주일에 한번씩만 가능해요 :)')\n        }\n        setUpdate(!update);\n    }\n\n    const returnRank = num => {\n        let top = 0;\n\n        [0,0,0,0].map((item, index) => {\n            let top = 0;\n\n            if(ranks[index] <= ranks[0]){\n                top += 1;\n            }\n            if(ranks[index] <= ranks[1]){\n                top += 1;\n            }\n            if(ranks[index] <= ranks[2]){\n                top += 1;\n            }\n            if(ranks[index] <= ranks[3]){\n                top += 1;\n            }\n            if(top === num){\n                return(\n                    <>\n                        {FEATURES[index]}\n                    </>\n                )\n            }\n            console.log(top, num)\n        })\n    }\n\n    return (\n        <div style={{width:'100%', background:'rgba(0,0,0,0.1)'}}>\n        <NavBarV2 history={history} isLoggedIn={isLoggedIn} />\n        <div className=\"center-column\" style={{padding:'100px 0px', fontFamily:'Noto Sans KR'}}>\n            <div style={{placeItems:'center', textAlign:'center', width:'100%'}}>\n                <div style={{fontSize:'1.8em', fontWeight:'700', margin:'20px'}}>\n                    <TC>Surfee</TC>에 이런 기능이 추가되면 좋겠어요!\n                </div>\n                <div>\n                    유저분들과 함께 만들어가는 <TC>Surfee</TC>!<br/>\n                    다음 업데이트에서 <TC>Surfee</TC>에 추가되면 좋을 기능을 투표해주세요.\n                </div>\n            </div>\n            <div className=\"center-column\" style={{width:'60%', marginTop:'30px'}}>\n                {/*추가*/}\n                <div style={{display:'flex', justifyContent:'center', width:'100%'}}>\n                    <div className=\"vote-one__container\" style={{marginBottom:'20px',  width:'100%', padding:'30px 30px', fontSize:'1.1em', fontWeight:'700'}}>\n                        <TC style={{marginBottom:'10px'}}>🎉3월 업데이트🎉</TC> 텍스트 에디터 기능 추가\n                    </div>\n                </div>        \n               {/*추가*/}\n                <div style={{display:'flex', flexDirection:'row', width:'100%'}}>\n                    <div className=\"vote-one__container\" style={{width:'45%', marginRight:'10px'}}>\n                        <div className=\"vote-title\">\n                            💡 현재 투표 순위 \n                        </div>\n                        <div style={{margin:'10px 0px'}}>\n                            4월 업데이트\n                        </div>\n                        <Purple>\n                            <Left style={{width: '20%'}}><span style={{color:'#FFF500'}}>1</span>등</Left>\n                            <span style={{width:'70%', textAlign:'center'}}>\n                            {\n                                FEATURES[0]\n                            }\n                            </span>\n                        </Purple>\n                        <Purple>\n                            <Left style={{width: '20%'}}><span style={{color:'#FFAC33'}}>2</span>등</Left>\n                            <span style={{width:'70%', textAlign:'center'}}>\n                            {\n                                FEATURES[1]\n                            }\n                            </span>\n                        </Purple>\n                        <Purple>\n                            <Left style={{width: '20%'}}><span style={{color:'#6AF467'}}>3</span>등</Left>\n                            <span style={{width:'70%', textAlign:'center'}}>\n                            {\n                                FEATURES[2]\n                            }\n                            </span>\n                        </Purple>\n                    </div>\n                    <div className=\"vote-one__container\" style={{width:'55%', marginLeft:'10px'}}>\n                        <div className=\"vote-title\">\n                            🔔 현재 추가 중인 기능\n                        </div>\n                        <div className=\"soft-purple__container\">\n                            <div style={{color:'white', fontWeight:'700'}}>\n                                유저분들의 가장 많은 선택을 받았어요!\n                            </div>\n                            <div className=\"soft-purple-linear\">\n                                A/B 테스트\n                            </div>\n                            <div style={{fontSize:'0.9em'}}>\n                                이게 좋을지, 저게 좋을지<br/>\n                                이제 더 이상 <strong>고민하지말고, 테스트</strong>해보세요!\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"vote-one__container\" style={{width:'calc(100% - 40px)', marginTop:'20px'}}>\n                    <div className=\"vote-title\">\n                        👉 투표하기 👈\n                    </div>\n                    <div style={{margin:'20px 0px', textAlign:'center'}}>\n                        다음 업데이트에서 <TC>Surfee</TC>에 추가되면 좋을 기능을 투표해주세요!<br/>\n                        중복으로 투표가 가능합니다.\n                    </div>\n                    <div className=\"center-row\">\n                        {\n                            [0,0,0,0].map((item, index) => {\n                                return(\n                                    <div className=\"vote-option\" onClick={() => setSelect(produce(select, draft => {\n                                        draft[index] = !draft[index];\n                                    }))} style={{border:`1px solid ${select[index] ? '#6c63ff' : 'rgba(0,0,0,0.15)'}`, color:`${select[index] ? '#6c63ff' : 'rgba(0,0,0,1)'}`}}>\n                                        {FEATURES[index]}\n                                    </div>\n                                )\n                            })\n                        }\n                        {/* <div className=\"vote-option\" onClick={() => setSelect(produce(select, draft => {\n                            draft[0] = !draft[0];\n                        }))} style={{border:`2px solid ${select[0] ? '#6c63ff' : 'rgba(0,0,0,0)'}`, color:`${select[0] ? '#6c63ff' : 'rgba(0,0,0,1)'}`}}>\n                            A/B 테스트\n                        </div>\n                        <div className=\"vote-option\" onClick={() => setSelect(produce(select, draft => {\n                            draft[1] = !draft[1];\n                        }))} style={{border:`2px solid ${select[1] ? '#6c63ff' : 'rgba(0,0,0,0)'}`, color:`${select[1] ? '#6c63ff' : 'rgba(0,0,0,1)'}`}}>\n                            신청폼 고도화\n                        </div>\n                        <div className=\"vote-option\" onClick={() => setSelect(produce(select, draft => {\n                            draft[2] = !draft[2];\n                        }))} style={{border:`2px solid ${select[2] ? '#6c63ff' : 'rgba(0,0,0,0)'}`, color:`${select[2] ? '#6c63ff' : 'rgba(0,0,0,1)'}`}}>\n                            신청 유저 명단<br/>\n                            엑셀 파일 추출\n                        </div>\n                        <div className=\"vote-option\" onClick={() => setSelect(produce(select, draft => {\n                            draft[3] = !draft[3];\n                        }))} style={{border:`2px solid ${select[3] ? '#6c63ff' : 'rgba(0,0,0,0)'}`, color:`${select[3] ? '#6c63ff' : 'rgba(0,0,0,1)'}`}}>\n                            무료 이미지<br/>\n                            및 아이콘 제공\n                        </div> */}\n                    </div>\n                    <div className=\"morphism-button\" style={{color:'#6c63ff'}} onClick={() => vote()}>\n                        투표하기\n                    </div>\n                    <div onClick={() => {\n                         window.open(\n                            'https://tally.so/r/wMZ4Yn',\n                            '_blank'\n                        )\n                    }} className=\"click-text\">\n                        다른 기능도 건의하기! →\n                    </div>\n                </div>\n                <div style={{width:'100%'}}>\n                    <div onClick={() => {\n                         window.open(\n                            'https://www.notion.so/Surfee-e2153c36197d40cdb924bab5f54d5b71',\n                            '_blank'\n                        )\n                    }} className=\"morphism-button\" style={{width:'400px', padding:'30px 30px', fontSize:'1.1em', fontWeight:'700'}}>\n                        <TC>Surfee</TC> 업데이트 로그 확인하기 >\n                    </div>\n                </div>\n            </div>\n        </div>\n        <Footer />\n        </div>\n    )\n}\n\nexport default VotePage","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/Landing/MainPageV3.js",["1216","1217","1218","1219","1220","1221","1222"],"import React, {useEffect,useRef, useState} from 'react'\nimport './old/MainPage.css'\nimport './MainPageV3.css'\nimport './MainPageV2.css'\nimport {Link} from 'react-router-dom';\nimport Footer from '../NavAndFooter/Footer'\nimport NavBarV2 from '../NavAndFooter/NavBarV2'\nimport AskLoginModal from './tools/AskLoginModal'\nimport RegisterModal from '../../components/Login/RegisterModal'\nimport ChannelTalk from '../../tools/ChannelTalk'\nimport {detect} from 'detect-browser'\nimport {isMobile} from 'react-device-detect'\nimport {LandingPageExamples} from '../ExamplePage/ExamplePage'\nimport {ExampleCard} from '../ExamplePage/ExamplePage'\nimport styled from 'styled-components'\nimport LandingTemplates from '../../components/Landing/LandingTemplates'\nimport ChoiceModal from '../../components/Landing/ChoiceModal'\nimport \"@lottiefiles/lottie-player\";\n\nimport mainpc from '../../tools/img/main/mainpc.webp';\nimport mainmobile from '../../tools/img/main/mainmobile.webp';\nimport ddaom from '../../tools/img/main/ddaom.png';\nimport vote from '../../tools/img/main/vote.png';\n\nconst Tc = styled('span')`\n    color:#6c63ff;\n`;\n\nconst FCard = styled('div')`\n    background: rgba(108, 99, 255, 0.1);\n    border: 1px solid rgba(108, 99, 255, 0.25);\n    box-sizing: border-box;\n    border-radius: 6px;\n    width:${isMobile ? '90vw' : '27vw'};\n    height:500px;\n    display:flex;\n    flex-direction:column;\n    justify-content:center;\n    align-items:center;\n    margin:20px 30px;\n    font-family:Pretendard;\n    padding:22px;\n`\n\nfunction MainPageV3({history, isLoggedIn, userObj}) {\n    const [askOpen,setAskOpen] = useState(false);\n    const [choiceOpen,setChoiceOpen] = useState(false);\n    const [registerOpen,setRegisterOpen] = useState(false);\n    const [commentory, setCommentory] = useState(0);\n\n    useEffect(() => {\n        const browser = detect();\n        if(browser.name !== 'chrome' || isMobile){\n            alert(\"본 서비스는 PC 환경과 Chrome 환경에 최적화되어있습니다.\")\n        }\n    },[])\n    \n    ChannelTalk.boot({\n        \"pluginKey\": \"e6b830bc-7731-43fa-8eea-1245d3d4fc3e\", //please fill with your plugin key\"\n    });\n\n    const SomeoneClickMoveToMake = async () => {\n\n    }\n\n    const moveWhiteButton = () => {\n        return(<div className=\"main-button__container\">\n            {\n                isMobile ? \n                <button className=\"main__button6 uphover\" onClick={() => alert('죄송합니다. Surfee는 PC 환경에서만 이용할 수 있습니다.')}>\n                    지금 바로 시작하기\n                </button>\n                :\n                isLoggedIn ? \n                <>\n                    <Link to='/response' className=\"main__button6 uphover\">\n                        지금 바로 시작하기\n                    </Link>\n                    {\n                        !isMobile && \n                        <button className=\"main__button5 uphover\" \n                            style={{padding:'18px 30px'}} \n                            onClick={() => setChoiceOpen(true)}>\n                            더 쉽게 시작하기\n                        </button>\n                    }\n                </>\n                :\n                <>\n                    <button className=\"main__button6 uphover\" onClick={() => setAskOpen(true)}>\n                        지금 바로 시작하기\n                    </button>\n                    {\n                        !isMobile && \n                        <button className=\"main__button5 uphover\" \n                            style={{padding:'18px 30px'}} \n                            onClick={() => setChoiceOpen(true)}>\n                            더 쉽게 시작하기\n                        </button>\n                    }\n                </>\n            }\n        </div>)\n    }\n    \n    const moveButton = (top) => {\n        return(<div className=\"main-button__container\">\n            {\n                isMobile ? \n                <>\n                    <button className=\"main__button4 uphover\" onClick={() => alert('죄송합니다. Surfee는 PC 환경에서만 이용할 수 있습니다.')}>\n                        시작하기\n                    </button>\n                    {/* <Link to='/surfeeintro' className=\"main__button3 uphover\">\n                        Surfee란?\n                    </Link> */}\n                </>\n                :\n                isLoggedIn ? \n                <>\n                    <Link to='/response' className=\"main__button4 uphover\">\n                        지금 바로 시작하기\n                    </Link>\n                    {\n                        !isMobile && \n                        <button className=\"main__button5 uphover\" \n                            style={{padding:'18px 30px'}} \n                            onClick={() => setChoiceOpen(true)}>\n                            더 쉽게 시작하기\n                        </button>\n                    }\n                </>\n                :\n                <>\n                    <button className=\"main__button4 uphover\" onClick={() => setAskOpen(true)}>\n                        지금 바로 시작하기\n                    </button>\n                    {\n                        !isMobile && \n                        <button className=\"main__button5 uphover\" \n                            style={{padding:'18px 30px'}} \n                            onClick={() => setChoiceOpen(true)}>\n                            더 쉽게 시작하기\n                        </button>\n                    }\n                </>\n            }\n        </div>)\n    }\n\n    const nextComment = () => {\n        if(commentory === 0){\n            setCommentory(1)\n        }else{\n            setCommentory(0)\n        }\n    }\n    \n    return (\n        <>\n        <NavBarV2 history={history} isLoggedIn={isLoggedIn} buttonOpen />\n        <div className=\"main-page-container\">\n            {\n                isMobile ?\n                <div className=\"main-page-section1\" style={{ padding:'30px 20px 0px 20px', marginTop:'50px', flexDirection:'column' }}>\n                    <div className=\"main-section-left-topbottom\" style={{color:'black', textAlign: 'left', marginTop:'10px'}}>\n                        <h1 className=\"one-section-big osb2\" style={{fontSize:'1.7em', textAlign: 'left'}}>\n                            코딩없이<br/>나만의 <Tc>홍보페이지</Tc> 만들기\n                        </h1>\n                        <span style={{fontWeight:'500', fontSize:'19px', width:'100%', marginTop:'18px'}}>\n                            당신이 원하는 대로 <br/>\n                            어떤 페이지든 커스텀 해보세요.\n                        </span>\n                    </div>\n                    <div className=\"centero\" style={{position:'relative', width:'100%', height:'50vh', marginTop:'25px'}}>\n                        <img src={mainmobile} style={{width:'100vw', position:'absolute', zIndex:0}}/>\n                        <div className=\"centero\" style={{zIndex:1, textAlign:'center', marginTop:'-60px', flexDirection:'column'}}>\n                            {moveButton('top')}\n                            <div style={{fontSize:'0.6em', marginTop:'5px'}}>\n                                현재는 베타 서비스 기간이며,<br/>모든 서비스가 <span style={{fontWeight:'700'}}>무료</span>입니다.\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                :\n                <div className=\"main-page-section1\" style={{ paddingTop:'30px', marginTop:'50px', flexDirection:'column' }}>\n                    <div className=\"main-section-left-topbottom\" style={{color:'black', marginTop:'50px'}}>\n                        <h1 className=\"one-section-big osb2\" style={{textAlign: 'center', fontSize:'1.7em'}}>\n                            코딩없이 나만의 <span className=\"font-gradient-main\">홍보페이지</span> 만들기\n                        </h1>\n                    </div>\n                    <div className=\"centero\" style={{position:'relative', width:'100%', height:'100vh', marginTop:'25px'}}>\n                        <img src={mainpc} style={{width:'80%', position:'absolute', zIndex:0}}/>\n                        <div className=\"centero\" style={{zIndex:1, textAlign:'center', marginTop:'-150px', flexDirection:'column'}}>\n                            <div style={{fontWeight:'600'}}>\n                                당신이 <Tc>원하는 대로</Tc> <br/>\n                                어떤 페이지든 커스텀 해보세요.\n                            </div>\n                            {moveButton('top')}\n                            <div style={{fontSize:'0.6em', marginTop:'2vh'}}>\n                                현재는 베타 서비스 기간이며, 모든 서비스가 <span style={{fontWeight:'700'}}>무료</span>입니다.\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            }\n            <div className=\"main-page-section1\" style={{padding:'30px 0px', flexDirection:'column'}}>\n                <div className=\"main-section-left-topbottom\" style={{color:'black', margin:'10px 0px'}}>\n                    <span className=\"one-section-big2 osb2\" style={{textAlign: 'center'}}>\n                        <span style={{color:'#6c63ff'}}>Surfee</span>로 이렇게도 만들 수 있어요\n                    </span>\n                    <span className=\"one-section-small2\" style={{textAlign: 'center', fontSize:`${isMobile ? '0.9em' : '0.6em'}`}}>\n                        아래는 실제로 Surfee를 사용한 예시예요.<br/>이미지를 클릭하여 전체 페이지를 구경해 보세요.\n                    </span>\n                </div>\n                <LandingPageExamples />\n            </div>\n            <div className=\"main-page-section1\" style={{\n                    flexDirection: \"column\", \n                    position:'relative', \n                    boxSizing:'border-box', \n                    backgroundColor:'#E8E7FF',\n                    position:'relative',\n                    height:`${isMobile ? '300px' : '400px'}`,\n                    marginTop:'10vh',\n                }}>\n                <img src={ddaom} style={{position:'absolute', left:'10vw', top:'50px', width:'120px', zIndex:'0'}} />\n                <span className=\"slide__next-button\" style={{left:'4vw'}} onClick={nextComment}>\n                    〈\n                </span>\n                <span className=\"slide__next-button\" style={{right:'4vw'}} onClick={nextComment}>\n                    〉\n                </span>\n                {\n                    commentory === 0 &&\n                    <>\n                        {\n                        isMobile ? \n                        <div style={{textAlign:'left', fontSize:'15px', zIndex:'1'}}>\n                            <div style={{fontWeight:'600', fontFamily:'Pretendard', lineHeight:'1.5rem'}}>\n                                코딩 없이 실험하고, 아이디어를 검증하고,<br/>\n                                이벤트를 구현하여 주도적으로 성과를 내는 마케터가<br/>\n                                되고 싶다면 Surfee를 추천드립니다.<br/>\n                                Surfee는 <span style={{color:'#6c63ff'}}>아이디어를 가볍고 빠르게 실행할 수 있도록<br/>\n                                도와주는 무기</span>가 되어 줄 것입니다.<br/>\n                                <br/>\n                            </div>\n                            <div style={{color:'rgba(0,0,0,0.4)', fontSize:`13px`}}>\n                                퍼블리(PUBLY), 퍼블리 멤버십 Lead marketer, 여인애\n                            </div>\n                        </div>\n                        :\n                        <div style={{textAlign:'center', fontSize:'22px', zIndex:'1'}}>\n                            <div style={{fontWeight:'600', fontFamily:'Pretendard', lineHeight:'2rem'}}>\n                                코딩 없이 실험하고, 아이디어를 검증하고, 이벤트를 구현하여<br/>\n                                주도적으로 성과를 내는 마케터가 되고 싶다면 Surfee를 추천드립니다.<br/>\n                                Surfee는 <span style={{color:'#6c63ff'}}>아이디어를 가볍고 빠르게 실행할 수 있도록 도와주는 무기</span>가 되어 줄 것입니다.<br/>\n                                <br/>\n                            </div>\n                            <div style={{color:'rgba(0,0,0,0.4)', fontSize:`20px`}}>\n                                퍼블리(PUBLY), 퍼블리 멤버십 Lead marketer, 여인애\n                            </div>\n                        </div>\n                        }\n                    </>\n                }\n                {\n                    commentory === 1 && \n                    <>\n                        {\n                        isMobile ? \n                            <div style={{textAlign:'left', fontSize:'15px', zIndex:'1'}}>\n                                <div style={{fontWeight:'600', fontFamily:'Pretendard', lineHeight:'1.5rem'}}>\n                                    스몰브랜드를 시작하는 단계에서 홈페이지를 구축한다는 게<br/>\n                                    비용과 관리에서 큰 부담이었어요.<br/>\n                                    Surfee의 <Tc>직관적인 디자인과 템플릿</Tc> 덕분에<br/>\n                                    오잔디 페이지를 쉽게 제작할 수 있었어요.<br/>\n                                    시즌별 이벤트 페이지, 신규 제품 페이지 등으로도 딱이라<br/>\n                                    <Tc>스몰브랜드를 운영하시는 분들</Tc>께 적극 추천합니다.\n                                </div>\n                                <div style={{color:'rgba(0,0,0,0.4)', fontSize:'13px', marginTop:'40px'}}>\n                                    오잔디(OhJandi), 브랜드 디렉터, 한스\n                                </div>\n                            </div>\n                            :\n                            <div style={{textAlign:'center', fontSize:'22px', zIndex:'1'}}>\n                                <div style={{fontWeight:'600', fontFamily:'Pretendard', lineHeight:'2rem'}}>\n                                스몰브랜드를 시작하는 단계에서 홈페이지를 구축한다는 게 비용과 관리에서 큰 부담이었어요.<br/>\n                                Surfee의 <Tc>직관적인 디자인과 템플릿</Tc> 덕분에 오잔디 페이지를 쉽게 제작할 수 있었어요.<br/>\n                                시즌별 이벤트 페이지, 신규 제품 페이지 등으로도 딱이라<br/>\n                                <Tc>스몰브랜드를 운영하시는 분들</Tc>께 적극 추천합니다.\n                                </div>\n                                <div style={{color:'rgba(0,0,0,0.4)', fontSize:'20px', marginTop:'40px'}}>\n                                    오잔디(OhJandi), 브랜드 디렉터, 한스\n                                </div>\n                            </div>\n                        }\n                    </>\n                }\n            </div>\n            <div className=\"main-page-section1\" style={{padding:`${isMobile ? '50px 0px' : '130px 0px'}`, flexDirection:'column'}}>\n                <div className=\"main-section-left-topbottom\" style={{color:'black', margin:'10px 0px'}}>\n                    <span className=\"one-section-big2 osb2\" style={{textAlign: 'center'}}>\n                        이런 상황에서 <Tc>Surfee</Tc>를 활용해 보세요\n                    </span>\n                    <span className=\"one-section-small2\" style={{textAlign: 'center', fontSize:`${isMobile ? '1em' : '0.6em'}`}}>\n                        상황별 템플릿을 골라 바로 제작을 시작할 수 있어요.\n                    </span>\n                </div>\n                <LandingTemplates />\n            </div>\n            <div className=\"main-page-section1\" style={{padding:'30px 0px', flexDirection:'column'}}>\n                <div className=\"main-section-left-topbottom\" style={{color:'black', margin:'15px 0px'}}>\n                    <span className=\"one-section-big2 osb2\" style={{textAlign: 'center'}}>\n                        왜 <span style={{color:'#6c63ff'}}>Surfee</span>를 써야할까요?\n                    </span>\n                </div>\n                <div style={{display:'flex', flexDirection:`${isMobile ? 'column' : 'row'}`}}>\n                    <FCard>\n                        <lottie-player\n                            autoplay\n                            loop\n                            mode=\"normal\"\n                            src=\"https://s3.amazonaws.com/cdnl.iconscout.com/lottie/premium/original/3264482.json?X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIA4VMJAKC54WWWCYMY%2F20220405%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20220405T025014Z&X-Amz-SignedHeaders=host&X-Amz-Expires=259200&X-Amz-Signature=ea14eb82c200b446efc9d05ea8493a54c8d229021800f9cc02266bb6f1b7e232\"\n                            style={{width:'90%'}}\n                        >\n                        </lottie-player>\n                        <div style={{fontSize:'28px', fontWeight:'700'}}>\n                            이보다 쉽고 빠를 수 없어요\n                        </div>\n                        <div style={{fontSize:'16px', marginTop:'20px', lineHeight:'1.5rem'}}>\n                            ✔️ 5가지 질문에 따른 맞춤형 템플릿<br/>\n                            ✔️ 완성된 템플릿 목록으로도 시작 가능<br/>\n                            ✔️ PC/모바일 하나만 만들면 나머지가 자동으로!\n                        </div>\n                    </FCard>\n                    <FCard>\n                        <lottie-player\n                            autoplay\n                            loop\n                            mode=\"normal\"\n                            src=\"https://s3.amazonaws.com/cdnl.iconscout.com/lottie/premium/original/3264485.json?X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIA4VMJAKC54WWWCYMY%2F20220405%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20220405T025018Z&X-Amz-SignedHeaders=host&X-Amz-Expires=259200&X-Amz-Signature=b7a206467d98ee79249126cd4bd5037c505373d3678d755536a44213a3cba89c\"\n                            style={{width:'90%'}}\n                        >\n                        </lottie-player>\n                        <div style={{fontSize:'28px', fontWeight:'700'}}>\n                            새로운 방식의 신청폼\n                        </div>\n                        <div style={{fontSize:'16px', marginTop:'20px', lineHeight:'1.5rem'}}>\n                            ✔️ 글만 쓰기는 아쉽지 않나요?<br/>\n                            ✔️ 이미지, 동영상, FAQ등 자유로운 신청폼!<br/>\n                            ✔️ 신청폼으로 받은 목록도 실시간으로 확인하세요.\n                        </div>\n                    </FCard>\n                    <FCard>\n                        <lottie-player\n                            autoplay\n                            loop\n                            mode=\"normal\"\n                            src=\"https://s3.amazonaws.com/cdnl.iconscout.com/lottie/premium/original/3264479.json?X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIA4VMJAKC54WWWCYMY%2F20220405%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20220405T025022Z&X-Amz-SignedHeaders=host&X-Amz-Expires=259200&X-Amz-Signature=faf2e00d13c282551059216c032ceb407ef10fd2a1f333e519ba911a4751f013\"\n                            style={{width:'90%'}}\n                        >\n                        </lottie-player>\n                        <div style={{fontSize:'28px', fontWeight:'700'}}>\n                            데이터 한눈에 확인하기\n                        </div>\n                        <div style={{fontSize:'16px', marginTop:'20px', lineHeight:'1.5rem'}}>\n                            ✔️ 구글 애널리틱스? Surfee면 충분해요.<br/>\n                            ✔️ 유입 수, 클릭 수, 전환율 등 핵심만 딱!<br/>\n                            ✔️ 폼으로 받은 신청 목록을 엑셀로 다운받으세요.\n                        </div>\n                    </FCard>\n                </div>\n            </div>\n            {\n                isMobile ? \n                <div className=\"main-page-section1 back-image-fit\" style={{ color:'white', background:'linear-gradient(180deg, #B0A4FF 0%, #6C63FF 100%)', flexDirection: \"column\", padding:'50px 0px'}}>\n                    <span className=\"one-section-big osb2\" style={{textAlign:'center'}}>\n                        코딩 없이 나만의 홍보페이지 만들기,<br/>\n                        Surfee와 함께 지금 바로 시작하세요!\n                    </span>\n                    {moveWhiteButton()}\n                    <div style={{fontSize:'0.7em', marginTop:'1.5vh', zIndex:'2'}}>\n                        현재는 베타 서비스 기간이며, 모든 서비스가 <span style={{fontWeight:'700'}}>무료</span>입니다.\n                    </div>\n                </div>\n                :\n                <div className=\"main-page-section1 back-image-fit\" style={{ color:'white', background:'linear-gradient(180deg, #B0A4FF 0%, #6C63FF 100%)', flexDirection: \"column\", padding:'90px 0px'}}>\n                    <span className=\"one-section-big osb2\" style={{textAlign:'center'}}>\n                        코딩 없이 나만의 홍보페이지 만들기,<br/>\n                        Surfee와 함께 지금 바로 시작하세요!\n                    </span>\n                    {moveWhiteButton()}\n                    <div style={{fontSize:'0.7em', marginTop:'3.5vh', zIndex:'2'}}>\n                        현재는 베타 서비스 기간이며, 모든 서비스가 <span style={{fontWeight:'700'}}>무료</span>입니다.\n                    </div>\n                </div>\n            }\n            <div className=\"main-page-section1\">\n                {\n                    !isMobile &&\n                    <div className=\"main-section-right\">              \n                        <img src={vote} className=\"section-image\" />\n                    </div>\n                }\n                {\n                    isMobile ?\n                    <div className=\"main-section-left\">\n                        <span className=\"one-section-big\" style={{marginTop:'30px', fontSize:'26px', textAlign:'left'}}>\n                            <span style={{color:'#6c63ff'}}>Surfee</span>가 나아갈 방향을<br/> 함께 정해주세요\n                        </span>\n                        <span className=\"one-section-small\" style={{fontSize:'14px', marginTop:'15px', textAlign:'left'}}>\n                            Surfee의 소중한 유저분들의 의견을 바탕으로<br/>\n                            앞으로 업데이트 할 기능을 정하고자 합니다.<br/>\n                            추가되었으면 하는 기능에 투표해 주세요 🗳\n                        </span>\n                        <button onClick={() => alert('죄송합니다. 해당 페이지는 PC로 접속하셔야 이용가능합니다.')} className=\"main__button5 uphover\" style={{marginTop:'20px'}}>\n                            투표하러 가기\n                        </button>\n                    </div>\n                    :\n                    <div className=\"main-section-left\">\n                        <span className=\"one-section-big\" style={{marginTop:'30px', fontSize:'32px'}}>\n                            <span style={{color:'#6c63ff'}}>Surfee</span>가 나아갈 방향을 함께 정해주세요\n                        </span>\n                        <span className=\"one-section-small\" style={{fontSize:'18px', marginTop:'15px'}}>\n                            Surfee의 소중한 유저분들의 의견을 바탕으로<br/>\n                            앞으로 업데이트 할 기능을 정하고자 합니다.<br/>\n                            추가되었으면 하는 기능에 투표해 주세요 🗳\n                        </span>\n                        <Link to='/vote' className=\"main__button5 uphover\" style={{marginTop:'20px'}}>\n                            투표하러 가기\n                        </Link>\n                    </div>\n                }\n            </div>\n            <div className=\"main-page-section1\" style={{ color:'white', flexDirection: \"column\"}}>\n                <div style={{width:'84%', height:'90%', backgroundColor:'#6c63ff33', borderRadius:'6px', color:'black', padding:'50px 0px', textAlign:'center'}}>\n                    {\n                        isMobile ?\n                        <span className=\"one-section-big osb2\" style={{textAlign:'center', fontSize:'1.2em'}}>\n                            Surfee와 Surfee를 만든 사람들이<br/> 궁금하신가요?<br/>\n                        </span>\n                        :\n                        <span className=\"one-section-big osb2\" style={{textAlign:'center', fontSize:'1.2em'}}>\n                            Surfee와 Surfee를 만든 사람들이 궁금하신가요?<br/>\n                        </span>\n                    }\n                    <div style={{marginTop:'30px', fontSize:'0.8em'}}>\n                        저희의 이야기를 읽고, 당신의 이야기도 들려주세요.\n                    </div>\n                    <div className=\"underline-hover\" onClick={() => {\n                        window.open(\n                            'https://striped-cabin-4bf.notion.site/Surfee-903d24edba264a9e9a8245803f11db11',\n                            '_blank'\n                        )\n                    }} style={{fontSize:'0.7em', marginTop:'3.5vh', zIndex:'2', color:'#6c63ff'}}>\n                        > Surfee에 대해서 자세히 알아보기\n                    </div>\n                </div>\n            </div>\n            <div className=\"main-page-section1\" style={{ color:'white', flexDirection: \"column\", padding:'10px 0px 5% 0px'}}>\n                <div style={{width:'84%', height:'90%', color:'black', padding:'10px 0px', textAlign:'left'}}>\n                    <div className=\"one-section-big osb2\" style={{textAlign:'left', fontSize:'1.2em', marginBottom:'50px'}}>\n                        자주 묻는 질문\n                    </div>\n                    <div style={{fontSize:'0.6em'}}>\n                        <div style={{borderBottom:'1px solid rgba(0,0,0,0.3)'}}>\n                            <div className=\"main-q\">\n                                정말 무료인가요?\n                            </div>\n                            <div className=\"main-a\">\n                                네, <span style={{color:'rgba(255,0,0,1)'}}>완전 무료</span>입니다!<br/>\n                                현재 베타 서비스이기 때문에 금액적인 비용 대신, Surfee를 빠르게 개선해서 \n                                더 좋은 퀄리티의 서비스로 여러분에게 도움이 되고자 <span style={{color:'#6c63ff'}}>첫 배포 시 ‘피드백'</span>을 배포 비용으로 받고 있습니다. \n                                여러분의 정성스러운 피드백을 바탕으로 빠르게 업데이트 해오겠습니다. 유료 버전 추가 시 미리 안내 메일을 드리고, \n                                쿠폰도 함께 드릴 예정이니 지금은 편하게 맘껏 써주세요 :)\n                            </div>\n                        </div>\n                        <div style={{borderBottom:'1px solid rgba(0,0,0,0.3)'}}>\n                            <div className=\"main-q\">\n                                개인 도메인을 연결하고 싶어요.\n                            </div>\n                            <div className=\"main-a\">\n                                아쉽게도 현재는 불가능하지만, 꼭 업데이트 하고자 하는 기능입니다. 빠른 시일 내에 업데이트 할 수 있도록 노력하겠습니다.\n                                개발자가 열심히 방법을 찾고 있는 중인데, 혹시 작은 도움이라도 주실 수 있다면 연락 부탁드려요 😊\n                            </div>\n                        </div>\n                        <div style={{borderBottom:'1px solid rgba(0,0,0,0.3)'}}>\n                            <div className=\"main-q\">\n                                팀원들과 페이지 수정 및 데이터 확인을 공유할 수 없을까요?\n                            </div>\n                            <div className=\"main-a\">\n                                ‘이 템플릿 공유하기' 기능을 통해서 페이지를 복제하여 추가로 수정할 수는 있지만, 실시간으로 동시에 수정할 수는 없습니다. 또한 한 페이지에 공유 링크는 하나뿐이며, 실시간 수정이 반영됩니다. 공유하기 버튼을 누른 시점 버전으로 공유되는 것이 아니니 유의해 주세요.\n                                공유를 원하신다면 팀 공동 계정으로 페이지를 만들어 수정 및 데이터 확인을 하실 수 있습니다. 한 계정에서 동시에 수정하면 오류가 있을 수 있으니 주의해 주세요.\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <Footer />\n        <ChoiceModal open={choiceOpen} setOpen={setChoiceOpen} />\n        <AskLoginModal open={askOpen} setOpen={setAskOpen} SomeoneClickMoveToMake={SomeoneClickMoveToMake} registerOpen={registerOpen} setRegisterOpen={setRegisterOpen}/>\n        <RegisterModal open={registerOpen} setOpen={setRegisterOpen} />\n        {/* <RegisterModal open={loginOpen} setOpen={setLoginOpen} /> */}\n        </>\n    )\n}\n\nexport default MainPageV3","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Landing/LandingTemplates.js",["1223"],"import React, {useState} from 'react'\nimport mainpc from '../../tools/img/main/mainpc.webp';\nimport {isMobile} from 'react-device-detect'\nimport styled from 'styled-components'\nimport {ExampleCard} from '../../pages/ExamplePage/ExamplePage'\nimport m1 from '../../tools/img/example/m1.webp'\nimport m2 from '../../tools/img/example/m2.webp'\nimport s1 from '../../tools/img/example/s1.webp'\nimport s2 from '../../tools/img/example/s2.webp'\nimport p1 from '../../tools/img/example/p1.webp'\nimport p2 from '../../tools/img/example/p2.webp'\nimport c1 from '../../tools/img/example/c1.webp'\nimport c2 from '../../tools/img/example/c2.webp'\nimport TemplateModal from '../../pages/ExamplePage/TemplateModal.js'\nimport {ExampleCardInTemplate} from '../../pages/ExamplePage/ExamplePage.js'\n\nconst For = styled('div')`\n    font-family: 'Pretendard';\n    font-style: normal;\n    font-weight: 700;\n    font-size: ${isMobile ? '1em' : '24px'};\n    line-height: 24px;\n    color:#6c63ff;\n`;\n\nconst Ment = styled('div')`\n    font-family: 'Pretendard';\n    font-style: normal;\n    font-weight: 700;\n    font-size: ${isMobile ? '1.4em' : '32px'};\n    line-height: 38px;\n    color: rgba(0, 0, 0, 0.9);\n    margin-top:5px;\n    position:relative;\n`;\n\nconst MentDesc = styled('div')`\n    font-family: 'Pretendard';\n    font-style: normal;\n    font-weight: 500;\n    font-size: ${isMobile ? '0.8em' : '18px'};\n    line-height: 28px;\n    margin-top:${isMobile ? '8px' : '20px'};\n`;\n\nconst TempMove = styled('div')`\n    color:#6c63ff;\n    font-family: 'Pretendard';\n    font-style: normal;\n    font-weight: 400;\n    font-size: ${isMobile ? '0.8em' : '18px'};\n    line-height: 22px;\n    cursor:pointer;\n    margin-top:20px;\n`;\n\nfunction LandingTemplates() {\n    const [makeModal, setMakeModal] = useState(false);\n    const [url, setUrl] = useState('');\n\n    return (\n        <>\n        {\n            isMobile ? <>\n            <div className='center-column' style={{margin:'30px 10px'}}>\n                <div style={{width:'90vw'}}>\n                    <For> for 마케터 </For>\n                    <Ment>\n                        \"아... 개발팀 바쁘시군요...\"\n                        {/* <div style={{backgroundColor:'#6c63ff', position:'absolute', width:'150px', height:'30px', top:'0px'}}>\n                        </div> */}\n                    </Ment>\n                    <MentDesc>\n                        도전적인 아이디어를 빠르게 검증해보고 싶은데<br/>\n                        다른 팀의 리소스를 끌어다 쓰기에는 확신이 없을 때,<br/>\n                        Surfee로 가볍고 빠르게 도전해 보세요.<br/>\n                    </MentDesc>\n                    <TempMove className=\"underline-hover\" onClick={() => {\n                        window.open(\n                            'https://surfee.co.kr/surfeeexamples'\n                        )\n                    }}>\n                        > 이벤트/마케팅용 템플릿 더 보러가기\n                    </TempMove>\n                </div>\n                <div style={{marginLeft:'10px', marginTop:'10px', display:'flex', flexDirection:'row', width:`${isMobile ? '100%' : ''}`}}>\n                    <ExampleCard title=\"Mercury\" url=\"mercurysurfeeex\" img={m1} />\n                    {\n                        !isMobile &&\n                        <ExampleCard title=\"Data\" url=\"datasurfeeex\" img={m2} />\n                    }\n                </div>\n            </div>\n            <div className='center-column' style={{margin:'30px 10px'}}>\n                <div style={{width:'90vw'}}>\n                    <For> for 예비 창업가 </For>\n                    <Ment>\n                        \"이 아이디어로 창업해도 될까?\"\n                        {/* <div style={{backgroundColor:'#6c63ff', position:'absolute', width:'150px', height:'30px', top:'0px'}}>\n                        </div> */}\n                    </Ment>\n                    <MentDesc>\n                        스타트업 실패 이유 1위, ‘No Market Need’!<br/>\n                        제품/서비스를 출시했는데 고객이 없다면 큰일이겠죠?<br/>\n                        제품/서비스 제작 전 랜딩페이지로 잠재 고객을 확인하고<br/>\n                        아이디어에 확신을 갖고 창업에 도전하세요.\n                    </MentDesc>\n                    <TempMove className=\"underline-hover\" onClick={() => {\n                        window.open(\n                            'https://surfee.co.kr/surfeeexamples'\n                        )\n                    }}>\n                        > 고객 검증용 템플릿 더 보러가기\n                    </TempMove>\n                </div>\n                <div style={{marginLeft:'10px', marginTop:'10px', display:'flex', flexDirection:'row', width:'100%'}}>\n                    <ExampleCard title=\"Code Note\" url=\"codenotesurfeeex\" img={s2} />\n                    {\n                        !isMobile &&\n                        <ExampleCard title=\"Cakehouse\" url=\"cakehousesurfeeex\" img={s1} />\n                    }\n                </div>\n            </div>\n            <div className='center-column' style={{margin:'30px 10px'}}>\n                <div style={{width:'90vw'}}>\n                    <For> for 1인 사업가 </For>\n                    <Ment>\n                        \"고객을 어떻게 모으지?\"\n                        {/* <div style={{backgroundColor:'#6c63ff', position:'absolute', width:'150px', height:'30px', top:'0px'}}>\n                        </div> */}\n                    </Ment>\n                    <MentDesc>\n                        글로만 설명할 수 있는 신청폼이 아쉽지 않나요?<br/>\n                        다양한 컨텐츠를 이용하여 제품/서비스를 설명하고<br/>\n                        간단한 신청폼으로 고객을 모아보세요.<br/>\n                        신청 목록도 손쉽게 확인 가능하답니다!\n                    </MentDesc>\n                    <TempMove className=\"underline-hover\" onClick={() => {\n                        window.open(\n                            'https://surfee.co.kr/surfeeexamples'\n                        )\n                    }}>\n                        > 고객 모집용 템플릿 더 보러가기\n                    </TempMove>\n                </div>\n                <div style={{marginLeft:'10px', marginTop:'10px', display:'flex', flexDirection:'row', width:'100%'}}>\n                    <ExampleCard title=\"Home Bar\" url=\"homebarsurfeeex\" img={c1} />\n                    {\n                        !isMobile &&\n                        <ExampleCard title=\"Fillom\" url=\"fillomsurfeeex\" img={c2} />\n                    }\n                </div>\n            </div>\n            <div className='center-column' style={{margin:'30px 10px'}}>\n                <div style={{width:'90vw'}}>\n                    <For> for 퍼스널 브랜딩 </For>\n                    <Ment>\n                        \"나를 어떻게 잘 알리지?\"\n                        {/* <div style={{backgroundColor:'#6c63ff', position:'absolute', width:'150px', height:'30px', top:'0px'}}>\n                        </div> */}\n                    </Ment>\n                    <MentDesc>\n                        나만의 페이지를 만들어 자신을 알려보세요.<br/>\n                        포트폴리오도, 가벼운 자기소개 페이지도 좋아요.<br/>\n                        링크 하나면 PC에서도, 모바일에서도<br/>\n                        나의 페이지를 공유할 수 있어요!\n                    </MentDesc>\n                    <TempMove className=\"underline-hover\" onClick={() => {\n                        window.open(\n                            'https://surfee.co.kr/surfeeexamples'\n                        )\n                    }}>\n                        > 포트폴리오용 템플릿 더 보러가기\n                    </TempMove>\n                </div>\n                <div style={{marginLeft:'10px', marginTop:'10px', display:'flex', flexDirection:'row', width:'100%'}}>\n                    <ExampleCard title=\"포트폴리오 1\" url=\"port1surfeeex\" img={p2} />\n                    {\n                        !isMobile &&\n                        <ExampleCard title=\"포트폴리오 2\" url=\"port3surfeeex\" img={p1} />\n                    }\n                </div>\n            </div>\n            </>\n            :\n            <>\n            <div className={isMobile ? 'center-column' : 'center-row'} style={{margin:`${isMobile ? '30px 10px':'100px 10px'}`}}>\n                <div style={{width:`${isMobile ? '90vw' : '30vw'}`}}>\n                    <For> for 마케터 </For>\n                    <Ment>\n                        <span className=\"back-line\"></span>\"아... 개발팀 바쁘시군요...\"\n                        {/* <div style={{backgroundColor:'#6c63ff', position:'absolute', width:'150px', height:'30px', top:'0px'}}>\n                        </div> */}\n                    </Ment>\n                    <MentDesc>\n                        도전적인 아이디어를 빠르게 검증해보고 싶은데<br/>\n                        다른 팀의 리소스를 끌어다 쓰기에는 확신이 없을 때,<br/>\n                        Surfee로 가볍고 빠르게 도전해 보세요.<br/>\n                    </MentDesc>\n                    <TempMove className=\"underline-hover\" onClick={() => {\n                        window.open(\n                            'https://surfee.co.kr/surfeeexamples'\n                        )\n                    }}>\n                        > 이벤트/마케팅용 템플릿 더 보러가기\n                    </TempMove>\n                </div>\n                <div style={{marginLeft:'10px', display:'flex', flexDirection:'row', width:`${isMobile ? '100%' : ''}`}}>\n                    <ExampleCardInTemplate setUrl={setUrl} setMakeModal={setMakeModal} title=\"Mercury\" url=\"mercurysurfeeex\" img={m1} />\n                    {\n                        !isMobile &&\n                        <ExampleCardInTemplate setUrl={setUrl} setMakeModal={setMakeModal} title=\"Data\" url=\"datasurfeeex\" img={m2} />\n                    }\n                </div>\n            </div>\n            <div className={isMobile ? 'center-column' : 'center-row'} style={{margin:'100px 10px'}}>\n                <div style={{marginLeft:'10px', display:'flex', flexDirection:'row', width:`${isMobile ? '100%' : ''}`}}>\n                    <ExampleCardInTemplate setUrl={setUrl} setMakeModal={setMakeModal} title=\"CODE NOTE\" url=\"codenotesurfeeex\" img={s2} />\n                    {\n                        !isMobile &&\n                        <ExampleCardInTemplate setUrl={setUrl} setMakeModal={setMakeModal} title=\"Cakehouse\" url=\"cakehousesurfeeex\" img={s1} />\n                    }\n                </div>\n                <div style={{width:`${isMobile ? '90vw' : '30vw'}`, paddingLeft:'30px'}}>\n                    <For> for 예비 창업가 </For>\n                    <Ment>\n                        \"이 아이디어로 창업해도 될까?\"\n                        {/* <div style={{backgroundColor:'#6c63ff', position:'absolute', width:'150px', height:'30px', top:'0px'}}>\n                        </div> */}\n                    </Ment>\n                    <MentDesc>\n                        스타트업 실패 이유 1위, ‘No Market Need’!<br/>\n                        제품/서비스를 출시했는데 고객이 없다면 큰일이겠죠?<br/>\n                        제품/서비스 제작 전 랜딩페이지로 잠재 고객을 확인하고<br/>\n                        아이디어에 확신을 갖고 창업에 도전하세요.\n                    </MentDesc>\n                    <TempMove className=\"underline-hover\" onClick={() => {\n                        window.open(\n                            'https://surfee.co.kr/surfeeexamples'\n                        )\n                    }}>\n                        > 고객 검증용 템플릿 더 보러가기\n                    </TempMove>\n                </div>\n            </div>\n            <div className={isMobile ? 'center-column' : 'center-row'} style={{margin:'100px 10px'}}>\n                <div style={{width:`${isMobile ? '90vw' : '30vw'}`}}>\n                    <For> for 1인 사업가 </For>\n                    <Ment>\n                        \"고객을 어떻게 모으지?\"\n                        {/* <div style={{backgroundColor:'#6c63ff', position:'absolute', width:'150px', height:'30px', top:'0px'}}>\n                        </div> */}\n                    </Ment>\n                    <MentDesc>\n                        글로만 설명할 수 있는 신청폼이 아쉽지 않나요?<br/>\n                        다양한 컨텐츠를 이용하여 제품/서비스를 설명하고<br/>\n                        간단한 신청폼으로 고객을 모아보세요.<br/>\n                        신청 목록도 손쉽게 확인 가능하답니다!\n                    </MentDesc>\n                    <TempMove className=\"underline-hover\" onClick={() => {\n                        window.open(\n                            'https://surfee.co.kr/surfeeexamples'\n                        )\n                    }}>\n                        > 고객 모집용 템플릿 더 보러가기\n                    </TempMove>\n                </div>\n                <div style={{marginLeft:'10px', display:'flex', flexDirection:'row', width:`${isMobile ? '100%' : ''}`}}>\n                    <ExampleCardInTemplate setUrl={setUrl} setMakeModal={setMakeModal} title=\"Home Bar\" url=\"homebarsurfeeex\" img={c1} />\n                    {\n                        !isMobile &&\n                        <ExampleCardInTemplate setUrl={setUrl} setMakeModal={setMakeModal} title=\"Fillom\" url=\"fillomsurfeeex\" img={c2} />\n                    }\n                </div>\n            </div>\n            <div className={isMobile ? 'center-column' : 'center-row'} style={{margin:'100px 10px'}}>\n                <div style={{marginLeft:'10px', display:'flex', flexDirection:'row', width:`${isMobile ? '100%' : ''}`}}>\n                    <ExampleCardInTemplate setUrl={setUrl} setMakeModal={setMakeModal} title=\"포트폴리오 1\" url=\"port1surfeeex\" img={p2} />\n                    {\n                        !isMobile &&\n                        <ExampleCardInTemplate setUrl={setUrl} setMakeModal={setMakeModal} title=\"포트폴리오 2\" url=\"port3surfeeex\" img={p1} />\n                    }\n                </div>\n                <div style={{width:`${isMobile ? '90vw' : '30vw'}`, paddingLeft:'30px'}}>\n                    <For> for 퍼스널 브랜딩 </For>\n                    <Ment>\n                        \"나를 어떻게 잘 알리지?\"\n                        {/* <div style={{backgroundColor:'#6c63ff', position:'absolute', width:'150px', height:'30px', top:'0px'}}>\n                        </div> */}\n                    </Ment>\n                    <MentDesc>\n                        나만의 페이지를 만들어 자신을 알려보세요.<br/>\n                        포트폴리오도, 가벼운 자기소개 페이지도 좋아요.<br/>\n                        링크 하나면 PC에서도, 모바일에서도<br/>\n                        나의 페이지를 공유할 수 있어요!\n                    </MentDesc>\n                    <TempMove className=\"underline-hover\" onClick={() => {\n                        window.open(\n                            'https://surfee.co.kr/surfeeexamples'\n                        )\n                    }}>\n                        > 포트폴리오용 템플릿 더 보러가기\n                    </TempMove>\n                </div>\n            </div>\n            </>\n        }\n        <TemplateModal url={url} open={makeModal} setOpen={setMakeModal} />\n        </>\n    )\n}\n\nexport default LandingTemplates\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/Sourcing/SourcingPage.js",["1224","1225","1226","1227","1228"],"import React, {useState, useEffect} from 'react'\nimport NavBarV2 from '../NavAndFooter/NavBarV2'\nimport Footer from '../NavAndFooter/Footer'\nimport './SourcingPage.css'\nimport \"@lottiefiles/lottie-player\";\nimport ribon from '../../tools/img/ribon.png'\nimport ch from '../../tools/img/sourcing/ch.png'\nimport mc from '../../tools/img/sourcing/mc.png'\nimport kmong from '../../tools/img/sourcing/kmong.png'\nimport {ExampleCard} from '../ExamplePage/ExamplePage'\nimport ChannelTalk from '../../tools/ChannelTalk'\nimport time from '../../tools/img/sourcing/time.svg'\nimport strategy from '../../tools/img/sourcing/strategy.svg'\nimport support from '../../tools/img/sourcing/support.svg'\nimport currency from '../../tools/img/sourcing/currency.svg'\nimport car from '../../tools/img/sourcing/car.gif'\n\nfunction SourcingPage({history, isLoggedIn}) {\n\n    ChannelTalk.boot({\n        \"pluginKey\": \"e6b830bc-7731-43fa-8eea-1245d3d4fc3e\", //please fill with your plugin key\"\n    });\n\n    const FCard = ({img, text}) => {\n        return(\n            <div style={{borderRadius:'6px', background:'white', width:'220px', height:'220px', margin:'20px', boxShadow:'6px 6px 15px rgba(0,0,0,0.25)'}}>\n                <div className=\"centero\" style={{width:'100%', height:'80%'}}>\n                    <img src={img} style={{width:'60%'}} />\n                </div>\n                <div style={{fontSize:'0.8em', textAlign:'center', height:'20%', fontWeight:'700'}}>\n                    {text}\n                </div>\n            </div>\n        )\n    }\n\n    return (\n        <div>\n        <NavBarV2 history={history} isLoggedIn={isLoggedIn} />\n        <div className=\"sourcing__container\">\n            <div className=\"fab__container\">\n                <button className=\"fab-button\" onClick={() => {\n                    window.open(\n                        'https://bit.ly/3qUaVOW',\n                        '_blank'\n                    )\n                }}>\n                    📝 지금 바로 의뢰하기\n                </button>\n            </div>\n            <div className=\"sourcing__section\">\n                <div className=\"s-middle\">\n                    디자인과 문구작성이 어려우신가요?\n                </div>\n                <div className=\"s-big\">\n                    <span className=\"font-gradient\">Surfee</span>에게 제작을 의뢰해보세요.\n                </div>\n                <div className=\"mt-30\">\n                    <div className=\"s-small\">\n                        © 크몽에서 활동 중인 페이지 제작 전문가와 함께합니다.\n                    </div>\n                    <div className=\"s-small\">\n                        © 의뢰서만 작성해서 제출하면 1일안에 디자인과 제작까지 완성!\n                    </div>\n                </div>\n                <div className=\"mt-30 centero\" style={{width:'100%'}}>\n                    {/* <lottie-player\n                        autoplay\n                        loop\n                        mode=\"normal\"\n                        src=\"https://s3.amazonaws.com/cdnl.iconscout.com/lottie/premium/original/4042273.json?X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIA4VMJAKC54WWWCYMY%2F20220405%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20220405T024911Z&X-Amz-SignedHeaders=host&X-Amz-Expires=259200&X-Amz-Signature=d2238275c851d54b81e6c89611dde0b7af7ba3cbe270661325dc229eb476c738\"\n                        style={{width:'30%', zIndex:'1'}} \n                    >\n                    </lottie-player> */}\n                </div>\n                <div style={{marginTop:'100px'}}>\n                    <div className=\"s-small\">\n                        제작 예시\n                    </div>\n                    <div style={{display:'flex', flexDirection:'row', marginTop:'25px'}}>\n                        <ExampleCard url=\"cakehousesurfeeex\" title=\"제작예시 1\" img={ch} />\n                        <ExampleCard url=\"mercurysurfeeex\" title=\"제작예시 2\" img={mc} />\n                    </div>\n                </div>\n            </div>\n            <div className=\"sourcing__section2\">\n                <div className=\"s-small\" style={{fontWeight:'400'}}>\n                    비합리적인 가격 X &nbsp;&nbsp; 긴 제작기간 X\n                </div>\n                <div className=\"s-big mt-30\" style={{textAlign:'left', fontSize:'2.3em'}}>\n                    의뢰서 작성 &nbsp; 〉 &nbsp;\n                    결제 &nbsp; 〉 &nbsp;\n                    제작 &nbsp; 〉 &nbsp;\n                    피드백 &nbsp; 〉 &nbsp;\n                    수정 후 완성\n                </div>\n                <div className=\"s-small mt-30\" style={{fontWeight:'400'}}>\n                    제작하고자 하는 페이지에 대한 정보와 제작에 필요한 자료들을 바탕으로 의뢰서를 작성해주시면<br/>\n                    Surfee가 직접 페이지를 제작해서 전달해드립니다.<br/>\n                    시안을 보내드린 뒤 피드백을 받은 후 수정-보완하는 과정을 가지며,<br/>\n                    직접 페이지를 제작하시는 수고를 덜어드립니다.\n                </div>\n                <div className=\"mt-30\" style={{display:'flex', flexDirection:'row', marginTop:'90px'}}>\n                    <FCard img={kmong} text=\"크몽 평균별점 5.0⭐️\" />\n                    <FCard img={currency} text=\"합리적인 가격 : 3 or 6 만원\" />\n                    <FCard img={time} text=\"오후 1시 이전 의뢰시 당일 제작\" />\n                    <FCard img={support} text=\"반응형 웹페이지\" />\n                    <FCard img={strategy} text=\"많은 디자인 리소스 보유\" />\n                </div>\n            </div>\n            <div className=\"sourcing__section3\">\n                <div className=\"s-small\">\n                    더 이상 비효율적인 외주 작업에 스트레스 받지마세요.\n                </div>\n                <div className=\"s-big\">\n                    <span style={{fontWeight:'400'}}>합리적인 가격으로</span>\n                    <br/>\n                    직접 수정 가능한 형태로 제공\n                </div>\n                <div className=\"mt-30 centero\" style={{width:'100%', flexDirection:'column'}}>\n                    <img src={ribon} style={{width:'250px'}} />\n                    <div className=\"s-small\">\n                        Surfee가 제작해주는 페이지는 수정가능한 형태의 템플릿으로 제공되기때문에<br/>\n                        의뢰자분께서 페이지를 받은 뒤 <strong>횟수제한 없이 얼마든지 문구, 디자인, 사진 등을 수정가능</strong>합니다.\n                    </div>\n                </div>\n            </div>\n            <div className=\"sourcing__section2\">\n                <div className=\"s-big\" style={{fontSize:'2.5em'}}>\n                    Surfee가 제작의뢰를 받는 이유\n                </div>\n                <div className=\"mt-30\">\n                    <div className=\"s-small\" style={{fontSize:'0.9em'}}>\n                        Surfee는 <strong>모든 사람들이 쉽고 빠르게 홍보페이지를 가질 수 있으면 좋겠다</strong>는 생각에서 시작된 서비스입니다.<br/>\n                        그런 목표를 가지고 저희는 코딩없이 페이지 제작이 가능한 툴을 완성했습니다.<br/>\n                        그리고 이후의 과정에서, 저희는 사람들이 툴과 별개로<br/>\n                        <strong>원하는 문구를 작성하고 디자인하는데 어려움을 겪는다</strong>는 사실을 알게되었습니다.<br/><br/>\n                        따라서 <strong>기존의 외주보다 혁신적인 가격</strong>으로 제작의뢰를 진행해주고,<br/>\n                        사람들이 페이지 제작시 원하는 부분이 어떤 것인지에 대한 정보 또한 얻고자합니다.\n                        <br/><br/>\n                        더 궁금하신게 있다면 메일 : surfee.business@gmail.com로<br/>혹은 화면 가장 오른쪽 아래의 이모티콘을 클릭해 연락주세요!\n                    </div>\n                    <button className=\"fab-button uphover\" onClick={() => {\n                        window.open(\n                            'https://bit.ly/3qUaVOW',\n                            '_blank'\n                        )\n                    }} style={{marginTop:'60px', borderRadius:'6px', color:'white'}}>\n                        📝 지금 바로 의뢰하기<br/>\n                        <span style={{fontSize:'13px', color:'white'}}>페이지 디자인부터 기획까지, 더 이상 고민하지 마세요.</span>\n                    </button>\n                </div>\n            </div>\n        </div>\n        <Footer />\n        </div>\n    )\n}\n\nexport default SourcingPage\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Landing/ChoiceModal.js",["1229","1230","1231","1232"],"import React from 'react'\nimport { styled, Box } from '@mui/system';\nimport ModalUnstyled from '@mui/base/ModalUnstyled';\nimport {Link} from 'react-router-dom'\nimport invoice from '../../tools/img/main/invoice.webp'\nimport tablet from '../../tools/img/main/tablet.webp'\n\nconst StyledModal = styled(ModalUnstyled)`\n  position: fixed;\n  z-index: 1300;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Backdrop = styled('div')`\n  z-index: -1;\n  position: fixed;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  left: 0;\n  background-color: rgba(0, 0, 0, 0.3);\n  -webkit-tap-highlight-color: transparent;\n`;\n\nconst style = {\n  width: 500,\n  height: 400,\n  bgcolor: 'rgba(240,240,240,1)',\n  color:'black',\n  borderRadius:'6px',\n  p: 2,\n  px: 4,\n  pb: 3,\n  fontSize:'12px',\n};\n\nfunction ChoiceModal({open, setOpen, newTab}) {\n    return (\n        <div>\n        <StyledModal\n            aria-labelledby=\"unstyled-modal-title\"\n            aria-describedby=\"unstyled-modal-description\"\n            open={open}\n            onClose={() => setOpen(!open)}\n            BackdropComponent={Backdrop}>\n            <Box sx={style}>\n                <div className=\"centera\" style={{fontFamily:'Pretendard', flexDirection:'column'}}>\n                    <div style={{fontSize:'22px', textAlign:'center'}}>\n                        제작이 어려우신가요?<br/>그렇다면 아래의 방법을 활용해보세요!\n                    </div>\n                    {\n                        newTab ?\n                        <>\n                        <div className=\"centero\" style={{flexDirection:'row', marginTop:'20px'}}>\n                            <button onClick={() => window.open('https://surfee.co.kr/surfeeexamples', '_blank')} className=\"main__button5 uphover\" style={{width:'190px', display:'flex', flexDirection:'column', padding:'18px 10px'}}>\n                                <img src={tablet} style={{width:'80%'}} />\n                                <div style={{textAlign:'center', color:'black', fontWeight:'500'}}>\n                                    디자인이 된 <strong>템플릿</strong>을<br/><strong>사용해서 완성</strong>하기\n                                </div>\n                            </button>\n                            <button onClick={() => window.open('https://surfee.co.kr/sourcing', '_blank')} className=\"main__button5 uphover\" style={{width:'190px', display:'flex', flexDirection:'column', padding:'18px 10px'}}>\n                                <img src={invoice} style={{width:'80%'}} />\n                                <div style={{textAlign:'center', color:'black', fontWeight:'500'}}>\n                                    <strong>의뢰서만 작성</strong>하고<br/>전문가에게 <strong>제작 의뢰</strong>하기\n                                </div>\n                            </button>  \n                        </div>\n                        {/* <button className=\"main__button5 uphover\" style={{width:'90%', display:'flex', flexDirection:'column', padding:'18px 10px'}}>\n                            <div style={{textAlign:'center', color:'black', fontWeight:'500'}}>\n                                불편함 제보하기\n                            </div>\n                        </button>   */}\n                        </>\n                        :\n                        <div className=\"centero\" style={{flexDirection:'row', marginTop:'20px'}}>\n                            <Link to='surfeeexamples' className=\"main__button5 uphover\" style={{width:'190px', display:'flex', flexDirection:'column', padding:'18px 10px'}}>\n                                <img src={tablet} style={{width:'80%'}} />\n                                <div style={{textAlign:'center', color:'black', fontWeight:'500'}}>\n                                    디자인이 된 <strong>템플릿</strong>을<br/><strong>사용해서 완성</strong>하기\n                                </div>\n                            </Link>\n                            <Link to='/sourcing' className=\"main__button5 uphover\" style={{width:'190px', display:'flex', flexDirection:'column', padding:'18px 10px'}}>\n                                <img src={invoice} style={{width:'80%'}} />\n                                <div style={{textAlign:'center', color:'black', fontWeight:'500'}}>\n                                    <strong>의뢰서만 작성</strong>하고<br/>전문가에게 <strong>제작 의뢰</strong>하기\n                                </div>\n                            </Link>  \n                        </div>\n                    }\n                </div>\n            </Box>\n        </StyledModal>\n        </div>\n    )\n}\n\nexport default ChoiceModal\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/UserLanding/UserLandingPage.js",["1233","1234","1235","1236","1237"],"import React, { useState, useEffect } from 'react';\nimport { dbService } from '../../tools/fbase';\nimport LoadingDisplay from '../../tools/LoadingDisplay'\nimport ReactGa from 'react-ga'\nimport UserNavBar from '../../components/UserLandingPage/UserNavBar'\nimport UserContents from '../../components/UserLandingPage/UserContents'\nimport UserFoot from '../../components/UserLandingPage/UserFoot'\nimport ErrorPage from './NavAndFooter/ErrorPage'\nimport { isMobile } from 'react-device-detect'\nimport UserSection from '../../components/UserLandingPage/UserSection'\nimport TextareaAutosize from '@mui/material/TextareaAutosize';\nimport ChannelTalk from '../../tools/ChannelTalk'\nimport { Helmet } from 'react-helmet'\n\nexport const UserContext = React.createContext({\n    state : {},\n    action : {}\n});\n\nconst UserLandingPage = (props) => {\n    const [ item, setItem ] = useState();\n    const [ setting, setSetting ] = useState();\n    const [ error, setError ] = useState(false);\n    const [ pageId, setPageId ] = useState('');\n    const [ loading, setLoading ] = useState(false);\n\n    const contextValue = {\n        state: {setting, pageId},\n        action : {setSetting, setPageId},\n    }\n\n    const favicon = document.getElementById(\"favicon\");\n    const urltitle = document.getElementById(\"urltitle\");\n    const ogTitle = document.querySelector('meta[property=\"og:title')\n\n    ChannelTalk.shutdown();\n\n    useEffect(() => {\n        loadData()\n        ReactGa.initialize('UA-213792742-1');\n        // to report page view\n        if(item !== undefined && item !== null){\n            setPageId(item.pageId)\n            ReactGa.pageview(`/${item.pageId}`) // published에 저장된 pageId는 saved-page의 id\n        }\n    }, [loading])\n\n    const loadData = async () => {\n        let userOrder = []\n        userOrder = await dbService\n            .collection(\"published-page\")\n            .where(\"urlId\", \"==\", props.match.params.id)\n            .get(); // uid를 creatorId로 줬었으니까.\n        \n        let orderData = userOrder.docs.map(doc => {\n            return({...doc.data(), id:doc.id})\n        });\n        \n        if(orderData.length === 0){\n            props.history.push('/');\n            props.history.go();\n        }\n\n        favicon.href = orderData[0].setting.faviconAttachment;   \n        urltitle.innerText = orderData[0].setting.title;\n        ogTitle.getAttribute('content')\n        ogTitle.setAttribute('content', orderData[0].setting.title)\n\n        setItem( orderData[0] );\n        setSetting( orderData[0].setting );\n        setLoading(true);\n    }\n\n    const moveToPage = async (button) => {\n        // 파이어베이스에 기록\n        await dbService.collection('datas').add({\n            pageId:pageId,\n            type:'click',\n            from:'플로팅 버튼',\n            button:button,\n            created:Date.now(),\n        })\n    }\n    \n    return (\n        <UserContext.Provider value={contextValue}>\n        {/* <Helmet title=\"타이틀\" /> */}\n        {!loading ? \n        <LoadingDisplay />\n        :\n        error ? \n        <ErrorPage />\n        :\n        <div style={{fontSize:`${isMobile ? '22px' : '28px'}`}}>\n            {\n                item.navi.use &&\n                <UserNavBar navi={item.navi} setting={item.setting} />\n            }\n            <div style={{paddingTop:`${item.navi.fixed && item.navi.use ? '0px': item.navi.use ? `${item.navi.height}px` : '0px'}`}}>\n                <UserContents contents={item.contents} setting={item.setting} />\n            </div>\n                <UserFoot foot={item.foot} setting={item.setting}/>\n            <>\n            {  ( setting.fta.use ) &&\n            <div className=\"fta__container\" style={{width:'100vw'}}>\n                <div className=\"fta-button\" \n                    style={{\n                        backgroundColor:`${setting.fta.backgroundColor}`, \n                        width:`${ setting.fta.size }%`, \n                        borderRadius:`${setting.fta.shape}px`, \n                        border:`${setting.fta.border ? `1px solid ${setting.fta.borderColor}` : 'none'}`,\n                        boxShadow:`${setting.fta.shadow ? '2px 2px 5px rgba(0,0,0,0.3)' : ''}`,\n                        fontSize:'0.7em',\n                        color:`${setting.fta.color}`,\n                    }}\n                    onClick={() => {\n                        moveToPage('플로팅 버튼')\n                        window.open(\n                            setting.fta.link,\n                            '_blank' // <- This is what makes it open in a new window.\n                        );\n                    }}>\n                    <div className='text-no-input'  \n                        style={{\n                            fontFamily: `${setting.font}`,\n                            resize: 'none',\n                            textAlign:'center',\n                            border:'none',\n                            cursor:'pointer',\n                        }} \n                        dangerouslySetInnerHTML={{__html:setting.fta.text}}/>\n                </div>\n            </div> }\n            </>\n        </div> \n        }\n        </UserContext.Provider>\n    )\n    \n}\n\nexport default UserLandingPage\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/UserLanding/NavAndFooter/ErrorPage.js",[],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/EventPage/GiftPage/GiftPage.js",["1238","1239","1240","1241"],"import React, {useEffect, useState} from 'react'\nimport styled from 'styled-components'\nimport './GiftPage.css'\nimport gift from '../../../tools/img/gift/gift.png'\nimport back from '../../../tools/img/gift/back.jpg'\nimport {Link} from 'react-router-dom'\n\nconst OUT = styled('div')`\n    width:100vw;\n    display:flex;\n    justify-content:center;\n    align-items:center;\n    font-family: MapoFlowerIsland;\n`\n\nfunction GiftPage() {\n    \n    return (\n        <OUT>\n            <div className=\"gift__container\">\n                <div className=\"gift__landing\" style={{backgroundImage:`url(${back})`, height:'100vh'}}>\n                    <div style={{\n                        backgroundColor: '#95DAC1',\n                        width:'100%',\n                        height:'100%',\n                        opacity:'0.3',\n                        position:'absolute',\n                        zIndex:'1'\n                    }}>\n                    </div>\n                    <div className=\"center-column\" style={{zIndex:'2'}}>\n                        {/* <div>\n                            <img src={gift} style={{width:'300px'}} />\n                        </div> */}\n                        <div className=\"centera\" style={{position:'relative', height:'40vh'}}>\n                            <iframe src=\"https://embed.lottiefiles.com/animation/102034\" style={{border:'none', position:'absolute', width:'100%', height:'100%', zIndex:'2'}}></iframe>\n                            <div style={{fontSize:'2.4em', fontFamily:'SDSamliphopangche_Outline', zIndex:'3'}}>\n                                마음을 담아<br/>선물하기\n                            </div>\n                        </div>\n                        <div className=\"gift-main__desc\" style={{margin:'50px 0px'}}>\n                            선물과 함께 <br/>진심이 담긴 마음을 전달해보세요.<br/><br/>\n                            직접 만나서 주지는 못하더라도 <br/>정성스레 포장한다면 <br/>그 마음이 전해질거에요.\n                        </div>\n                    </div>\n                </div>\n                <Link to='/giftmake' className=\"gift__fab\">\n                    선물 포장하기\n                </Link>\n            </div>\n        </OUT>\n    )\n}\n\nexport default GiftPage\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/EventPage/GiftPage/KaKaoTalkButton.js",["1242","1243"],"import React, {useEffect} from 'react'\nimport person1 from '../../../tools/img/person1.png'\n\nfunction KaKaoTalkButton({title, imgUrl, url}) {\n    useEffect(() => {\n        createKakaoButton()\n      }, [])\n    \n      const createKakaoButton = () => {\n        // kakao sdk script이 정상적으로 불러와졌으면 window.Kakao로 접근이 가능하다고 한다.\n        if (window.Kakao) {\n          const kakao = window.Kakao\n    \n          // 중복 initialization 방지\n          if (!kakao.isInitialized()) {\n            // 두번째 step 에서 가져온 javascript key 를 이용하여 initialize\n            kakao.init('7ee630bf57da187a1038b1adcf4ef7ec')\n          }\n    \n          kakao.Link.createDefaultButton({\n            // Render 부분 id=kakao-link-btn 을 찾아 그부분에 렌더링을 합니다\n            container: '#kakao-link-btn',\n            objectType: 'feed',\n            content: {\n              title: title,\n              description: '여기서 확인하세요',\n              imageUrl: imgUrl, // i.e. process.env.FETCH_URL + '/logo.png'\n              // link: {\n              //   mobileWebUrl: url,\n              //   webUrl: url,\n              // },\n            },\n            // social: {\n            //   likeCount: 77,\n            //   commentCount: 55,\n            //   sharedCount: 333,\n            // },\n            buttons: [\n              {\n                title: '선물 받으러 가기',\n                link: {\n                  mobileWebUrl: url,\n                  webUrl: url,\n                },\n              },\n            ],\n          })\n        }\n      }\n\n    return (\n        <div>\n            <button id=\"kakao-link-btn\" style={{backgroundColor:'yellow', padding:'10px'}}>\n                카카오톡 공유하기\n            </button>\n        </div>\n    )\n}\n\nexport default KaKaoTalkButton\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/EventPage/GiftPage/GiftMake.js",["1244","1245","1246","1247","1248","1249","1250","1251","1252"],"import React, {useEffect, useState, useRef} from 'react'\nimport styled from 'styled-components'\nimport bottom from '../../../tools/img/gift/bottom.webp'\nimport letter1 from '../../../tools/img/gift/letter1.webp'\nimport letter2 from '../../../tools/img/gift/letter2.webp'\nimport letter3 from '../../../tools/img/gift/letter3.jpg'\nimport letter4 from '../../../tools/img/gift/letter4.png'\n// Import Swiper React components\nimport { Swiper, SwiperSlide } from 'swiper/react/swiper-react';\n// Import Swiper styles\nimport 'swiper/swiper-bundle.min.css'\nimport 'swiper/swiper.min.css'\nimport box from '../../../tools/img/gift/box.png'\nimport TextareaAutosize from '@mui/material/TextareaAutosize';\nimport {isMobile} from 'react-device-detect'\nimport {dbService, stService} from '../../../tools/fbase'\nimport {Link} from 'react-router-dom'\nimport gift1 from '../../../tools/img/gift/gift1.png'\nimport gift2 from '../../../tools/img/gift/gift2.png'\nimport gift3 from '../../../tools/img/gift/gift3.png'\nimport gift4 from '../../../tools/img/gift/gift4.png'\nimport gift5 from '../../../tools/img/gift/gift5.png'\nimport gift6 from '../../../tools/img/gift/gift6.png'\nimport gift7 from '../../../tools/img/gift/gift7.png'\nimport bear from '../../../tools/img/gift/bear.gif'\nimport dragon from '../../../tools/img/gift/dragon.gif'\nimport gold from '../../../tools/img/gift/gold.png'\nimport mountain from '../../../tools/img/gift/mountain.png'\nimport {\n    ChakraProvider,\n  } from '@chakra-ui/react'\n\nconst OUT = styled('div')`\n    width:100vw;\n    display:flex;\n    justify-content:center;\n    align-items:center;\n    font-family:MapoGoldenPier;\n    position:relative;\n`\nconst ASK = styled('div')`\n    width:20%;\n    text-align:left;\n    display:flex;\n    justify-content:flex-start;\n    align-items:center;\n    margin-top:5px;\n    height:100%;\n`\n\nconst PCOLOR = '#FD6F96'\nconst NCOLOR = '#FD6F9655'\n\nconst GiftOptions = [\n    {\n        name:<span>카카오톡 코드로<br/>선물하기</span>,\n        type:1,\n    },\n    {\n        name:<span>기프티콘 이미지로<br/>선물하기</span>,\n        type:2,\n    },\n]\n\nconst LetterBackOptions = [\n    {\n        src:letter1,\n        type:0,\n    },\n    {\n        src:letter2,\n        type:1,\n    },\n    {\n        src:letter3,\n        type:2,\n    },\n    {\n        src:letter4,\n        type:3,\n    },\n]\n\nconst KakaoImageOptions = [\n    {\n        src:gift1,\n        type:1,\n    },\n    {\n        src:gift2,\n        type:2,\n    },\n    {\n        src:gift3,\n        type:3,\n    },\n    {\n        src:gift4,\n        type:4,\n    },\n    {\n        src:gift5,\n        type:5,\n    },\n    {\n        src:gift6,\n        type:6,\n    },\n    {\n        src:gift7,\n        type:7,\n    },\n]\n\nconst Emotions = [\n    '사랑', '축하', '응원', '감사', '격려', '신뢰', '기쁨', '행복', '존경', '그리움', '설렘'\n]\n\nconst colorList = [\n    '#FF8C32',\n    '#4D77FF',\n    '#5EE6EB',\n    '#65C18C',\n    '#FFF89A',\n    '#6A5495',\n    '#FF6363',\n    '#D9D7F1',\n]\n\n\nfunction GiftMake() {\n    const [giftType, setGiftType] = useState(0);\n    const [emotions, setEmotions] = useState([]);\n    const [letter, setLetter] = useState('');\n    const [from, setFrom] = useState('');\n    const [to, setTo] = useState('');\n    const [letterType, setLetterType] = useState(0);\n    const [shareType, setShareType] = useState(1);\n    const [giftycon, setGiftycon] = useState('');\n    const [giftCode, setGiftCode] = useState('');\n    const [randomId, setRandomId] = useState('');\n    const [ranTwo, setRanTwo] = useState([]);\n    const [sim, setSim] = useState('');\n    const photoInput = useRef();\n    const inputClick = () => {\n        photoInput.current.click();\n    };\n\n    useEffect(() => {\n        setRandomId(Math.random().toString(36).substr(2,11));\n        returnRandomNum();\n    },[])\n    \n    const onClickEmotion = item => {\n        if(emotions.includes(item)){\n            setEmotions(emotions.filter(doc => doc !== item))\n        }else{\n            setEmotions(emotions.concat([item]))\n        }\n    }\n\n    const seeAdvance = async () => {\n\n        const fds = await dbService\n            .collection('gift')\n            .where('id', '==', randomId)\n            .get();\n        let fd = fds.docs.map(doc => {\n            return({...doc.data(), id:doc.id})\n        });\n\n        let attachmentURL\n    \n        if(giftType === 2){\n            const attachmentRef = stService.ref().child(`gift`)\n            const response = await attachmentRef.putString(giftycon, \"data_url\");\n            attachmentURL = await response.ref.getDownloadURL();\n        }else{\n            attachmentURL=''\n        }\n\n        const body = {\n            from,\n            to,\n            letterType,\n            giftycon:attachmentURL,\n            emotions,\n            letter,\n            giftCode,\n            id:randomId,\n        }\n\n        if(fd.length === 0){\n            await dbService.collection('gift').add(body).then(() => {\n                window.open(\n                    `http://localhost:3000/giftbox/${randomId}`,\n                    '_blank'\n                )\n            })\n        }else{\n            await dbService.collection(`gift/${fd[0].id}`).update(body).then(() => {\n                window.open(\n                    `http://localhost:3000/giftbox/${randomId}`,\n                    '_blank'\n                )\n            })\n        }\n    }\n\n    const returnSim = () => {\n        switch(sim){\n            case '곰':\n                return('#8E3200')\n            case '용':\n                return('#247881')\n            case '산':\n                return('#019267')\n            case '금':\n                return('#FFD93D')\n            default:\n                return('rgba(255,255,255,0.8)')\n        }\n    }\n\n    const returnSimImage = () => {\n        const reImage = () => {\n            switch(sim){\n                case '곰':\n                    return(<img src={bear} />)\n                case '용':\n                    return(<img src={dragon} />)\n                case '산':\n                    return(<img src={mountain} />)\n                case '금':\n                    return(<img src={gold} />)\n                default:\n                    return(<></>)\n            }\n        }\n\n        return(\n            <div style={{width:'80%', margin:'10px 0px'}}>\n                {reImage()}\n            </div>\n        )\n    }\n\n    const returnRandomNum = () => {\n        let first =  Math.floor( Math.random() * colorList.length )\n        let second =  Math.floor( Math.random() * colorList.length )\n        while(first === second){\n            second =  Math.floor( Math.random() * colorList.length )\n        }\n        setRanTwo([first, second])\n    }\n\n    return (\n        <OUT>\n        <ChakraProvider>\n        <div className=\"gift__container\">\n            <div className=\"gift__landing\" style={{backgroundColor:'#fff3c6'}}>\n                <div style={{textAlign:'left', width:'90%', margin:'30px 0px', lineHeight:'1.3rem'}}>\n                    <br/>\n                    <span className=\"gift-font-gradient\">\n                        선물하기\n                    </span>\n                    <br/>\n                    <br/>\n                    우리, 온라인으로 선물을 준다고 해서<br/>\n                    상대방을 생각하는 마음이 덜한건 아니잖아요?<br/>\n                    내가 너를 얼마나 <strong>특별하게 생각</strong>하는지,<br/>\n                    선물 <strong>포장을 통해서 표현</strong>해봐요.\n                </div>\n                <div className=\"gift__one-question\">\n                    <ASK>\n                        From.\n                    </ASK>\n                    <input value={from} onChange={e => setFrom(e.currentTarget.value)} className=\"gift__input\" placeholder=\"보내시는 분의 이름을 적어주세요.\" />\n                    <span style={{padding:'5px', fontSize:'0.8em'}}>님</span>\n                </div>\n                <div className=\"gift__one-question\">\n                    <ASK>\n                        To.\n                    </ASK>\n                    <input value={to} onChange={e => setTo(e.currentTarget.value)} className=\"gift__input\" placeholder=\"받으실 분의 이름을 적어주세요.\" />\n                    <span style={{padding:'5px', fontSize:'0.8em'}}>님</span>\n                </div>\n                <div className=\"gift__one-question\" style={{flexDirection:'column'}}>\n                    <div className=\"gift__q\">\n                        🎁 전달할 선물\n                    </div>\n                    <div style={{display:'flex', flexDirection:'row', width:'100%'}}>\n                        {\n                            GiftOptions.map((item, index) => {\n                                let picked = giftType === item.type\n\n                                return(\n                                    <button key={index} className=\"gift__radio\" onClick={() => {setGiftType(item.type)}} \n                                        style={{color:`${picked ? 'white' : 'white'}`, width:'50%', backgroundColor:`${picked ? '#b6910c' : '#ffcd17'}`}}>\n                                        {item.name}\n                                    </button>\n                                )\n                            })\n                        }\n                    </div>\n                    <div style={{margin:'10px 0px', width:'100%'}}>\n                    {\n                        giftType === 1 ? \n                        <div className=\"gift__gift-container\">\n                            <input className=\"gift__code-input\" value={giftCode} onChange={e => setGiftCode(e.currentTarget.value)} placeholder=\"카카오톡 선물 코드를 입력해주세요.\" />\n                            <input placeholder=\"선물에 관한 정보를 입력해주세요.\" className=\"gift__input-info\" />\n                        </div>\n                            :\n                        <div className=\"centero\" style={{width:'100%', flexDirection:'column'}}>\n                            <div className=\"gift-fab\" onClick={inputClick} style={{backgroundColor:PCOLOR, color:'white', fontSize:'0.8em', width:'80%'}}>\n                                {\n                                    giftycon ?<>기프티콘 이미지 수정하기</> : <>기프티콘 이미지 넣기</>\n                                }\n                            </div>\n                            <input\n                                type=\"file\" \n                                accept=\"image/*\" \n                                id=\"file\" \n                                onChange={ e => {\n                                    const {target:{files},} = e;\n                                    const oneFile = files[0];\n                                    const reader = new FileReader();\n                                    reader.onloadend = (finishedEvent) => { // 로딩이 끝날 때 실행한다는 뜻.\n                                        const {currentTarget:{result}} = finishedEvent;\n                                        setGiftycon(result);\n                                    }\n                                    if(oneFile){\n                                        reader.readAsDataURL(oneFile);\n                                    }\n                                } }\n                                ref={photoInput}\n                                style={{display: 'none', cursor: 'pointer', objectFit:'cover'}}\n                            />\n                            {\n                                giftycon && \n                                <div className=\"gift__gift-container\">\n                                    <img src={giftycon} style={{width:'100%', borderRadius:'6px'}} />\n                                    <input placeholder=\"선물에 관한 정보를 입력해주세요.\" className=\"gift__input-info\" />\n                                </div>\n                            }\n                        </div>\n                    }\n                    </div>\n                </div>\n                <div className=\"gift__one-question\" style={{flexDirection:'column'}}>\n                    <div className=\"gift__q\">\n                        🎨 편지지 디자인\n                    </div>\n                    <div className=\"centero\" style={{flexDirection:'row', flexWrap:'wrap'}}>\n                        <Swiper\n                            slidesPerView={3}\n                            spaceBetween={15}\n                            className=\"mySwiper\"\n                        >\n                            {LetterBackOptions.map((item, index) => {\n                                return(\n                                    <SwiperSlide key={index} onClick={() => setLetterType(item.type)} style={{border:`2px solid ${item.type === letterType ? PCOLOR : 'rgba(0,0,0,0)'}`}}>\n                                        <img src={item.src} style={{height:'100%'}} />\n                                    </SwiperSlide>\n                                )\n                            })}\n                        </Swiper>\n                    </div>\n                </div>\n                <div className=\"gift__one-question\" style={{flexDirection:'column'}}>\n                    <div className=\"gift__q\">\n                        ✍️ 편지 작성\n                    </div>\n                    <div className=\"centera\" style={{position:'relative'}}>\n                        <div className=\"gift__letter centero\" style={{backgroundImage:`url(${LetterBackOptions[letterType].src})`}}>\n                            <div style={{backgroundColor:'rgba(255,255,255,0.5)', width:'100%', height:'100%', position:'absolute', zIndex:'3'}}></div>\n                            <TextareaAutosize placeholder=\"편지를 작성해주세요.\" className=\"gift__letter-input\" value={letter} onChange={e => {setLetter(e.currentTarget.value)}} />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"gift__one-question\" style={{flexDirection:'column', justifyContent:'center', alignItems:'center'}}>\n                    <div className=\"gift__q\">\n                        😁 함께 보내고 싶은 감정\n                    </div>\n                    <div style={{display:'flex', justifyContent:'center', alignItems:'center', flexDirection:'row', width:'100%', boxSizing:'border-box', flexWrap:'wrap'}}>\n                        {\n                            Emotions.map((item, index) => {\n                                let picked = emotions.includes(item)\n\n                                return(\n                                    <button key={index} className=\"gift__radio\" onClick={() => {onClickEmotion(item)}} \n                                        style={{\n                                            color:`${picked ? 'white' : PCOLOR}`, \n                                            backgroundColor:`${picked ? PCOLOR : NCOLOR}`,\n                                            // border:`1px solid ${picked ? '#FD6F96' : 'rgba(0,0,0,0.7)'}`\n                                        }}>\n                                        {item}\n                                    </button>\n                                )\n                            })\n                        }\n                    </div>\n                    {/* <div className=\"gift__box-element\"> */}\n                    <div className=\"gift__box-element\" style={{background:`linear-gradient(90deg, ${colorList[ranTwo[0]]} 0%, ${colorList[ranTwo[1]]} 100%)`}}>\n                        <img src={box} style={{width:'60%', margin:'10px 0px'}} />\n                        <div style={{margin:'10px 0px', fontSize:'0.9em'}}>\n                            { to }님에게\n                            { emotions.map((it, id) => {\n                                    if(id === emotions.length - 1 )\n                                        return(<span style={{color:PCOLOR, fontWeight:'700', margin:'0px 3px'}}>{it}</span>)\n                                    else\n                                        return(<span style={{color:PCOLOR, fontWeight:'700', margin:'0px 3px'}}>{it},</span>)\n                                })\n                            }\n                            을(를) 함께 담아서 보내요.\n                        </div>\n                    </div>\n                </div>\n                <div className=\"gift__one-question\" style={{flexDirection:'column'}}>\n                    <div className=\"gift__q\">\n                        💭 {from}님은 {to}님을 어떻게 생각하나요?\n                    </div>\n                    <div className=\"gift__box-element\" style={{backgroundColor:`${returnSim()}`}}>\n                        {\n                            returnSimImage()\n                        }\n                        <div style={{width:'100%', textAlign:'center'}}>\n                            <input value={sim} onChange={e => setSim(e.currentTarget.value)} className=\"gift__input\" style={{width:'10vw', textAlign:'center'}} />&nbsp; 같은 사람\n                        </div>\n                       <div style={{width:'100%', fontSize:'0.8em', textAlign:'center', marginTop:'10px'}}>\n                            보기 : 곰, 용, 산, 금 등등..\n                        </div>\n                    </div>\n                </div>\n                <div className=\"gift__one-question\" style={{flexDirection:'column'}}>\n                    <div className=\"gift__q\">\n                        💬 카카오톡 공유 시 표시되는 이미지 고르기\n                    </div>\n                    <div className=\"centero\" style={{flexDirection:'row', flexWrap:'wrap'}}>\n                        <Swiper\n                            slidesPerView={3}\n                            spaceBetween={15}\n                            className=\"mySwiper\"\n                        >\n                            {KakaoImageOptions.map((item, index) => {\n                                return(\n                                    <SwiperSlide key={index} className=\"gift__img-box\" onClick={() => setShareType(item.type)} style={{border:`2px solid ${item.type === shareType ? PCOLOR : 'rgba(0,0,0,0)'}`}}>\n                                        <img src={item.src} />\n                                    </SwiperSlide>\n                                )\n                            })}\n                        </Swiper>\n                    </div>\n                </div>\n                <div style={{textAlign:'left', width:'90%', margin:'30px 0px', lineHeight:'1.3rem'}}>\n                    <strong>선물 포장을 마쳤어요.\n                    이제 선물을 전달해봐요!</strong> <br/><br/>\n                    <strong>'선물 상자 미리보기'</strong>에서는 받은 사람이 보게될 선물 상자 화면을 볼 수 있고,<br/><br/>\n                    <strong>'저장 후 보내기'</strong>를 통해서는 포장된 선물상자 링크를 전달할 수 있어요.\n                </div>\n                <div className=\"gift-fab__container\">\n                    <button className=\"gift-fab gsecondary\" onClick={() => seeAdvance()}>\n                        선물상자 미리보기\n                    </button>\n                    <Link to={{\n                        pathname:`/giftend`,\n                        state:{\n                            id:randomId,\n                            title:`${from}님이 ${to}님에게 보내는 선물입니다.`\n                        }}} className=\"gift-fab gprimary\">\n                        저장 후 보내기\n                    </Link>\n                </div>\n            </div>\n            <img src={bottom} style={{width:`${isMobile ? '100%' : '450px'}`, position:'fixed', top:'0px', transform:'rotate(180deg)'}} />\n        </div>\n        </ChakraProvider>\n        </OUT>\n    )\n}\n\nexport default GiftMake\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/EventPage/GiftPage/GiftEnd.js",["1253","1254"],"import React, {useState, useEffect} from 'react'\nimport KaKaoTalkButton from './KaKaoTalkButton'\nimport {useLocation} from 'react-router-dom'\n\n\nfunction GiftEnd() {\n    const location = useLocation()\n    \n    useEffect(() => {\n        console.log(location.state.id)\n\n        const script = document.createElement('script')\n        script.src = 'https://developers.kakao.com/sdk/js/kakao.js'\n        script.async = true\n\n        document.body.appendChild(script)\n\n        return () => {\n        document.body.removeChild(script)\n        }\n    }, [])\n\n\n    return (\n        <div>\n            <KaKaoTalkButton title={location.state.title} url={'https://surfee.co.kr/giftbox/' + location.state.id} imgUrl=\"https://firebasestorage.googleapis.com/v0/b/kiwi-d5dd3.appspot.com/o/JTRUACJIbSW3wucwfOoKitn0lvF2%2F11722f27-c8f0-437e-8bab-0aa451c39f5a?alt=media&token=f32ab77d-815c-4f2d-99e7-830ef8283f81\" />\n        </div>\n    )\n}\n\nexport default GiftEnd\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/EventPage/GiftPage/GiftBox.js",["1255"],"import React, {useEffect, useState} from 'react'\nimport styled from 'styled-components'\nimport {dbService} from '../../../tools/fbase'\n\nconst OUT = styled('div')`\n    width:100vw;\n    display:flex;\n    justify-content:center;\n    align-items:center;\n    font-family:MapoGoldenPier;\n    position:relative;\n`\n\nfunction GiftBox(props) {\n    const [item, setItem] = useState({})\n\n    useEffect(() => {\n        getItem()\n    },[])\n\n    const getItem = async () => {\n        const fds = await dbService\n            .collection('gift')\n            .where('id', '==', props.match.params.id)\n            .get();\n        let fd = fds.docs.map(doc => {\n            return({...doc.data(), id:doc.id})\n        });\n\n        setItem(fd[0])\n        console.log(fd[0])\n    }\n\n    return (\n        <OUT>\n        <div className=\"gift__container\">\n            {\n                item && \n                <div className=\"gift__landing\" style={{backgroundColor:'#fff3c6'}}>\n                    {item.from}님이 {item.to}님에게 보내는 특별한 선물입니다.\n                </div>\n            }\n        </div>\n        </OUT>\n    )\n}\n\nexport default GiftBox\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/EventPage/ContestPage/ContestPage.js",["1256"],"import React, {useState, useEffect} from 'react'\nimport Footer from '../../NavAndFooter/Footer'\nimport NavBarV2 from '../../NavAndFooter/NavBarV2'\nimport {Search} from '@styled-icons/boxicons-regular'\nimport {dbService} from '../../../tools/fbase'\nimport {ChevronDown} from '@styled-icons/bootstrap'\nimport {Heart, HeartFill} from '@styled-icons/bootstrap'\nimport './ContestPage.css'\nimport { Cookies } from 'react-cookie'\nimport {isMobile} from 'react-device-detect'\nimport {produce} from 'immer'\nimport {\n    ChakraProvider,\n    Menu,\n    MenuButton,\n    MenuList,\n    MenuItem,\n} from '@chakra-ui/react'\n\nconst cookies = new Cookies()\n\nfunction ContestPage({history, isLoggedIn}) {\n    const [loading, setLoading] = useState(false);\n    const [search, setSearch] = useState('');\n    const [contests, setContests] = useState([]);\n    const [voteList, setVoteList] = useState([]);\n    const [order, setOrder] = useState('최신순')\n\n    useEffect(() => {\n        getCookies()\n        getContestPages()\n    },[])\n\n    const getCookies = () => {\n        const coki = cookies.get('contest')\n        if(coki){\n            setVoteList(coki)\n        }else{\n        }\n    }\n\n    const getContestPages = async () => {\n        const items = await dbService\n            .collection('contest')\n            .get();\n        let item = items.docs.map(doc => {\n            return({...doc.data(), id:doc.id})\n        });\n        \n        // let temp = []\n        // item.forEach(async element => {\n        //     const dds = await dbService\n        //     .collection('contest')\n        //     .where('urlId', '==', element.urlId)\n        //     .get();\n            \n        //     let dd = dds.docs.map(doc => {\n        //         return({...doc.data(), id:doc.id})\n        //     });\n        //     if(dd){\n        //         temp.push(dd[0])\n        //     }\n        // })\n\n        setContests(item)\n\n        setLoading(true)\n    }\n\n    const Upvote = async (index, item) => {\n\n        const coki = cookies.get('contest')\n\n        if(coki){\n            if(coki.includes(item.id)){\n                setContests(produce(contests, draft => {\n                    draft[index].vote = item.vote - 1\n                }))\n        \n                await dbService.doc(`contest/${item.id}`).update({\n                    urlId:item.urlId,\n                    img:item.img,\n                    name:item.name,\n                    phone:item.phone,\n                    vote : item.vote - 1\n                }).then(() => {\n                    alert(\"투표가 취소되었습니다.\")\n                })\n                \n                // 쿠키의 목록에서 빼기\n                let tt = coki; \n                tt = tt.filter(doc => doc !== item.id)\n                cookies.set('contest', tt)\n                setVoteList(tt)\n            }else{\n                setContests(produce(contests, draft => {\n                    draft[index].vote = item.vote + 1\n                }))\n        \n                await dbService.doc(`contest/${item.id}`).update({\n                    urlId:item.urlId,\n                    img:item.img,\n                    name:item.name,\n                    phone:item.phone,\n                    vote : item.vote + 1\n                }).then(() => {\n                    alert(\"투표가 완료되었습니다.\")\n                })\n                \n                // 쿠키 목록에 넣기\n                let tt = coki;\n                tt.push(item.id)\n                cookies.set('contest', tt)\n                setVoteList(tt)\n            }\n        }else{\n            setContests(produce(contests, draft => {\n                draft[index].vote = item.vote + 1\n            }))\n    \n            await dbService.doc(`contest/${item.id}`).update({\n                urlId:item.urlId,\n                img:item.img,\n                name:item.name,\n                phone:item.phone,\n                vote : item.vote + 1\n            }).then(() => {\n                alert(\"투표가 완료되었습니다.\")\n            })\n            // 쿠키 목록 새로 만들기\n            cookies.set('contest', [item.id])\n            setVoteList([item.id])\n        }\n    }\n\n    const getSearch = async e => {\n        e.preventDefault();\n\n        if(!search){\n            const items = await dbService\n                .collection('contest')\n                .get();\n            let item = items.docs.map(doc => {\n                return({...doc.data(), id:doc.id})\n            });\n            setContests(item)\n        }else{\n            const items = await dbService\n                .collection('contest')\n                .where('phone', '==', parseInt(search))\n                .get();\n            let item = items.docs.map(doc => {\n                return({...doc.data(), id:doc.id})\n            });\n            setContests(item)\n        }\n    }\n\n    const orderBy = type => {\n        if(type === 'new'){\n            let tt = contests\n            tt.sort((a,b) => {\n                return b.created - a.created\n            });\n            setContests(tt)\n        }else{\n            let tt = contests\n            tt.sort((a,b) => {\n                return b.vote - a.vote\n            });\n            setContests(tt)\n        }\n    }\n\n\n\n    const ContestCard = ({item, index, img, Upvote, voteList}) => {\n\n        return(\n            <div className=\"excard uphover2\" style={{fontFamily:'Pretendard'}}>\n                <span style={{position:'absolute', top:'10px', left:'10px', cursor:'pointer'}} onClick={() => Upvote(index, item)}>\n                    {\n                        voteList.includes(item.id) ?\n                        <HeartFill size=\"32\" color=\"#EB4956\" style={{ backgroundColor:'rgba(240,240,240,0.5)', padding:'4px', borderRadius:'4px' }} />\n                        :\n                        <Heart size=\"29\" className=\"contest__heart\" style={{ backgroundColor:'rgba(240,240,240,0.5)', padding:'4px', borderRadius:'4px' }} />\n                    }\n                </span>\n                <span style={{position:'absolute', top:'10px', right:'10px', borderRadius:'4px', fontSize:'1.1em', fontWeight:'700', backgroundColor:'rgba(240,240,240,0.5)', padding:'4px'}}>\n                    {item.vote}표\n                </span>\n                <div className=\"back-image-fit excard-image\"\n                    style={{backgroundImage:`url(${img})`, cursor:'pointer'}}>\n                    <div className=\"excard-black\">\n                        <div className=\"excard-button-3\" onClick={()=>{\n                            window.open(\n                                    'https://surfee.co.kr/' + item.urlId,\n                                    '_blank' // <- This is what makes it open in a new window.\n                                );\n                            }}>\n                            페이지 보기\n                        </div>\n                    </div>\n                </div>\n                <div className=\"excard-title\" style={{flexDirection:'column', alignItems:'start', justifyContent:'center'}}>\n                    <div style={{fontWeight:'700'}}>{item.urlId}</div>\n                    <div>\n                        Designed by. {item.name} ({item.phone})\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n    return (\n        <ChakraProvider>\n            <NavBarV2 history={history} isLoggedIn={isLoggedIn} />\n            <div className=\"contest__container\">\n                <div className=\"content__top-container\" style={{fontFamily:'Pretendard'}}>\n                    <div className=\"contest__top-title\">\n                        마음에 드는 템플릿에 투표해 주세요!\n                    </div>\n                    <div className=\"contest__top-desc\">\n                        하트를 누르면 투표가 바로 반영됩니다.<br/>\n                        여러 템플릿에 투표할 수는 있지만, {isMobile && <br/>}하나의 템플릿에 여러 번 투표할 수는 없습니다.<br/>\n                        5월 6일부터는 득표수가 비공개 처리됩니다! :)\n                        <br/><br/>\n                        <a href=\"https://surfee.co.kr/contest2022\" style={{fontSize:'1.1em'}}> > 콘테스트 설명 보러가기</a><br/>\n                        <span>위의 링크에서 제작한 페이지를 등록하실 수 있습니다.</span>\n                    </div>\n                </div>\n                <div className=\"contest__search-container\">\n                    <div className=\"contest__search-box\">\n                        <form onSubmit={(e) => getSearch(e)}>\n                            <Search size=\"20\" color=\"rgb(165, 165, 165)\" />\n                            <input value={search} type=\"search\" className=\"contest__search-input\" placeholder=\"전화번호 뒷 4자리로 검색할 수 있어요.\" \n                                onChange={e => setSearch(e.currentTarget.value)}\n                            />\n                        </form>\n                    </div>\n                    <div style={{marginLeft:'5vw', zIndex:5}}>\n                        <Menu>\n                            <MenuButton>\n                                <div className=\"order-button opacity-hover\">\n                                    {order}\n                                    <ChevronDown size=\"15\" style={{marginLeft:'2vw'}} />\n                                </div>\n                            </MenuButton>\n                            <MenuList style={{width:'150px', zIndex:100}}>\n                                <div style={{width:'150px', textAlign:'center'}}>\n                                    <div className=\"order-option\" onClick={() => {setOrder('최신순'); orderBy('new')}}>\n                                        최신순\n                                    </div>\n                                    <div className=\"order-option\" onClick={() => {setOrder('인기순'); orderBy('popular')}}>\n                                        인기순\n                                    </div>\n                                </div>\n                            </MenuList>\n                        </Menu>\n                    </div>\n                </div>\n                <div className=\"centero\">\n                    <div className=\"contest__pages-container\">\n                    {\n                        contests.length > 0 ?\n                        <div className=\"centero\">\n                            {\n                                loading ? \n                                <div className=\"centero\" style={{flexDirection:'row', flexWrap:'wrap'}}>\n                                    {\n                                        contests.map((item, index) => {\n                                            return(\n                                                <ContestCard voteList={voteList} key={index} index={index} item={item} Upvote={Upvote} img={item.img} />\n                                            )\n                                        })\n                                    }\n                                </div>\n                                :\n                                <>\n                                    로딩 중...\n                                </>\n                            }\n                        </div>\n                        :\n                        <div style={{padding:'20px', width:'100%', textAlign:'center'}}>\n                            검색 결과가 없습니다.\n                        </div>\n                    }\n                    </div>\n                </div>\n            </div>\n            <div style={{marginTop:'100px'}}>\n            </div>\n            <Footer />\n        </ChakraProvider>\n    )\n}\n\nexport default ContestPage\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/AdminPage/UploadContest.js",["1257","1258"],"import React, {useState} from 'react'\nimport styled from 'styled-components'\nimport {dbService, stService} from '../../tools/fbase'\nimport { v4 as uuidv4 } from 'uuid';\n\nconst Title = styled('div')`\n    padding:10px 0px;\n    font-size:20px;\n`\n\nconst Input = styled('input')`\n    padding:10px;\n    font-size:20px;\n    border:1px solid black;\n    border-radius:3px;\n`\n\nfunction UploadContest() {\n    const [name, setName] = useState('')\n    const [phone, setPhone] = useState(0)\n    const [src, setSrc] = useState('')\n    const [urlId, setUrlId] = useState('')\n\n    const upload = async () => {\n\n        // 사진을 먼저 업로드하고 그 URL을 받아서 데이터로 넣어줘야한다.\n        const attachmentRef = stService.ref().child(`contestImages/${uuidv4()}`)\n        const response = await attachmentRef.putString(src, \"data_url\");\n        const attachmentURL = await response.ref.getDownloadURL();\n\n        const body = {\n            created:Date.now(),\n            name:name,\n            phone:parseInt(phone),\n            urlId:urlId,\n            vote:0,\n            img:attachmentURL,\n        }\n\n        await dbService.collection('contest').add(body)\n        alert(\"업로드 완료!\")\n        setName('')\n        setPhone(0)\n        setSrc('')\n        setUrlId('')\n    }\n\n    const uploadImage = e => {\n        const {target:{files},} = e;\n        const oneFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => { // 로딩이 끝날 때 실행한다는 뜻.\n            const {currentTarget:{result}} = finishedEvent;\n            setSrc(result);\n        }\n        if(oneFile){\n            reader.readAsDataURL(oneFile);\n        }\n    }\n\n    return (\n        <div>\n            <Title>\n                올리신 분 이름 : (김*진)\n            </Title>\n            <input type=\"text\" value={name} onChange={e => setName(e.currentTarget.value)} />\n            <Title>\n                올리신 분 번호 : (5086)\n            </Title>\n            <input type=\"text\" value={phone} onChange={e => setPhone(e.currentTarget.value)} />\n            <Title>\n                보여질 페이지의 이미지\n            </Title>\n            <input type=\"file\"\n                    accept=\"image/*\" \n                    id=\"file\" \n                    onChange={e => uploadImage(e)} />\n            {\n                src && <img src={src} style={{width:'200px'}} />\n            }\n            <Title>\n                페이지 url : (template1)\n            </Title>\n            <input type=\"text\" value={urlId} onChange={e => setUrlId(e.currentTarget.value)} />\n            <div onClick={() => upload()} style={{cursor:'pointer', fontSize:'30px', padding:'10px', margin:'10px', backgroundColor:'yellow'}}>\n                올리기!\n            </div>\n        </div>\n    )\n}\n\nexport default UploadContest\n",{"ruleId":"1259","severity":1,"message":"1260","line":9,"column":9,"nodeType":"1261","messageId":"1262","endLine":9,"endColumn":20},{"ruleId":"1263","replacedBy":"1264"},{"ruleId":"1265","replacedBy":"1266"},{"ruleId":"1267","severity":1,"message":"1268","line":13,"column":3,"nodeType":"1261","endLine":13,"endColumn":12,"suggestions":"1269"},{"ruleId":"1259","severity":1,"message":"1270","line":3,"column":10,"nodeType":"1261","messageId":"1262","endLine":3,"endColumn":23},{"ruleId":"1259","severity":1,"message":"1271","line":2,"column":8,"nodeType":"1261","messageId":"1262","endLine":2,"endColumn":11},{"ruleId":"1259","severity":1,"message":"1272","line":23,"column":9,"nodeType":"1261","messageId":"1262","endLine":23,"endColumn":13},{"ruleId":"1259","severity":1,"message":"1273","line":8,"column":10,"nodeType":"1261","messageId":"1262","endLine":8,"endColumn":16},{"ruleId":"1259","severity":1,"message":"1274","line":23,"column":8,"nodeType":"1261","messageId":"1262","endLine":23,"endColumn":10},{"ruleId":"1259","severity":1,"message":"1275","line":28,"column":8,"nodeType":"1261","messageId":"1262","endLine":28,"endColumn":13},{"ruleId":"1259","severity":1,"message":"1276","line":75,"column":12,"nodeType":"1261","messageId":"1262","endLine":75,"endColumn":17},{"ruleId":"1259","severity":1,"message":"1277","line":75,"column":18,"nodeType":"1261","messageId":"1262","endLine":75,"endColumn":26},{"ruleId":"1259","severity":1,"message":"1278","line":78,"column":12,"nodeType":"1261","messageId":"1262","endLine":78,"endColumn":21},{"ruleId":"1259","severity":1,"message":"1279","line":78,"column":22,"nodeType":"1261","messageId":"1262","endLine":78,"endColumn":34},{"ruleId":"1259","severity":1,"message":"1280","line":92,"column":11,"nodeType":"1261","messageId":"1262","endLine":92,"endColumn":21},{"ruleId":"1259","severity":1,"message":"1281","line":112,"column":11,"nodeType":"1261","messageId":"1262","endLine":112,"endColumn":24},{"ruleId":"1282","severity":1,"message":"1283","line":227,"column":17,"nodeType":"1284","endLine":227,"endColumn":86},{"ruleId":"1282","severity":1,"message":"1283","line":248,"column":21,"nodeType":"1284","endLine":248,"endColumn":66},{"ruleId":"1282","severity":1,"message":"1283","line":275,"column":21,"nodeType":"1284","endLine":275,"endColumn":66},{"ruleId":"1282","severity":1,"message":"1283","line":280,"column":21,"nodeType":"1284","endLine":280,"endColumn":66},{"ruleId":"1263","replacedBy":"1285"},{"ruleId":"1265","replacedBy":"1286"},{"ruleId":"1259","severity":1,"message":"1287","line":11,"column":10,"nodeType":"1261","messageId":"1262","endLine":11,"endColumn":17},{"ruleId":"1259","severity":1,"message":"1288","line":19,"column":7,"nodeType":"1261","messageId":"1262","endLine":19,"endColumn":14},{"ruleId":"1259","severity":1,"message":"1289","line":28,"column":18,"nodeType":"1261","messageId":"1262","endLine":28,"endColumn":25},{"ruleId":"1267","severity":1,"message":"1290","line":55,"column":7,"nodeType":"1291","endLine":55,"endColumn":24,"suggestions":"1292"},{"ruleId":"1293","severity":1,"message":"1294","line":75,"column":31,"nodeType":"1295","messageId":"1296","endLine":75,"endColumn":33},{"ruleId":"1293","severity":1,"message":"1294","line":134,"column":36,"nodeType":"1295","messageId":"1296","endLine":134,"endColumn":38},{"ruleId":"1259","severity":1,"message":"1297","line":3,"column":8,"nodeType":"1261","messageId":"1262","endLine":3,"endColumn":16},{"ruleId":"1267","severity":1,"message":"1298","line":37,"column":8,"nodeType":"1261","endLine":37,"endColumn":14},{"ruleId":"1267","severity":1,"message":"1299","line":37,"column":8,"nodeType":"1261","endLine":37,"endColumn":14,"suggestions":"1300"},{"ruleId":"1259","severity":1,"message":"1301","line":6,"column":8,"nodeType":"1261","messageId":"1262","endLine":6,"endColumn":15},{"ruleId":"1259","severity":1,"message":"1302","line":13,"column":19,"nodeType":"1261","messageId":"1262","endLine":13,"endColumn":27},{"ruleId":"1293","severity":1,"message":"1303","line":21,"column":47,"nodeType":"1295","messageId":"1304","endLine":21,"endColumn":49},{"ruleId":"1305","severity":1,"message":"1306","line":25,"column":17,"nodeType":"1307","messageId":"1308","endLine":25,"endColumn":19},{"ruleId":"1309","severity":1,"message":"1310","line":31,"column":9,"nodeType":"1311","messageId":"1312","endLine":46,"endColumn":10},{"ruleId":"1309","severity":1,"message":"1310","line":50,"column":9,"nodeType":"1311","messageId":"1312","endLine":63,"endColumn":10},{"ruleId":"1263","replacedBy":"1313"},{"ruleId":"1265","replacedBy":"1314"},{"ruleId":"1259","severity":1,"message":"1315","line":1,"column":26,"nodeType":"1261","messageId":"1262","endLine":1,"endColumn":35},{"ruleId":"1259","severity":1,"message":"1316","line":20,"column":24,"nodeType":"1261","messageId":"1262","endLine":20,"endColumn":28},{"ruleId":"1282","severity":1,"message":"1283","line":114,"column":25,"nodeType":"1284","endLine":114,"endColumn":59},{"ruleId":"1282","severity":1,"message":"1283","line":128,"column":17,"nodeType":"1284","endLine":128,"endColumn":45},{"ruleId":"1263","replacedBy":"1317"},{"ruleId":"1265","replacedBy":"1318"},{"ruleId":"1259","severity":1,"message":"1315","line":1,"column":26,"nodeType":"1261","messageId":"1262","endLine":1,"endColumn":35},{"ruleId":"1259","severity":1,"message":"1319","line":38,"column":13,"nodeType":"1261","messageId":"1262","endLine":38,"endColumn":17},{"ruleId":"1282","severity":1,"message":"1283","line":147,"column":25,"nodeType":"1284","endLine":147,"endColumn":59},{"ruleId":"1282","severity":1,"message":"1283","line":161,"column":17,"nodeType":"1284","endLine":161,"endColumn":45},{"ruleId":"1259","severity":1,"message":"1320","line":1,"column":16,"nodeType":"1261","messageId":"1262","endLine":1,"endColumn":24},{"ruleId":"1259","severity":1,"message":"1321","line":1,"column":56,"nodeType":"1261","messageId":"1262","endLine":1,"endColumn":63},{"ruleId":"1259","severity":1,"message":"1322","line":13,"column":23,"nodeType":"1261","messageId":"1262","endLine":13,"endColumn":32},{"ruleId":"1267","severity":1,"message":"1323","line":131,"column":7,"nodeType":"1291","endLine":131,"endColumn":9,"suggestions":"1324"},{"ruleId":"1259","severity":1,"message":"1325","line":150,"column":15,"nodeType":"1261","messageId":"1262","endLine":150,"endColumn":20},{"ruleId":"1259","severity":1,"message":"1325","line":175,"column":15,"nodeType":"1261","messageId":"1262","endLine":175,"endColumn":20},{"ruleId":"1282","severity":1,"message":"1283","line":338,"column":37,"nodeType":"1284","endLine":338,"endColumn":180},{"ruleId":"1259","severity":1,"message":"1326","line":2,"column":18,"nodeType":"1261","messageId":"1262","endLine":2,"endColumn":21},{"ruleId":"1259","severity":1,"message":"1271","line":25,"column":8,"nodeType":"1261","messageId":"1262","endLine":25,"endColumn":11},{"ruleId":"1259","severity":1,"message":"1327","line":33,"column":8,"nodeType":"1261","messageId":"1262","endLine":33,"endColumn":10},{"ruleId":"1259","severity":1,"message":"1328","line":35,"column":8,"nodeType":"1261","messageId":"1262","endLine":35,"endColumn":10},{"ruleId":"1259","severity":1,"message":"1329","line":179,"column":12,"nodeType":"1261","messageId":"1262","endLine":179,"endColumn":20},{"ruleId":"1259","severity":1,"message":"1330","line":181,"column":12,"nodeType":"1261","messageId":"1262","endLine":181,"endColumn":16},{"ruleId":"1259","severity":1,"message":"1331","line":185,"column":20,"nodeType":"1261","messageId":"1262","endLine":185,"endColumn":29},{"ruleId":"1259","severity":1,"message":"1332","line":191,"column":18,"nodeType":"1261","messageId":"1262","endLine":191,"endColumn":25},{"ruleId":"1259","severity":1,"message":"1333","line":310,"column":19,"nodeType":"1261","messageId":"1262","endLine":310,"endColumn":23},{"ruleId":"1259","severity":1,"message":"1334","line":344,"column":11,"nodeType":"1261","messageId":"1262","endLine":344,"endColumn":32},{"ruleId":"1309","severity":1,"message":"1310","line":474,"column":9,"nodeType":"1311","messageId":"1312","endLine":705,"endColumn":10},{"ruleId":"1335","severity":1,"message":"1336","line":508,"column":17,"nodeType":"1337","messageId":"1338","endLine":508,"endColumn":23},{"ruleId":"1335","severity":1,"message":"1336","line":542,"column":17,"nodeType":"1337","messageId":"1338","endLine":542,"endColumn":23},{"ruleId":"1335","severity":1,"message":"1336","line":655,"column":17,"nodeType":"1337","messageId":"1338","endLine":655,"endColumn":23},{"ruleId":"1335","severity":1,"message":"1336","line":704,"column":17,"nodeType":"1337","messageId":"1338","endLine":704,"endColumn":23},{"ruleId":"1259","severity":1,"message":"1339","line":726,"column":25,"nodeType":"1261","messageId":"1262","endLine":726,"endColumn":35},{"ruleId":"1259","severity":1,"message":"1320","line":1,"column":27,"nodeType":"1261","messageId":"1262","endLine":1,"endColumn":35},{"ruleId":"1259","severity":1,"message":"1340","line":3,"column":10,"nodeType":"1261","messageId":"1262","endLine":3,"endColumn":15},{"ruleId":"1259","severity":1,"message":"1341","line":2,"column":9,"nodeType":"1261","messageId":"1262","endLine":2,"endColumn":18},{"ruleId":"1342","severity":1,"message":"1343","line":14,"column":19,"nodeType":"1284","endLine":14,"endColumn":156},{"ruleId":"1342","severity":1,"message":"1343","line":25,"column":19,"nodeType":"1284","endLine":25,"endColumn":89},{"ruleId":"1342","severity":1,"message":"1343","line":44,"column":19,"nodeType":"1284","endLine":44,"endColumn":153},{"ruleId":"1342","severity":1,"message":"1343","line":49,"column":19,"nodeType":"1284","endLine":49,"endColumn":153},{"ruleId":"1259","severity":1,"message":"1315","line":1,"column":26,"nodeType":"1261","messageId":"1262","endLine":1,"endColumn":35},{"ruleId":"1259","severity":1,"message":"1344","line":4,"column":9,"nodeType":"1261","messageId":"1262","endLine":4,"endColumn":20},{"ruleId":"1259","severity":1,"message":"1320","line":1,"column":16,"nodeType":"1261","messageId":"1262","endLine":1,"endColumn":24},{"ruleId":"1259","severity":1,"message":"1345","line":6,"column":8,"nodeType":"1261","messageId":"1262","endLine":6,"endColumn":24},{"ruleId":"1259","severity":1,"message":"1345","line":4,"column":8,"nodeType":"1261","messageId":"1262","endLine":4,"endColumn":24},{"ruleId":"1259","severity":1,"message":"1346","line":5,"column":8,"nodeType":"1261","messageId":"1262","endLine":5,"endColumn":21},{"ruleId":"1282","severity":1,"message":"1283","line":84,"column":29,"nodeType":"1284","endLine":84,"endColumn":99},{"ruleId":"1259","severity":1,"message":"1347","line":8,"column":8,"nodeType":"1261","messageId":"1262","endLine":8,"endColumn":10},{"ruleId":"1282","severity":1,"message":"1283","line":69,"column":29,"nodeType":"1284","endLine":69,"endColumn":57},{"ruleId":"1282","severity":1,"message":"1283","line":80,"column":29,"nodeType":"1284","endLine":80,"endColumn":57},{"ruleId":"1259","severity":1,"message":"1348","line":1,"column":26,"nodeType":"1261","messageId":"1262","endLine":1,"endColumn":36},{"ruleId":"1259","severity":1,"message":"1272","line":5,"column":9,"nodeType":"1261","messageId":"1262","endLine":5,"endColumn":13},{"ruleId":"1259","severity":1,"message":"1349","line":12,"column":8,"nodeType":"1261","messageId":"1262","endLine":12,"endColumn":18},{"ruleId":"1259","severity":1,"message":"1278","line":53,"column":12,"nodeType":"1261","messageId":"1262","endLine":53,"endColumn":21},{"ruleId":"1259","severity":1,"message":"1316","line":57,"column":24,"nodeType":"1261","messageId":"1262","endLine":57,"endColumn":28},{"ruleId":"1259","severity":1,"message":"1319","line":72,"column":13,"nodeType":"1261","messageId":"1262","endLine":72,"endColumn":17},{"ruleId":"1282","severity":1,"message":"1283","line":134,"column":25,"nodeType":"1284","endLine":134,"endColumn":59},{"ruleId":"1342","severity":1,"message":"1343","line":138,"column":36,"nodeType":"1284","endLine":138,"endColumn":140},{"ruleId":"1259","severity":1,"message":"1350","line":2,"column":8,"nodeType":"1261","messageId":"1262","endLine":2,"endColumn":15},{"ruleId":"1259","severity":1,"message":"1351","line":3,"column":8,"nodeType":"1261","messageId":"1262","endLine":3,"endColumn":15},{"ruleId":"1259","severity":1,"message":"1352","line":4,"column":8,"nodeType":"1261","messageId":"1262","endLine":4,"endColumn":15},{"ruleId":"1353","severity":1,"message":"1354","line":256,"column":9,"nodeType":"1355","messageId":"1308","endLine":256,"endColumn":18},{"ruleId":"1353","severity":1,"message":"1356","line":369,"column":9,"nodeType":"1355","messageId":"1308","endLine":369,"endColumn":16},{"ruleId":"1353","severity":1,"message":"1356","line":554,"column":9,"nodeType":"1355","messageId":"1308","endLine":554,"endColumn":16},{"ruleId":"1259","severity":1,"message":"1357","line":4,"column":8,"nodeType":"1261","messageId":"1262","endLine":4,"endColumn":15},{"ruleId":"1259","severity":1,"message":"1358","line":7,"column":19,"nodeType":"1261","messageId":"1262","endLine":7,"endColumn":25},{"ruleId":"1342","severity":1,"message":"1343","line":50,"column":13,"nodeType":"1284","endLine":50,"endColumn":147},{"ruleId":"1342","severity":1,"message":"1343","line":53,"column":13,"nodeType":"1284","endLine":53,"endColumn":173},{"ruleId":"1259","severity":1,"message":"1316","line":66,"column":24,"nodeType":"1261","messageId":"1262","endLine":66,"endColumn":28},{"ruleId":"1259","severity":1,"message":"1359","line":110,"column":15,"nodeType":"1261","messageId":"1262","endLine":110,"endColumn":25},{"ruleId":"1282","severity":1,"message":"1283","line":146,"column":25,"nodeType":"1284","endLine":146,"endColumn":59},{"ruleId":"1342","severity":1,"message":"1343","line":150,"column":36,"nodeType":"1284","endLine":150,"endColumn":164},{"ruleId":"1259","severity":1,"message":"1348","line":1,"column":16,"nodeType":"1261","messageId":"1262","endLine":1,"endColumn":26},{"ruleId":"1259","severity":1,"message":"1320","line":1,"column":28,"nodeType":"1261","messageId":"1262","endLine":1,"endColumn":36},{"ruleId":"1259","severity":1,"message":"1360","line":5,"column":8,"nodeType":"1261","messageId":"1262","endLine":5,"endColumn":16},{"ruleId":"1259","severity":1,"message":"1345","line":6,"column":8,"nodeType":"1261","messageId":"1262","endLine":6,"endColumn":24},{"ruleId":"1259","severity":1,"message":"1361","line":6,"column":8,"nodeType":"1261","messageId":"1262","endLine":6,"endColumn":20},{"ruleId":"1259","severity":1,"message":"1348","line":1,"column":16,"nodeType":"1261","messageId":"1262","endLine":1,"endColumn":26},{"ruleId":"1259","severity":1,"message":"1320","line":1,"column":28,"nodeType":"1261","messageId":"1262","endLine":1,"endColumn":36},{"ruleId":"1259","severity":1,"message":"1362","line":1,"column":38,"nodeType":"1261","messageId":"1262","endLine":1,"endColumn":44},{"ruleId":"1259","severity":1,"message":"1360","line":4,"column":8,"nodeType":"1261","messageId":"1262","endLine":4,"endColumn":16},{"ruleId":"1293","severity":1,"message":"1303","line":11,"column":68,"nodeType":"1295","messageId":"1304","endLine":11,"endColumn":70},{"ruleId":"1282","severity":1,"message":"1283","line":19,"column":29,"nodeType":"1284","endLine":26,"endColumn":37},{"ruleId":"1259","severity":1,"message":"1348","line":1,"column":16,"nodeType":"1261","messageId":"1262","endLine":1,"endColumn":26},{"ruleId":"1259","severity":1,"message":"1320","line":1,"column":28,"nodeType":"1261","messageId":"1262","endLine":1,"endColumn":36},{"ruleId":"1259","severity":1,"message":"1315","line":1,"column":38,"nodeType":"1261","messageId":"1262","endLine":1,"endColumn":47},{"ruleId":"1259","severity":1,"message":"1363","line":4,"column":8,"nodeType":"1261","messageId":"1262","endLine":4,"endColumn":16},{"ruleId":"1259","severity":1,"message":"1348","line":1,"column":16,"nodeType":"1261","messageId":"1262","endLine":1,"endColumn":26},{"ruleId":"1259","severity":1,"message":"1315","line":1,"column":28,"nodeType":"1261","messageId":"1262","endLine":1,"endColumn":37},{"ruleId":"1259","severity":1,"message":"1320","line":1,"column":39,"nodeType":"1261","messageId":"1262","endLine":1,"endColumn":47},{"ruleId":"1259","severity":1,"message":"1362","line":1,"column":49,"nodeType":"1261","messageId":"1262","endLine":1,"endColumn":55},{"ruleId":"1259","severity":1,"message":"1360","line":4,"column":8,"nodeType":"1261","messageId":"1262","endLine":4,"endColumn":16},{"ruleId":"1259","severity":1,"message":"1345","line":6,"column":8,"nodeType":"1261","messageId":"1262","endLine":6,"endColumn":24},{"ruleId":"1293","severity":1,"message":"1303","line":12,"column":67,"nodeType":"1295","messageId":"1304","endLine":12,"endColumn":69},{"ruleId":"1259","severity":1,"message":"1348","line":1,"column":16,"nodeType":"1261","messageId":"1262","endLine":1,"endColumn":26},{"ruleId":"1259","severity":1,"message":"1320","line":1,"column":28,"nodeType":"1261","messageId":"1262","endLine":1,"endColumn":36},{"ruleId":"1259","severity":1,"message":"1348","line":1,"column":16,"nodeType":"1261","messageId":"1262","endLine":1,"endColumn":26},{"ruleId":"1293","severity":1,"message":"1303","line":12,"column":66,"nodeType":"1295","messageId":"1304","endLine":12,"endColumn":68},{"ruleId":"1259","severity":1,"message":"1348","line":1,"column":17,"nodeType":"1261","messageId":"1262","endLine":1,"endColumn":27},{"ruleId":"1259","severity":1,"message":"1346","line":4,"column":8,"nodeType":"1261","messageId":"1262","endLine":4,"endColumn":21},{"ruleId":"1259","severity":1,"message":"1320","line":1,"column":16,"nodeType":"1261","messageId":"1262","endLine":1,"endColumn":24},{"ruleId":"1353","severity":1,"message":"1364","line":31,"column":3,"nodeType":"1355","messageId":"1308","endLine":31,"endColumn":8},{"ruleId":"1259","severity":1,"message":"1358","line":42,"column":19,"nodeType":"1261","messageId":"1262","endLine":42,"endColumn":25},{"ruleId":"1259","severity":1,"message":"1365","line":59,"column":18,"nodeType":"1261","messageId":"1262","endLine":59,"endColumn":25},{"ruleId":"1309","severity":1,"message":"1310","line":126,"column":9,"nodeType":"1311","messageId":"1312","endLine":322,"endColumn":10},{"ruleId":"1259","severity":1,"message":"1362","line":1,"column":26,"nodeType":"1261","messageId":"1262","endLine":1,"endColumn":32},{"ruleId":"1259","severity":1,"message":"1272","line":3,"column":9,"nodeType":"1261","messageId":"1262","endLine":3,"endColumn":13},{"ruleId":"1259","severity":1,"message":"1366","line":5,"column":8,"nodeType":"1261","messageId":"1262","endLine":5,"endColumn":14},{"ruleId":"1259","severity":1,"message":"1367","line":6,"column":8,"nodeType":"1261","messageId":"1262","endLine":6,"endColumn":14},{"ruleId":"1259","severity":1,"message":"1368","line":11,"column":8,"nodeType":"1261","messageId":"1262","endLine":11,"endColumn":16},{"ruleId":"1259","severity":1,"message":"1369","line":13,"column":9,"nodeType":"1261","messageId":"1262","endLine":13,"endColumn":14},{"ruleId":"1259","severity":1,"message":"1370","line":22,"column":11,"nodeType":"1261","messageId":"1262","endLine":22,"endColumn":19},{"ruleId":"1259","severity":1,"message":"1280","line":36,"column":11,"nodeType":"1261","messageId":"1262","endLine":36,"endColumn":21},{"ruleId":"1259","severity":1,"message":"1371","line":50,"column":17,"nodeType":"1261","messageId":"1262","endLine":50,"endColumn":20},{"ruleId":"1282","severity":1,"message":"1283","line":77,"column":21,"nodeType":"1284","endLine":77,"endColumn":78},{"ruleId":"1282","severity":1,"message":"1283","line":93,"column":21,"nodeType":"1284","endLine":93,"endColumn":72},{"ruleId":"1259","severity":1,"message":"1372","line":9,"column":5,"nodeType":"1261","messageId":"1262","endLine":9,"endColumn":11},{"ruleId":"1259","severity":1,"message":"1373","line":14,"column":9,"nodeType":"1261","messageId":"1262","endLine":14,"endColumn":17},{"ruleId":"1259","severity":1,"message":"1374","line":15,"column":9,"nodeType":"1261","messageId":"1262","endLine":15,"endColumn":23},{"ruleId":"1259","severity":1,"message":"1375","line":16,"column":9,"nodeType":"1261","messageId":"1262","endLine":16,"endColumn":21},{"ruleId":"1259","severity":1,"message":"1358","line":24,"column":19,"nodeType":"1261","messageId":"1262","endLine":24,"endColumn":25},{"ruleId":"1282","severity":1,"message":"1283","line":59,"column":29,"nodeType":"1284","endLine":61,"endColumn":64},{"ruleId":"1282","severity":1,"message":"1283","line":63,"column":29,"nodeType":"1284","endLine":65,"endColumn":54},{"ruleId":"1282","severity":1,"message":"1283","line":73,"column":37,"nodeType":"1284","endLine":73,"endColumn":100},{"ruleId":"1282","severity":1,"message":"1283","line":75,"column":37,"nodeType":"1284","endLine":75,"endColumn":90},{"ruleId":"1259","severity":1,"message":"1376","line":4,"column":9,"nodeType":"1261","messageId":"1262","endLine":4,"endColumn":15},{"ruleId":"1259","severity":1,"message":"1377","line":4,"column":17,"nodeType":"1261","messageId":"1262","endLine":4,"endColumn":24},{"ruleId":"1259","severity":1,"message":"1376","line":4,"column":9,"nodeType":"1261","messageId":"1262","endLine":4,"endColumn":15},{"ruleId":"1259","severity":1,"message":"1377","line":4,"column":17,"nodeType":"1261","messageId":"1262","endLine":4,"endColumn":24},{"ruleId":"1259","severity":1,"message":"1273","line":5,"column":10,"nodeType":"1261","messageId":"1262","endLine":5,"endColumn":16},{"ruleId":"1259","severity":1,"message":"1357","line":6,"column":8,"nodeType":"1261","messageId":"1262","endLine":6,"endColumn":15},{"ruleId":"1259","severity":1,"message":"1315","line":1,"column":26,"nodeType":"1261","messageId":"1262","endLine":1,"endColumn":35},{"ruleId":"1259","severity":1,"message":"1378","line":23,"column":5,"nodeType":"1261","messageId":"1262","endLine":23,"endColumn":19},{"ruleId":"1259","severity":1,"message":"1379","line":11,"column":8,"nodeType":"1261","messageId":"1262","endLine":11,"endColumn":25},{"ruleId":"1259","severity":1,"message":"1380","line":30,"column":9,"nodeType":"1261","messageId":"1262","endLine":30,"endColumn":23},{"ruleId":"1259","severity":1,"message":"1381","line":41,"column":12,"nodeType":"1261","messageId":"1262","endLine":41,"endColumn":20},{"ruleId":"1259","severity":1,"message":"1382","line":213,"column":38,"nodeType":"1261","messageId":"1262","endLine":213,"endColumn":43},{"ruleId":"1259","severity":1,"message":"1383","line":3,"column":8,"nodeType":"1261","messageId":"1262","endLine":3,"endColumn":14},{"ruleId":"1259","severity":1,"message":"1380","line":4,"column":9,"nodeType":"1261","messageId":"1262","endLine":4,"endColumn":23},{"ruleId":"1353","severity":1,"message":"1384","line":17,"column":130,"nodeType":"1355","messageId":"1308","endLine":17,"endColumn":135},{"ruleId":"1259","severity":1,"message":"1385","line":4,"column":20,"nodeType":"1261","messageId":"1262","endLine":4,"endColumn":29},{"ruleId":"1259","severity":1,"message":"1378","line":13,"column":5,"nodeType":"1261","messageId":"1262","endLine":13,"endColumn":19},{"ruleId":"1259","severity":1,"message":"1372","line":20,"column":5,"nodeType":"1261","messageId":"1262","endLine":20,"endColumn":11},{"ruleId":"1259","severity":1,"message":"1386","line":26,"column":11,"nodeType":"1261","messageId":"1262","endLine":26,"endColumn":23},{"ruleId":"1387","severity":1,"message":"1388","line":40,"column":81,"nodeType":"1307","messageId":"1389","endLine":40,"endColumn":82},{"ruleId":"1259","severity":1,"message":"1390","line":60,"column":13,"nodeType":"1261","messageId":"1262","endLine":60,"endColumn":29},{"ruleId":"1259","severity":1,"message":"1391","line":66,"column":15,"nodeType":"1261","messageId":"1262","endLine":66,"endColumn":24},{"ruleId":"1387","severity":1,"message":"1388","line":164,"column":68,"nodeType":"1307","messageId":"1389","endLine":164,"endColumn":69},{"ruleId":"1387","severity":1,"message":"1388","line":181,"column":89,"nodeType":"1307","messageId":"1389","endLine":181,"endColumn":90},{"ruleId":"1282","severity":1,"message":"1283","line":17,"column":25,"nodeType":"1284","endLine":17,"endColumn":78},{"ruleId":"1282","severity":1,"message":"1283","line":19,"column":25,"nodeType":"1284","endLine":19,"endColumn":101},{"ruleId":"1259","severity":1,"message":"1287","line":9,"column":5,"nodeType":"1261","messageId":"1262","endLine":9,"endColumn":12},{"ruleId":"1293","severity":1,"message":"1303","line":55,"column":54,"nodeType":"1295","messageId":"1304","endLine":55,"endColumn":56},{"ruleId":"1259","severity":1,"message":"1348","line":1,"column":26,"nodeType":"1261","messageId":"1262","endLine":1,"endColumn":36},{"ruleId":"1282","severity":1,"message":"1283","line":82,"column":21,"nodeType":"1284","endLine":82,"endColumn":138},{"ruleId":"1282","severity":1,"message":"1283","line":91,"column":21,"nodeType":"1284","endLine":91,"endColumn":138},{"ruleId":"1282","severity":1,"message":"1283","line":100,"column":21,"nodeType":"1284","endLine":100,"endColumn":138},{"ruleId":"1282","severity":1,"message":"1283","line":110,"column":21,"nodeType":"1284","endLine":110,"endColumn":138},{"ruleId":"1259","severity":1,"message":"1348","line":1,"column":26,"nodeType":"1261","messageId":"1262","endLine":1,"endColumn":36},{"ruleId":"1259","severity":1,"message":"1392","line":62,"column":11,"nodeType":"1261","messageId":"1262","endLine":62,"endColumn":17},{"ruleId":"1259","severity":1,"message":"1393","line":69,"column":11,"nodeType":"1261","messageId":"1262","endLine":69,"endColumn":17},{"ruleId":"1259","severity":1,"message":"1394","line":17,"column":9,"nodeType":"1261","messageId":"1262","endLine":17,"endColumn":13},{"ruleId":"1309","severity":1,"message":"1310","line":246,"column":9,"nodeType":"1311","messageId":"1312","endLine":434,"endColumn":10},{"ruleId":"1309","severity":1,"message":"1310","line":118,"column":9,"nodeType":"1311","messageId":"1312","endLine":153,"endColumn":10},{"ruleId":"1309","severity":1,"message":"1310","line":30,"column":9,"nodeType":"1311","messageId":"1312","endLine":46,"endColumn":10},{"ruleId":"1259","severity":1,"message":"1315","line":1,"column":38,"nodeType":"1261","messageId":"1262","endLine":1,"endColumn":47},{"ruleId":"1259","severity":1,"message":"1394","line":9,"column":9,"nodeType":"1261","messageId":"1262","endLine":9,"endColumn":13},{"ruleId":"1309","severity":1,"message":"1310","line":54,"column":9,"nodeType":"1311","messageId":"1312","endLine":95,"endColumn":10},{"ruleId":"1259","severity":1,"message":"1395","line":3,"column":8,"nodeType":"1261","messageId":"1262","endLine":3,"endColumn":19},{"ruleId":"1259","severity":1,"message":"1396","line":6,"column":8,"nodeType":"1261","messageId":"1262","endLine":6,"endColumn":19},{"ruleId":"1259","severity":1,"message":"1358","line":20,"column":19,"nodeType":"1261","messageId":"1262","endLine":20,"endColumn":25},{"ruleId":"1309","severity":1,"message":"1310","line":62,"column":9,"nodeType":"1311","messageId":"1312","endLine":92,"endColumn":10},{"ruleId":"1309","severity":1,"message":"1310","line":127,"column":9,"nodeType":"1311","messageId":"1312","endLine":157,"endColumn":10},{"ruleId":"1259","severity":1,"message":"1397","line":11,"column":8,"nodeType":"1261","messageId":"1262","endLine":11,"endColumn":22},{"ruleId":"1259","severity":1,"message":"1398","line":15,"column":7,"nodeType":"1261","messageId":"1262","endLine":15,"endColumn":20},{"ruleId":"1309","severity":1,"message":"1310","line":62,"column":9,"nodeType":"1311","messageId":"1312","endLine":110,"endColumn":10},{"ruleId":"1259","severity":1,"message":"1399","line":11,"column":8,"nodeType":"1261","messageId":"1262","endLine":11,"endColumn":25},{"ruleId":"1259","severity":1,"message":"1320","line":1,"column":16,"nodeType":"1261","messageId":"1262","endLine":1,"endColumn":24},{"ruleId":"1259","severity":1,"message":"1320","line":1,"column":16,"nodeType":"1261","messageId":"1262","endLine":1,"endColumn":24},{"ruleId":"1259","severity":1,"message":"1399","line":8,"column":8,"nodeType":"1261","messageId":"1262","endLine":8,"endColumn":25},{"ruleId":"1259","severity":1,"message":"1320","line":1,"column":16,"nodeType":"1261","messageId":"1262","endLine":1,"endColumn":24},{"ruleId":"1259","severity":1,"message":"1400","line":16,"column":11,"nodeType":"1261","messageId":"1262","endLine":16,"endColumn":29},{"ruleId":"1259","severity":1,"message":"1320","line":1,"column":16,"nodeType":"1261","messageId":"1262","endLine":1,"endColumn":24},{"ruleId":"1259","severity":1,"message":"1395","line":3,"column":8,"nodeType":"1261","messageId":"1262","endLine":3,"endColumn":19},{"ruleId":"1259","severity":1,"message":"1401","line":17,"column":7,"nodeType":"1261","messageId":"1262","endLine":17,"endColumn":18},{"ruleId":"1259","severity":1,"message":"1358","line":23,"column":19,"nodeType":"1261","messageId":"1262","endLine":23,"endColumn":25},{"ruleId":"1259","severity":1,"message":"1345","line":4,"column":8,"nodeType":"1261","messageId":"1262","endLine":4,"endColumn":24},{"ruleId":"1282","severity":1,"message":"1283","line":62,"column":21,"nodeType":"1284","endLine":62,"endColumn":91},{"ruleId":"1259","severity":1,"message":"1345","line":7,"column":8,"nodeType":"1261","messageId":"1262","endLine":7,"endColumn":24},{"ruleId":"1259","severity":1,"message":"1402","line":11,"column":12,"nodeType":"1261","messageId":"1262","endLine":11,"endColumn":17},{"ruleId":"1259","severity":1,"message":"1320","line":1,"column":28,"nodeType":"1261","messageId":"1262","endLine":1,"endColumn":36},{"ruleId":"1259","severity":1,"message":"1362","line":1,"column":38,"nodeType":"1261","messageId":"1262","endLine":1,"endColumn":44},{"ruleId":"1259","severity":1,"message":"1360","line":6,"column":8,"nodeType":"1261","messageId":"1262","endLine":6,"endColumn":16},{"ruleId":"1293","severity":1,"message":"1303","line":14,"column":68,"nodeType":"1295","messageId":"1304","endLine":14,"endColumn":70},{"ruleId":"1282","severity":1,"message":"1283","line":22,"column":29,"nodeType":"1284","endLine":30,"endColumn":37},{"ruleId":"1259","severity":1,"message":"1320","line":1,"column":28,"nodeType":"1261","messageId":"1262","endLine":1,"endColumn":36},{"ruleId":"1259","severity":1,"message":"1360","line":7,"column":8,"nodeType":"1261","messageId":"1262","endLine":7,"endColumn":16},{"ruleId":"1259","severity":1,"message":"1320","line":1,"column":28,"nodeType":"1261","messageId":"1262","endLine":1,"endColumn":36},{"ruleId":"1259","severity":1,"message":"1345","line":8,"column":8,"nodeType":"1261","messageId":"1262","endLine":8,"endColumn":24},{"ruleId":"1259","severity":1,"message":"1320","line":1,"column":28,"nodeType":"1261","messageId":"1262","endLine":1,"endColumn":36},{"ruleId":"1259","severity":1,"message":"1315","line":1,"column":38,"nodeType":"1261","messageId":"1262","endLine":1,"endColumn":47},{"ruleId":"1259","severity":1,"message":"1357","line":4,"column":9,"nodeType":"1261","messageId":"1262","endLine":4,"endColumn":16},{"ruleId":"1259","severity":1,"message":"1402","line":8,"column":12,"nodeType":"1261","messageId":"1262","endLine":8,"endColumn":17},{"ruleId":"1259","severity":1,"message":"1358","line":8,"column":19,"nodeType":"1261","messageId":"1262","endLine":8,"endColumn":25},{"ruleId":"1259","severity":1,"message":"1320","line":1,"column":28,"nodeType":"1261","messageId":"1262","endLine":1,"endColumn":36},{"ruleId":"1259","severity":1,"message":"1320","line":1,"column":28,"nodeType":"1261","messageId":"1262","endLine":1,"endColumn":36},{"ruleId":"1259","severity":1,"message":"1320","line":1,"column":28,"nodeType":"1261","messageId":"1262","endLine":1,"endColumn":36},{"ruleId":"1259","severity":1,"message":"1362","line":1,"column":38,"nodeType":"1261","messageId":"1262","endLine":1,"endColumn":44},{"ruleId":"1259","severity":1,"message":"1402","line":9,"column":12,"nodeType":"1261","messageId":"1262","endLine":9,"endColumn":17},{"ruleId":"1259","severity":1,"message":"1358","line":9,"column":19,"nodeType":"1261","messageId":"1262","endLine":9,"endColumn":25},{"ruleId":"1259","severity":1,"message":"1315","line":1,"column":28,"nodeType":"1261","messageId":"1262","endLine":1,"endColumn":37},{"ruleId":"1259","severity":1,"message":"1320","line":1,"column":39,"nodeType":"1261","messageId":"1262","endLine":1,"endColumn":47},{"ruleId":"1259","severity":1,"message":"1362","line":1,"column":49,"nodeType":"1261","messageId":"1262","endLine":1,"endColumn":55},{"ruleId":"1259","severity":1,"message":"1360","line":5,"column":8,"nodeType":"1261","messageId":"1262","endLine":5,"endColumn":16},{"ruleId":"1259","severity":1,"message":"1345","line":9,"column":8,"nodeType":"1261","messageId":"1262","endLine":9,"endColumn":24},{"ruleId":"1293","severity":1,"message":"1303","line":16,"column":67,"nodeType":"1295","messageId":"1304","endLine":16,"endColumn":69},{"ruleId":"1293","severity":1,"message":"1303","line":15,"column":66,"nodeType":"1295","messageId":"1304","endLine":15,"endColumn":68},{"ruleId":"1259","severity":1,"message":"1320","line":1,"column":28,"nodeType":"1261","messageId":"1262","endLine":1,"endColumn":36},{"ruleId":"1259","severity":1,"message":"1361","line":8,"column":8,"nodeType":"1261","messageId":"1262","endLine":8,"endColumn":20},{"ruleId":"1259","severity":1,"message":"1315","line":1,"column":29,"nodeType":"1261","messageId":"1262","endLine":1,"endColumn":38},{"ruleId":"1259","severity":1,"message":"1320","line":1,"column":40,"nodeType":"1261","messageId":"1262","endLine":1,"endColumn":48},{"ruleId":"1259","severity":1,"message":"1362","line":1,"column":50,"nodeType":"1261","messageId":"1262","endLine":1,"endColumn":56},{"ruleId":"1259","severity":1,"message":"1358","line":12,"column":19,"nodeType":"1261","messageId":"1262","endLine":12,"endColumn":25},{"ruleId":"1259","severity":1,"message":"1272","line":2,"column":10,"nodeType":"1261","messageId":"1262","endLine":2,"endColumn":14},{"ruleId":"1259","severity":1,"message":"1357","line":3,"column":8,"nodeType":"1261","messageId":"1262","endLine":3,"endColumn":15},{"ruleId":"1259","severity":1,"message":"1346","line":8,"column":8,"nodeType":"1261","messageId":"1262","endLine":8,"endColumn":21},{"ruleId":"1259","severity":1,"message":"1403","line":12,"column":8,"nodeType":"1261","messageId":"1262","endLine":12,"endColumn":22},{"ruleId":"1259","severity":1,"message":"1404","line":13,"column":8,"nodeType":"1261","messageId":"1262","endLine":13,"endColumn":23},{"ruleId":"1259","severity":1,"message":"1358","line":20,"column":19,"nodeType":"1261","messageId":"1262","endLine":20,"endColumn":25},{"ruleId":"1259","severity":1,"message":"1272","line":3,"column":9,"nodeType":"1261","messageId":"1262","endLine":3,"endColumn":13},{"ruleId":"1267","severity":1,"message":"1405","line":14,"column":5,"nodeType":"1261","endLine":14,"endColumn":14,"suggestions":"1406"},{"ruleId":"1259","severity":1,"message":"1320","line":1,"column":16,"nodeType":"1261","messageId":"1262","endLine":1,"endColumn":24},{"ruleId":"1259","severity":1,"message":"1395","line":9,"column":8,"nodeType":"1261","messageId":"1262","endLine":9,"endColumn":19},{"ruleId":"1259","severity":1,"message":"1397","line":11,"column":8,"nodeType":"1261","messageId":"1262","endLine":11,"endColumn":22},{"ruleId":"1309","severity":1,"message":"1310","line":42,"column":9,"nodeType":"1311","messageId":"1312","endLine":70,"endColumn":10},{"ruleId":"1259","severity":1,"message":"1320","line":1,"column":16,"nodeType":"1261","messageId":"1262","endLine":1,"endColumn":24},{"ruleId":"1259","severity":1,"message":"1407","line":22,"column":8,"nodeType":"1261","messageId":"1262","endLine":22,"endColumn":12},{"ruleId":"1282","severity":1,"message":"1283","line":128,"column":37,"nodeType":"1284","endLine":128,"endColumn":73},{"ruleId":"1259","severity":1,"message":"1320","line":1,"column":16,"nodeType":"1261","messageId":"1262","endLine":1,"endColumn":24},{"ruleId":"1259","severity":1,"message":"1397","line":6,"column":8,"nodeType":"1261","messageId":"1262","endLine":6,"endColumn":22},{"ruleId":"1259","severity":1,"message":"1408","line":15,"column":10,"nodeType":"1261","messageId":"1262","endLine":15,"endColumn":35},{"ruleId":"1309","severity":1,"message":"1310","line":149,"column":9,"nodeType":"1311","messageId":"1312","endLine":184,"endColumn":10},{"ruleId":"1259","severity":1,"message":"1409","line":214,"column":11,"nodeType":"1261","messageId":"1262","endLine":214,"endColumn":24},{"ruleId":"1309","severity":1,"message":"1310","line":264,"column":9,"nodeType":"1311","messageId":"1312","endLine":336,"endColumn":10},{"ruleId":"1259","severity":1,"message":"1358","line":5,"column":19,"nodeType":"1261","messageId":"1262","endLine":5,"endColumn":25},{"ruleId":"1259","severity":1,"message":"1362","line":1,"column":39,"nodeType":"1261","messageId":"1262","endLine":1,"endColumn":45},{"ruleId":"1259","severity":1,"message":"1315","line":1,"column":47,"nodeType":"1261","messageId":"1262","endLine":1,"endColumn":56},{"ruleId":"1259","severity":1,"message":"1360","line":10,"column":8,"nodeType":"1261","messageId":"1262","endLine":10,"endColumn":16},{"ruleId":"1259","severity":1,"message":"1315","line":1,"column":28,"nodeType":"1261","messageId":"1262","endLine":1,"endColumn":37},{"ruleId":"1259","severity":1,"message":"1320","line":1,"column":39,"nodeType":"1261","messageId":"1262","endLine":1,"endColumn":47},{"ruleId":"1259","severity":1,"message":"1362","line":1,"column":49,"nodeType":"1261","messageId":"1262","endLine":1,"endColumn":55},{"ruleId":"1259","severity":1,"message":"1345","line":5,"column":8,"nodeType":"1261","messageId":"1262","endLine":5,"endColumn":24},{"ruleId":"1259","severity":1,"message":"1410","line":20,"column":7,"nodeType":"1261","messageId":"1262","endLine":20,"endColumn":19},{"ruleId":"1309","severity":1,"message":"1310","line":30,"column":9,"nodeType":"1311","messageId":"1312","endLine":171,"endColumn":10},{"ruleId":"1259","severity":1,"message":"1320","line":1,"column":16,"nodeType":"1261","messageId":"1262","endLine":1,"endColumn":24},{"ruleId":"1259","severity":1,"message":"1395","line":3,"column":8,"nodeType":"1261","messageId":"1262","endLine":3,"endColumn":19},{"ruleId":"1259","severity":1,"message":"1396","line":6,"column":8,"nodeType":"1261","messageId":"1262","endLine":6,"endColumn":19},{"ruleId":"1259","severity":1,"message":"1357","line":4,"column":8,"nodeType":"1261","messageId":"1262","endLine":4,"endColumn":15},{"ruleId":"1259","severity":1,"message":"1402","line":8,"column":12,"nodeType":"1261","messageId":"1262","endLine":8,"endColumn":17},{"ruleId":"1259","severity":1,"message":"1358","line":8,"column":19,"nodeType":"1261","messageId":"1262","endLine":8,"endColumn":25},{"ruleId":"1259","severity":1,"message":"1395","line":6,"column":8,"nodeType":"1261","messageId":"1262","endLine":6,"endColumn":19},{"ruleId":"1259","severity":1,"message":"1397","line":9,"column":8,"nodeType":"1261","messageId":"1262","endLine":9,"endColumn":22},{"ruleId":"1259","severity":1,"message":"1411","line":16,"column":7,"nodeType":"1261","messageId":"1262","endLine":16,"endColumn":24},{"ruleId":"1305","severity":1,"message":"1306","line":27,"column":56,"nodeType":"1307","messageId":"1308","endLine":27,"endColumn":58},{"ruleId":"1259","severity":1,"message":"1395","line":7,"column":8,"nodeType":"1261","messageId":"1262","endLine":7,"endColumn":19},{"ruleId":"1259","severity":1,"message":"1396","line":8,"column":8,"nodeType":"1261","messageId":"1262","endLine":8,"endColumn":19},{"ruleId":"1282","severity":1,"message":"1283","line":54,"column":25,"nodeType":"1284","endLine":54,"endColumn":64},{"ruleId":"1259","severity":1,"message":"1412","line":14,"column":5,"nodeType":"1261","messageId":"1262","endLine":14,"endColumn":18},{"ruleId":"1282","severity":1,"message":"1283","line":47,"column":21,"nodeType":"1284","endLine":47,"endColumn":197},{"ruleId":"1259","severity":1,"message":"1320","line":1,"column":29,"nodeType":"1261","messageId":"1262","endLine":1,"endColumn":37},{"ruleId":"1259","severity":1,"message":"1362","line":1,"column":39,"nodeType":"1261","messageId":"1262","endLine":1,"endColumn":45},{"ruleId":"1259","severity":1,"message":"1346","line":3,"column":8,"nodeType":"1261","messageId":"1262","endLine":3,"endColumn":21},{"ruleId":"1342","severity":1,"message":"1343","line":60,"column":71,"nodeType":"1284","endLine":60,"endColumn":189},{"ruleId":"1282","severity":1,"message":"1283","line":84,"column":25,"nodeType":"1284","endLine":84,"endColumn":133},{"ruleId":"1282","severity":1,"message":"1283","line":89,"column":25,"nodeType":"1284","endLine":89,"endColumn":132},{"ruleId":"1282","severity":1,"message":"1283","line":131,"column":25,"nodeType":"1284","endLine":131,"endColumn":133},{"ruleId":"1282","severity":1,"message":"1283","line":136,"column":25,"nodeType":"1284","endLine":136,"endColumn":132},{"ruleId":"1259","severity":1,"message":"1320","line":1,"column":24,"nodeType":"1261","messageId":"1262","endLine":1,"endColumn":32},{"ruleId":"1413","severity":1,"message":"1414","line":79,"column":21,"nodeType":"1284","endLine":79,"endColumn":252},{"ruleId":"1282","severity":1,"message":"1283","line":121,"column":25,"nodeType":"1284","endLine":128,"endColumn":34},{"ruleId":"1282","severity":1,"message":"1283","line":146,"column":21,"nodeType":"1284","endLine":148,"endColumn":54},{"ruleId":"1282","severity":1,"message":"1283","line":166,"column":25,"nodeType":"1284","endLine":168,"endColumn":60},{"ruleId":"1282","severity":1,"message":"1283","line":188,"column":21,"nodeType":"1284","endLine":190,"endColumn":52},{"ruleId":"1282","severity":1,"message":"1283","line":205,"column":21,"nodeType":"1284","endLine":207,"endColumn":52},{"ruleId":"1259","severity":1,"message":"1320","line":1,"column":24,"nodeType":"1261","messageId":"1262","endLine":1,"endColumn":32},{"ruleId":"1259","severity":1,"message":"1348","line":1,"column":34,"nodeType":"1261","messageId":"1262","endLine":1,"endColumn":44},{"ruleId":"1413","severity":1,"message":"1414","line":32,"column":21,"nodeType":"1284","endLine":32,"endColumn":252},{"ruleId":"1282","severity":1,"message":"1283","line":59,"column":21,"nodeType":"1284","endLine":67,"endColumn":27},{"ruleId":"1282","severity":1,"message":"1283","line":77,"column":21,"nodeType":"1284","endLine":79,"endColumn":52},{"ruleId":"1282","severity":1,"message":"1283","line":89,"column":25,"nodeType":"1284","endLine":91,"endColumn":60},{"ruleId":"1259","severity":1,"message":"1345","line":4,"column":8,"nodeType":"1261","messageId":"1262","endLine":4,"endColumn":24},{"ruleId":"1259","severity":1,"message":"1358","line":7,"column":19,"nodeType":"1261","messageId":"1262","endLine":7,"endColumn":25},{"ruleId":"1259","severity":1,"message":"1348","line":1,"column":16,"nodeType":"1261","messageId":"1262","endLine":1,"endColumn":26},{"ruleId":"1259","severity":1,"message":"1415","line":2,"column":10,"nodeType":"1261","messageId":"1262","endLine":2,"endColumn":19},{"ruleId":"1259","severity":1,"message":"1416","line":3,"column":8,"nodeType":"1261","messageId":"1262","endLine":3,"endColumn":17},{"ruleId":"1282","severity":1,"message":"1283","line":23,"column":17,"nodeType":"1284","endLine":23,"endColumn":193},{"ruleId":"1259","severity":1,"message":"1321","line":1,"column":39,"nodeType":"1261","messageId":"1262","endLine":1,"endColumn":46},{"ruleId":"1259","severity":1,"message":"1358","line":15,"column":19,"nodeType":"1261","messageId":"1262","endLine":15,"endColumn":25},{"ruleId":"1342","severity":1,"message":"1343","line":121,"column":144,"nodeType":"1284","endLine":121,"endColumn":262},{"ruleId":"1282","severity":1,"message":"1283","line":178,"column":25,"nodeType":"1284","endLine":184,"endColumn":33},{"ruleId":"1282","severity":1,"message":"1283","line":189,"column":25,"nodeType":"1284","endLine":195,"endColumn":33},{"ruleId":"1259","severity":1,"message":"1358","line":6,"column":19,"nodeType":"1261","messageId":"1262","endLine":6,"endColumn":25},{"ruleId":"1259","severity":1,"message":"1320","line":12,"column":16,"nodeType":"1261","messageId":"1262","endLine":12,"endColumn":24},{"ruleId":"1259","severity":1,"message":"1315","line":1,"column":24,"nodeType":"1261","messageId":"1262","endLine":1,"endColumn":33},{"ruleId":"1259","severity":1,"message":"1417","line":6,"column":8,"nodeType":"1261","messageId":"1262","endLine":6,"endColumn":14},{"ruleId":"1259","severity":1,"message":"1358","line":14,"column":19,"nodeType":"1261","messageId":"1262","endLine":14,"endColumn":25},{"ruleId":"1282","severity":1,"message":"1283","line":51,"column":19,"nodeType":"1284","endLine":51,"endColumn":62},{"ruleId":"1259","severity":1,"message":"1315","line":1,"column":24,"nodeType":"1261","messageId":"1262","endLine":1,"endColumn":33},{"ruleId":"1259","severity":1,"message":"1358","line":13,"column":19,"nodeType":"1261","messageId":"1262","endLine":13,"endColumn":25},{"ruleId":"1282","severity":1,"message":"1283","line":50,"column":19,"nodeType":"1284","endLine":50,"endColumn":62},{"ruleId":"1259","severity":1,"message":"1369","line":5,"column":10,"nodeType":"1261","messageId":"1262","endLine":5,"endColumn":15},{"ruleId":"1259","severity":1,"message":"1320","line":1,"column":16,"nodeType":"1261","messageId":"1262","endLine":1,"endColumn":24},{"ruleId":"1259","severity":1,"message":"1320","line":1,"column":28,"nodeType":"1261","messageId":"1262","endLine":1,"endColumn":36},{"ruleId":"1259","severity":1,"message":"1362","line":1,"column":38,"nodeType":"1261","messageId":"1262","endLine":1,"endColumn":44},{"ruleId":"1259","severity":1,"message":"1418","line":6,"column":8,"nodeType":"1261","messageId":"1262","endLine":6,"endColumn":10},{"ruleId":"1259","severity":1,"message":"1402","line":9,"column":12,"nodeType":"1261","messageId":"1262","endLine":9,"endColumn":17},{"ruleId":"1259","severity":1,"message":"1419","line":3,"column":10,"nodeType":"1261","messageId":"1262","endLine":3,"endColumn":18},{"ruleId":"1259","severity":1,"message":"1420","line":4,"column":10,"nodeType":"1261","messageId":"1262","endLine":4,"endColumn":24},{"ruleId":"1259","severity":1,"message":"1402","line":8,"column":12,"nodeType":"1261","messageId":"1262","endLine":8,"endColumn":17},{"ruleId":"1259","severity":1,"message":"1358","line":8,"column":19,"nodeType":"1261","messageId":"1262","endLine":8,"endColumn":25},{"ruleId":"1259","severity":1,"message":"1417","line":2,"column":10,"nodeType":"1261","messageId":"1262","endLine":2,"endColumn":16},{"ruleId":"1259","severity":1,"message":"1421","line":3,"column":8,"nodeType":"1261","messageId":"1262","endLine":3,"endColumn":14},{"ruleId":"1259","severity":1,"message":"1348","line":1,"column":16,"nodeType":"1261","messageId":"1262","endLine":1,"endColumn":26},{"ruleId":"1259","severity":1,"message":"1415","line":2,"column":10,"nodeType":"1261","messageId":"1262","endLine":2,"endColumn":19},{"ruleId":"1259","severity":1,"message":"1362","line":1,"column":38,"nodeType":"1261","messageId":"1262","endLine":1,"endColumn":44},{"ruleId":"1259","severity":1,"message":"1358","line":20,"column":19,"nodeType":"1261","messageId":"1262","endLine":20,"endColumn":25},{"ruleId":"1259","severity":1,"message":"1320","line":1,"column":28,"nodeType":"1261","messageId":"1262","endLine":1,"endColumn":36},{"ruleId":"1259","severity":1,"message":"1402","line":19,"column":12,"nodeType":"1261","messageId":"1262","endLine":19,"endColumn":17},{"ruleId":"1259","severity":1,"message":"1358","line":19,"column":19,"nodeType":"1261","messageId":"1262","endLine":19,"endColumn":25},{"ruleId":"1259","severity":1,"message":"1422","line":22,"column":11,"nodeType":"1261","messageId":"1262","endLine":22,"endColumn":18},{"ruleId":"1259","severity":1,"message":"1315","line":1,"column":26,"nodeType":"1261","messageId":"1262","endLine":1,"endColumn":35},{"ruleId":"1259","severity":1,"message":"1287","line":3,"column":10,"nodeType":"1261","messageId":"1262","endLine":3,"endColumn":17},{"ruleId":"1259","severity":1,"message":"1423","line":14,"column":10,"nodeType":"1261","messageId":"1262","endLine":14,"endColumn":13},{"ruleId":"1259","severity":1,"message":"1424","line":14,"column":15,"nodeType":"1261","messageId":"1262","endLine":14,"endColumn":21},{"ruleId":"1259","severity":1,"message":"1357","line":4,"column":8,"nodeType":"1261","messageId":"1262","endLine":4,"endColumn":15},{"ruleId":"1259","severity":1,"message":"1402","line":45,"column":12,"nodeType":"1261","messageId":"1262","endLine":45,"endColumn":17},{"ruleId":"1259","severity":1,"message":"1358","line":45,"column":19,"nodeType":"1261","messageId":"1262","endLine":45,"endColumn":25},{"ruleId":"1309","severity":1,"message":"1310","line":47,"column":5,"nodeType":"1311","messageId":"1312","endLine":176,"endColumn":6},{"ruleId":"1282","severity":1,"message":"1283","line":53,"column":29,"nodeType":"1284","endLine":53,"endColumn":49},{"ruleId":"1282","severity":1,"message":"1283","line":55,"column":29,"nodeType":"1284","endLine":55,"endColumn":49},{"ruleId":"1282","severity":1,"message":"1283","line":60,"column":29,"nodeType":"1284","endLine":60,"endColumn":49},{"ruleId":"1282","severity":1,"message":"1283","line":62,"column":29,"nodeType":"1284","endLine":62,"endColumn":49},{"ruleId":"1282","severity":1,"message":"1283","line":69,"column":29,"nodeType":"1284","endLine":69,"endColumn":49},{"ruleId":"1282","severity":1,"message":"1283","line":71,"column":29,"nodeType":"1284","endLine":71,"endColumn":49},{"ruleId":"1282","severity":1,"message":"1283","line":76,"column":29,"nodeType":"1284","endLine":76,"endColumn":49},{"ruleId":"1282","severity":1,"message":"1283","line":78,"column":29,"nodeType":"1284","endLine":78,"endColumn":49},{"ruleId":"1282","severity":1,"message":"1283","line":89,"column":29,"nodeType":"1284","endLine":89,"endColumn":49},{"ruleId":"1282","severity":1,"message":"1283","line":91,"column":29,"nodeType":"1284","endLine":91,"endColumn":49},{"ruleId":"1282","severity":1,"message":"1283","line":97,"column":29,"nodeType":"1284","endLine":97,"endColumn":49},{"ruleId":"1282","severity":1,"message":"1283","line":99,"column":29,"nodeType":"1284","endLine":99,"endColumn":49},{"ruleId":"1282","severity":1,"message":"1283","line":105,"column":29,"nodeType":"1284","endLine":105,"endColumn":49},{"ruleId":"1282","severity":1,"message":"1283","line":107,"column":29,"nodeType":"1284","endLine":107,"endColumn":49},{"ruleId":"1282","severity":1,"message":"1283","line":117,"column":29,"nodeType":"1284","endLine":117,"endColumn":49},{"ruleId":"1282","severity":1,"message":"1283","line":119,"column":29,"nodeType":"1284","endLine":119,"endColumn":49},{"ruleId":"1282","severity":1,"message":"1283","line":124,"column":29,"nodeType":"1284","endLine":124,"endColumn":49},{"ruleId":"1282","severity":1,"message":"1283","line":126,"column":29,"nodeType":"1284","endLine":126,"endColumn":49},{"ruleId":"1282","severity":1,"message":"1283","line":136,"column":29,"nodeType":"1284","endLine":136,"endColumn":75},{"ruleId":"1282","severity":1,"message":"1283","line":138,"column":29,"nodeType":"1284","endLine":138,"endColumn":75},{"ruleId":"1282","severity":1,"message":"1283","line":143,"column":29,"nodeType":"1284","endLine":143,"endColumn":49},{"ruleId":"1282","severity":1,"message":"1283","line":145,"column":29,"nodeType":"1284","endLine":145,"endColumn":49},{"ruleId":"1282","severity":1,"message":"1283","line":155,"column":29,"nodeType":"1284","endLine":155,"endColumn":49},{"ruleId":"1282","severity":1,"message":"1283","line":157,"column":29,"nodeType":"1284","endLine":157,"endColumn":49},{"ruleId":"1282","severity":1,"message":"1283","line":162,"column":29,"nodeType":"1284","endLine":162,"endColumn":49},{"ruleId":"1282","severity":1,"message":"1283","line":164,"column":29,"nodeType":"1284","endLine":164,"endColumn":49},{"ruleId":"1282","severity":1,"message":"1283","line":169,"column":29,"nodeType":"1284","endLine":169,"endColumn":49},{"ruleId":"1282","severity":1,"message":"1283","line":171,"column":29,"nodeType":"1284","endLine":171,"endColumn":49},{"ruleId":"1259","severity":1,"message":"1362","line":1,"column":16,"nodeType":"1261","messageId":"1262","endLine":1,"endColumn":22},{"ruleId":"1259","severity":1,"message":"1425","line":10,"column":11,"nodeType":"1261","messageId":"1262","endLine":10,"endColumn":23},{"ruleId":"1387","severity":1,"message":"1388","line":22,"column":74,"nodeType":"1307","messageId":"1389","endLine":22,"endColumn":75},{"ruleId":"1259","severity":1,"message":"1426","line":9,"column":3,"nodeType":"1261","messageId":"1262","endLine":9,"endColumn":13},{"ruleId":"1259","severity":1,"message":"1427","line":11,"column":3,"nodeType":"1261","messageId":"1262","endLine":11,"endColumn":14},{"ruleId":"1259","severity":1,"message":"1428","line":12,"column":3,"nodeType":"1261","messageId":"1262","endLine":12,"endColumn":19},{"ruleId":"1259","severity":1,"message":"1429","line":13,"column":3,"nodeType":"1261","messageId":"1262","endLine":13,"endColumn":21},{"ruleId":"1259","severity":1,"message":"1430","line":14,"column":3,"nodeType":"1261","messageId":"1262","endLine":14,"endColumn":25},{"ruleId":"1259","severity":1,"message":"1431","line":15,"column":3,"nodeType":"1261","messageId":"1262","endLine":15,"endColumn":25},{"ruleId":"1259","severity":1,"message":"1432","line":17,"column":10,"nodeType":"1261","messageId":"1262","endLine":17,"endColumn":29},{"ruleId":"1259","severity":1,"message":"1433","line":3,"column":8,"nodeType":"1261","messageId":"1262","endLine":3,"endColumn":18},{"ruleId":"1259","severity":1,"message":"1434","line":6,"column":12,"nodeType":"1261","messageId":"1262","endLine":6,"endColumn":26},{"ruleId":"1259","severity":1,"message":"1435","line":6,"column":28,"nodeType":"1261","messageId":"1262","endLine":6,"endColumn":45},{"ruleId":"1305","severity":1,"message":"1436","line":20,"column":151,"nodeType":"1307","messageId":"1308","endLine":20,"endColumn":153},{"ruleId":"1259","severity":1,"message":"1437","line":2,"column":8,"nodeType":"1261","messageId":"1262","endLine":2,"endColumn":16},{"ruleId":"1259","severity":1,"message":"1438","line":2,"column":9,"nodeType":"1261","messageId":"1262","endLine":2,"endColumn":18},{"ruleId":"1259","severity":1,"message":"1439","line":5,"column":10,"nodeType":"1261","messageId":"1262","endLine":5,"endColumn":19},{"ruleId":"1282","severity":1,"message":"1283","line":42,"column":25,"nodeType":"1284","endLine":42,"endColumn":44},{"ruleId":"1282","severity":1,"message":"1283","line":49,"column":25,"nodeType":"1284","endLine":49,"endColumn":44},{"ruleId":"1282","severity":1,"message":"1283","line":60,"column":25,"nodeType":"1284","endLine":60,"endColumn":44},{"ruleId":"1282","severity":1,"message":"1283","line":67,"column":25,"nodeType":"1284","endLine":67,"endColumn":44},{"ruleId":"1305","severity":1,"message":"1306","line":77,"column":28,"nodeType":"1307","messageId":"1308","endLine":77,"endColumn":30},{"ruleId":"1305","severity":1,"message":"1306","line":94,"column":24,"nodeType":"1307","messageId":"1308","endLine":94,"endColumn":26},{"ruleId":"1305","severity":1,"message":"1306","line":111,"column":24,"nodeType":"1307","messageId":"1308","endLine":111,"endColumn":26},{"ruleId":"1259","severity":1,"message":"1440","line":8,"column":5,"nodeType":"1261","messageId":"1262","endLine":8,"endColumn":16},{"ruleId":"1259","severity":1,"message":"1358","line":16,"column":19,"nodeType":"1261","messageId":"1262","endLine":16,"endColumn":25},{"ruleId":"1259","severity":1,"message":"1441","line":17,"column":12,"nodeType":"1261","messageId":"1262","endLine":17,"endColumn":17},{"ruleId":"1259","severity":1,"message":"1442","line":17,"column":19,"nodeType":"1261","messageId":"1262","endLine":17,"endColumn":27},{"ruleId":"1259","severity":1,"message":"1272","line":4,"column":9,"nodeType":"1261","messageId":"1262","endLine":4,"endColumn":13},{"ruleId":"1259","severity":1,"message":"1378","line":6,"column":9,"nodeType":"1261","messageId":"1262","endLine":6,"endColumn":23},{"ruleId":"1259","severity":1,"message":"1372","line":6,"column":25,"nodeType":"1261","messageId":"1262","endLine":6,"endColumn":31},{"ruleId":"1293","severity":1,"message":"1294","line":60,"column":34,"nodeType":"1295","messageId":"1296","endLine":60,"endColumn":36},{"ruleId":"1293","severity":1,"message":"1294","line":61,"column":43,"nodeType":"1295","messageId":"1296","endLine":61,"endColumn":45},{"ruleId":"1259","severity":1,"message":"1443","line":105,"column":11,"nodeType":"1261","messageId":"1262","endLine":105,"endColumn":21},{"ruleId":"1259","severity":1,"message":"1444","line":106,"column":13,"nodeType":"1261","messageId":"1262","endLine":106,"endColumn":16},{"ruleId":"1293","severity":1,"message":"1303","line":108,"column":37,"nodeType":"1295","messageId":"1304","endLine":108,"endColumn":39},{"ruleId":"1259","severity":1,"message":"1362","line":1,"column":26,"nodeType":"1261","messageId":"1262","endLine":1,"endColumn":32},{"ruleId":"1259","severity":1,"message":"1445","line":14,"column":9,"nodeType":"1261","messageId":"1262","endLine":14,"endColumn":20},{"ruleId":"1282","severity":1,"message":"1283","line":176,"column":25,"nodeType":"1284","endLine":176,"endColumn":103},{"ruleId":"1282","severity":1,"message":"1283","line":193,"column":25,"nodeType":"1284","endLine":193,"endColumn":97},{"ruleId":"1353","severity":1,"message":"1446","line":223,"column":21,"nodeType":"1355","messageId":"1308","endLine":223,"endColumn":29},{"ruleId":"1282","severity":1,"message":"1283","line":227,"column":17,"nodeType":"1284","endLine":227,"endColumn":118},{"ruleId":"1282","severity":1,"message":"1283","line":403,"column":25,"nodeType":"1284","endLine":403,"endColumn":69},{"ruleId":"1259","severity":1,"message":"1447","line":2,"column":8,"nodeType":"1261","messageId":"1262","endLine":2,"endColumn":14},{"ruleId":"1259","severity":1,"message":"1320","line":1,"column":16,"nodeType":"1261","messageId":"1262","endLine":1,"endColumn":24},{"ruleId":"1259","severity":1,"message":"1315","line":1,"column":26,"nodeType":"1261","messageId":"1262","endLine":1,"endColumn":35},{"ruleId":"1259","severity":1,"message":"1448","line":16,"column":8,"nodeType":"1261","messageId":"1262","endLine":16,"endColumn":11},{"ruleId":"1282","severity":1,"message":"1283","line":28,"column":21,"nodeType":"1284","endLine":28,"endColumn":60},{"ruleId":"1282","severity":1,"message":"1283","line":121,"column":21,"nodeType":"1284","endLine":121,"endColumn":64},{"ruleId":"1282","severity":1,"message":"1283","line":62,"column":33,"nodeType":"1284","endLine":62,"endColumn":75},{"ruleId":"1282","severity":1,"message":"1283","line":68,"column":33,"nodeType":"1284","endLine":68,"endColumn":76},{"ruleId":"1282","severity":1,"message":"1283","line":83,"column":33,"nodeType":"1284","endLine":83,"endColumn":75},{"ruleId":"1282","severity":1,"message":"1283","line":89,"column":33,"nodeType":"1284","endLine":89,"endColumn":76},{"ruleId":"1259","severity":1,"message":"1449","line":10,"column":8,"nodeType":"1261","messageId":"1262","endLine":10,"endColumn":19},{"ruleId":"1259","severity":1,"message":"1345","line":11,"column":8,"nodeType":"1261","messageId":"1262","endLine":11,"endColumn":24},{"ruleId":"1259","severity":1,"message":"1450","line":13,"column":10,"nodeType":"1261","messageId":"1262","endLine":13,"endColumn":16},{"ruleId":"1259","severity":1,"message":"1451","line":23,"column":20,"nodeType":"1261","messageId":"1262","endLine":23,"endColumn":28},{"ruleId":"1267","severity":1,"message":"1452","line":46,"column":8,"nodeType":"1291","endLine":46,"endColumn":17,"suggestions":"1453"},{"ruleId":"1259","severity":1,"message":"1315","line":1,"column":16,"nodeType":"1261","messageId":"1262","endLine":1,"endColumn":25},{"ruleId":"1259","severity":1,"message":"1320","line":1,"column":27,"nodeType":"1261","messageId":"1262","endLine":1,"endColumn":35},{"ruleId":"1259","severity":1,"message":"1454","line":4,"column":8,"nodeType":"1261","messageId":"1262","endLine":4,"endColumn":12},{"ruleId":"1413","severity":1,"message":"1414","line":36,"column":29,"nodeType":"1284","endLine":36,"endColumn":176},{"ruleId":"1259","severity":1,"message":"1350","line":2,"column":8,"nodeType":"1261","messageId":"1262","endLine":2,"endColumn":15},{"ruleId":"1267","severity":1,"message":"1455","line":7,"column":10,"nodeType":"1291","endLine":7,"endColumn":12,"suggestions":"1456"},{"ruleId":"1282","severity":1,"message":"1283","line":229,"column":28,"nodeType":"1284","endLine":229,"endColumn":46},{"ruleId":"1282","severity":1,"message":"1283","line":231,"column":28,"nodeType":"1284","endLine":231,"endColumn":48},{"ruleId":"1282","severity":1,"message":"1283","line":233,"column":28,"nodeType":"1284","endLine":233,"endColumn":50},{"ruleId":"1282","severity":1,"message":"1283","line":235,"column":28,"nodeType":"1284","endLine":235,"endColumn":46},{"ruleId":"1282","severity":1,"message":"1283","line":342,"column":37,"nodeType":"1284","endLine":342,"endColumn":102},{"ruleId":"1282","severity":1,"message":"1283","line":363,"column":41,"nodeType":"1284","endLine":363,"endColumn":87},{"ruleId":"1282","severity":1,"message":"1283","line":405,"column":25,"nodeType":"1284","endLine":405,"endColumn":83},{"ruleId":"1282","severity":1,"message":"1283","line":448,"column":41,"nodeType":"1284","endLine":448,"endColumn":63},{"ruleId":"1282","severity":1,"message":"1283","line":475,"column":13,"nodeType":"1284","endLine":475,"endColumn":139},{"ruleId":"1259","severity":1,"message":"1320","line":1,"column":16,"nodeType":"1261","messageId":"1262","endLine":1,"endColumn":24},{"ruleId":"1267","severity":1,"message":"1457","line":21,"column":8,"nodeType":"1291","endLine":21,"endColumn":10,"suggestions":"1458"},{"ruleId":"1267","severity":1,"message":"1459","line":19,"column":7,"nodeType":"1291","endLine":19,"endColumn":9,"suggestions":"1460"},{"ruleId":"1259","severity":1,"message":"1461","line":17,"column":5,"nodeType":"1261","messageId":"1262","endLine":17,"endColumn":13},{"ruleId":"1259","severity":1,"message":"1462","line":11,"column":7,"nodeType":"1261","messageId":"1262","endLine":11,"endColumn":12},{"ruleId":"1282","severity":1,"message":"1283","line":79,"column":24,"nodeType":"1284","endLine":79,"endColumn":65},"no-unused-vars","'ScrollToTop' is defined but never used.","Identifier","unusedVar","no-native-reassign",["1463"],"no-negated-in-lhs",["1464"],"react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setInit'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["1465"],"'initializeApp' is defined but never used.","'ex1' is defined but never used.","'Link' is defined but never used.","'motion' is defined but never used.","'s1' is defined but never used.","'main6' is defined but never used.","'email' is assigned a value but never used.","'setEmail' is assigned a value but never used.","'loginOpen' is assigned a value but never used.","'setLoginOpen' is assigned a value but never used.","'scrollDown' is assigned a value but never used.","'checkLoggedIn' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["1463"],["1464"],"'Tooltip' is defined but never used.","'cookies' is assigned a value but never used.","'setPart' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getThisUserDatas'. Either include it or remove the dependency array.","ArrayExpression",["1466"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'MainPage' is defined but never used.","React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","React Hook useEffect has missing dependencies: 'published.length' and 'saved.length'. Either include them or remove the dependency array.",["1467"],"'ReactGa' is defined but never used.","'setCnums' is assigned a value but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","default-case","Expected a default case.","SwitchStatement","missingDefaultCase",["1463"],["1464"],"'useEffect' is defined but never used.","'name' is assigned a value but never used.",["1463"],["1464"],"'data' is assigned a value but never used.","'useState' is defined but never used.","'useMemo' is defined but never used.","'useParams' is defined but never used.","React Hook useEffect has missing dependencies: 'getEdit', 'getTemplate', 'getTemplateFromUser', 'location.pathname', 'location.state', and 'saveLocalStorage'. Either include them or remove the dependency array.",["1468"],"'ssede' is assigned a value but never used.","'Box' is defined but never used.","'m2' is defined but never used.","'p2' is defined but never used.","'contents' is assigned a value but never used.","'foot' is assigned a value but never used.","'setDevice' is assigned a value but never used.","'setType' is assigned a value but never used.","'done' is assigned a value but never used.","'ExampleCardInTemplate' is assigned a value but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'fontColor2' is assigned a value but never used.","'Close' is defined but never used.","'Instagram' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","'authService' is defined but never used.","'TextareaAutosize' is defined but never used.","'AutosizeInput' is defined but never used.","'d3' is defined but never used.","'useContext' is defined but never used.","'LoginModal' is defined but never used.","'person1' is defined but never used.","'person2' is defined but never used.","'person3' is defined but never used.","no-dupe-keys","Duplicate key 'appButton'.","ObjectExpression","Duplicate key 'element'.","'produce' is defined but never used.","'action' is assigned a value but never used.","'usersExist' is assigned a value but never used.","'TextAuto' is defined but never used.","'AnimationDiv' is defined but never used.","'useRef' is defined but never used.","'isMobile' is defined but never used.","Duplicate key 'width'.","'setTime' is assigned a value but never used.","'NavBar' is defined but never used.","'Footer' is defined but never used.","'section2' is defined but never used.","'Input' is defined but never used.","'sendData' is assigned a value but never used.","'eee' is assigned a value but never used.","'Button' is defined but never used.","'BarGraph' is defined but never used.","'QuestionAnswer' is defined but never used.","'LogOutCircle' is defined but never used.","'Delete' is defined but never used.","'Options' is defined but never used.","'ChakraProvider' is defined but never used.","'MakeTutorialModal' is defined but never used.","'QuestionCircle' is defined but never used.","'miniOpen' is assigned a value but never used.","'value' is assigned a value but never used.","'gadata' is defined but never used.","Duplicate key 'color'.","'stService' is defined but never used.","'OptionButton' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'published_delete' is assigned a value but never used.","'urlStores' is assigned a value but never used.","'toPrev' is assigned a value but never used.","'toNext' is assigned a value but never used.","'base' is defined but never used.","'RadioCustom' is defined but never used.","'AlignCustom' is defined but never used.","'TextSizeCustom' is defined but never used.","'layoutOptions' is assigned a value but never used.","'SingleColorCustom' is defined but never used.","'onChangeButtonLink' is assigned a value but never used.","'logoOptions' is assigned a value but never used.","'state' is assigned a value but never used.","'appstorebutton' is defined but never used.","'playstorebutton' is defined but never used.","React Hook useEffect contains a call to 'setBack'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [scrollPosition] as a second argument to the useEffect Hook.",["1469"],"'line' is defined but never used.","'StoreMallDirectoryRounded' is defined but never used.","'uploadMockup2' is assigned a value but never used.","'alignOptions' is assigned a value but never used.","'buttonTextOptions' is assigned a value but never used.","'PopoverFooter' is defined but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","'MyContext' is defined but never used.","'IconTable' is defined but never used.","'styled' is defined but never used.","'aa' is defined but never used.","'Template' is defined but never used.","'DesignServices' is defined but never used.","'Switch' is defined but never used.","'popover' is assigned a value but never used.","'bgc' is assigned a value but never used.","'setBgc' is assigned a value but never used.","'onChangeLink' is assigned a value but never used.","'SliderMark' is defined but never used.","'NumberInput' is defined but never used.","'NumberInputField' is defined but never used.","'NumberInputStepper' is defined but never used.","'NumberIncrementStepper' is defined but never used.","'NumberDecrementStepper' is defined but never used.","'RamenDiningOutlined' is defined but never used.","'ImageModal' is defined but never used.","'imageModalOpen' is assigned a value but never used.","'setImageModalOpen' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'Checkbox' is defined but never used.","'Link45deg' is defined but never used.","'EditInput' is defined but never used.","'ModalFooter' is defined but never used.","'thank' is assigned a value but never used.","'setThank' is assigned a value but never used.","'returnRank' is assigned a value but never used.","'top' is assigned a value but never used.","'ExampleCard' is defined but never used.","Duplicate key 'position'.","'mainpc' is defined but never used.","'car' is defined but never used.","'UserSection' is defined but never used.","'Helmet' is defined but never used.","'setError' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'item' and 'loadData'. Either include them or remove the dependency array.",["1470"],"'gift' is defined but never used.","React Hook useEffect has a missing dependency: 'createKakaoButton'. Either include it or remove the dependency array.",["1471"],"React Hook useEffect has a missing dependency: 'location.state.id'. Either include it or remove the dependency array.",["1472"],"React Hook useEffect has a missing dependency: 'getItem'. Either include it or remove the dependency array.",["1473"],"'MenuItem' is defined but never used.","'Input' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"1474","fix":"1475"},{"desc":"1476","fix":"1477"},{"desc":"1478","fix":"1479"},{"desc":"1480","fix":"1481"},{"desc":"1482","fix":"1483"},{"desc":"1484","fix":"1485"},{"desc":"1486","fix":"1487"},{"desc":"1488","fix":"1489"},{"desc":"1490","fix":"1491"},"Add dependencies array: []",{"range":"1492","text":"1493"},"Update the dependencies array to be: [getThisUserDatas, loading, update]",{"range":"1494","text":"1495"},"Update the dependencies array to be: [published.length, saved.length]",{"range":"1496","text":"1497"},"Update the dependencies array to be: [getEdit, getTemplate, getTemplateFromUser, location.pathname, location.state, saveLocalStorage]",{"range":"1498","text":"1499"},"Add dependencies array: [scrollPosition]",{"range":"1500","text":"1501"},"Update the dependencies array to be: [item, loadData, loading]",{"range":"1502","text":"1503"},"Update the dependencies array to be: [createKakaoButton]",{"range":"1504","text":"1505"},"Update the dependencies array to be: [location.state.id]",{"range":"1506","text":"1507"},"Update the dependencies array to be: [getItem]",{"range":"1508","text":"1509"},[859,859],", []",[2146,2163],"[getThisUserDatas, loading, update]",[1024,1030],"[published.length, saved.length]",[4752,4754],"[getEdit, getTemplate, getTemplateFromUser, location.pathname, location.state, saveLocalStorage]",[583,583],", [scrollPosition]",[1708,1717],"[item, loadData, loading]",[201,203],"[createKakaoButton]",[545,547],"[location.state.id]",[422,424],"[getItem]"]
=======
<<<<<<< HEAD
[{"/Users/gimhojin/Desktop/soozipweb/kiwi/src/index.js":"1","/Users/gimhojin/Desktop/soozipweb/kiwi/src/reportWebVitals.js":"2","/Users/gimhojin/Desktop/soozipweb/kiwi/src/App.js":"3","/Users/gimhojin/Desktop/soozipweb/kiwi/src/Router.js":"4","/Users/gimhojin/Desktop/soozipweb/kiwi/src/tools/fbase.js":"5","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/NavAndFooter/NavBarV2.js":"6","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/Make/old/MakePage.js":"7","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/Make/MakePageV2.js":"8","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/Landing/old/MainPage.js":"9","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/UserLanding/UserLandingPage.js":"10","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/Landing/MainPageV2.js":"11","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/Response/ResponsePage.js":"12","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/Customer/CustomerPage.js":"13","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/Questions/FQ.js":"14","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/Login/Login/LoginPage.js":"15","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/Login/Register/RegisterPage.js":"16","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/utils/SubmitPage.js":"17","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/NewSection.js":"18","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/Questions/FirstQuestions.js":"19","/Users/gimhojin/Desktop/soozipweb/kiwi/src/tools/ConfirmCustom.js":"20","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/NavAndFooter/Footer.js":"21","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Modal/LoadingModal.js":"22","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/NewSectionMake.js":"23","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/NavFooterSetting/EditFooterSection.js":"24","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/Make/NavBarInMakePage/NavBarInMakePage.js":"25","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Footer/MakeFooterV2.js":"26","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/NavFooterSetting/EditContents.js":"27","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/NavBar/MakeNavigationV2.js":"28","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/NavFooterSetting/EditNaviSection.js":"29","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Response/MadeLandingCard.js":"30","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/NavAndFooter/NavBar/NavBar.js":"31","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/tools/Icons.js":"32","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Customer/QnA.js":"33","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Customer/PersonalInformation.js":"34","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Customer/Term.js":"35","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/baseTypes.js":"36","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/NavFooterSetting/EditSetting.js":"37","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/ReviewSection.js":"38","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/CtaSection.js":"39","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/HeroSection.js":"40","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/FeaturesSection.js":"41","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/DetailSection.js":"42","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/tools/animations.js":"43","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/AddingSection.js":"44","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/EditCtaSection.js":"45","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/EditReviewSection.js":"46","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/EditFeaturesSection.js":"47","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/EditDetailSection.js":"48","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/EditHeroSection.js":"49","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/EditButtonTable.js":"50","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/BoxCustom.js":"51","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/EditTopBar.js":"52","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/RadioCustom.js":"53","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/TextSizeCustom.js":"54","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/CheckBoxContainer.js":"55","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/EditSlider.js":"56","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/ElementsTable.js":"57","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/InputCustom.js":"58","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/ColorCustom.js":"59","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/OpenCloseCustom.js":"60","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/ResponsiveCustom.js":"61","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/OnOffCustom.js":"62","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/NavBar/NaviTemplate.js":"63","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Modal/AddingSection.js":"64","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Footer/FTemplate.js":"65","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Modal/CheckModal.js":"66","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/AnimationCustom.js":"67","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/SelectCustom.js":"68","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/tools/Icon.js":"69","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/tools/Editor.js":"70","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/InnerTemplates.js":"71","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/AddYoutubeLink.js":"72","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/AddContentVideo.js":"73","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/AddContentImg.js":"74","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/TemplateChoose.js":"75","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/ImageAddEdit.js":"76","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/ImageCarousel.js":"77","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/EditTextSection.js":"78","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/EditGallerySection.js":"79","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/EditQnaSection.js":"80","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/EditMockupSection.js":"81","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/EditAppDownloadSection.js":"82","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/EditApplySection.js":"83","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/ApplySection.js":"84","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/AppDownloadSection.js":"85","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/MockupSection.js":"86","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/TextSection.js":"87","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/GallerySection.js":"88","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/QnaSection.js":"89","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/VideoSection.js":"90"},{"size":566,"mtime":1643237148261,"results":"91","hashOfConfig":"92"},{"size":362,"mtime":1643169385982,"results":"93","hashOfConfig":"92"},{"size":1169,"mtime":1643237148259,"results":"94","hashOfConfig":"92"},{"size":3570,"mtime":1643169385968,"results":"95","hashOfConfig":"92"},{"size":1279,"mtime":1643169385983,"results":"96","hashOfConfig":"92"},{"size":2204,"mtime":1643169385981,"results":"97","hashOfConfig":"92"},{"size":52972,"mtime":1643169385981,"results":"98","hashOfConfig":"92"},{"size":12673,"mtime":1643959560588,"results":"99","hashOfConfig":"92"},{"size":7502,"mtime":1643169385979,"results":"100","hashOfConfig":"92"},{"size":8346,"mtime":1643169385982,"results":"101","hashOfConfig":"92"},{"size":12665,"mtime":1643169385979,"results":"102","hashOfConfig":"92"},{"size":6960,"mtime":1643961945492,"results":"103","hashOfConfig":"92"},{"size":3350,"mtime":1643169385978,"results":"104","hashOfConfig":"92"},{"size":22550,"mtime":1643169385981,"results":"105","hashOfConfig":"92"},{"size":5645,"mtime":1643169385979,"results":"106","hashOfConfig":"92"},{"size":6838,"mtime":1643169385979,"results":"107","hashOfConfig":"92"},{"size":1696,"mtime":1643169385977,"results":"108","hashOfConfig":"92"},{"size":4789,"mtime":1643945373406,"results":"109","hashOfConfig":"92"},{"size":22285,"mtime":1643169385981,"results":"110","hashOfConfig":"92"},{"size":1920,"mtime":1643169385982,"results":"111","hashOfConfig":"92"},{"size":1402,"mtime":1643169385981,"results":"112","hashOfConfig":"92"},{"size":1277,"mtime":1643169385974,"results":"113","hashOfConfig":"92"},{"size":6953,"mtime":1643943686791,"results":"114","hashOfConfig":"92"},{"size":8772,"mtime":1643959307819,"results":"115","hashOfConfig":"92"},{"size":6391,"mtime":1643942173550,"results":"116","hashOfConfig":"92"},{"size":1090,"mtime":1643169385973,"results":"117","hashOfConfig":"92"},{"size":10873,"mtime":1643942173535,"results":"118","hashOfConfig":"92"},{"size":1235,"mtime":1643771089595,"results":"119","hashOfConfig":"92"},{"size":10071,"mtime":1643960039791,"results":"120","hashOfConfig":"92"},{"size":1789,"mtime":1643169385977,"results":"121","hashOfConfig":"92"},{"size":1256,"mtime":1643169385981,"results":"122","hashOfConfig":"92"},{"size":778,"mtime":1643169385977,"results":"123","hashOfConfig":"92"},{"size":2448,"mtime":1643169385968,"results":"124","hashOfConfig":"92"},{"size":8149,"mtime":1643169385968,"results":"125","hashOfConfig":"92"},{"size":8636,"mtime":1643169385968,"results":"126","hashOfConfig":"92"},{"size":12608,"mtime":1643963758047,"results":"127","hashOfConfig":"92"},{"size":11433,"mtime":1643944874123,"results":"128","hashOfConfig":"92"},{"size":1648,"mtime":1643942094601,"results":"129","hashOfConfig":"92"},{"size":1414,"mtime":1643942094599,"results":"130","hashOfConfig":"92"},{"size":8409,"mtime":1643944058024,"results":"131","hashOfConfig":"92"},{"size":1630,"mtime":1643963795569,"results":"132","hashOfConfig":"92"},{"size":5429,"mtime":1643942094600,"results":"133","hashOfConfig":"92"},{"size":467,"mtime":1643169385977,"results":"134","hashOfConfig":"92"},{"size":6087,"mtime":1643169385969,"results":"135","hashOfConfig":"92"},{"size":1131,"mtime":1643169385969,"results":"136","hashOfConfig":"92"},{"size":3269,"mtime":1643169385970,"results":"137","hashOfConfig":"92"},{"size":7331,"mtime":1643963638035,"results":"138","hashOfConfig":"92"},{"size":1853,"mtime":1643942094591,"results":"139","hashOfConfig":"92"},{"size":20460,"mtime":1643961439803,"results":"140","hashOfConfig":"92"},{"size":1509,"mtime":1643169385972,"results":"141","hashOfConfig":"92"},{"size":255,"mtime":1643771089592,"results":"142","hashOfConfig":"92"},{"size":829,"mtime":1643942173539,"results":"143","hashOfConfig":"92"},{"size":3072,"mtime":1643942553617,"results":"144","hashOfConfig":"92"},{"size":2104,"mtime":1643962818974,"results":"145","hashOfConfig":"92"},{"size":1100,"mtime":1643945481244,"results":"146","hashOfConfig":"92"},{"size":941,"mtime":1643955904882,"results":"147","hashOfConfig":"92"},{"size":928,"mtime":1643960081835,"results":"148","hashOfConfig":"92"},{"size":1100,"mtime":1643959372147,"results":"149","hashOfConfig":"92"},{"size":3992,"mtime":1643955822502,"results":"150","hashOfConfig":"92"},{"size":3360,"mtime":1643957153579,"results":"151","hashOfConfig":"92"},{"size":559,"mtime":1643320723610,"results":"152","hashOfConfig":"92"},{"size":822,"mtime":1643942173540,"results":"153","hashOfConfig":"92"},{"size":1415,"mtime":1643956581130,"results":"154","hashOfConfig":"92"},{"size":2741,"mtime":1643942695300,"results":"155","hashOfConfig":"92"},{"size":2754,"mtime":1643957854600,"results":"156","hashOfConfig":"92"},{"size":4218,"mtime":1643169385974,"results":"157","hashOfConfig":"92"},{"size":1814,"mtime":1643944490065,"results":"158","hashOfConfig":"92"},{"size":2028,"mtime":1643942173542,"results":"159","hashOfConfig":"92"},{"size":364,"mtime":1643169385977,"results":"160","hashOfConfig":"92"},{"size":6843,"mtime":1643237034081,"results":"161","hashOfConfig":"92"},{"size":1161,"mtime":1643943092536,"results":"162","hashOfConfig":"92"},{"size":1422,"mtime":1643942173537,"results":"163","hashOfConfig":"92"},{"size":671,"mtime":1643942173537,"results":"164","hashOfConfig":"92"},{"size":976,"mtime":1643942173537,"results":"165","hashOfConfig":"92"},{"size":1332,"mtime":1643169385973,"results":"166","hashOfConfig":"92"},{"size":269,"mtime":1643237148260,"results":"167","hashOfConfig":"92"},{"size":1835,"mtime":1643942173539,"results":"168","hashOfConfig":"92"},{"size":151,"mtime":1643943491753,"results":"169","hashOfConfig":"92"},{"size":157,"mtime":1643943488132,"results":"170","hashOfConfig":"92"},{"size":149,"mtime":1643943520731,"results":"171","hashOfConfig":"92"},{"size":155,"mtime":1643943481839,"results":"172","hashOfConfig":"92"},{"size":165,"mtime":1643943652065,"results":"173","hashOfConfig":"92"},{"size":153,"mtime":1643943655251,"results":"174","hashOfConfig":"92"},{"size":151,"mtime":1643944096303,"results":"175","hashOfConfig":"92"},{"size":172,"mtime":1643944095193,"results":"176","hashOfConfig":"92"},{"size":153,"mtime":1643944099560,"results":"177","hashOfConfig":"92"},{"size":146,"mtime":1643944062365,"results":"178","hashOfConfig":"92"},{"size":158,"mtime":1643944084813,"results":"179","hashOfConfig":"92"},{"size":153,"mtime":1643944086457,"results":"180","hashOfConfig":"92"},{"size":154,"mtime":1643944101348,"results":"181","hashOfConfig":"92"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},"8v8zpl",{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"184"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"184"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"184"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"184"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"203","messages":"204","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"184"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"184"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"213","messages":"214","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"184"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"184"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"184"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"184"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"184"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"184"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"184"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"184"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"184"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"246","messages":"247","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"184"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"184"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"184"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"184"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"260","messages":"261","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"184"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"184"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"276","messages":"277","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"278","usedDeprecatedRules":"184"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"184"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"184"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"184"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"290","messages":"291","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"184"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297","usedDeprecatedRules":"184"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"300","usedDeprecatedRules":"184"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"305","messages":"306","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"184"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"316","usedDeprecatedRules":"184"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"321","messages":"322","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"184"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"328","messages":"329","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"330","messages":"331","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"332","messages":"333","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"334","messages":"335","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"338","usedDeprecatedRules":"184"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"341","messages":"342","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343","usedDeprecatedRules":"184"},{"filePath":"344","messages":"345","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"346","messages":"347","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"348","usedDeprecatedRules":"184"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"353","usedDeprecatedRules":"184"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358","usedDeprecatedRules":"184"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"363","usedDeprecatedRules":"184"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"372","usedDeprecatedRules":"184"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"375","usedDeprecatedRules":"184"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},"/Users/gimhojin/Desktop/soozipweb/kiwi/src/index.js",[],["402","403"],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/reportWebVitals.js",[],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/App.js",["404","405","406","407"],"import logo from './logo.svg';\nimport React, {useState, useEffect} from 'react';\nimport './App.css';\nimport AppRouter from './Router';\nimport NavBarV2 from './pages/NavAndFooter/NavBarV2';\nimport { authService } from './tools/fbase'\nimport {RecoilRoot} from 'recoil';\n\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    // 유저가 제작한 랜딩페이지에 들어가는 사람들까지 로그인 검사를 하면 속도가 느려지니까\n    if(window.location.host.split(\".\")[0] === \"surfee\" || window.location.host.split(\".\")[0] === \"localhost:3000\"){\n      authService.onAuthStateChanged((user) => {\n        if(user){\n          setIsLoggedIn(true)\n          // setUserObj(user.multiFactor.user);\n        }else{\n          setIsLoggedIn(false)\n        }\n        setInit(true)\n      })\n    }else{\n      setInit(true)\n    }\n  })\n\n  return (\n    <>\n    <RecoilRoot className=\"App\">\n      {init ? <AppRouter userObj={userObj} isLoggedIn={isLoggedIn} /> : \"Initializing...\"}\n    </RecoilRoot>\n    </>\n  );\n}\n\nexport default App;\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/Router.js",["408","409","410","411"],"import React, {useState, useEffect} from 'react';\nimport {HashRouter as Router, Route, Switch} from \"react-router-dom\";\nimport './App.css';\nimport LoginPage from './pages/Login/Login/LoginPage'\nimport MainPage from './pages/Landing/old/MainPage';\nimport UserLandingPage from './pages/UserLanding/UserLandingPage';\nimport MainPageV2 from './pages/Landing/MainPageV2';\nimport MakePage from './pages/Make/old/MakePage';\nimport MakePageV2 from './pages/Make/MakePageV2';\nimport NavBarV2 from './pages/NavAndFooter/NavBarV2';\nimport ResponsePage from './pages/Response/ResponsePage';\nimport RegisterPage from './pages/Login/Register/RegisterPage'\nimport SubmitPage from './components/Make/utils/SubmitPage';\nimport CustomerPage from './pages/Customer/CustomerPage'\nimport FQ from './pages/Questions/FQ'\nimport { useRecoilState } from 'recoil'\nimport {\n    atom,\n} from 'recoil';\n\nimport { createBrowserHistory } from 'history';\n\nconst history = createBrowserHistory();\n\nexport const userState = atom({\n    key:'userState',\n    default:'',\n})\n\n\nconst AppRouter = ({userObj, isLoggedIn}) => {\n    const [userData, setUserData] = useRecoilState(userState);\n\n    useEffect(() => {\n        setUserData(userObj);\n    },[])\n\n    if (window.location.host.split(\".\")[0] !== \"surfee\" && window.location.host.split(\".\")[0] !== 'localhost:3000') {\n        return(\n            <Router history={history}>\n                <>\n                <div className=\"Container\" style={{ minHeight: 'calc(100vh - 80px)', zIndex:-1 }}>\n                    <Switch>\n                        <Route path=\"/\" component={UserLandingPage} />\n                    </Switch>\n                </div>\n                </> \n            </Router>\n        )\n    }else{\n        return(\n            <Router history={history}>\n                <>\n                <NavBarV2 history={history} isLoggedIn={isLoggedIn} />\n                <div className=\"Container\" style={{ minHeight: 'calc(100vh - 80px)', zIndex:-1 }}>\n                <Switch>\n                    <Route exact path=\"/\">\n                        <MainPage history={history}/>\n                    </Route>\n                    <Route exact path=\"/v2\">\n                        <MainPageV2 history={history} isLoggedIn={isLoggedIn} userObj={userObj}/>\n                    </Route>\n                    {/* <Route path=\"/make\">\n                        <MakePage history={history}/>\n                    </Route>             */}\n                    <Route path=\"/seeResponse\">\n                        <ResponsePage history={history} userObj={userObj}/> \n                    </Route>\n                    <Route path=\"/submit\">\n                        <SubmitPage history={history}/>\n                    </Route>\n                    <Route path=\"/make\">\n                        <MakePageV2 history={history} isLoggedIn={isLoggedIn} userObj={userObj}/>\n                    </Route>\n                    <Route path=\"/setting\">\n                        <FQ history={history} isLoggedIn={isLoggedIn} userObj={userObj}/>\n                    </Route>\n                    <Route path=\"/login\">\n                        <LoginPage history={history}/>\n                    </Route>\n                    <Route path=\"/customer\">\n                        <CustomerPage history={history}/>\n                    </Route>\n                    <Route path=\"/register\">\n                        <RegisterPage history={history}/>\n                    </Route>\n                </Switch>\n                </div>\n                </> \n            </Router>\n        )\n    }\n}\nexport default AppRouter;","/Users/gimhojin/Desktop/soozipweb/kiwi/src/tools/fbase.js",["412"],"import firebase from \"firebase/compat/app\"\n// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\n// import { getAnalytics } from \"firebase/analytics\";\nimport \"firebase/compat/firestore\";\nimport \"firebase/compat/storage\";\nimport \"firebase/compat/auth\"\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDH_xQF-kBsVMEDwLNDJubGrzOp0Qnr_iU\",\n  authDomain: \"kiwi-d5dd3.firebaseapp.com\",\n  projectId: \"kiwi-d5dd3\",\n  storageBucket: \"kiwi-d5dd3.appspot.com\",\n  messagingSenderId: \"335393250887\",\n  appId: \"1:335393250887:web:231c18d1aa6d4356891b62\",\n  measurementId: \"G-7FJX546NWQ\"\n};\n\n// Initialize Firebase\n// export const app = firebase.initializeApp(firebaseConfig);\n// export const firebaseInstance = firebase;\n// const analytics = getAnalytics(app);\n// export const dbService = app.firestore();\n// export const stService = app.storage();\n\nexport const app = firebase.initializeApp(firebaseConfig);\nexport const authService = app.auth();\nexport const firebaseInstance = firebase;\nexport const dbService = firebase.firestore();\nexport const stService = app.storage();","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/NavAndFooter/NavBarV2.js",["413","414"],"import React, {useState, useEffect} from 'react'\nimport './NavBarV2.css'\nimport {Link} from 'react-router-dom';\nimport {authService} from '../../tools/fbase'\n\n\nfunction NavBarV2({history, scrollPosition, isLoggedIn}) {\n\n    const onLogout = () => {\n        localStorage.removeItem('name');\n        localStorage.removeItem('job');\n        authService.signOut();\n        alert(\"로그아웃 되셨습니다.\");\n        history.push('/');\n        history.go();\n    }\n    \n    return (\n        <div style={{display: 'flex', flexDirection: 'column', alignItems: 'center', width:'100%'}}>\n            <div className=\"nav-bar-container-v2\">\n                <div className=\"nav-bar-left-v2\">\n                    <Link to=\"/v2\" className=\"nav-bar-title-v2\" style={{cursor:'pointer', color:'#6a63f7'}}>\n                        Surfee\n                    </Link>\n                    {/* <Link to=\"/info\" className=\"nav-left-text\" style={{marginLeft:'4vw'}}>\n                        제품소개\n                    </Link> */}\n                    <Link to=\"/customer\" className=\"nav-left-text\">\n                        문의하기\n                    </Link>\n                    {isLoggedIn ? \n                    <>\n                    <span className=\"nav-left-text\" onClick={() => onLogout()}>\n                        로그아웃\n                    </span>\n                    </> : \n                    <>\n                        <Link to=\"/login\" className=\"nav-left-text\">\n                            로그인\n                        </Link>\n                        <Link to=\"/register\" className=\"nav-left-text\">\n                            회원가입\n                        </Link>\n                    </>\n                    }\n                </div>\n                <div className=\"nav-on-v2\">\n                    <button className=\"nav-button-round-v2\" onClick={() => window.scrollTo(0,document.body.scrollHeight)}>무료로 체험하기</button>\n                </div>\n            </div>\n            <div style={{borderBottom: '2px solid black', width:`${(scrollPosition/window.innerHeight)*63}%`, position:'fixed', top:'58px', zIndex:'12'}}></div>\n        </div>\n    )\n}\n\nexport default NavBarV2\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/Make/old/MakePage.js",[],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/Make/MakePageV2.js",["415","416","417","418","419","420","421","422","423","424","425","426","427","428","429","430"],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/Landing/old/MainPage.js",["431","432","433","434"],"import React, {useEffect,useRef, useState} from 'react'\nimport './MainPage.css'\nimport {Link} from 'react-router-dom';\nimport { dbService } from '../../../tools/fbase';\nimport NavBar from '../../NavAndFooter/NavBar/NavBar'\nimport Footer from '../../NavAndFooter/Footer'\n\nimport section1 from '../../../tools/img/001.png';\nimport section0 from '../../../tools/img/005.png';\nimport section2 from '../../../tools/img/003.png';\n\nimport {Input} from 'antd'\n\nfunction MainPage({history}) {\n    const [email,setEmail] = useState(\"\");\n    const targets = useRef(null)\n\n    useEffect(() => {\n    },[])\n\n    const sendData = async () => {\n        console.log(dbService);\n        if(email.length < 4){\n            alert(\"올바른 이메일 양식을 입력해주세요!\");\n            return;\n        }\n        await dbService.collection(\"apply-datas\").add({\n            email:email,\n            created:Date.now(),\n        });\n\n        alert(\"신청되셨습니다. 감사합니다. 빠른 시일내로 연락드리겠습니다.\");\n        setEmail(\"\");\n    }\n\n    const scrollDown = () => {\n        targets.current.scrollIntoView({behavior: 'smooth'})\n    }\n\n    return (\n        <>\n        <div className=\"main-page-container\">\n            <NavBar history={history}/>\n            <div className=\"main-page-section\" style={{backgroundColor:'#6B63F7'}}>\n                <div className=\"main-section-left\" style={{color:'white'}}>\n                    <span className=\"one-section-big\">\n                        랜딩페이지 제작부터<br/>\n                        데이터 분석까지<br/>\n                        빠르고 간단하게\n                    </span>\n                    <span className=\"one-section-small\">\n                    신규 서비스와 이벤트부터 스타트업 아이템 검증까지,<br/>\n                    코딩없이 랜딩페이지를 만들고 실시간 데이터 분석을 통해 <br/>\n                    최고의 고객 전환율을 경험해 보세요.\n                    </span>\n                    <button className=\"apply-button\" onClick={scrollDown} style={{height:'60px', width:'200px', borderRadius:'10px', marginTop:'20px'}}>\n                        지금 바로 시작하기\n                    </button>\n                </div>\n                <div className=\"main-section-right\">              \n                    <img src={section0} className=\"section-one-image-main\" />\n                </div>\n            </div>\n            \n            <div className=\"main-page-section\" style={{backgroundColor:\"white\"}}>\n                <div className=\"main-section-left\">\n                    <span className=\"one-section-big\">\n                        코딩도 디자인도 필요없이<br/>One-stop으로<br/>랜딩페이지 제작하기\n                    </span>\n                    <span className=\"one-section-small\">\n                        개발자 없이도, 외주 없이도 직접<br/>\n                        템플릿을 고르고 블로그를 꾸미듯<br/>\n                        쉽고 빠르게 랜딩페이지를 만들어 보세요.\n                    </span>\n                </div>\n                <div className=\"main-section-right\">                   \n                    <img src={section1} className=\"section-one-image\"/>\n                </div>\n            </div>\n            <div className=\"main-page-section2\" style={{backgroundColor:\"white\"}}>\n                <div className=\"main-section-right\">\n                    <img src={section2} className=\"section-one-image\"/>\n                </div>\n                <div className=\"main-section-left\">\n                    <div className=\"middle-section\">\n                        <span className=\"one-section-big\">\n                        최적의 전환율을 위한 <br/>\n                        데이터 분석 자료를<br/>\n                        실시간으로 확인하기\n                        </span>\n                        <span className=\"one-section-small\">\n                        조회수, 사용자 수, 전환율(CVR), 유입 채널 등<br/>\n                        고객의 반응을 확인할 수 있는 유의미한 데이터를<br/>\n                        개발자에게 요청할 필요없이 직접 확인해 보세요.\n                        </span>\n                    </div>  \n                </div>\n            </div>\n            {/* <div className=\"main-page-section\" style={{backgroundColor:\"white\"}}>\n                <div className=\"main-section-left\">\n                    <div className=\"middle-section\">\n                        <span className=\"one-section-big\">\n                            제작부터 데이터 분석까지<br/>9,990원의<br/>합리적인 가격으로\n                        </span>\n                        <span className=\"one-section-small\">\n                            9,900원에 일주일 무료<br/>\n                            이후 하루마다 단돈 500원이 추가되는<br/>\n                            합리적인 가격으로 만나 보세요.\n                        </span>\n                    </div>\n                </div>\n                <div className=\"main-section-right\">                   \n                    <img src={section3}  className=\"section-one-image\"/>\n                </div>\n            </div> */}\n            <div ref={targets} className=\"main-page-section-last\" style={{backgroundColor:'#6B63F7'}}>\n                <span className=\"last-one-component\" style={{width:'50%'}}>\n                    <div className=\"main-section-last-title\">\n                        One-stop 랜딩페이지 제작 툴,<br/>\n                        가장 먼저 이용해 보세요\n                    </div>\n                    <Input type=\"text\" value={email} onChange={e => setEmail(e.target.value)} placeholder=\"이메일을 입력하세요.\" className=\"input-text\"/>\n                    <button className=\"apply-button\" onClick={sendData}>사전신청하고 혜택받기</button>\n                    <div className=\"main-section-last-desc\">\n                        사전신청하신 분들에겐 오픈 시 사용 가능한<br/>일주일 무료 이용권이 제공됩니다.\n                        {/* <br/> <p style={{color:'rgb(30,30,30)', fontFamily:'OTWelcomeBA'}}>기간 : 21.11.20 ~ 21.12.20</p> */}\n                    </div>\n                </span>\n                {/* <span className=\"last-one-component\">\n                    <div className=\"main-section-last-title\">\n                        지금 당장 필요하지 않다면<br/>쿠폰 받아가세요!\n                    </div>\n                    <Link to=\"coupon\" onClick={AddLog} className=\"apply-button\" style={{backgroundColor:'rgba(0,0,0,0)', color:'white'}}>\n                        할인쿠폰 받으러 가기</Link>\n                    \n                    <div className=\"main-section-last-desc\">\n                        이벤트 기간 : 2021.00.00 ~ 2021.00.00 <br/>\n                        사용 가능 기간 : ~ 2022.02.28\n                    </div>\n                </span> */}\n            </div>\n            {/* <div className=\"main-page-section-last\" style={{backgroundColor:'white', color:'black'}}>\n                <span className=\"last-one-component\" style={{width:'100%'}}>\n                    <div>\n                        여기에 뭐 설명같은거\n                    </div>\n                </span>\n            </div> */}\n        </div>\n            <Footer />\n           </>\n    )\n}\n\nexport default MainPage","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/UserLanding/UserLandingPage.js",[],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/Landing/MainPageV2.js",["435","436","437","438"],"import React, {useEffect,useRef, useState} from 'react'\nimport './old/MainPage.css'\nimport './MainPageV2.css'\nimport {Link} from 'react-router-dom';\nimport { dbService } from '../../tools/fbase'\nimport Footer from '../NavAndFooter/Footer'\nimport AccessAlarmsIcon from '@mui/icons-material/AccessAlarms';\nimport { ToolOutlined, PieChartOutlined, MobileOutlined, GroupOutlined, FormatPainterOutlined, BranchesOutlined, PicLeftOutlined, AlertOutlined, PictureOutlined, FormOutlined } from '@ant-design/icons';\nimport { motion } from \"framer-motion\"\nimport Icons from '../../components/Make/tools/Icons'\n\nimport s1 from '../../tools/img/surfee1.png';\n\nconst ourInfos = [\n    {\n        icon : <ToolOutlined className=\"func-icon\" style={{color:'#6a63f7', fontSize:'2em'}}/>,\n        desc : \"노코딩 툴\",\n    },\n    {\n        icon : <PieChartOutlined className=\"func-icon\" style={{color:'#6a63f7', fontSize:'2em'}}/>,\n        desc : \"데이터 시각화\",\n    },\n    {\n        icon : <MobileOutlined className=\"func-icon\" style={{color:'#6a63f7', fontSize:'2em'}}/>,\n        desc : \"반응형\",\n    },\n    {\n        icon : <BranchesOutlined className=\"func-icon\" style={{color:'#6a63f7', fontSize:'2em'}}/>,\n        desc : \"도메인 연결\",\n    },\n    { \n        icon : <AlertOutlined className=\"func-icon\" style={{color:'#6a63f7', fontSize:'2em'}}/>,\n        desc : \"CTA 제공\",\n    },\n    {\n        icon : <PictureOutlined className=\"func-icon\" style={{color:'#6a63f7', fontSize:'2em'}}/>,\n        desc : \"favicon 커스텀\",\n    },\n    {\n        icon : <FormOutlined className=\"func-icon\" style={{color:'#6a63f7', fontSize:'2em'}}/>,\n        desc : \"섹션별 커스텀\",\n    },\n    {\n        icon : <PicLeftOutlined className=\"func-icon\" style={{color:'#6a63f7', fontSize:'2em'}}/>,\n        desc : \"템플릿 제공\",\n    },\n    {\n        icon : <GroupOutlined className=\"func-icon\" style={{color:'#6a63f7', fontSize:'2em'}}/>,\n        desc : \"네비바 / 푸터바 커스텀\",\n    },\n    {\n        icon : <FormatPainterOutlined className=\"func-icon\" style={{color:'#6a63f7', fontSize:'2em'}}/>,\n        desc : \"폰트 크기, 색상 변경\",\n    },\n];\n\nfunction MainPageV2({history, isLoggedIn, userObj}) {\n    const [email,setEmail] = useState(\"\");\n    const targets = useRef(null)\n    // const [scrollPosition, setScrollPosition] = useState(0);\n\n    // const updateScroll = () => {\n    //     setScrollPosition(window.scrollY || document.documentElement.scrollTop);\n    // }\n\n    useEffect(()=>{\n        // window.addEventListener('scroll', updateScroll);\n    });\n\n    const sendData = async () => {\n        console.log(dbService);\n        if(email.length < 4){\n            alert(\"올바른 이메일 양식을 입력해주세요!\");\n            return;\n        }\n        await dbService.collection(\"apply-datas\").add({\n            email:email,\n            created:Date.now(),\n        });\n\n        alert(\"신청되셨습니다. 감사합니다. 빠른 시일내로 연락드리겠습니다.\");\n        setEmail(\"\");\n    }\n\n    const scrollDown = () => {\n        targets.current.scrollIntoView({behavior: 'smooth'})\n    }\n\n    const ourInfosTable = ourInfos.map((item, index) => {\n        return(\n            <div className=\"one-desc-func\" index={index}>\n                <div className=\"func-content\">\n                    {item.icon}\n                </div>\n                <div className=\"func-content\">\n                    {item.desc}\n                </div>\n            </div>\n        )\n    })\n\n    const checkLoggedIn = () => {\n        console.log(\"로그인했나?\", isLoggedIn)\n        if(isLoggedIn === false){\n            alert(\"로그인하셔야 이용가능한 페이지입니다.\");\n        }else{\n            history.push('/#/seeResponse');\n            history.go();\n            return;\n        }\n    }\n\n    const SomeoneClickMoveToMake = async () => {\n        const isNew = localStorage.getItem('isNew');\n        console.log(\"isNew\", isNew);\n        if(isNew === null){\n            localStorage.setItem('isNew', false);\n            if(userObj !== null){\n                dbService.collection('SomeoneClickMoveToMake').add({\n                    name:userObj.displayName,\n                    email:userObj.email,\n                    new:true,\n                    createdAt: new Date(),\n                })\n            }else{\n                dbService.collection('SomeoneClickMoveToMake').add({\n                    new:true,\n                    createdAt: new Date(),\n                })\n            }\n        }else{\n            if(userObj !== null){\n                dbService.collection('SomeoneClickMoveToMake').add({\n                    name:userObj.displayName,\n                    email:userObj.email,\n                    new:false,\n                    createdAt: new Date(),\n                })\n            }else{\n                dbService.collection('SomeoneClickMoveToMake').add({\n                    new:false,\n                    createdAt: new Date(),\n                })\n            }\n        }\n    }\n\n    const variants = {\n        hidden: { opacity: 0 },\n        visible: { opacity: 1 },\n      }\n\n    return (\n        <>\n        <div className=\"main-page-container\">\n            <div className=\"main-page-section-topbottom\" style={{backgroundColor:'white'}}>\n                <div className=\"main-section-left-topbottom\" style={{color:'black'}}>\n                    <span className=\"one-section-big-topbottom\">\n                        '타이핑'과 '이미지'로만<br/>\n                        빠르고 간단하게 랜딩페이지를 제작해보세요\n                        {/* <Icons /> */}\n                    </span>\n                    {/* <span className=\"one-section-small\">\n                    신규 서비스와 이벤트부터 스타트업 아이템 검증까지,<br/>\n                    코딩없이 랜딩페이지를 만들고 실시간 데이터 분석을 통해 <br/>\n                    최고의 고객 전환율을 경험해 보세요.\n                    </span> */}\n                    <button className=\"apply-button-v2\" onClick={scrollDown} style={{height:'60px', width:'200px', borderRadius:'30px', marginTop:'20px'}}>\n                        무료로 체험하기\n                    </button>\n                </div>\n                <motion.div className=\"main-section-right-topbottom\" \n                    initial=\"hidden\" \n                    animate=\"visible\" \n                    variants={variants}>\n                    <img src={s1} className=\"section-one-image-main-topbottom\" />\n                </motion.div>\n            </div>\n            \n            <div className=\"main-page-section-topbottom\" style={{backgroundColor:\"white\"}}>\n                <div className=\"main-section-left-topbottom\">\n                    <span className=\"one-section-big-topbottom\">\n                        랜딩페이지 제작을 가장 효율적으로!\n                    </span>\n                    <span className=\"one-section-small-topbottom\">\n                        <span className=\"one-desc-card\">\n                            <div className=\"card-content\">\n                                이미지\n                            </div>\n                            <div className=\"card-content\" style={{fontSize:'2em', fontFamily:'Pretendard-ExtraBold'}}>\n                                코딩도 디자인도 필요없는<br/>One-stop 랜딩페이지 제작툴\n                            </div>\n                            <div className=\"card-content\" style={{color:'rgb(30,30,30)', fontSize:'1.5em'}}>\n                                개발자 없이도, 외주 없이도 직접<br/>\n                                템플릿을 고르고 블로그를 꾸미듯<br/>\n                                쉽고 빠르게 랜딩페이지를 만들어 보세요.\n                            </div>\n                            <div className=\"card-content-link\">\n                                <Link to=\"\" className=\"card-link\">지금 바로 만들기</Link>\n                            </div>\n                        </span>\n                        <span className=\"one-desc-card\">\n                            <div className=\"card-content\">\n                                이미지\n                            </div>\n                            <div className=\"card-content\" style={{fontSize:'2em', fontFamily:'Pretendard-ExtraBold'}}>\n                                잠재 유저 분석을 위한<br/>유저 데이터를 직관적으로!\n                            </div>\n                            <div className=\"card-content\" style={{color:'rgb(30,30,30)', fontSize:'1.5em'}}>\n                                조회수, 사용자 수, 전환율(CVR), 유입 채널 등<br/>\n                                고객의 반응을 확인할 수 있는 유의미한 데이터를<br/>\n                                개발자에게 요청할 필요없이 직접 확인해 보세요.\n                            </div>\n                            <div className=\"card-content-link\">\n                                <Link to=\"\" className=\"card-link\">지금 바로 만들기</Link>\n                            </div>\n                        </span>\n                        <span className=\"one-desc-card\">\n                            <div className=\"card-content\">\n                                이미지\n                            </div>\n                            <div className=\"card-content\" style={{fontSize:'2em', fontFamily:'Pretendard-ExtraBold'}}>\n                                모바일 환경에서도<br/>불편함 없이, 반응형으로!\n                            </div>\n                            <div className=\"card-content\" style={{color:'rgb(30,30,30)', fontSize:'1.5em'}}>\n                                Surfee를 통해 제작한 랜딩페이지는<br/>\n                                모바일 환경에서도 최적화된<br/>\n                                반응형으로 제공됩니다.\n                            </div>\n                            <div className=\"card-content-link\">\n                                <Link to=\"\" className=\"card-link\">지금 바로 만들기</Link>\n                            </div>\n                        </span>\n                    </span>\n                </div>\n                {/* <div className=\"main-section-right-topbottom\">                   \n                    <img src={section1} className=\"section-one-image\"/>\n                </div> */}\n            </div>\n            <div className=\"main-page-section-topbottom\" style={{backgroundColor:\"white\", height:'500px'}}>\n                <div className=\"main-section-left-topbottom\">\n                    <span className=\"one-section-big-topbottom\">\n                        Surfee가 제공하는 기능!\n                    </span>\n                    <span className=\"one-section-small-topbottom\">\n                        <div className=\"info-table\">\n                            {ourInfosTable}\n                        </div>\n                    </span>\n                </div>\n            </div>\n            <div ref={targets} className=\"main-page-section-last-v2\">\n                <span className=\"last-one-component-v2 last-card\">\n                    <div className=\"main-section-last-title-v2\">\n                        <span>\n                        고객 검증을 위한 '랜딩페이지' 제작은<br/>\n                        <span style={{color:'#6a63f7', borderBottom:'3px solid #6a63f7'}}>이제 선택이 아닌 필수</span>입니다.\n                        </span>\n                    </div>\n                    <div style={{flexDirection:'row', display:'flex', justifyContent:'center', width:'100%', marginTop:'5%'}}>\n                        <div style={{width:'30%', display:'flex', justifyContent:'center', alignItems:'center', flexDirection:'column'}}>\n                        <span>Let's Build Your Page!</span>\n                            <Link to=\"/make\" className=\"apply-button-v2\" onClick={() => SomeoneClickMoveToMake()}>제작하러가기</Link>\n                        </div>\n                        <div style={{width:'30%', display:'flex', justifyContent:'center', alignItems:'center', flexDirection:'column'}}>\n                        <span style={{color:'#6a63f7'}}>이미 제작을 완료하셨다면</span>\n                        <span className=\"apply-button-v2\" onClick={() => checkLoggedIn()} style={{backgroundColor:'#ffffff', color:'#6a63f7'}}>관리하기</span>   \n                        </div>\n                    </div>\n                </span>\n            </div>\n        </div>\n        <Footer />\n        </>\n    )\n}\n\nexport default MainPageV2","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/Response/ResponsePage.js",["439","440","441","442","443","444","445","446","447","448","449","450","451"],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/Customer/CustomerPage.js",["452","453","454","455","456","457","458","459"],"import React, {useState, useEffect} from 'react'\nimport QnA from '../../components/Customer/QnA'\nimport Term from '../../components/Customer/Term'\nimport PersonalInformation from '../../components/Customer/PersonalInformation'\nimport Footer from '../NavAndFooter/Footer'\nimport ReactGa from 'react-ga'\nimport { useRecoilState } from 'recoil'\nimport {userState} from '../../Router'\n\nimport './CustomerPage.css'\n\nfunction CustomerPage() {\n    const [cnum, setCnum] = useState(1);\n    const [cnums, setCnums] = useState([1,2,3]);\n    const [userData, setUserData] = useRecoilState(userState);\n    \n    useEffect(()=>{\n\n        // ReactGa.initialize('UA-213792742-1');\n        // ReactGa.pageview('/customerPage');\n    });\n\n    const tabsTable = cnums.map((item, index) => {\n        let fw = '500';\n        let bb = '0px';\n        let fb = 'gray';\n        if(cnum == item){\n            fw = '700'; \n            bb = '2px solid black';\n            fb = 'black';\n        }\n\n        switch(item){\n            case 1:\n                return(\n                   <span className=\"tab-one\" index={index} style={{color:`${fb}`, fontWeight:`${fw}`, borderBottom:`${bb}`}} onClick={e => setCnum(item)}>자주묻는질문(FAQ)</span>\n                )\n            case 2:\n                return(\n                    <span className=\"tab-one\" index={index} style={{color:`${fb}`, fontWeight:`${fw}`, borderBottom:`${bb}`}} onClick={e => setCnum(item)}>이용약관</span>\n                )\n\n            case 3:\n                return(\n                    <span className=\"tab-one\" index={index} style={{color:`${fb}`, fontWeight:`${fw}`, borderBottom:`${bb}`}} onClick={e => setCnum(item)}>개인정보처리방침</span>\n                )\n\n        }\n    })\n\n    const contentTable = () => {\n        switch(cnum){\n            case 1:\n                return(\n                    <QnA />\n                )\n            case 2:\n                return(\n                    <Term />\n                )\n            case 3:\n                return(\n                    <PersonalInformation />\n                )\n        }\n    }\n\n    return (\n        <>\n        <div className=\"questionspage-container\">\n            <div className=\"q-inner\">\n                <div className=\"q-info-top\">\n                    <div className=\"q-title-top\" style={{fontWeight: 'bold'}}>\n                        Surfee에 관심을 가져주셔서 감사합니다.\n                    </div>\n                    <div className=\"q-title-top\" style={{marginTop:'3%'}}>\n                        안녕하세요!<br/>\n                        무엇을 도와드릴까요?\n                    </div>\n                    <div>\n                        <span className=\"q-button\">\n                            직접 문의하기\n                        </span>\n                    </div>\n                </div>\n                <div className=\"quetions-content-bottom\">\n                    <div className=\"q-tabs\">\n                        {tabsTable}\n                    </div>\n                    <div className=\"q-content\">\n                        <div className=\"q-one-content\">\n                            {contentTable()}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <Footer />\n        </>\n    )\n}\n\nexport default CustomerPage\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/Questions/FQ.js",["460","461","462","463","464","465","466","467","468","469","470","471","472","473","474","475"],"import React, {useState, useEffect, useContext} from 'react'\nimport { styled, Box } from '@mui/system';\nimport ModalUnstyled from '@mui/base/ModalUnstyled';\nimport '../../components/Make/Modal/Modal.css';\nimport './FirstQuestions.css'\nimport {Link} from 'react-router-dom'\nimport { MyContext } from '../Make/MakePageV2'\nimport {dbService} from '../../tools/fbase';\nimport OverflowScrolling from 'react-overflow-scrolling';\n\nimport good from '../../tools/info/good3d.png';\n\nimport { Input } from 'antd';\n\nconst StyledModal = styled(ModalUnstyled)`\n  position: fixed;\n  z-index: 1300;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius:10px;\n`;\n\nconst Backdrop = styled('div')`\n  z-index: -1;\n  position: fixed;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  left: 0;\n  background-color: rgba(0, 0, 0, 0.2);\n  -webkit-tap-highlight-color: transparent;\n`;\n\nconst style = {\n  width: '100vw',\n  height: '100vh',\n  bgcolor: 'rgba(255,255,255,1)',\n  border: '0px solid #000',\n  marginTop: '-60px',\n  flexDirection:'column',\n  p: 2,\n  px: 4,\n  pb: 3,\n  zIndex:'10000099',\n  display:'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n//   borderRadius:'20px',\n  position:'relative',\n}\n\nconst StyledModal2 = styled(ModalUnstyled)`\n  position: fixed;\n  z-index: 1300;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius:10px;\n`;\n\nconst Backdrop2 = styled('div')`\n  z-index: -1;\n  position: fixed;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  left: 0;\n  background-color: rgba(0, 0, 0, 0.2);\n  -webkit-tap-highlight-color: transparent;\n`;\n\nconst style2 = {\n  width: '30vw',\n  height: '80vh',\n  bgcolor: 'rgba(255,255,255,1)',\n  border: '0px solid #000',\n  flexDirection:'column',\n  p: 2,\n  px: 4,\n  pb: 3,\n  display:'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n//   borderRadius:'20px',\n};\n\nconst progressList = [\n    {\n        num:1,\n        name:'NAME',\n    },\n    {\n        num:2,\n        name:'GOAL',\n    },\n    {\n        num:3,\n        name:'TEMPLATE',\n    },\n    {\n        num:4,\n        name:'DESIGN',\n    },\n    {\n        num:5,\n        name:'URL',\n    },\n]\n\nconst secondQuestion = [\n    {\n        typequestion: \"🍎 앱 다운로드\",\n        question : \"많은 사람들이 우리의 앱을 다운로드 하면 좋겠어요\",\n        type:'app',\n    },\n    {\n        typequestion: \"✍️ 사전신청\",\n        question : \"사전신청을 많이 받고 싶어요\",\n        type:'pre',\n    },\n    {\n        typequestion: \"💰 판매\",\n        question : \"서비스/제품을 많이 팔고 싶어요\",\n        type:'sell',\n    },\n    {\n        typequestion: \"🎁 이벤트\",\n        question : \"이벤트를 널리 알리고 싶어요\",\n        type:'event',\n    },\n    {\n        typequestion: \"📚 포트폴리오\",\n        question : \"멋진 나를 알리고 싶어요\",\n        type:'portfolio',\n    },\n    {\n        typequestion: \"🎸 기타\",\n        question : \"다른 목표를 향하고 있습니다\",\n        type:'etc',\n    },\n]\n\nconst fontList = [\n    {\n        name:'Noto Sans KR',\n        font:'Noto Sans KR',\n    },\n    {\n        name:'Pretendard',\n        font:'Pretendard-Regular',\n    },\n    {\n        name:'에스코어드림',\n        font:'Noto Sans KR',\n    },\n    {\n        name:'Noto Sans KR',\n        font:'Noto Sans KR',\n    },,\n    {\n        name:'Noto Sans KR',\n        font:'Noto Sans KR',\n    },,\n    {\n        name:'Noto Sans KR',\n        font:'Noto Sans KR',\n    },\n]\nconst colorList = [\n    {\n        name:'검',\n        color:'rgba(0,0,0,1)',\n    },\n    {\n        name:'차분',\n        color:'rgba(255,255,255,1)',\n    },\n    {\n        name:'노',\n        color:'rgba(0,255,255,1)',\n    },\n    {\n        name:'빨',\n        color:'rgba(250,0,0,1)',\n    },,\n    {\n        name:'초',\n        color:'rgba(0,250,0,1)',\n    },,\n    {\n        name:'파',\n        color:'rgba(0,0,250,1)',\n    },\n]\n\nfunction FQ(props) {\n    // 모달\n    const [cnum, setCnum] = useState(1);\n    const [type, setType] = useState(\"\");\n    const [templates, setTemplates] = useState([]);\n    const [templateNum, setTemplateNum] = useState(0);\n    const [title, setTitle] = useState('');\n    const [urlId, setUrlId] = useState('');\n    const [font, setFont] = useState('');\n    const [color, setColor] = useState('');\n    const [tmodalOpen, setTmodalOpen] = useState(false);\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    // const handleOpen = () => setOpen(true);\n    // const handleClose = async () => {\n    //     // 마지막에는 입력한 정보도 저장한다. 근데 한명껄 여러번 저장해서 헷갈리지 않게..!\n\n    //     await dbService.collection('question_answers').add({\n    //         createdAt: new Date(),\n    //     })\n    //     setOpen(false)\n    // };\n\n    useEffect(() => {\n    }, []);\n\n    const nextAndSetTemplates = async (e) => {\n        if(type === \"\"){\n            alert(\"위의 보기 중 한가지를 선택해주세요.\");\n            return\n        }else{\n            const typeTemplatesdata = await dbService\n                .collection(\"templates\")\n                .where(\"type\", \"==\", type)\n                .get(); // uid를 creatorId로 줬었으니까.\n\n            let typeTemplates = typeTemplatesdata.docs.map(doc => {\n                return({...doc.data(), id:doc.id})\n            });\n\n            setTemplates(typeTemplates);\n            setCnum(cnum + 1);\n        }\n    }\n\n    const nextAndSetTemplate = async (e) => {\n        if(templateNum === 0){\n            alert(\"위의 보기 중 한가지를 선택해주세요.\");\n            return\n        }else{\n            // templates.filter(doc => doc.type === type && doc.templateNum === templateNum)[0]\n            // 이걸 set Contents에.\n            // action.setContents(templates.filter(doc => doc.type === type && doc.templateNum === templateNum)[0])\n\n            setCnum(cnum + 1);\n        }\n    }\n\n    const nextAndSetFont = async e => {\n        if(font === ''){\n            alert(\"위의 보기 중 한가지를 선택해주세요.\");\n            return\n        }else{\n            setCnum(cnum + 1);\n        }\n    }\n    const nextAndSetDone = async e => {\n        const urlDatas = await dbService\n            .collection(\"urlStores\")\n            .where(\"urlId\", \"==\", urlId)\n            .get(); // uid를 creatorId로 줬었으니까.\n        \n        let urlData = urlDatas.docs.map(doc => {\n            return({...doc.data(), id:doc.id})\n        });\n\n        if(urlId === ''){\n            alert(\"URL을 입력해주세요. 이후 페이지에서 수정가능합니다.\");\n            return\n        }else if(urlData.length > 0){\n            alert(\"이미 존재하는 url입니다. 다른 url을 사용해주세요.\");\n            return;\n        }\n        \n        // if(urlId === ''){\n        //     alert(\"URL을 입력해주세요. 이후 페이지에서 수정가능합니다.\");\n        //     return\n        // }else if(editing === true){\n        //     const real = window.confirm(\"템플릿을 새로 설정하면 이전에 작성한 내용이 사라집니다. 괜찮으신가요?\")\n        //     if(real){\n        //         {\n        //             // templates.filter(doc => doc.type === type && doc.templateNum === templateNum)[0]\n        //             // 이걸 set Contents에.\n        //             action.setContents(templates.filter(doc => doc.type === type && doc.templateNum === templateNum)[0])\n        \n        //             setEditing(true);\n        //             handleClose();\n        //         }\n        //     }else{\n        //         return;\n        //     }\n        // }else{\n        //     action.setContents(templates.filter(doc => doc.type === type && doc.templateNum === templateNum)[0])\n\n        //     setEditing(true);\n        //     handleClose();\n        // }\n    }\n\n    const getAllTemplates = async(e) => {\n        const typeTemplatesdata = await dbService\n            .collection(\"templates\")\n            .get(); // uid를 creatorId로 줬었으니까.\n\n        let typeTemplates = typeTemplatesdata.docs.map(doc => {\n            return({...doc.data(), id:doc.id})\n        });\n\n        setTemplates(typeTemplates);\n    }\n\n    const showTemplateModal = () => {\n        setTmodalOpen(true);\n    }\n\n    const content = () => {\n        switch(cnum){\n            case 1:\n                return(\n                    <div style={{display:'flex', flexDirection:'column'}}>\n                        <form onSubmit={() => setCnum(cnum + 1)} style={{display:'flex', flexDirection:'column', justifyContent: 'center', alignItems: 'center'}}>\n                            <div className=\"modal-main-card\">\n                                <div className=\"modal-title\">\n                                    안녕하세요! <span style={{color:'#6C63FF'}}>Surfee</span>에 오신 것을 환영합니다! <br/>\n                                    당신의 서비스 / 제품 명을 알려주세요. 😊\n                                </div>\n                            </div>\n                            <Input className=\"input-holder\" type=\"text\" placeholder=\"한글은 8자 이내, 영문 10자 이내일 때 가장 이뻐요!\" value={title} onChange={e => setTitle(e.currentTarget.value)} />\n                            <div className=\"modal-button-container\">\n                                <button className=\"modal-move-button\" onSubmit={e => setCnum(cnum + 1)} style={{visibility:`${title.length > 0 ? 'visible' : 'hidden'}`, display:'flex'}} \n                                    onClick={e => setCnum(cnum + 1)}>확인</button>  \n                            </div>\n                        </form>\n                    </div>\n                )\n                break;\n\n            case 2:\n                return(\n                    <div style={{display:'flex', flexDirection:'column'}}>   \n                        <div className=\"modal-title\">\n                            <span style={{color:'#6C63FF'}}>{title}</span>의 랜딩페이지는 다음 중 어떤 목표를 향하고 있나요? 🚀\n                        </div>                     \n                        <div className=\"modal-main-card\">\n                            {\n                                secondQuestion.map((item, index) => {\n                                    let color = 'none';\n                                    if(item.type === type){\n                                        color = '1px solid #6C63FF';\n                                    }\n                                    return(\n                                        <div className=\"button1\" onClick={() => {setType(item.type);}} key={index} \n                                            style={{border:`${color}`}}>\n                                            <div style={{fontSize:'20px'}}>\n                                                {item.typequestion}\n                                            </div>\n                                            <div style={{marginTop:'4%'}}>\n                                                {item.question}\n                                            </div>\n                                        </div>\n                                    )\n                                })\n                            }\n                        </div>\n                        <div className=\"modal-button-container\">\n                            <button className=\"modal-move-button\" onClick={e => setCnum(cnum - 1)}>이전</button>\n                            <button className=\"modal-move-button\" onClick={e => nextAndSetTemplates(e)}>다음</button>  \n                        </div>\n                    </div>\n                )\n                break;\n\n            case 3:\n                return(\n                    <div style={{display:'flex', flexDirection:'column'}}> \n                        <div className=\"modal-title\">\n                            그렇다면 이런 템플릿을 추천해드릴게요 😎\n                        </div>\n                        <div className=\"modal-main-card\">\n                            {\n                                templates.map((item, index) => {\n                                    let color = 'none';\n                                    if(item.type === type && templateNum === item.templateNum){\n                                        color = '1px solid #6C63FF';\n                                    }\n                                    return(\n                                        <div>\n                                            <div className=\"template__card\" key={index}\n                                                onClick={() => {\n                                                    setTemplateNum(item.templateNum);\n                                                    setType(item.type);\n                                                }}\n                                                style={{border: `${color}`}} >\n\n                                                <span className=\"magnify-button\" onClick={() => showTemplateModal()}>↗</span>\n                                                \n                                                <img src={good} width={240} />\n                                                \n                                                <div>\n                                                    {item.type}\n                                                    {item.templateName}\n                                                </div>\n                                            </div>\n                                        </div>\n                                    )\n                                })\n                            }\n                        </div>\n                        <div className=\"modal-button-container\">\n                            <button className=\"modal-move-button\" onClick={e => setCnum(cnum - 1)}>이전</button>\n                            <button className=\"modal-move-button\" onClick={e => nextAndSetTemplate()}>다음</button>  \n                        </div>\n                        <div style={{width:'100%', display: 'flex', justifyContent:'center'}}>\n                            <span className=\"ask-another-template\" onClick={e => getAllTemplates(e)}>\n                                앗, 다른 템플릿을 원하시나요?\n                            </span>\n                        </div>\n                    </div>\n                )\n\n            case 4:\n                return(\n                    <div style={{display:'flex', flexDirection:'column'}}>\n                        <div className=\"modal-title\">\n                            멋져요! 디자인은 어떻게 할까요? 🤔\n                        </div>\n                        <div className=\"modal-main-card\">\n                            <div style={{width:'48%'}}>\n                                <div style={{width:'100%', textAlign:'center', margin:'2% 0%'}}>\n                                    폰트를 선택해주세요.\n                                </div>\n                                <OverflowScrolling className=\"font-selections__container\">\n                                    {fontList.map((item, index) => {\n                                        let color = 'none';\n                                        if(item.font === font){\n                                            color = '1px solid #6C63FF';\n                                        }\n                                        return(\n                                            <div className=\"template__card\" key={index}\n                                                onClick={() => {\n                                                    setFont(item.font);\n                                                }}\n                                                style={{border: `${color}`, fontFamily:`${item.font}`, padding:'5% 3%'}}\n                                            >\n                                                <div>\n                                                    {item.name}\n                                                </div>\n                                                <div style={{marginTop:'2%'}}>\n                                                    노코드 랜딩페이지 제작 툴, Surfee\n                                                </div>\n                                            </div>\n                                        )\n                                    })}\n                                </OverflowScrolling>\n                            </div>\n                            <div style={{width:'48%', marginLeft:'2%'}}>\n                                <div style={{width:'100%', textAlign:'center', margin:'2% 0%'}}>\n                                    색상을 선택해주세요.\n                                </div>\n                                <OverflowScrolling className=\"font-selections__container\">\n                                    {colorList.map((item, index) => {\n                                        let bor = 'none';\n                                        if(item.color === color){\n                                            bor = '1px solid #6C63FF';\n                                        }\n                                        return(\n                                            <div className=\"template__card\" key={index}\n                                                onClick={() => {\n                                                    setColor(item.color);\n                                                }}\n                                                style={{border: `${bor}`, padding:'5% 3%'}}\n                                            >\n                                                <div>\n                                                    {item.name}\n                                                </div>\n                                                <div style={{backgroundColor:`${item.color}`}}>\n                                                    색\n                                                </div>\n                                            </div>\n                                        )\n                                    })}\n                                </OverflowScrolling>\n                            </div>\n                        </div>\n                        <div className=\"modal-button-container\">\n                            <button className=\"modal-move-button\" onClick={e => setCnum(cnum - 1)}>이전</button>\n                            <button className=\"modal-move-button\" onClick={() => nextAndSetFont()}>다음</button>\n                        </div>\n                    </div>\n                )\n                break;\n\n            case 5:\n                return(\n                    <div style={{display:'flex', flexDirection:'column'}}>\n                        <div className=\"modal-title\">\n                            마지막으로, <span style={{color:'#6C63FF'}}>{title}</span> 랜딩페이지의 URL을 설정해주세요!\n                        </div>\n                        <div className=\"modal-title\" style={{fontSize:'25px'}}>\n                            <Input className=\"input-holder\" type=\"text\" value={urlId} onChange={e => setUrlId(e.currentTarget.value)} />.surfee.co.kr\n                        </div>\n                            <div style={{color:'gray', paddingLeft:'6%',marginTop:'3%', fontSize:'18px', textAlign:'left', fontFamily:'Pretendard-Regular'}}>\n                                <div>\n                                    - 영문과 숫자만 사용 가능합니다.<br/><br/>\n                                    - 개인 도메인 연결은 다음 버전에 빠르게 업데이트 해올게요!<br/><br/>\n                                    - 수정 가능하니 편하게 설정해주세요 :)<br/><br/>\n                                </div>\n                            </div>\n                        <div className=\"modal-button-container\">\n                            <button className=\"modal-move-button\" onClick={e => setCnum(cnum - 1)}>이전</button>\n                            <button className=\"modal-move-button\" onClick={() => {\n                                nextAndSetDone();\n                            }} style={{backgroundColor:'rgba(255,0,0,0.7)'}}>시작하기</button>\n                        </div>\n                    </div>\n                )\n                break;\n        }\n    }\n\n    return (\n        <div>\n            <Box sx={style}>\n                {/* {editing ? \n                    <span onClick={() => handleClose()} className=\"arrow-hover\" style={{position:'absolute', top:'10px', left:'20px', fontSize:'30px', border:'none', backgroundColor:'#ffffffff', cursor:'pointer', color:'black'}}>\n                        ←\n                    </span>\n                     : */}\n                    <Link to=\"/\" className=\"arrow-back\">\n                        ←\n                    </Link> \n                {/* } */}\n                <div className=\"progress-bar__container\">\n                    {progressList.map((item, index) => {\n                        let backColor = 'rgba(0,0,0,0.3)'\n                        let fontColor = 'rgba(0,0,0,0.6)'\n                        let fontColor2 = 'rgba(0,0,0,0.6)'\n\n                        if(item.num < cnum){\n                            backColor = '#6C63FF'\n                            fontColor = \"white\"\n                            fontColor2 = 'black'\n                        }else if(item.num === cnum){\n                            backColor = 'white'\n                            fontColor = \"#6C63FF\"\n                            fontColor2 = \"#6C63FF\"\n                        }\n\n                        return(\n                            <span style={{display:'flex', flexDirection:'column', margin:'3%', alignItems: 'center', justifyContent: 'center'}}>\n                                <span className=\"list-component\" style={{backgroundColor:`${backColor}`, color:`${fontColor}`, border:`1px solid ${fontColor}`}}>{item.num}</span>\n                                <span style={{fontSize:'12px', color:`${fontColor2}`, marginTop:'12px'}}>{item.name}</span>\n                            </span>\n                        )\n                    })}\n                </div>\n                <div style={{width:'60%'}}>\n                    {content()}\n                </div>\n            </Box>\n        </div>\n    )\n}\n\nexport default FQ\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/Login/Login/LoginPage.js",["476","477","478","479"],"import React, {useState, useEffect} from 'react';\nimport './LoginRegister.css'\nimport { authService } from '../../../tools/fbase'\nimport { firebaseInstance } from '../../../tools/fbase'\nimport { dbService } from '../../../tools/fbase'\nimport { Input } from 'antd';\nimport googlelogo from '../googlelogo.png'\nimport s1 from '../../../tools/img/surfee1.png';\nimport Footer from '../../NavAndFooter/Footer';\nimport {Link} from 'react-router-dom';\n\nfunction LoginPage({history}) {\n    const [id, setId] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [done, setDone] = useState(false);\n\n    const socialLogin = async (e) => {\n        const { \n            target : { name }, \n        } = e;\n        let provider;\n        // if (name === \"googleLogin\"){\n        provider = new firebaseInstance.auth.GoogleAuthProvider();\n        // }else{\n        //     console.log(\"이건 뜨면 안되는 메세지.\");\n        // }\n\n        const data = await authService.signInWithPopup(provider);\n        await checkRegister(data.user.multiFactor.user.email);\n        history.push('/');\n        history.go();\n    }\n\n    const submit = async (e) => {\n        var data = '';\n        e.preventDefault();\n        try{\n            data = await authService.signInWithEmailAndPassword(\n                id, password\n            )\n            checkRegister(data.user.multiFactor.user.email)\n        } catch (err){\n            console.log(err)\n        }\n        console.log(data)\n    }\n\n    const checkRegister = async (email) => {\n        const usersCollections = await dbService\n            .collection(\"users\")\n            .where(\"email\", \"==\", email)\n            .get();\n        \n        const usersExist = usersCollections.docs.map(doc => {\n            return({...doc.data(), id: doc.id})\n        })\n\n        console.log(\"일단 로그인 성공\", email, usersExist)\n\n\n        if(usersExist.length === 0){\n            // 구글 아이디로 로그인했는데 회원가입에 정보가 없을 때\n            console.log(\"회원가입 정보를 받습니다.\");\n            setDone(true);\n        }else{\n            console.log(\"로그인 완료\");\n            localStorage.setItem(\"name\", usersExist[0].name);\n            localStorage.setItem(\"job\", usersExist[0].job);\n\n            history.push('/');\n            history.go();\n        }\n    }\n\n    return (\n        <>\n        {done ? \n        <div>\n            Initializing... \n            {/* 여기에 회원가입 페이지랑 똑같이 입력받는걸 넣어야 하는 건가..? */}\n        </div>\n        :\n        <div>\n        <div className=\"login-container\">\n            <div className=\"login-container__container\">\n                <div className=\"login__inner\">\n                    <div className=\"login-title\" style={{color:'#6a63f7'}}>\n                        Surfee\n                    </div>\n                    <div className=\"login-title\">\n                        로그인 페이지에 오신 것을 환영합니다.\n                    </div>\n                    <form onSubmit={e => submit(e)} className=\"center\">\n                        <span className=\"login-label\">\n                            Email\n                        </span>\n                        <Input \n                            type=\"text\" \n                            className=\"login-input\"\n                            placeholder=\"아이디를 입력해주세요.\" \n                            required\n                            value={id}   \n                            onChange={e => setId(e.currentTarget.value)}\n                        />\n                        <span className=\"login-label\">\n                            Password\n                        </span>\n                        <Input  \n                            type=\"password\" \n                            className=\"login-input\"\n                            placeholder=\"비밀번호를 입력해주세요.\" \n                            required\n                            value={password} \n                            onChange={e => setPassword(e.currentTarget.value)}\n                        />\n                        <Input className=\"login-form-button\" type=\"submit\" value=\"로그인\" />\n                    </form>\n                    <button className=\"google-login-button\" name=\"googleLogin\" onClick={e => socialLogin(e)} style={{marginTop:'2%'}}>\n                        <img src={googlelogo} width={20}/>\n                        <span style={{marginLeft:'5%'}}>구글 로그인</span>\n                    </button>\n                    <div style={{padding:'2% 0%', justifyContent:'flex-start', display:'flex', width:'100%'}}>\n                        <Link to=\"/customer\" className=\"footer-text-click\">\n                            개인정보 처리방침\n                        </Link>\n                        <Link to=\"/customer\" className=\"footer-text-click\" style={{marginLeft:'2%'}}>\n                            이용약관\n                        </Link>\n                    </div>\n                </div>\n            </div>\n            <div className=\"login-background\">\n                <img src={s1} width={600} />\n                <div className=\"login-background__desc\" style={{fontFamily:'Pretendard-ExtraBold', marginTop:'2%'}}>\n                    Surfee와 함께 1분만에 완성하는 랜딩페이지\n                </div>\n                <div className=\"login-background__desc\">\n                    Surfee와 함께 1분만에 완성하는 랜딩페이지\n                </div>\n            </div>\n        </div>\n        <Footer />\n        </div>\n     }</>\n        \n    )\n}\n\nexport default LoginPage\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/Login/Register/RegisterPage.js",["480","481","482"],"import React, {useState, useEffect} from 'react'\nimport { authService } from '../../../tools/fbase'\nimport { firebaseInstance } from '../../../tools/fbase'\nimport { dbService } from '../../../tools/fbase'\nimport { Input } from 'antd';\nimport googlelogo from '../googlelogo.png'\nimport s1 from '../../../tools/img/surfee1.png';\nimport {Link} from 'react-router-dom';\n\nfunction RegisterPage({history}) {\n    const [id, setId] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [done, setDone] = useState(false);\n    const [name, setName] = useState(\"\");\n    const [job, setJob] = useState(\"\");\n\n    const socialLogin = async (e) => {\n        const { \n            target : { name }, \n        } = e;\n        let provider;\n        if (name === \"googleLogin\"){\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\n        }else{\n            console.log(\"이건 뜨면 안되는 메세지.\");\n        }\n\n        const data = await authService.signInWithPopup(provider);\n        await checkRegister(data.user.multiFactor.user.email);\n        setDone(true);\n\n        console.log(data.user.multiFactor.user, \"로그인\");\n    }\n\n    const submit = async (e) => {\n        var data = '';\n        e.preventDefault();\n        try{\n            data = await authService.createUserWithEmailAndPassword(\n                id, password\n            )\n            console.log(data)\n        } catch (err){\n            if(err.code === \"auth/email-already-in-use\"){\n                alert(\"이미 존재하는 아이디입니다. 로그인 해주세요.\");\n                history.push('/#/login');\n                history.go();\n            }else if(err.code === \"auth/invalid-email\"){\n                alert(\"이메일 양식에 맞게 작성해주세요.\");\n            }else{\n                alert(\"옳바르지 않은 회원가입 시도입니다.\");\n            }\n            return;\n        }\n        history.push('/');\n        history.go();\n    }\n\n    const checkRegister = async (email) => {\n        const usersCollections = await dbService\n            .collection(\"users\")\n            .where(\"email\", \"==\", email)\n            .get();\n        \n        const usersExist = usersCollections.docs.map(doc => {\n            return({...doc.data(), id: doc.id})\n        })\n\n        if(usersExist.length === 0){\n            // 구글 아이디로 로그인했는데 회원가입에 정보가 없을 때\n            console.log(\"회원가입 정보를 받습니다.\");\n        }\n    }\n\n    const submitInfo = async () => {\n        await dbService.collection(\"users\").add({\n            name:name,\n            job:job,\n        })\n        alert(\"회원가입이 완료되었습니다.\");\n        history.push('/');\n        history.go();\n    }\n\n    return (\n        <>\n        {done ? \n        <div className=\"login-container\">\n            <div className=\"login__inner\">\n                <div>\n                    회원가입 페이지에 오신 것을 환영합니다.\n                </div>\n                <form className=\"form-container\" onSubmit={e => submitInfo(e)}>\n                    <input \n                        type=\"text\" \n                        placeholder=\"이름을 입력해주세요.\" \n                        required\n                        value={name}   \n                        onChange={e => setName(e.currentTarget.value)}\n                    />\n                    <input  \n                        type=\"text\" \n                        placeholder=\"직업을 입력해주세요.\" \n                        required\n                        value={job} \n                        onChange={e => setJob(e.currentTarget.value)}\n                    />\n                    <input type=\"submit\" value=\"회원가입 완료\" />\n                </form>\n            </div>\n        </div>\n        : \n\n        <div className=\"login-container\">\n            <div className=\"login-container__container\">\n                <div className=\"login__inner\">\n                    <div className=\"login-title\" style={{color:'#6a63f7'}}>\n                        Surfee\n                    </div>\n                    <div className=\"login-title\">\n                        회원가입 페이지에 오신 것을 환영합니다.\n                    </div>\n                    <form onSubmit={e => submit(e)} className=\"center\">\n                        <span className=\"login-label\">\n                            Email\n                        </span>\n                        <Input \n                            type=\"text\" \n                            className=\"login-input\"\n                            placeholder=\"아이디를 입력해주세요.\" \n                            required\n                            value={id}   \n                            onChange={e => setId(e.currentTarget.value)}\n                        />\n                        <span className=\"login-label\">\n                            Password\n                        </span>\n                        <Input  \n                            type=\"password\" \n                            className=\"login-input\"\n                            placeholder=\"비밀번호를 입력해주세요.\" \n                            required\n                            value={password} \n                            onChange={e => setPassword(e.currentTarget.value)}\n                        />\n                        <Input className=\"login-form-button\" type=\"submit\" value=\"회원가입\" />\n                    </form>\n                    <button className=\"google-login-button\" onClick={e => socialLogin(e)} style={{marginTop:'2%'}}>\n                        <img src={googlelogo} width={20}/>\n                        <span style={{marginLeft:'5%'}}>구글 회원가입</span>\n                    </button>\n                    <div style={{padding:'2% 0%', justifyContent:'flex-start', display:'flex', width:'100%'}}>\n                        <Link to=\"/customer\" className=\"footer-text-click\">\n                            개인정보 처리방침\n                        </Link>\n                        <Link to=\"/customer\" className=\"footer-text-click\" style={{marginLeft:'2%'}}>\n                            이용약관\n                        </Link>\n                    </div>\n                </div>\n            </div>\n            <div className=\"login-background\">\n                <img src={s1} width={600} />\n                <div className=\"login-background__desc\" style={{fontFamily:'Pretendard-ExtraBold', marginTop:'2%'}}>\n                    Surfee와 함께 1분만에 완성하는 랜딩페이지\n                </div>\n                <div className=\"login-background__desc\">\n                    Surfee와 함께 1분만에 완성하는 랜딩페이지\n                </div>\n            </div>\n        </div>}\n        </>\n    )\n}\n\nexport default RegisterPage\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/utils/SubmitPage.js",["483"],"import React, {useState, useEffect} from 'react'\nimport NavBarV2 from '../../../pages/NavAndFooter/NavBarV2'\nimport Footer from '../../../pages/NavAndFooter/Footer'\n\nimport './SubmitPage.css'\n\nfunction SubmitPage() {\n\n    useEffect(() => {\n    })\n\n    return (\n        <div className=\"after-page-one-container\">\n            <NavBarV2 />\n            <div className=\"after-page\">\n                <div className=\"after-page-title\">\n                축하합니다!\n                랜딩페이지는<br/>\n                https://surfee.co.kr/#/입력하신 urlID<br/>\n                에서 확인하실 수 있습니다.\n                </div>\n                <div className=\"after-page-desc\">\n                데이터를 확인할 수 있는 페이지에 대한 비밀번호는 12시간 내에 이메일로 보내드리겠습니다.<br/>\n                랜딩페이지에 대한 데이터는 매일 자정 경\n                엑셀 파일로 정리하여 보내드릴 예정입니다.<br/><br/>\n                최대한 빠른 시일 내에 자동화할 수 있도록 노력하겠습니다!<br/>\n                저희 Surfee를 이용해주셔서 감사합니다 :)\n                <br/><br/>\n                👉 Surfee가 도움이 되었다면 / 개선을 바라는 점이 있다면<br/>\n                피드백에 참여해주세요!\n                </div>\n                <div className=\"after-page-button-container\">\n                    <a className=\"after-page-button\" href=\"https://6cetqycakbc.typeform.com/to/oRcv6Qdu\">🙋🏻‍♂️ 피드백 하러 가기!</a>\n                </div>\n            </div>\n            <Footer />\n        </div>\n    )\n}\n\nexport default SubmitPage\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/NewSection.js",["484","485","486","487","488","489"],"import React, {useState,useContext} from 'react'\nimport DetailSection from './SectionTypes/DetailSection'\nimport HeroSection from './SectionTypes/HeroSection'\nimport ReviewSection from './SectionTypes/ReviewSection'\nimport FeaturesSection from './SectionTypes/FeaturesSection'\nimport CtaSection from './SectionTypes/CtaSection'\nimport ApplySection from './SectionTypes/ApplySection'\nimport AppDownloadSection from './SectionTypes/AppDownloadSection'\nimport QnaSection from './SectionTypes/QnaSection'\nimport GallerySection from './SectionTypes/GallerySection'\nimport TextSection from './SectionTypes/TextSection'\nimport MockupSection from './SectionTypes/MockupSection'\nimport VideoSection from './SectionTypes/VideoSection'\n\nimport {animations} from './tools/animations'\nimport './NewSection.css'\nimport { MyContext } from '../../pages/Make/MakePageV2'\nimport { motion } from 'framer-motion'\nimport {Delete, Options} from '@styled-icons/fluentui-system-filled'\n\nfunction NewSection({content, index, contents, setContents}) {\n    const [isHover, setIsHover] = useState('none');\n    const {state, action} = useContext(MyContext)\n\n    const setThisSection = () => {\n        action.setSecNum(index);\n        action.setCategory(0);\n    }\n\n    const returnType = () => {\n        switch(content.sectionTypeName){\n            case 'DetailSection':\n                return (\n                    <DetailSection content={content}  contents={contents} setContents={setContents}/>\n                )\n\n            case 'HeroSection':\n                return (\n                    <HeroSection content={content}  contents={contents} setContents={setContents}/>\n                )\n\n            case 'ReviewSection':\n                return (\n                    <ReviewSection content={content}/>\n                )\n\n            case 'FeaturesSection':\n                return (\n                    <FeaturesSection content={content}/>\n                )\n\n            case 'CtaSection':\n                return (\n                    <CtaSection content={content}/>\n                )\n\n            case 'ApplySection' :\n                return(\n                    <ApplySection content={content} />\n                )\n\n            case 'AppDownloadSection' :\n                return(\n                    <AppDownloadSection content={content} />\n                )\n\n            case 'QnaSection' :\n                return(\n                    <QnaSection content={content} />\n                )\n\n            case 'GallerySection' :\n                return(\n                    <GallerySection content={content} />\n                )\n\n            case 'TextSection' :\n                return(\n                    <TextSection content={content} />\n                )\n\n            case 'MockupSection' :\n                return(\n                    <MockupSection content={content} />\n                )\n\n            case 'VideoSection' :\n                return(\n                    <VideoSection content={content} />\n                )\n\n            default:\n                return (\n                    <div>\n                        기본\n                    </div>\n                )\n        }\n    }\n\n    return(\n        <div className=\"new-section\" onMouseEnter={() => setIsHover('flex')} onMouseLeave={() => setIsHover('none')}>\n            <div className=\"for-section-hover\" style={{backgroundColor: `${isHover === 'flex' ? 'rgba(200,200,200,0.7)' : 'rgba(0,0,0,0)'}`}}>\n\n            </div>\n            <div className=\"section__container\" \n                // style={{backgroundImage:`url(${content.backgroundImage.attachment})`}} \n                onClick={() => setThisSection()}>\n                {/* 실제 섹션이 보여지는건 여기밖에 없음,, */}\n                <div style={{backgroundColor:`${content.backgroundColor}`, opacity:`${content.backgroundOpacity}`, width:'100%', height:'100%', zIndex:2, position:'absolute'}}>\n                </div>\n                <div className=\"section__container-inner\">\n                    {returnType()}\n                </div>\n            </div>\n        </div>\n    )\n}\n\n{/* \n    <div className=\"section-selection-container\" style={{display:`${isHover}`}}>\n{ state.contents.length > 0 && \n    <span className=\"section-option\" onClick={() => deleteThisSection()}>\n        <Delete size=\"20\" />\n    </span> }\n<span className=\"section-option\" onClick={() => { action.setSecNum(index); action.setAddingSectionAt(1000); }}>\n    <Options size=\"20\" />\n</span>\n{ index !== 0 && \n    <span className=\"section-option\" onClick={() => moveUp()}>\n        <ArrowUpShort size=\"20\" />\n    </span> }\n{ index !== state.contents.length-1 && \n    <span className=\"section-option\" onClick={() => moveDown()}>\n        <ArrowDownShort size=\"20\" />\n    </span> }\n</div> \n*/}\n\nexport default NewSection\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/Questions/FirstQuestions.js",["490","491","492","493","494","495","496","497","498","499"],"import React, {useState, useEffect, useContext} from 'react'\nimport { styled, Box } from '@mui/system';\nimport ModalUnstyled from '@mui/base/ModalUnstyled';\nimport '../../components/Make/Modal/Modal.css';\nimport './FirstQuestions.css'\nimport {Link} from 'react-router-dom'\nimport { MyContext } from '../Make/MakePageV2'\nimport {dbService} from '../../tools/fbase';\nimport OverflowScrolling from 'react-overflow-scrolling';\n\nimport good from '../../tools/info/good3d.png';\n\nimport { Input } from 'antd';\n\nconst StyledModal = styled(ModalUnstyled)`\n  position: fixed;\n  z-index: 1300;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius:10px;\n`;\n\nconst Backdrop = styled('div')`\n  z-index: -1;\n  position: fixed;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  left: 0;\n  background-color: rgba(0, 0, 0, 0.2);\n  -webkit-tap-highlight-color: transparent;\n`;\n\nconst style = {\n  width: '100vw',\n  height: '100vh',\n  bgcolor: 'rgba(255,255,255,1)',\n  border: '0px solid #000',\n  flexDirection:'column',\n  p: 2,\n  px: 4,\n  pb: 3,\n  display:'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n//   borderRadius:'20px',\n  position:'relative',\n}\n\nconst StyledModal2 = styled(ModalUnstyled)`\n  position: fixed;\n  z-index: 1300;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius:10px;\n`;\n\nconst Backdrop2 = styled('div')`\n  z-index: -1;\n  position: fixed;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  left: 0;\n  background-color: rgba(0, 0, 0, 0.2);\n  -webkit-tap-highlight-color: transparent;\n`;\n\nconst style2 = {\n  width: '30vw',\n  height: '80vh',\n  bgcolor: 'rgba(255,255,255,1)',\n  border: '0px solid #000',\n  flexDirection:'column',\n  p: 2,\n  px: 4,\n  pb: 3,\n  display:'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n//   borderRadius:'20px',\n};\n\nconst progressList = [\n    {\n        num:1,\n        name:'NAME',\n    },\n    {\n        num:2,\n        name:'GOAL',\n    },\n    {\n        num:3,\n        name:'TEMPLATE',\n    },\n    {\n        num:4,\n        name:'DESIGN',\n    },\n    {\n        num:5,\n        name:'URL',\n    },\n]\n\nconst secondQuestion = [\n    {\n        typequestion: \"🍎 앱 다운로드\",\n        question : \"많은 사람들이 우리의 앱을 다운로드 하면 좋겠어요\",\n        type:'app',\n    },\n    {\n        typequestion: \"✍️ 사전신청\",\n        question : \"사전신청을 많이 받고 싶어요\",\n        type:'pre',\n    },\n    {\n        typequestion: \"💰 판매\",\n        question : \"서비스/제품을 많이 팔고 싶어요\",\n        type:'sell',\n    },\n    {\n        typequestion: \"🎁 이벤트\",\n        question : \"이벤트를 널리 알리고 싶어요\",\n        type:'event',\n    },\n    {\n        typequestion: \"📚 포트폴리오\",\n        question : \"멋진 나를 알리고 싶어요\",\n        type:'portfolio',\n    },\n    {\n        typequestion: \"🎸 기타\",\n        question : \"다른 목표를 향하고 있습니다\",\n        type:'etc',\n    },\n]\n\nconst fontList = [\n    {\n        name:'Noto Sans KR',\n        font:'Noto Sans KR',\n    },\n    {\n        name:'Pretendard',\n        font:'Pretendard-Regular',\n    },\n    {\n        name:'에스코어드림',\n        font:'Noto Sans KR',\n    },\n    {\n        name:'Noto Sans KR',\n        font:'Noto Sans KR',\n    },,\n    {\n        name:'Noto Sans KR',\n        font:'Noto Sans KR',\n    },,\n    {\n        name:'Noto Sans KR',\n        font:'Noto Sans KR',\n    },\n]\nconst colorList = [\n    {\n        name:'검',\n        color:'rgba(0,0,0,1)',\n    },\n    {\n        name:'차분',\n        color:'rgba(255,255,255,1)',\n    },\n    {\n        name:'노',\n        color:'rgba(0,255,255,1)',\n    },\n    {\n        name:'빨',\n        color:'rgba(250,0,0,1)',\n    },,\n    {\n        name:'초',\n        color:'rgba(0,250,0,1)',\n    },,\n    {\n        name:'파',\n        color:'rgba(0,0,250,1)',\n    },\n]\n\nfunction FirstQuestions({open, setOpen, navi, setNavi, setting, setSetting}) {\n    // 모달\n    const [cnum, setCnum] = useState(1);\n    const [type, setType] = useState(\"\");\n    const [templates, setTemplates] = useState([]);\n    const [templateNum, setTemplateNum] = useState(0);\n    const [font, setFont] = useState('');\n    const [color, setColor] = useState('');\n    const [tmodalOpen, setTmodalOpen] = useState(false);\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    const handleOpen = () => setOpen(true);\n    const handleClose = async () => {\n        // 마지막에는 입력한 정보도 저장한다. 근데 한명껄 여러번 저장해서 헷갈리지 않게..!\n\n        await dbService.collection('question_answers').add({\n            createdAt: new Date(),\n        })\n        setOpen(false)\n    };\n\n    useEffect(() => {\n        \n        setCnum(1);\n    },[open]);\n\n    const onChangeTitle = e => {\n        let newNavi = Object.assign({}, navi)\n        newNavi.title = e.currentTarget.value\n        setNavi(newNavi)\n    }\n\n    const onUrlChange = e => {\n        let newSetting = Object.assign({}, setting)\n        newSetting.urlId = e.currentTarget.value\n        setSetting(newSetting)\n    }\n\n    const nextAndSetTemplates = async (e) => {\n        if(type === \"\"){\n            alert(\"위의 보기 중 한가지를 선택해주세요.\");\n            return\n        }else{\n            const typeTemplatesdata = await dbService\n                .collection(\"templates\")\n                .where(\"type\", \"==\", type)\n                .get(); // uid를 creatorId로 줬었으니까.\n\n            let typeTemplates = typeTemplatesdata.docs.map(doc => {\n                return({...doc.data(), id:doc.id})\n            });\n\n            setTemplates(typeTemplates);\n            setCnum(cnum + 1);\n        }\n    }\n\n    const nextAndSetTemplate = async (e) => {\n        if(templateNum === 0){\n            alert(\"위의 보기 중 한가지를 선택해주세요.\");\n            return\n        }else{\n            // templates.filter(doc => doc.type === type && doc.templateNum === templateNum)[0]\n            // 이걸 set Contents에.\n            // action.setContents(templates.filter(doc => doc.type === type && doc.templateNum === templateNum)[0])\n\n            setCnum(cnum + 1);\n        }\n    }\n\n    const nextAndSetFont = async e => {\n        if(font === ''){\n            alert(\"위의 보기 중 한가지를 선택해주세요.\");\n            return\n        }else{\n            setCnum(cnum + 1);\n        }\n    }\n    const nextAndSetDone = async e => {\n\n        const urlDatas = await dbService\n            .collection(\"urlStores\")\n            .where(\"urlId\", \"==\", setting.urlId)\n            .get(); // uid를 creatorId로 줬었으니까.\n        \n        let urlData = urlDatas.docs.map(doc => {\n            return({...doc.data(), id:doc.id})\n        });\n\n        if(setting.urlId === ''){\n            alert(\"URL을 입력해주세요. 이후 페이지에서 수정가능합니다.\");\n            return\n        }else if(urlData.length > 0){\n            alert(\"이미 존재하는 url입니다. 다른 url을 사용해주세요.\");\n            return;\n        }else{\n            action.setContents(templates.filter(doc => doc.type === type && doc.templateNum === templateNum)[0])\n\n            localStorage.setItem('editing', true);\n            handleClose();\n        }\n    }\n\n    const getAllTemplates = async(e) => {\n        const typeTemplatesdata = await dbService\n            .collection(\"templates\")\n            .get(); // uid를 creatorId로 줬었으니까.\n\n        let typeTemplates = typeTemplatesdata.docs.map(doc => {\n            return({...doc.data(), id:doc.id})\n        });\n\n        setTemplates(typeTemplates);\n    }\n\n    const showTemplateModal = () => {\n        setTmodalOpen(true);\n    }\n\n    const content = () => {\n        switch(cnum){\n            case 1:\n                return(\n                    <div style={{display:'flex', flexDirection:'column'}}>\n                        <form onSubmit={() => setCnum(cnum + 1)} style={{display:'flex', flexDirection:'column', justifyContent: 'center', alignItems: 'center'}}>\n                            <div className=\"modal-main-card\">\n                                <div className=\"modal-title\">\n                                    안녕하세요! <span style={{color:'#6C63FF'}}>Surfee</span>에 오신 것을 환영합니다! <br/>\n                                    당신의 서비스 / 제품 명을 알려주세요. 😊\n                                </div>\n                            </div>\n                            <Input className=\"input-holder\" type=\"text\" placeholder=\"한글은 8자 이내, 영문 10자 이내일 때 가장 이뻐요!\" value={navi.title} onChange={e => onChangeTitle(e)} />\n                            <div className=\"modal-button-container\">\n                                <button className=\"modal-move-button\" onSubmit={e => setCnum(cnum + 1)} style={{visibility:`${navi.title.length > 0 ? 'visible' : 'hidden'}`, display:'flex'}} \n                                    onClick={e => setCnum(cnum + 1)}>확인</button>  \n                            </div>\n                        </form>\n                    </div>\n                )\n                break;\n\n            case 2:\n                return(\n                    <div style={{display:'flex', flexDirection:'column'}}>   \n                        <div className=\"modal-title\">\n                            <span style={{color:'#6C63FF'}}>{navi.title}</span>의 랜딩페이지는 다음 중 어떤 목표를 향하고 있나요? 🚀\n                        </div>                     \n                        <div className=\"modal-main-card\">\n                            {\n                                secondQuestion.map((item, index) => {\n                                    let color = 'none';\n                                    if(item.type === type){\n                                        color = '1px solid #6C63FF';\n                                    }\n                                    return(\n                                        <div className=\"button1\" onClick={() => {setType(item.type);}} key={index} \n                                            style={{border:`${color}`}}>\n                                            <div style={{fontSize:'20px'}}>\n                                                {item.typequestion}\n                                            </div>\n                                            <div style={{marginTop:'4%'}}>\n                                                {item.question}\n                                            </div>\n                                        </div>\n                                    )\n                                })\n                            }\n                        </div>\n                        <div className=\"modal-button-container\">\n                            <button className=\"modal-move-button\" onClick={e => setCnum(cnum - 1)}>이전</button>\n                            <button className=\"modal-move-button\" onClick={e => nextAndSetTemplates(e)}>다음</button>  \n                        </div>\n                    </div>\n                )\n                break;\n\n            case 3:\n                return(\n                    <div style={{display:'flex', flexDirection:'column'}}> \n                        <div className=\"modal-title\">\n                            그렇다면 이런 템플릿을 추천해드릴게요 😎\n                        </div>\n                        <div className=\"modal-main-card\">\n                            {\n                                templates.map((item, index) => {\n                                    let color = 'none';\n                                    if(item.type === type && templateNum === item.templateNum){\n                                        color = '1px solid #6C63FF';\n                                    }\n                                    return(\n                                        <div>\n                                            <div className=\"template__card\" key={index}\n                                                onClick={() => {\n                                                    setTemplateNum(item.templateNum);\n                                                    setType(item.type);\n                                                }}\n                                                style={{border: `${color}`}} >\n\n                                                <span className=\"magnify-button\" onClick={() => showTemplateModal()}>↗</span>\n                                                \n                                                <img src={good} width={240} />\n                                                \n                                                <div>\n                                                    {item.type}\n                                                    {item.templateName}\n                                                </div>\n                                            </div>\n                                        </div>\n                                    )\n                                })\n                            }\n                        </div>\n                        <div className=\"modal-button-container\">\n                            <button className=\"modal-move-button\" onClick={e => setCnum(cnum - 1)}>이전</button>\n                            <button className=\"modal-move-button\" onClick={e => nextAndSetTemplate()}>다음</button>  \n                        </div>\n                        <div style={{width:'100%', display: 'flex', justifyContent:'center'}}>\n                            <span className=\"ask-another-template\" onClick={e => getAllTemplates(e)}>\n                                앗, 다른 템플릿을 원하시나요?\n                            </span>\n                        </div>\n                    </div>\n                )\n\n            case 4:\n                return(\n                    <div style={{display:'flex', flexDirection:'column'}}>\n                        <div className=\"modal-title\">\n                            멋져요! 디자인은 어떻게 할까요? 🤔\n                        </div>\n                        <div className=\"modal-main-card\">\n                            <div style={{width:'48%'}}>\n                                <div style={{width:'100%', textAlign:'center', margin:'2% 0%'}}>\n                                    폰트를 선택해주세요.\n                                </div>\n                                <OverflowScrolling className=\"font-selections__container\">\n                                    {fontList.map((item, index) => {\n                                        let color = 'none';\n                                        if(item.font === font){\n                                            color = '1px solid #6C63FF';\n                                        }\n                                        return(\n                                            <div className=\"template__card\" key={index}\n                                                onClick={() => {\n                                                    setFont(item.font);\n                                                }}\n                                                style={{border: `${color}`, fontFamily:`${item.font}`, padding:'5% 3%'}}\n                                            >\n                                                <div>\n                                                    {item.name}\n                                                </div>\n                                                <div style={{marginTop:'2%'}}>\n                                                    노코드 랜딩페이지 제작 툴, Surfee\n                                                </div>\n                                            </div>\n                                        )\n                                    })}\n                                </OverflowScrolling>\n                            </div>\n                            <div style={{width:'48%', marginLeft:'2%'}}>\n                                <div style={{width:'100%', textAlign:'center', margin:'2% 0%'}}>\n                                    색상을 선택해주세요.\n                                </div>\n                                <OverflowScrolling className=\"font-selections__container\">\n                                    {colorList.map((item, index) => {\n                                        let bor = 'none';\n                                        if(item.color === color){\n                                            bor = '1px solid #6C63FF';\n                                        }\n                                        return(\n                                            <div className=\"template__card\" key={index}\n                                                onClick={() => {\n                                                    setColor(item.color);\n                                                }}\n                                                style={{border: `${bor}`, padding:'5% 3%'}}\n                                            >\n                                                <div>\n                                                    {item.name}\n                                                </div>\n                                                <div style={{backgroundColor:`${item.color}`}}>\n                                                    색\n                                                </div>\n                                            </div>\n                                        )\n                                    })}\n                                </OverflowScrolling>\n                            </div>\n                        </div>\n                        <div className=\"modal-button-container\">\n                            <button className=\"modal-move-button\" onClick={e => setCnum(cnum - 1)}>이전</button>\n                            <button className=\"modal-move-button\" onClick={() => nextAndSetFont()}>다음</button>\n                        </div>\n                    </div>\n                )\n                break;\n\n            case 5:\n                return(\n                    <div style={{display:'flex', flexDirection:'column'}}>\n                        <div className=\"modal-title\">\n                            마지막으로, <span style={{color:'#6C63FF'}}>{navi.title}</span> 랜딩페이지의 URL을 설정해주세요!\n                        </div>\n                        <div className=\"modal-title\" style={{fontSize:'25px'}}>\n                            <Input className=\"input-holder\" type=\"text\" value={setting.urlId} onChange={e => onUrlChange(e)} />.surfee.co.kr\n                        </div>\n                            <div style={{color:'gray', paddingLeft:'6%',marginTop:'3%', fontSize:'18px', textAlign:'left', fontFamily:'Pretendard-Regular'}}>\n                                <div>\n                                    - 영문과 숫자만 사용 가능합니다.<br/><br/>\n                                    - 개인 도메인 연결은 다음 버전에 빠르게 업데이트 해올게요!<br/><br/>\n                                    - 수정 가능하니 편하게 설정해주세요 :)<br/><br/>\n                                </div>\n                            </div>\n                        <div className=\"modal-button-container\">\n                            <button className=\"modal-move-button\" onClick={e => setCnum(cnum - 1)}>이전</button>\n                            <button className=\"modal-move-button\" onClick={() => {\n                                nextAndSetDone();\n                            }} style={{backgroundColor:'rgba(255,0,0,0.7)'}}>시작하기</button>\n                        </div>\n                    </div>\n                )\n                break;\n        }\n    }\n\n    return (\n        <div>\n        <StyledModal\n            aria-labelledby=\"unstyled-modal-title\"\n            aria-describedby=\"unstyled-modal-description\"\n            open={open}\n            BackdropComponent={Backdrop}\n        >\n            <Box sx={style}>\n                <Link to=\"/\" className=\"arrow-back\">\n                    ←\n                </Link> \n                <div className=\"progress-bar__container\">\n                    {progressList.map((item, index) => {\n                        let backColor = 'rgba(0,0,0,0.3)'\n                        let fontColor = 'rgba(0,0,0,0.6)'\n                        let fontColor2 = 'rgba(0,0,0,0.6)'\n\n                        if(item.num < cnum){\n                            backColor = '#6C63FF'\n                            fontColor = \"white\"\n                            fontColor2 = 'black'\n                        }else if(item.num === cnum){\n                            backColor = 'white'\n                            fontColor = \"#6C63FF\"\n                            fontColor2 = \"#6C63FF\"\n                        }\n\n                        return(\n                            <span style={{display:'flex', flexDirection:'column', margin:'3%', alignItems: 'center', justifyContent: 'center'}}>\n                                <span className=\"list-component\" style={{backgroundColor:`${backColor}`, color:`${fontColor}`, border:`1px solid ${fontColor}`}}>{item.num}</span>\n                                <span style={{fontSize:'12px', color:`${fontColor2}`, marginTop:'12px'}}>{item.name}</span>\n                            </span>\n                        )\n                    })}\n                </div>\n                <div style={{width:'60%'}}>\n                    {content()}\n                </div>\n            </Box>\n        </StyledModal>\n            <StyledModal2\n                aria-labelledby=\"unstyled-modal-title\"\n                aria-describedby=\"unstyled-modal-description\"\n                open={tmodalOpen}\n                onClose={() => setTmodalOpen(false)}\n                BackdropComponent={Backdrop2}\n            >\n                <Box sx={style2}>\n                    <>\n                    템플릿\n                    </>\n                </Box>\n            </StyledModal2>\n        </div>\n    )\n}\n\nexport default FirstQuestions\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/tools/ConfirmCustom.js",[],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/NavAndFooter/Footer.js",[],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Modal/LoadingModal.js",["500","501","502","503"],"import React, {useState} from 'react'\nimport { styled, Box } from '@mui/system';\nimport ModalUnstyled from '@mui/base/ModalUnstyled';\n\nconst StyledModal = styled(ModalUnstyled)`\n  position: fixed;\n  z-index: 1300;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Backdrop = styled('div')`\n  z-index: -1;\n  position: fixed;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  left: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  -webkit-tap-highlight-color: transparent;\n`;\n\nconst style = {\n  width: 500,\n  bgcolor: 'rgba(255,255,255,0.2)',\n  border: '2px solid #000',\n  p: 2,\n  px: 4,\n  pb: 3,\n};\n\nfunction LoadingModal({loading, setLoading}) {\n    const [cnum, setCnum] = useState(1);\n    const handleOpen = () => setLoading(true);\n    const handleClose = () => setLoading(false);\n\n    return (\n        <div>\n            <StyledModal\n                aria-labelledby=\"unstyled-modal-title\"\n                aria-describedby=\"unstyled-modal-description\"\n                open={loading}\n                BackdropComponent={Backdrop}\n            >\n                <Box sx={style}>\n                    <span>로딩중</span>\n                </Box>\n            </StyledModal>\n        </div>\n    )\n}\n\nexport default LoadingModal\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/NewSectionMake.js",["504","505","506","507"],"import React, {useState, useEffect, useContext} from 'react'\n// import ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport { MyContext } from '../../../pages/Make/MakePageV2'\nimport EditDetailSection from './EditTemplates/EditDetailSection'\nimport EditCtaSection from './EditTemplates/EditCtaSection'\nimport EditHeroSection from './EditTemplates/EditHeroSection'\nimport EditReviewSection from './EditTemplates/EditReviewSection'\nimport EditFeaturesSection from './EditTemplates/EditFeaturesSection'\nimport EditAppDownloadSection from './EditTemplates/EditAppDownloadSection'\nimport EditApplySection from './EditTemplates/EditApplySection'\nimport EditQnaSection from './EditTemplates/EditQnaSection'\nimport EditGallerySection from './EditTemplates/EditGallerySection'\nimport EditTextSection from './EditTemplates/EditTextSection'\nimport EditMockupSection from './EditTemplates/EditMockupSection'\nimport EditTopBar from './tools/EditTopBar'\nimport AddingSection from './AddingSection'\n\nimport EditSetting from './NavFooterSetting/EditSetting'\nimport EditNaviSection from './NavFooterSetting/EditNaviSection'\nimport EditFooterSection from './NavFooterSetting/EditFooterSection'\nimport EditContents from './NavFooterSetting/EditContents'\nimport {ChevronLeft} from '@styled-icons/bootstrap'\nimport './NewSectionMake.css'\n\nconst NAVSECNUM = 50;\nconst FOOTSECNUM = 51;\nconst SETTINGSECNUM = 52;\nconst CONTENTSSECNUM = 53;\n\nfunction NewSectionMake({content, foot, setFoot, navi, setNavi, setting, setSetting}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    const sectionMakeTable = () => {\n\n        switch(content.sectionTypeName){\n            case 'DetailSection':\n                return (\n                    <EditDetailSection content={content} category={state.category}/>\n                )\n\n            // 이미지인 경우 편집화면\n            case 'HeroSection':\n                return (\n                    <EditHeroSection content={content} category={state.category}/>\n                )\n\n            // 리뷰들인 경우 편집화면\n            case 'ReviewSection':\n                return(\n                    <EditReviewSection content={content} category={state.category}/>\n                )\n            \n            case 'FeaturesSection':\n                return(\n                    <EditFeaturesSection content={content} category={state.category}/>\n\n                )\n\n            case 'ApplySection':\n                return(\n                    <EditApplySection content={content} category={state.category}/>\n\n                )\n            \n            case 'AppDownloadSection':\n                return(\n                    <EditAppDownloadSection content={content} category={state.category}/>\n\n                )\n    \n            case 'QnaSection':\n                return(\n                    <EditQnaSection content={content} category={state.category}/>\n                )\n\n            case 'GallerySection':\n                return(\n                    <EditGallerySection content={content} category={state.category}/>\n                )\n\n            case 'TextSection':\n                return(\n                    <EditTextSection content={content} category={state.category}/>\n                )\n\n            case 'MockupSection':\n                return(\n                    <EditMockupSection content={content} category={state.category}/>\n                )\n    \n            default:\n                return(\n                    <div>\n                        섹션 {state.secNum}번이고 템플릿은 뭐지? 디폴트 값입니다.\n                        <br/>\n                    </div>\n                )\n\n        }\n    }\n\n    const returnMake = () => {\n        if(state.secNum === NAVSECNUM){\n            return(\n                <>\n                    <div className=\"back__container\">\n                            <div className=\"left\" onClick={() => action.setSecNum(CONTENTSSECNUM)} style={{cursor:'pointer'}}>\n                                <span className=\"back-button\">\n                                    <ChevronLeft size={17} />\n                                </span>\n                                <span className=\"back-text\">\n                                    내비게이션 바\n                                </span>\n                            </div>\n                    </div>\n                    <EditTopBar category={state.category} setCategory={action.setCategory} />\n                    <EditNaviSection navi={navi} setNavi={setNavi} category={state.category}/>\n                </>\n            )\n\n        }else if(state.secNum === FOOTSECNUM ){\n            return(\n                <>\n                    <div className=\"back__container\">\n                            <div className=\"left\" onClick={() => action.setSecNum(CONTENTSSECNUM)} style={{cursor:'pointer'}}>\n                                <span className=\"back-button\">\n                                    <ChevronLeft size={17} />\n                                </span>\n                                <span className=\"back-text\">\n                                    푸터 바\n                                </span>\n                            </div>\n                    </div>\n                    <EditTopBar category={state.category} setCategory={action.setCategory} />\n                    <EditFooterSection foot={foot} setFoot={setFoot} category={state.category}/>\n                </>\n            )\n        }else if(state.secNum === SETTINGSECNUM ){\n            return(\n                <>\n                    <EditTopBar category={state.category} setCategory={action.setCategory} />\n                    <EditSetting setting={setting} setSetting={setSetting} category={state.category}/>\n                </>\n            )\n        }else if(state.secNum === CONTENTSSECNUM ){\n            return(\n                <EditContents navi={navi} setNavi={setNavi} foot={foot} setFoot={setFoot}/>\n            )\n        }else{\n            return (\n                <>\n                {content && \n                <>\n                    <div className=\"back__container\">\n                            <div className=\"left\" onClick={() => action.setSecNum(CONTENTSSECNUM)} style={{cursor:'pointer'}}>\n                                <span className=\"back-button\">\n                                    <ChevronLeft size={17} />\n                                </span>\n                                <span className=\"back-text\">\n                                    {content.name}\n                                </span>\n                            </div>\n                    </div>\n                    <EditTopBar category={state.category} setCategory={action.setCategory} />\n                    {sectionMakeTable()}\n                </> }\n                </>\n            )\n        }\n    }\n\n    return (\n        <>\n            {returnMake()}\n        </>\n    )\n}\n\nexport default NewSectionMake\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/NavFooterSetting/EditFooterSection.js",["508","509","510","511","512","513","514","515","516","517","518"],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/Make/NavBarInMakePage/NavBarInMakePage.js",["519","520","521"],"import React, {useContext, useState} from 'react';\nimport { Input, Button } from 'antd';\nimport Switch from '@mui/material/Switch';\nimport './MakeNavBar.css';\nimport { MyContext } from '../MakePageV2'\nimport CheckModal from '../../../components/Make/Modal/CheckModal'\nimport {dbService} from '../../../tools/fbase'\nimport {Monitor} from '@styled-icons/feather'\nimport Popover from '@mui/material/Popover'\nimport { Phone } from '@styled-icons/bootstrap'\nimport {Fullscreen} from '@styled-icons/bootstrap'\n\nconst NavBarInMakePage = (props) => {\n    const [open, setOpen] = useState(false)\n    const {state, action} = useContext(MyContext)\n    const [checkModalOpen, setCheckModalOpen] = useState(false);\n    const [anchorEl, setAnchorEl] = useState(null);\n  \n    const handleClick = (event) => {\n      setAnchorEl(event.currentTarget);\n    };\n  \n    const handleClose = () => {\n      setAnchorEl(null);\n    };\n\n    const openDevice = Boolean(anchorEl);\n    const id = open ? 'simple-popover' : undefined;\n\n    const moveToMain = () => {\n        \n        window.location.replace('/');\n    }\n    \n    const onSubmit = async () => {\n        console.log(props.userObj);\n        // 배포하기 클릭\n        // 관리페이지에서 수정하기를 누른 거라면\n        if(typeof props.useObj === undefined){\n            alert(\"로그인 하셔야 저장 후 배포하실 수 있습니다.\");\n            props.setLoading(false);\n        }else if(props.nowState === 'edit'){\n            props.setLoading(true);\n            // 기존에 있는걸 업데이트 해야한다.\n            const body = {\n                contents:state.contents,\n                navi:props.navi,\n                foot:props.foot,\n                setting:props.setting,\n                created:Date.now(),\n                makerEmail:props.userObj.email,\n            }\n            await dbService.doc(`made-page/${state.contents.id}`)\n                .update(body)\n            \n            alert(\"업데이트된 정보로 배포하였습니다.\");\n            \n            props.setLoading(false);\n        }else{\n            // 새로 업로드 해야한다.\n            setCheckModalOpen(true);\n        }\n    }\n\n    const onSubmitFromCheckModal = async () => {\n        props.setLoading(true);\n\n        const urlDatas = await dbService\n            .collection(\"urlStores\")\n            .where(\"urlId\", \"==\", props.setting.urlId)\n            .get(); // uid를 creatorId로 줬었으니까.\n        \n        let urlData = urlDatas.docs.map(doc => {\n            return({...doc.data(), id:doc.id})\n        });\n\n        if(urlData.length > 0){\n            alert(\"이미 존재하는 url입니다. 다른 url을 사용해주세요.\");\n            props.setLoading(false);\n        }else{\n            const body = {\n                contents:state.contents,\n                navi:props.navi,\n                foot:props.foot,\n                setting:props.setting,\n                created:Date.now(),\n                makerEmail:props.userObj.email,\n            }\n\n            await dbService.collection(\"made-page\").add(body);\n\n            await dbService.collection(\"urlStores\").add({urlId:body.setting.urlId});\n\n            // 자동저장 하던 걸 지운다.\n            window.localStorage.removeItem(\"temp\");\n            \n            setTimeout(() => {\n                props.setLoading(false);\n                props.history.push('/#/submit');\n                props.history.go();\n            },1000)\n        }\n    }\n\n    return (\n        <div className=\"make-page-nav\">\n            <div className=\"make-page-nav-half\" style={{justifyContent: 'start', marginLeft:'1%'}}>\n                {/* <Button onClick={e => props.setOpen(!props.open)}>설명 다시보기</Button> */}\n                <span className=\"nav-button\" onClick={e => {\n                    action.setSecNum(52); \n                }}\n                style={{fontWeight: `${state.secNum === 52 ? 'bold' : ''}`}}\n                >\n                    기본설정\n                </span>\n                <span className=\"nav-button\" onClick={e => {\n                    action.setSecNum(53);\n                }}\n                style={{fontWeight: `${state.secNum === 53 ? 'bold' : ''}`}}\n                >\n                    페이지 구성\n                </span>\n            </div>\n            <div className=\"make-page-nav-half\">\n                <div className=\"centera\">\n                    <Button onClick={() => moveToMain()} className=\"edit-nav-home-button\">\n                        Surfee\n                    </Button>\n                </div>\n            </div>\n            <div className=\"make-page-nav-half\" style={{justifyContent: 'end', marginRight:'1%'}}>\n                <span className=\"device-button\" onClick={handleClick}>\n                    {\n                        props.isPhone ? <Phone size=\"25\" /> : <Monitor size=\"25\" />\n                    }\n                </span>\n                <Popover\n                    id={id}\n                    open={openDevice}\n                    anchorEl={anchorEl}\n                    onClose={handleClose}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left',\n                    }}\n                >\n                    <div className=\"device__container\">\n                        <span className=\"device-button\" onClick={e => {props.setIsPhone(true); setAnchorEl('')}}>\n                            <Phone size=\"25\" />\n                        </span>\n                        <span className=\"device-button\" onClick={e => {props.setFull(!props.full); setAnchorEl('')}}>\n                            <Fullscreen size=\"25\" />\n                        </span>\n                        <span className=\"device-button\" onClick={e => {props.setIsPhone(false); setAnchorEl('')}}>\n                            <Monitor size=\"25\" />\n                        </span>\n                    </div>\n                </Popover>\n                <Button onClick={() => onSubmit()} className=\"default-button-02\">\n                    배포하기\n                </Button>\n            </div>\n            {/* <ConfirmCustom open={open} setOpen={setOpen} message={\"홈\"} callback={deletePage}/> */}\n            <CheckModal ch={checkModalOpen} setCh={setCheckModalOpen} onSubmit2={onSubmitFromCheckModal}/>\n        </div>\n    )\n}\n\nexport default NavBarInMakePage\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Footer/MakeFooterV2.js",["522","523","524"],"import React, {useContext, useState} from 'react'\nimport { MyContext } from '../../../pages/Make/MakePageV2'\nimport FTemplate from './FTemplate'\nimport {Delete, Options} from '@styled-icons/fluentui-system-filled'\nimport './MakeFooter.css'\n\nfunction MakeFooterV2({full, history, foot, setFoot}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n    const [isHover, setIsHover] = useState('none');\n\n    return (\n        <div className=\"make-footer\" onMouseEnter={() => setIsHover('flex')} onMouseLeave={() => setIsHover('none')} style={{width:`${full ? '100%' : '100%'}`}}>\n            <footer className=\"make-footer__container\" style={{backgroundColor:`${foot.backgroundColor}`}} onClick={() => action.setSecNum(51)}>\n                    <FTemplate foot={foot} history={history} setFoot={setFoot} />\n            </footer>\n            <div className=\"for-section-hover\" style={{backgroundColor: `${isHover === 'flex' ? 'rgba(200,200,200,0.7)' : 'rgba(0,0,0,0)'}`}}>\n            </div>\n        </div>\n    )\n}\n\nexport default MakeFooterV2\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/NavFooterSetting/EditContents.js",["525","526","527"],"import React, {useContext, useState} from 'react';\nimport { MyContext } from '../../../../pages/Make/MakePageV2';\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport produce from 'immer';\nimport ConfirmCustom from '../../../../tools/ConfirmCustom';\nimport AddingSection from '../../Modal/AddingSection';\nimport {CustomSwitch} from '../tools/OnOffCustom'\nimport './EditContents.css';\n\nconst BCOLOR = 'rgba(230,230,230,0)'\n\nconst getItemStyle = (isDragging, draggableStyle, backColor) => {\n    return {\n        userSelect: \"none\",\n        textAlign: \"right\",\n\n        // change background color if dragging\n        background: isDragging ? \"white\" : BCOLOR,\n        boxShadow: isDragging ? \"2px 4px 20px #E8F0F9\" : 'none',\n\n        // styles we need to apply on draggables\n        ...draggableStyle\n    };\n};\n\nfunction EditContents({navi, setNavi, foot, setFoot}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n    const [deleteopen, setDeleteOpen] = useState(false);\n    const [addOpen, setAddOpen] = useState(false);\n\n    const handleChange = result => {\n        if (!result.destination) return;\n\n        action.setContents(produce(state.contents, draft => {\n            const [reorderedItem] = draft.splice(result.source.index, 1);\n            draft.splice(result.destination.index, 0, reorderedItem);\n        }));\n    }\n\n    const optionButton = (num) => {\n        return(\n            <div className=\"content__button\"\n                onClick={() => {\n                    action.setSecNum(num)\n                }}>\n                설정\n            </div>\n        )\n    }\n\n    const deleteSection = (index) => {\n        console.log(\"index\", index);\n        if(index === 0){\n            action.setContents([\n                ...state.contents.slice(1,state.contents.length)\n            ])\n        }if(index === state.contents.length){\n            action.setContents([\n                ...state.contents.slice(0,index-1),\n            ])\n        }else{\n            action.setContents([\n                ...state.contents.slice(0,index),\n                ...state.contents.slice(index+1, state.contents.length)\n            ])\n        }\n    }\n\n    const pasteThisSection = (content, index) => {\n        action.setContents([\n            ...state.contents.slice(0,index),\n            content,\n            ...state.contents.slice(index, state.contents.length)\n        ])\n    }\n\n    return (\n        <div>\n            <div className=\"edit-element\">\n                컨텐츠 수정\n            </div>\n            <div>\n                <div className=\"one-contents-draggable\" style={{backgroundColor:`${BCOLOR}`}}>\n                    <div className=\"center-row hoverback one-contents__inner\" style={{padding:'20px 10px'}}>\n                        <div className=\"left\">\n                            <div className=\"content__name\">\n                                네비 바\n                            </div>\n                            <div style={{paddingLeft:'7%'}}>\n                                <CustomSwitch value={navi.use} onChange={e => setNavi(produce(navi, draft => {\n                                    draft.use = !navi.use\n                                })) }/>\n                            </div>\n                        </div>\n                        <div className=\"right\">\n                            {optionButton(50)}\n                        </div>\n                    </div>   \n                </div>\n                <hr className=\"hr\" />\n                <DragDropContext onDragEnd={handleChange}>\n                    <Droppable droppableId=\"sectionsss\">\n                        {(provided) => \n                            (\n                            <div className=\"sectionsss\"\n                                {...provided.droppableProps}\n                                ref={provided.innerRef}>\n                                {state.contents.map((item, index) => {\n                                    return(\n                                        <Draggable draggableId={String(index)} key={index} index={index} style={{width:'100%'}}>\n                                            {(provided, snapshot) => {\n                                                return(\n                                                    <>\n                                                        <div\n                                                            className=\"one-contents-draggable\"\n                                                            ref={provided.innerRef}\n                                                            {...provided.dragHandleProps}\n                                                            {...provided.draggableProps}\n\n                                                            style={getItemStyle(\n                                                            snapshot.isDragging,\n                                                            provided.draggableProps.style,\n                                                            )}>\n                                                                <div className=\"center-column hoverback one-contents__inner\">\n                                                                    <div className=\"center-row\">\n                                                                        <div className=\"left\">\n                                                                            <div className=\"content__name\">\n                                                                                {item.name}\n                                                                            </div>\n                                                                        </div>\n                                                                        <div className=\"right\">\n                                                                            {optionButton(index)}\n                                                                        </div>\n                                                                    </div>\n                                                                    <div className=\"center-row\">\n                                                                        <div className=\"left\">\n\n                                                                        </div>\n                                                                        <div className=\"right\">\n                                                                            <div className=\"content__button cb-delete\"\n                                                                                onClick={() => {\n                                                                                    const yes = window.confirm(\"정말 삭제하시겠습니까?\");\n                                                                                    if(yes){\n                                                                                        deleteSection(index);\n                                                                                    }\n                                                                                } }>\n                                                                                삭제\n                                                                            </div>\n                                                                            <div className=\"content__button cb-duplicate\"\n                                                                                onClick={() => pasteThisSection(state.contents[index], index) }>\n                                                                                복제\n                                                                            </div>\n                                                                        </div>\n                                                                    </div>\n                                                                </div>   \n                                                        </div>\n                                                        {/* <div className=\"centera small-button__container\">\n                                                            <span className=\"centera make-section-button__small\">\n                                                                +\n                                                            </span>\n                                                        </div> */}\n                                                    </>\n                                                )}}\n                                        </Draggable>\n                                    )\n                                })}\n                                {provided.placeholder}\n                            </div>\n                            )\n                        }\n                    </Droppable>\n                </DragDropContext>\n                <div className=\"center-row\">\n                    <div className=\"make-section-button\" onClick={() => {\n                        setAddOpen(true);\n                        // action.setAddingSectionAt(state.contents.length - 1);\n                    }}>\n                        + 섹션 추가하기\n                    </div>\n                </div>\n                <hr className=\"hr\" />\n                <div className=\"one-contents-draggable\">\n                    <div className=\"center-row hoverback one-contents__inner\" style={{padding:'20px 10px'}}>\n                        <div className=\"left\">\n                            <div className=\"content__name\">\n                                푸터 바\n                            </div>\n                            <div style={{paddingLeft:'7%'}}>\n                                <CustomSwitch value={foot.use} onChange={e => setFoot(produce(foot, draft => {\n                                    draft.use = !foot.use\n                                })) }/>\n                            </div>\n                        </div>\n                        <div className=\"right\">\n                            {optionButton(51)}\n                        </div>\n                    </div>   \n                </div>\n\n                {/* <span className=\"make-section-button\" style={{display:`${isHover}`}} onClick={() => {\n                    if(state.addingSectionAt === index){\n                        action.setAddingSectionAt(1000);\n                    }else{\n                        action.setAddingSectionAt(index)\n                    }\n                }}>\n                {parseInt(state.addingSectionAt) === parseInt(index) ? <>- 섹션 제거하기</> : <>+ 섹션 추가하기</>}\n                </span> */}\n            </div>\n            <AddingSection open={addOpen} setOpen={setAddOpen} />\n        </div>\n    )\n}\n\nexport default EditContents\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/NavBar/MakeNavigationV2.js",["528","529","530","531"],"import React, {useContext, useState} from 'react'\nimport { MyContext } from '../../../pages/Make/MakePageV2'\nimport NaviTemplate from './NaviTemplate'\nimport {Delete, Options} from '@styled-icons/fluentui-system-filled'\nimport { motion } from 'framer-motion'\nimport './MakeNavigation.css'\n\nfunction MakeNavigationV2({full, navi, setNavi, history}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n    const [isHover, setIsHover] = useState('none');\n\n    return (\n        <>\n        <div className=\"make-navigation\" onMouseEnter={() => setIsHover('flex')} onMouseLeave={() => setIsHover('none')}>\n            <div className=\"make-nav-container\" style={{borderBottom:`${navi.bottomBorder ? '5px solid rgba(150,150,150,0.2)' : '1px solid rgba(150,150,150,0)'}`, backgroundColor:`${navi.backgroundColor}`, height:`${navi.height}px`}} onClick={() => action.setSecNum(50)}>\n                <NaviTemplate navi={navi} setNavi={setNavi}/>\n            </div>\n            <div className=\"for-section-hover\" style={{backgroundColor: `${isHover === 'flex' ? 'rgba(200,200,200,0.7)' : 'rgba(0,0,0,0)'}`}}>\n            </div>\n        </div>\n        </>\n    )\n\n}\n\nexport default MakeNavigationV2\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/NavFooterSetting/EditNaviSection.js",["532","533","534","535","536","537","538","539","540","541","542","543","544","545"],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Response/MadeLandingCard.js",["546","547"],"import React, {useState} from 'react'\nimport { Link } from 'react-router-dom'\nimport ConfirmCustom from '../../tools/ConfirmCustom'\nimport {dbService, stService} from '../../tools/fbase'\nimport './MadeLandingCard.css'\n\nfunction MadeLandingCard({item, index, setNowChecking, history}) {\n    const [deleteopen, setDeleteOpen] = useState(false)\n\n    const deletePage = async () => {\n        const dbgallery = await dbService\n        .collection(\"made-page\")\n        .where(\"urlId\", \"==\", item.setting.urlId)\n        .get()\n        \n        let dbgal = dbgallery.docs.map(doc => {return({...doc.data(), gal_id:doc.id})})\n        \n        //delete 파일도 같이 지워져야만 한다.\n        await dbService.doc(`apply-landing-data/${item.id}`).delete();\n        // await stService.refFromURL(item.attachmentURL).delete(); // URL만 가지고도 refence를 획득할 수 있게 해준다.\n\n        // like에서도 지워야됨.\n\n        // 새로고침 시키기\n        alert(\"삭제했습니다.\")\n    }\n\n    return (\n        <div className=\"page-card\" key={index}>\n            {item.urlTitle}\n            <Link to={{\n                pathname:`/make/edit`,\n                state:{\n                    item:item\n                }\n                }}>\n                편집하기\n            </Link>\n            <button onClick={() => {setDeleteOpen(true)}}>삭제하기</button>\n            <button>{\"https://\" + item.setting.urlId + \".surfee.co.kr/#/\"}</button>\n            <span onClick={() => {setNowChecking(index)}}>이 정보 보기</span>\n            <ConfirmCustom open={deleteopen} setOpen={setDeleteOpen} message={\"한번 삭제하면 복구할 수 없습니다. 정말 삭제하시겠습니까?\"} callback={deletePage}/>\n        </div>\n    )\n}\n\nexport default MadeLandingCard\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/pages/NavAndFooter/NavBar/NavBar.js",["548","549"],"import React, {useState, useEffect} from 'react'\nimport './utils/NavBar.css'\nimport {Link} from 'react-router-dom';\n\n\nfunction NavBar({history}) {\n    const [scrollPosition, setScrollPosition] = useState(0);\n    const [back, setBack] = useState(0);\n\n    const updateScroll = () => {\n        setScrollPosition(window.scrollY || document.documentElement.scrollTop);\n    }\n    \n    useEffect(()=>{\n        window.addEventListener('scroll', updateScroll);\n        if(scrollPosition < 50){\n            setBack(scrollPosition*(1/50));\n        }else{\n            setBack(1);\n        }\n    });\n\n    return (\n        <>\n        <div className={scrollPosition < 50 ? \"nav-bar-container-top\" : \"nav-bar-container\"} \n        style={{backgroundColor:`rgba(255,255,255,1)`, color:`rgba(${255-back*149},${255-back*156},${255-back*8},1)`\n        }}>\n            <span className=\"nav-bar-title\" onClick={() => {history.push('/#/'); history.go();}} style={{cursor:'pointer'}}>\n                Surfee\n            </span>\n            <span className=\"nav-on\">\n                <button className=\"nav-button\" onClick={() => window.scrollTo(0,document.body.scrollHeight)}>사전신청 하기</button>\n            </span>\n        </div>\n        </>\n    )\n}\n\nexport default NavBar\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/tools/Icons.js",[],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Customer/QnA.js",[],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Customer/PersonalInformation.js",[],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Customer/Term.js",[],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/baseTypes.js",["550","551"],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/NavFooterSetting/EditSetting.js",["552","553","554","555","556"],"import React, {useState, useContext} from 'react'\nimport RadioCustom from '../tools/RadioCustom'\nimport {EditRadioContainer} from '../tools/RadioCustom'\nimport { EditColorContainer } from '../tools/ColorCustom'\nimport InputCustom from '../tools/InputCustom'\nimport { MyContext } from '../../../../pages/Make/MakePageV2'\nimport SelectCustom from '../tools/SelectCustom'\nimport './EditSetting.css'\nimport '../EditTemplates/Edit.css'\nimport EditTopBar from '../tools/EditTopBar'\nimport OpenCloseCustom from '../tools/OpenCloseCustom'\nimport OnOffCustom from '../tools/OnOffCustom'\nimport produce from 'immer';\nimport {EditAnimationContainer} from '../tools/AnimationCustom'\nimport { base } from '../../SectionTypes/baseTypes'\n\nconst fontOptions = [\n    { label: '노토산스', value: 'Noto Sans KR' },\n    { label: '에스코어 드림', value: '' },\n    { label: '노토산스', value: 'Noto Sans KR' },\n    { label: '노토산스', value: 'Noto Sans KR' },\n]\n\nconst shapeOptions = [\n    { label: '사각형', value: 0 },\n    { label: '라운드', value: 5 },\n    { label: '원형', value: 20 },\n]\n\nconst sizeOptions = [\n    { label: 'small', value: 50 },\n    { label: 'medium', value: 75 },\n    { label: 'large', value: 100 },\n]\n\nfunction EdtiSetting({setting, setSetting, category}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    // 애니메이션 관련 \n    const animationOptions = [\n        {label:'없음', value: 'none'},\n        {label:'떠오르기', value: 'fade-up'},\n        {label:'zoom-in', value: 'zoom-in'}\n    ]\n\n    const changeAnimationOption = e => {\n        base.map((section)=>section.animation.type=e)\n        action.setContents(base)\n        setSetting({...setting, animation:e})\n    }\n\n    const returnTable = () => {\n        switch(category){\n            case 0:\n                // case 0은 디자인 수정\n                return(\n                    <>\n                    <div>\n                        <OpenCloseCustom title=\"파비콘\" tooltip=\"웹 브라우저의 주소창에 표시되는 웹 페이지를 대표하는 아이콘입니다.\">\n                            \n                        </OpenCloseCustom>\n                        <OpenCloseCustom title=\"페이지 이름\" tooltip=\"웹 브라우저의 주소창에 표시되는 웹 페이지의 이름입니다.\">\n                            \n                        </OpenCloseCustom>\n                        <OpenCloseCustom title=\"플로팅 버튼\" tooltip=\"화면 하단에 고정되어 떠다니는 버튼입니다. 내비게이션의 버튼과 플로팅 버튼 중 하나만 사용하시길 바랍니다.\">\n                            <OnOffCustom text=\"플로팅 버튼\" value={setting.fta.use} func={(e) => setSetting(produce(setting, draft => {\n                                draft.fta.use = !setting.fta.use\n                            }))} />\n                            <EditRadioContainer text=\"사이즈\" options={sizeOptions} value={setting.fta.size} func={(e) => setSetting(produce(setting, draft => {\n                                draft.fta.size = e\n                            }))} />\n                            <EditRadioContainer text=\"모양\" options={shapeOptions} value={setting.fta.shape} func={(e) => setSetting(produce(setting, draft => {\n                                draft.fta.shape = e\n                            }))} />\n                            <EditColorContainer text=\"배경 색상\" value={setting.fta.backgroundColor} func={(e) => setSetting(produce(setting, draft => {\n                                draft.fta.backgroundColor = e;\n                            }))} />\n                            <InputCustom value={setting.fta.link} placeholder=\"링크를 입력하세요\" func={(e) => setSetting(produce(setting, draft => {\n                                draft.fta.link = e\n                            }))}/>\n                        </OpenCloseCustom>\n                        <OpenCloseCustom title=\"URL\">\n                            <div className=\"center-column\">\n                                <div className=\"edit-element center-row\">\n                                    <div>\n                                        <InputCustom value={setting.urlId} placeholder=\"사용할 url을 입력하세요\" func={(e) => setSetting(produce(setting, draft => {\n                                            draft.urlId = e;\n                                        }))}/>\n                                    </div>\n                                    <div>\n                                        .surfee.co.kr\n                                    </div>\n                                </div>\n                                <div className=\"edit-element\">\n                                    * 영문, 숫자만 사용 가능합니다.\n                                </div>\n                            </div>\n                        </OpenCloseCustom>\n                    </div>\n                    </>\n                )\n\n            case 1:\n                // case 1은 템플릿 변경\n                return(\n                    <>\n                    <div>\n                        <OpenCloseCustom title=\"메인 색상\">\n                            <EditColorContainer text=\"색상\" value={setting.color} func={(e) => setSetting(produce(setting, draft => {\n                                draft.color = e;\n                            }))} />\n                        </OpenCloseCustom>\n                        <OpenCloseCustom title=\"글씨체\">\n                            <div className=\"edit-element\">\n                                <div className=\"left\">\n                                    글씨체\n                                </div>\n                                <SelectCustom options={fontOptions} value={setting.font} onChange={(e) => setSetting(produce(setting, draft => {\n                                    draft.font = e;\n                                }))} />\n                            </div>\n                        </OpenCloseCustom>\n                        <OpenCloseCustom title=\"CTA 버튼\" preseen={\n                            <div className=\"edit-element\">\n                                <div className=\"centera\" style={{padding:'5px 10px'}}>\n                                    <div className=\"custom-button\" style={{ color:`${setting.cta.color}`, border:`${setting.cta.border ? `1px solid ${setting.cta.borderColor}` : 'none'}`, boxShadow:`${setting.cta.shadow ? '2px 2px 5px rgba(0,0,0,0.3)' : 'none'}`, borderRadius:`${setting.cta.borderRadius}px`, backgroundColor:`${setting.cta.backgroundColor}`}}>\n                                        디자인 미리보기\n                                    </div>\n                                </div>\n                            </div>\n                        }>\n                            <EditRadioContainer button text=\"모양\" options={shapeOptions} value={setting.cta.borderRadius} func={(e) => setSetting(produce(setting, draft => {\n                                draft.cta.borderRadius = e\n                            }))} />\n                            <EditColorContainer text=\"배경 색상\" value={setting.cta.backgroundColor} func={(e) => setSetting(produce(setting, draft => {\n                                draft.cta.backgroundColor = e;\n                            }))} />\n                            <EditColorContainer text=\"폰트 색상\" value={setting.cta.color} func={(e) => setSetting(produce(setting, draft => {\n                                draft.cta.color = e;\n                            }))} />\n                            <OnOffCustom text=\"그림자\" value={setting.cta.shadow} func={(e) => setSetting(produce(setting, draft => {\n                                draft.cta.shadow = !setting.cta.shadow\n                            }))} />\n                            <OnOffCustom text=\"테두리\" value={setting.cta.border} func={(e) => setSetting(produce(setting, draft => {\n                                draft.cta.border = !setting.cta.border\n                            }))} />\n                            {\n                                setting.cta.border && \n                                    <EditColorContainer value={setting.cta.borderColor} func={(e) => setSetting(produce(setting, draft => {\n                                        draft.cta.borderColor = e;\n                                    }))} />\n                            }\n                        </OpenCloseCustom>\n                        <OpenCloseCustom title=\"고스트 버튼\" preseen={\n                            <div className=\"edit-element\">\n                                <div className=\"centera\" style={{padding:'5px 10px'}}>\n                                    <div className=\"custom-button\" style={{ color:`${setting.ghost.color}`, border:`${setting.ghost.border ? `1px solid ${setting.borderColor}` : 'none'}`, boxShadow:`${setting.ghost.shadow ? '2px 2px 5px rgba(0,0,0,0.3)' : 'none'}`, borderRadius:`${setting.ghost.borderRadius}px`, backgroundColor:`${setting.ghost.backgroundColor}`}}>\n                                        디자인 미리보기\n                                    </div>\n                                </div>\n                            </div>\n                        }>\n                            <EditRadioContainer text=\"모양\" options={shapeOptions} value={setting.ghost.borderRadius} func={(e) => setSetting(produce(setting, draft => {\n                                draft.ghost.borderRadius = e\n                            }))} />\n                            <EditColorContainer text=\"배경 색상\" value={setting.ghost.backgroundColor} func={(e) => setSetting(produce(setting, draft => {\n                                draft.ghost.backgroundColor = e;\n                            }))} />\n                            <EditColorContainer text=\"폰트 색상\" value={setting.ghost.color} func={(e) => setSetting(produce(setting, draft => {\n                                draft.ghost.color = e;\n                            }))} />\n                            <OnOffCustom text=\"그림자\" value={setting.ghost.shadow} func={(e) => setSetting(produce(setting, draft => {\n                                draft.ghost.shadow = !setting.ghost.shadow\n                            }))} />\n                            <OnOffCustom text=\"테두리\" value={setting.ghost.border} func={(e) => setSetting(produce(setting, draft => {\n                                draft.ghost.border = !setting.ghost.border\n                            }))} />\n                            <EditColorContainer text=\"테두리 색상\" value={setting.ghost.borderColor} func={(e) => setSetting(produce(setting, draft => {\n                                draft.ghost.borderColor = e;\n                            }))} />\n                        </OpenCloseCustom>\n                    </div>\n                    <OpenCloseCustom title=\"애니메이션\">\n                        <EditAnimationContainer \n                            text=\"애니메이션\" \n                            options={animationOptions} \n                            value={setting.animation} \n                            func={ e => changeAnimationOption(e)} />\n                    </OpenCloseCustom>\n                    </>\n                )\n        }\n    }\n\n    return(\n        <>\n            {returnTable()}\n        </>\n    )\n}\n\nexport default EdtiSetting\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/ReviewSection.js",["557","558","559","560"],"import React, {useContext, useState} from 'react'\nimport Editor from '../tools/Editor'\nimport './ReviewSection.css'\nimport Rating from '@mui/material/Rating';\nimport { motion } from 'framer-motion';\nimport { MyContext } from '../../../pages/Make/MakePageV2'\n\nfunction ReviewSection({content}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    const returnReviewCards = content.reviews.map((item, index) => {\n        return(\n            <div key={index} className=\"review__card\">\n                <div>\n                    <div>\n                    </div>\n                    <div>\n                        {item.title}\n                    </div>\n                </div>\n                <div style={{marginTop:'10px'}}>\n                    <Rating\n                        readOnly\n                        value={item.rating} \n                        precision={0.1}\n                    />\n                </div>\n                <div style={{marginTop:'10px'}}>\n                    {item.desc}\n                </div>\n                <div style={{marginTop:'10px', color:'rgba(0,0,0,0.6)'}}>\n                    {item.writer}\n                </div>\n            </div>\n        )\n    })\n\n    return (\n        <>\n            <motion.div className=\"template\"\n            data-aos={content.animation.type} aos-duration=\"2000\">\n                <div>\n                    {content.title}\n                </div>\n                <div className=\"reviews__container\"> \n                    {returnReviewCards}\n                </div>\n            </motion.div>\n        </>\n    )\n}\nexport default ReviewSection\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/CtaSection.js",["561","562","563"],"import React, {useContext, useState} from 'react'\nimport Editor from '../tools/Editor'\nimport './CtaSection.css'\nimport { motion } from 'framer-motion';\n\nimport { MyContext } from '../../../pages/Make/MakePageV2'\n\nfunction CtaSection({content}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    const returnCtaSection = () => {\n        return(\n            <div className=\"center-column\">\n                <div style={{fontWeight:'500', fontSize:'1.5em'}}>\n                    {content.title}\n                </div>\n                <div className=\"mt30\">\n                    {content.desc}\n                </div>\n                <div className=\"center-row mt30\">\n                    <div style={{marginRight:'1%'}}>\n                        <input className=\"input\" />\n                    </div>\n                    <button className=\"action-button\" style={{backgroundColor:`${content.button.backgroundColor}`}}>\n                        {content.button.title}\n                    </button>\n                </div>\n            </div>\n        )\n    }\n\n    return (\n        <>\n            <motion.div className=\"template\" style={{flexDirection: `${state.isPhone ? 'column' : 'row'}`}}\n            data-aos={content.animation.type} aos-duration=\"2000\">\n                {returnCtaSection()}\n            </motion.div>\n        </>\n    )\n}\n\nexport default CtaSection\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/HeroSection.js",["564","565","566","567","568","569","570","571","572","573","574","575","576","577","578","579","580","581"],"import React, { useContext, useEffect, useState, useRef } from 'react'\nimport Editor from '../tools/Editor'\nimport produce from 'immer';\n\nimport { MyContext } from '../../../pages/Make/MakePageV2'\nimport './DetailSection.css'\n\nimport appstorebutton from '../../../tools/img/appstorebutton.png'\nimport playstorebutton from '../../../tools/img/playstorebutton.png'\nimport './HeroSection.css'\n\nimport Popover from '@mui/material/Popover';\nimport {ImageAdd} from '@styled-icons/boxicons-regular';\nimport ImageCarousel from '../Edit/tools/ImageCarousel'\n\nimport { motion } from 'framer-motion';\n\nfunction HeroSection({content}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n    const imgRef = useRef(null)\n    const [imageShow, setImageShow] = useState(null);\n    const [videoShow, setVideoShow] = useState(null);\n    const [align, setAlign] = useState('center');\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    const open = Boolean(anchorEl);\n    const id = open ? 'simple-popover' : undefined;\n\n    // 제목\n    const changeText = ( data ) => {\n        action.setContents(produce(state.contents, draft => {\n        draft[state.secNum].title.text= data}))\n    }\n    \n    // 본문\n    const changeDesc = ( data ) => {\n        action.setContents(produce(state.contents, draft => {\n        draft[state.secNum].desc.text= data}))\n    }\n\n    // 템플릿 1 텍스트의 경우\n    const changeButtonText = ( data ) => {\n        let newContents = state.contents.map((item, index) => index === state.secNum ? {...item, button: {...item.button, title : data}} : item)\n        action.setContents(newContents);\n    }\n\n    // 템플릿 2 이미지의 경우에는\n    const onChangeImage = e => {\n        let newContents = JSON.parse(JSON.stringify(state.contents))\n        const {target:{files},} = e;\n        const oneFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => { // 로딩이 끝날 때 실행한다는 뜻.\n            const {currentTarget:{result}} = finishedEvent;\n            // newContents = state.contents.map((item, index) => index === state.secNum ? {...item, image: {...item.image, attachment : result}} : item)\n            newContents[state.secNum].image.attachment = result;\n        }\n        reader.readAsDataURL(oneFile);\n        action.setContents(newContents);\n    }\n\n    const ImageOrSlide = () => {\n        if(content.video.youtube && !content.video.use && !content.image.slide && !content.image.oneImg)\n        return(\n            <iframe src={`${content.video.link}`} width=\"560\" height=\"315\" frameborder=\"0\" allow='autoplay'/>\n        )\n        if(!content.video.youtube && content.video.use && !content.image.slide && !content.image.oneImg)\n        return(\n            <div>\n                <video \n                className=\"video\"\n                src={`${content.video.file}`} \n                type=\"video/mp4\" \n                autoPlay\n                muted\n                loop\n                style={{borderRadius:`${content.image.border}%`, width:`${content.image.size}px`}}\n                >\n                </video>\n            </div>\n        )\n        if(!content.video.youtube && !content.video.use && content.image.slide && !content.image.oneImg)\n        return(\n            <div className=\"slide-box\">\n                <ImageCarousel content={content}/>\n            </div>\n        )\n        if(!content.video.youtube && !content.video.use && !content.image.slide && content.image.oneImg)\n        return (\n            <div >\n            {/* <Popover\n                id={Boolean(imageShow) ? 'simple-popover' : undefined} // 수정\n                open={Boolean(imageShow)} // 수정\n                anchorEl={imageShow} // 수정\n                onClose={() => setImageShow(null)} // 수정\n                anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left',\n                }}\n                transformOrigin={{\n                vertical: 'bottom',\n                horizontal: 'left',\n                }}>\n                <div className=\"pop-balloon\" style={{width:'100px'}}>\n                    <span className=\"balloon-item\">\n                        <ImageAdd color=\"black\" width={30} />\n                        { imgRef.current && \n                            <input className=\"image-input\" type=\"file\" accept=\"image/*\" id=\"file\"\n                                onChange={ e => onChangeImage(e) } style={{width:'20px', height:'20px'}}/> }\n                    </span>\n                    <span className=\"balloon-item\" onClick={() => {}}>\n                        동영상\n                    </span>\n                </div>\n            </Popover> */}\n            {content.image.attachment === '' ?  \n                <img ref={imgRef} src={playstorebutton} className=\"image\" onClick={(e) =>{ setImageShow(e.currentTarget)}} style={{borderRadius:`${content.image.border}%`, width:`${content.image.size}px`}} />\n                : \n                <img ref={imgRef} src={`${content.image.attachment}`} className=\"image\" onClick={(e) => setImageShow(e.currentTarget)} style={{borderRadius:`${content.image.border}%`, width:`${content.image.size}px`}}/>\n            }\n            </div>\n    )\n    }\n\n    const returnButton = () => {\n        return(\n            <>            \n            <div className=\"button__container\" style={{border:`${ anchorEl !== null ? '1px dashed rgba(0,0,0,0.4)' : '' }`}}>\n                {\n                    content.button.first && \n                    <div>                 \n                        {content.button.link.includes(\"play.google.com/store\") ? <img src={playstorebutton} />\n                        : \n                        content.button.link.includes(\"apps.apple.com/\") ? <img src={appstorebutton} />\n                        : \n                        <button className=\"action-button\" style={{backgroundColor:`${content.button.backgroundColor}`}}>\n                            버튼\n                        </button>\n                        }\n                    </div>\n                }\n            </div>\n            </>\n        )\n    }\n\n    const returnTextAndButton = () => {\n        return(\n            <div className=\"text__container\">\n                <input \n                    className=\"text-input\"\n                    placeholder='제목을 입력하세요'\n                    onChange={(e) => {\n                        changeText(e.currentTarget.value);\n                    }}\n                    value={content.title.text}\n                    style={{\n                        textAlign: `${content.title.align}`,\n                        fontSize: `${content.title.size}px`,\n                        color: `${content.title.color}`\n                    }}\n                />\n                <input \n                    className=\"text-input\"\n                    placeholder='본문을 입력하세요'\n                    onChange={(e) => {\n                        changeDesc(e.currentTarget.value);\n                    }}\n                    value={content.desc.text}\n                    style={{\n                        textAlign: `${content.desc.align}`,\n                        fontSize: `${content.desc.size}px`,\n                        color: `${content.desc.color}`\n                    }}\n                />\n                {returnButton()}\n            </div>\n        )\n    }\n\n    const animationDiv = () => {\n        if(!content.animation.use)\n        return(\n            <>\n            <div className=\"template\" style={{flexDirection: `${state.isPhone ? 'column' : 'row'}`}}>\n                {returnTextAndButton()}\n                {ImageOrSlide()}\n            </div>\n        </>\n        )\n        else \n        return(\n            <>\n            <motion.div className=\"template\" style={{flexDirection: `${state.isPhone ? 'column' : 'row'}`}} \n            data-aos={content.animation.type} aos-duration=\"2000\" >\n                {returnTextAndButton()}\n                {ImageOrSlide()}\n            </motion.div>\n            </>\n        )\n    }\n    \n    return (\n        <div style={{padding:`${content.paddingTop}% 0% ${content.paddingBottom}% 0%`}}>\n            <div className=\"template\" style={{flexDirection: `${state.isPhone ? 'column' : 'row'}`}}>\n                {animationDiv()}\n            </div>\n        </div>\n    )\n}\n\n\nexport default HeroSection\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/FeaturesSection.js",["582","583","584","585","586"],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/DetailSection.js",["587","588","589","590","591","592","593","594","595","596"],"import React, { useContext, useEffect, useState, useRef } from 'react'\nimport Editor from '../tools/Editor'\n\nimport { MyContext } from '../../../pages/Make/MakePageV2'\nimport './DetailSection.css'\n\nimport appstorebutton from '../../../tools/img/appstorebutton.png'\nimport playstorebutton from '../../../tools/img/playstorebutton.png'\n\nimport Popover from '@mui/material/Popover';\nimport {ImageAdd} from '@styled-icons/boxicons-regular';\n\nimport { motion } from 'framer-motion';\n\nfunction DetailSection({content}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n    const imgRef = useRef(null)\n    const [imageShow, setImageShow] = useState(null);\n    const [align, setAlign] = useState('center');\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    const open = Boolean(anchorEl);\n    const id = open ? 'simple-popover' : undefined;\n\n    // 템플릿 1 텍스트의 경우\n    const changeText = ( data ) => {\n        let newContents = state.contents.map((item, index) => index === state.secNum ? {...item, titles: {...item.titles, title : data}} : item)\n        action.setContents(newContents);\n    }\n    // 템플릿 1 텍스트의 경우\n    const changeButtonText = ( data ) => {\n        let newContents = state.contents.map((item, index) => index === state.secNum ? {...item, button: {...item.button, title : data}} : item)\n        action.setContents(newContents);\n    }\n\n    // 템플릿 2 이미지의 경우에는\n    const onChangeImage = e => {\n        let newContents = JSON.parse(JSON.stringify(state.contents))\n        const {target:{files},} = e;\n        const oneFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => { // 로딩이 끝날 때 실행한다는 뜻.\n            const {currentTarget:{result}} = finishedEvent;\n            // newContents = state.contents.map((item, index) => index === state.secNum ? {...item, image: {...item.image, attachment : result}} : item)\n            newContents[state.secNum].image.attachment = result;\n        }\n        reader.readAsDataURL(oneFile);\n        action.setContents(newContents);\n    }\n\n    const returnImage = () => {\n        return(\n            <div className=\"image__container\">\n                <Popover\n                    id={Boolean(imageShow) ? 'simple-popover' : undefined} // 수정\n                    open={Boolean(imageShow)} // 수정\n                    anchorEl={imageShow} // 수정\n                    onClose={() => setImageShow(null)} // 수정\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left',\n                    }}\n                    transformOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                    }}>\n                    <div className=\"pop-balloon\" style={{width:'100px'}}>\n                        <span className=\"balloon-item\">\n                            <ImageAdd color=\"black\" width={30} />\n                            { imgRef.current && \n                                <input className=\"image-input\" type=\"file\" accept=\"image/*\" id=\"file\"\n                                    onChange={ e => onChangeImage(e) } style={{width:'20px', height:'20px'}}/> }\n                        </span>\n                        <span className=\"balloon-item\" onClick={() => {}}>\n                            동영상\n                        </span>\n                    </div>\n                </Popover>\n                {content.image.attachment === '' ?  \n                    <img ref={imgRef} src={playstorebutton} className=\"image\" onClick={(e) =>{ setImageShow(e.currentTarget)}} />\n                    : \n                    <img ref={imgRef} src={`${content.image.attachment}`} className=\"image\" onClick={(e) => setImageShow(e.currentTarget)} />\n                }\n            </div>\n        )\n    }\n\n    const returnButton = () => {\n        return(\n            <>\n                <div className=\"button__container\">\n                    <div>                 \n                        {content.button.link.includes(\"play.google.com/store\") ? <img src={playstorebutton} />\n                        : \n                        content.button.link.includes(\"apps.apple.com/\") ? <img src={appstorebutton} />\n                        :\n                        <button className=\"action-button\" style={{backgroundColor:`${content.button.backgroundColor}`}}>\n                            버튼\n                        </button>\n                        }\n                    </div>\n                </div>\n            </>\n        )\n    }\n\n    const returnTextAndButton = () => {\n        return(\n            <div className=\"text__container\">\n                <Editor \n                    data={content.titles.title}\n                    onChange={(e, editor) => {\n                        const data = editor.getData();\n                        changeText(data);\n                    }}\n                    />\n                {returnButton()}\n            </div>\n        )\n    }\n\n    return (\n        <>\n            <motion.div className=\"template\" style={{flexDirection: `${state.isPhone ? 'column' : 'row'}`}} \n            data-aos={content.animation.type} aos-duration=\"2000\" >\n                {returnTextAndButton()}\n                {returnImage()}\n            </motion.div>\n        </>\n    )\n}\n\nexport default DetailSection","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/tools/animations.js",[],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/AddingSection.js",["597"],"import React, {useState, useContext} from 'react'\nimport { MyContext } from '../../../pages/Make/MakePageV2'\nimport {base} from '../SectionTypes/baseTypes'\nimport { detailSectionTemplateList, heroSectionTemplateList,featuresSectionTemplateList, mapSectionTemplateList, reviewSectionTemplateList, priceSectionTemplateList, ctaSectionTemplateList,  } from './EditTemplates/InnerTemplates'\n\nfunction AddingSection() {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n    const [nowType, setNowType] = useState('DetailSection');\n\n    const choseType = n => {\n        setNowType(n)\n    }\n\n    const addSectionByTemplate = tnum => {\n        // 아래는 state.contents에 섹션 하나를 추가하는 것.\n        let body = JSON.parse(JSON.stringify(base.filter((item, index) => item.sectionTypeName === nowType)[0]))\n        body.templateNumber = tnum;\n\n        action.setContents([\n            ...state.contents.slice(0, state.addingSectionAt+1),\n            body,\n            ...state.contents.slice(state.addingSectionAt+1, state.contents.length),\n        ])\n        action.setSecNum(state.addingSectionAt+1)\n        action.setAddingSectionAt(1000)\n    }\n\n    const returnTepmplateSelections = () => {\n        switch(nowType){\n            case 'DetailSection':\n                return(\n                    <>\n                    {detailSectionTemplateList.map((item, index) => {\n                        return(\n                            <span className=\"type-selection\" onClick={() => addSectionByTemplate(item.templateNumber)}>{item.templateNumber}</span>\n                        )\n                    })}\n                    </>\n                )\n            case 'HeroSection':\n                return(\n                    <>\n                    {heroSectionTemplateList.map((item, index) => {\n                        return(\n                            <span className=\"type-selection\" onClick={() => addSectionByTemplate(item.templateNumber)}>{item.templateNumber}</span>\n                        )\n                    })}\n                    </>\n                )\n            case 'ReviewSection':\n                return(\n                    <>\n                    {reviewSectionTemplateList.map((item, index) => {\n                        return(\n                            <span className=\"type-selection\" onClick={() => addSectionByTemplate(item.templateNumber)}>{item.templateNumber}</span>\n                        )\n                    })}\n                    </>\n                )\n            case 'MapSection':\n                return(\n                    <>\n                    {mapSectionTemplateList.map((item, index) => {\n                        return(\n                            <span className=\"type-selection\" onClick={() => addSectionByTemplate(item.templateNumber)}>{item.templateNumber}</span>\n                        )\n                    })}\n                    </>\n                )\n            case 'PriceSection':\n                return(\n                    <>\n                    {priceSectionTemplateList.map((item, index) => {\n                        return(\n                            <span className=\"type-selection\" onClick={() => addSectionByTemplate(item.templateNumber)}>{item.templateNumber}</span>\n                        )\n                    })}\n                    </>\n                )\n            case 'CtaSection':\n                return(\n                    <>\n                    {ctaSectionTemplateList.map((item, index) => {\n                        return(\n                            <span className=\"type-selection\" onClick={() => addSectionByTemplate(item.templateNumber)}>{item.templateNumber}</span>\n                        )\n                    })}\n                    </>\n                )\n            case 'FeaturesSection':\n                return(\n                    <>\n                    {featuresSectionTemplateList.map((item, index) => {\n                        return(\n                            <span className=\"type-selection\" onClick={() => addSectionByTemplate(item.templateNumber)}>{item.templateNumber}</span>\n                        )\n                    })}\n                    </>\n                )\n\n            case 'ETCetraSection':\n                return(\n                    <>\n                        <span className=\"type-selection\" onClick={() => addSectionByTemplate(1)}>텍스트</span>\n                        <span className=\"type-selection\" onClick={() => addSectionByTemplate(1)}>사진</span>\n                        <span className=\"type-selection\" onClick={() => addSectionByTemplate(1)}>빈공간</span>\n                        <span className=\"type-selection\" onClick={() => addSectionByTemplate(1)}>구분선</span>\n                    </>\n                )\n\n\n        }\n    }\n\n    return (\n        <div style={{width:'100%'}}>\n            <div>\n                추가할 템플릿을 골라주세요.\n                <button onClick={() => {action.setContents(state.contents)}}>버튼</button>\n            </div>\n            <div className=\"add-section__container\">\n                <div className=\"type-selection__container\">\n                    {base.map((item,index) => {\n                        let backColor = 'rgba(0,0,0,0)'\n                        if(nowType === item.sectionTypeName){\n                            backColor = 'rgba(250,250,0,0.5)'\n                        }\n                        return(\n                            <span className=\"type-selection\" style={{backgroundColor: `${backColor}`}} onClick={() => choseType(item.sectionTypeName)}>{item.sectionTypeName}</span>\n                        )\n                    })}\n                </div>\n                <div className=\"template-selection__container\">\n                    <div>\n                        {nowType}\n                    </div>\n                    <div className=\"column\">\n                        { returnTepmplateSelections() }\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default AddingSection\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/EditCtaSection.js",["598","599"],"import React, {useState, useContext} from 'react'\nimport { MyContext } from '../../../../pages/Make/MakePageV2'\nimport { ctaSectionTemplateList } from './InnerTemplates'\nimport TemplateChoose from '../tools/TemplateChoose'\n\nfunction EditCtaSection({content, category}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    const returnTable = () => {\n        switch(category){\n            case 0:\n                // case 0은 디자인 수정\n                return(\n                    <div className=\"section-make__inner-container\">\n                        {state.secNum}번째 섹션이고 CTA 입니다.\n                    </div>\n                )\n\n            case 1:\n                // case 1은 템플릿 변경\n                return(\n                    <>\n                        <TemplateChoose content={content} title=\"CTA\" list={ctaSectionTemplateList} />\n                    </>\n                )\n\n            default:\n                <></>\n        }\n    }\n\n\n    return(\n        <>\n            {returnTable()}\n        </>\n    )\n}\n\nexport default EditCtaSection\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/EditReviewSection.js",[],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/EditFeaturesSection.js",["600","601","602","603","604","605","606","607","608","609","610"],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/EditDetailSection.js",["611"],"import React, {useState, useContext} from 'react'\nimport { MyContext } from '../../../../pages/Make/MakePageV2'\nimport { detailSectionTemplateList } from './InnerTemplates'\nimport TemplateChoose from '../tools/TemplateChoose'\nimport './EditeTemplates.css'\nimport './EditContent.css'\n\nfunction EditDetailSection({content, category}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    const onChangeButtonLink = (e) => {\n        let newContents = state.contents.map((item, index) => index === state.secNum ? {...item, button:{...item.button, link:e.currentTarget.value}} : item )\n        action.setContents(newContents);\n    }\n\n    const returnTable = () => {\n        switch(category){\n            case 0:\n                // case 0은 디자인 수정\n                return(\n                    <div className=\"section-make__inner-container\">\n                        {state.secNum}번째 섹션이고 타입은 1번 - 텍스트 입니다.\n                        <br/>\n                        <pre dangerouslySetInnerHTML={{__html: content.titles.title}}>\n                        </pre>\n                        <div>\n                            <div>버튼링크</div>\n                            <input type=\"text\" value={content.button.link} onChange={(e) => onChangeButtonLink(e)}/>\n                        </div>\n                    </div>\n                )\n\n            case 1:\n                // case 1은 템플릿 변경\n                return(\n                    <>\n                        <TemplateChoose content={content} title=\"디테일\" list={detailSectionTemplateList} />\n                    </>\n                )\n\n            default:\n                <></>\n        }\n    }\n\n    return(\n        <>\n            {returnTable()}\n        </>\n    )\n}\n\nexport default EditDetailSection\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/EditHeroSection.js",["612","613","614","615","616","617","618"],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/EditButtonTable.js",[],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/BoxCustom.js",[],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/EditTopBar.js",["619","620","621","622"],"import React, {useContext} from 'react'\nimport {MyContext} from '../../../../pages/Make/MakePageV2'\nimport { Template } from '@styled-icons/heroicons-outline'\nimport { DesignServices } from '@styled-icons/material-outlined'\nimport './EditTopBar.css'\n\nfunction EditTopBar({category, setCategory}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    return (\n        <div className=\"edit__top-bar\">\n            <div className={category === 1 ? 'edit-radios' : 'edit-radios er-clicked'} onClick={() => setCategory(0)}>\n                기본\n            </div>\n            <div className={category === 0 ? 'edit-radios' : 'edit-radios er-clicked'} onClick={() => setCategory(1)}>\n                디자인\n            </div>\n        </div>\n    )\n}\n\nexport default EditTopBar\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/RadioCustom.js",[],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/TextSizeCustom.js",[],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/CheckBoxContainer.js",["623"],"import React from 'react'\nimport Checkbox from '@mui/material/Checkbox';\nimport {Check} from '@styled-icons/bootstrap';\n\nexport const CheckboxCustom = ({value, func}) => {\n    return(\n        <>\n        {/* <Checkbox\n            checked={value || false}\n            value={value || false}\n            onClick={func}\n            inputProps={{ 'aria-label': 'controlled' }}\n        /> */}\n        <div className={value ? 'custom-check' : 'custom-check cc-unclicked'} onClick={func}>\n            <Check color='white' />\n        </div>\n        </>\n    )\n}\n\nfunction CheckBoxContainer({text, value, func}) {\n    return(\n        <div className=\"edit-element\">\n            <div className=\"edit-element__one\">\n                <div className=\"edit-element__left\">\n                    {text}\n                </div>\n                <div className=\"edit-element__right\">\n                    <CheckboxCustom\n                        value={value || false}\n                        func={func}\n                    />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default CheckBoxContainer\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/EditSlider.js",[],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/ElementsTable.js",[],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/InputCustom.js",["624"],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/ColorCustom.js",["625","626"],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/OpenCloseCustom.js",["627"],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/ResponsiveCustom.js",[],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/OnOffCustom.js",["628","629"],"import React from 'react'\nimport { styled } from '@mui/material/styles';\nimport Switch from '@mui/material/Switch';\nimport './OnOffCustom.css'\n\nexport const CustomSwitch = ({value, onChange}) => {\n  return(\n    <div className={value ? 'custom-switch' : 'custom-switch unclicked'} onClick={onChange}>\n      <div className=\"custom-switch-thumb\" style={{left : `${value ? '32px' : '2px'}`}}></div>\n    </div>\n  )\n}\n\nfunction OnOffCustom({text, value, func}) {\n    return (\n      <div className=\"edit-element\">\n        <div className=\"edit-element__left\">\n            {text}\n        </div>\n        <div className=\"edit-element__right\">\n            <CustomSwitch value={value} onChange={e => func()} checkedChildren=\"ON\" unCheckedChildren=\"OFF\" defaultChecked />\n        </div>\n      </div>\n    )\n}\n\nexport default OnOffCustom\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/NavBar/NaviTemplate.js",["630","631"],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Modal/AddingSection.js",["632"],"import React, {useState, useContext} from 'react'\nimport { styled, Box } from '@mui/system';\nimport ModalUnstyled from '@mui/base/ModalUnstyled';\nimport {base} from '../SectionTypes/baseTypes'\nimport { MyContext } from '../../../pages/Make/MakePageV2'\nimport { Close } from '@styled-icons/evaicons-solid';\nimport './AddingSection.css'\n\nconst StyledModal = styled(ModalUnstyled)`\n  position: fixed;\n  z-index: 1300;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Backdrop = styled('div')`\n  z-index: -1;\n  position: fixed;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  left: 0;\n  background-color: rgba(0, 0, 0, 0.1);\n  -webkit-tap-highlight-color: transparent;\n`;\n\nconst style = {\n  width: 700,\n  height: 500,\n  bgcolor: 'rgba(255,255,255,1)',\n  borderRadius:2,\n  p: 2,\n  px: 4,\n  pb: 3,\n};\n\nfunction AddingSection({open, setOpen}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    const addSection = (typeName) => {\n        // 아래는 state.contents에 섹션 하나를 추가하는 것.\n        let body = JSON.parse(JSON.stringify(base.filter((item, index) => item.sectionTypeName === typeName)[0]))\n\n        action.setContents([\n            ...state.contents.slice(0, state.contents.length),\n            body,\n        ])\n        action.setSecNum(state.contents.length)\n        action.setCategory(0);\n    }\n\n    return (\n        <div>\n            <StyledModal\n                aria-labelledby=\"unstyled-modal-title\"\n                aria-describedby=\"unstyled-modal-description\"\n                open={open}\n                onClose={() => setOpen(!open)}\n                BackdropComponent={Backdrop}\n            >\n                <Box sx={style}>\n                    <div className=\"modal-top__title\">\n                        <div className=\"centera\" style={{width:\"95%\"}}>\n                            섹션 추가\n                        </div>\n                        <div style={{width:\"5%\", cursor:\"pointer\"}} onClick={() => setOpen(false)}>\n                            <Close size=\"30\" />\n                        </div>\n                    </div>\n                    <div className=\"section-modal__container\">\n                        {base.map((item,index) => {\n                            return(\n                                <div className=\"section-modal__button\" key={index} onClick={() => addSection(item.sectionTypeName)}>\n                                    {item.name}\n                                </div>\n                            )\n                        })} \n                    </div>\n                </Box>\n            </StyledModal>\n        </div>\n    )\n}\n\nexport default AddingSection\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Footer/FTemplate.js",["633","634"],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Modal/CheckModal.js",["635"],"import React, {useState} from 'react'\nimport { styled, Box } from '@mui/system';\nimport ModalUnstyled from '@mui/base/ModalUnstyled';\nimport { Input } from 'antd';\nimport Checkbox from '@mui/material/Checkbox';\nimport {dbService} from '../../../tools/fbase'\n\nconst label = { inputProps: { 'aria-label': 'Checkbox demo' } };\n\nconst StyledModal = styled(ModalUnstyled)`\n  position: fixed;\n  z-index: 1300;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Backdrop = styled('div')`\n  z-index: -1;\n  position: fixed;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  left: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  -webkit-tap-highlight-color: transparent;\n`;\n\nconst style = {\n  width: '600px',\n  height: '500px',\n  bgcolor: 'rgba(255,255,255,1)',\n  borderRadius: '5px',\n  p: 2,\n  px: 4,\n  pb: 3,\n};\n\nfunction CheckModal({ch, setCh, onSubmit2}) {\n    const [myYes, setMyYes] = useState(false);\n    const [email, setEmail] = useState(\"\");\n    const [feedback1, setFeedback1] = useState(\"\");\n\n    const submitDone = () => {\n        if(!myYes){\n            alert(\"상기의 사항에 대해서 동의한 경우에만 신청이 진행될 수 있습니다!\")\n            return;\n        }else if(email.length < 3){\n            alert(\"이메일 양식에 맞게 작성해주시기 바랍니다.\")\n            return;\n        }else{\n            // 피드백 입력 받아서 저장. 입력한 내용이랑 현재 유저의 이메일, 현재 제작한 랜딩페이지의 아이디\n            dbService.collection('make-feedback').add({\n                feedback1:feedback1\n            })\n\n            onSubmit2();\n            setCh(!ch);\n        }\n    }\n\n    return (\n        <div>\n            <StyledModal\n                aria-labelledby=\"unstyled-modal-title\"\n                aria-describedby=\"unstyled-modal-description\"\n                open={ch}\n                onClose={() => setCh(!ch)}\n                BackdropComponent={Backdrop}\n            >\n                <Box sx={style}>\n                    <div className=\"check-container\">\n                        <div className=\"check-title\">\n                        안내창\n                        </div>\n\n                        <div className=\"check-desc\">\n                            이메일을 기입하고 체크박스 체크 후 ‘제출하기’를 누르면 <br/>\n                            12시간 내에 완성된 페이지와 데이터 분석 페이지를 메일로 보내드립니다. <br/>\n                            페이지는 Surfee 베타 서비스 기간인 12월00일까지 무료로 제공되며 <br/>\n                            00일부터 디벨롭 과정을 거친 후 빠른 시일 내에 다시 돌아오겠습니다!\n                        </div>\n\n                        <div className=\"check-form-container\">\n                            <div style={{display:'flex', flexDirection:'column'}}>\n                                <span>이메일</span>\n                                <Input style={{width:'60%'}} tyle=\"text\" value={email} onChange={e => setEmail(e.currentTarget.value)}/>\n                            </div>\n                            <div style={{display:'flex', flexDirection:'column'}}>\n                                <span>피드백 질문 1</span>\n                                <Input style={{width:'60%'}} tyle=\"text\" value={feedback1} onChange={e => setFeedback1(e.currentTarget.value)}/>\n                            </div>\n                            <div style={{marginTop:'20px', display:'flex', flexDirection:'row', alignItems:'center'}}>\n                                <Checkbox color=\"secondary\" type=\"checkbox\" value={myYes} onChange={e => setMyYes(!myYes)}/>\n                                <span style={{marginLeft:'10px'}}> 개인정보 수집/이용에 동의합니다.</span>\n                            </div>\n                        </div>\n                        <div>\n                            <button className=\"check-button\" onClick={e => submitDone()}>제출하기</button>\n                        </div>\n                    </div>\n                </Box>\n            </StyledModal>\n        </div>\n    )\n}\n\nexport default CheckModal\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/AnimationCustom.js",[],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/SelectCustom.js",["636"],"import React, {useState, useEffect} from 'react'\nimport {ChevronDown} from '@styled-icons/bootstrap';\nimport Popover from '@mui/material/Popover';\nimport './SelectCustom.css'\n\nfunction SelectCustom({options, onChange, value}) {\n    const [anchorEl, setAnchorEl] = useState(null);\n  \n    const handleClick = (event) => {\n      setAnchorEl(event.currentTarget);\n    };\n  \n    const handleClose = () => {\n      setAnchorEl(null);\n    };\n  \n    const open = Boolean(anchorEl);\n    const id = open ? 'simple-popover' : undefined;\n\n    return (\n        <div>\n            <div className=\"select-open-button center-row\" aria-describedby={id} variant=\"contained\" onClick={handleClick}>\n                <div className=\"select-button__content\" style={{paddingLeft:'15px'}}>\n                    {options.filter(doc => doc.value === value)[0].label}\n                </div>\n                <div className=\"select-button__content\" style={{justifyContent:'end', paddingRight:'15px'}}><ChevronDown size=\"17\" /></div>\n            </div>\n            <Popover\n                id={id}\n                open={open}\n                anchorEl={anchorEl}\n                onClose={handleClose}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                }}\n            >\n                <div className=\"so__container\">\n                    {options.map((item, index) => {\n                        return(\n                            <div className=\"select-hover\" onClick={() => {onChange(item.value); setAnchorEl('')}}\n                                style={{ fontFamily:`${item.value}`, borderBottomLeftRadius:`${index === options.length -1 ? '5px' : '0px'}`,borderBottomRightRadius:`${index === options.length ? '5px' : '0px'}`}}\n                            >\n                                {item.label}\n                            </div>\n                        )\n                    })}\n                </div>\n            </Popover>\n        </div>\n    )\n}\n\nexport default SelectCustom\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/tools/Icon.js",[],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/tools/Editor.js",["637"],"import React from 'react'\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport InlineEditor from \"@ckeditor/ckeditor5-editor-inline/src/inlineeditor\";\n// import ClassicEditor from \"@ckeditor/ckeditor5-editor-classic/src/classiceditor\";\nimport Essentials from \"@ckeditor/ckeditor5-essentials/src/essentials\";\nimport Paragraph from \"@ckeditor/ckeditor5-paragraph/src/paragraph\";\nimport Bold from \"@ckeditor/ckeditor5-basic-styles/src/bold\";\nimport Italic from \"@ckeditor/ckeditor5-basic-styles/src/italic\";\nimport Underline from \"@ckeditor/ckeditor5-basic-styles/src/underline\";\nimport Strikethrough from \"@ckeditor/ckeditor5-basic-styles/src/strikethrough\";\nimport Link from \"@ckeditor/ckeditor5-link/src/link\";\nimport PasteFromOffice from \"@ckeditor/ckeditor5-paste-from-office/src/pastefromoffice\";\nimport Font from \"@ckeditor/ckeditor5-font/src/font\";\nimport List from \"@ckeditor/ckeditor5-list/src/list\";\nimport Alignment from \"@ckeditor/ckeditor5-alignment/src/alignment\";\nimport TextTransformation from \"@ckeditor/ckeditor5-typing/src/texttransformation\";\nimport Base64UploadAdapter from \"@ckeditor/ckeditor5-upload/src/adapters/base64uploadadapter\";\nimport './Editor.css'\n\nconst editorConfiguration = {\n    plugins: [Essentials, Bold, Italic, Underline, Strikethrough, Alignment, Font, Base64UploadAdapter],\n    toolbar: [\"heading\", \"|\", \"bold\", \"italic\", \"underline\", \"strikethrough\", \"alignment\", \"fontSize\"],\n    alignment: {\n      options: [\"justify\", \"left\", \"center\", \"right\"],\n    },\n    fontSize: {\n        options: [\n          14,\n          15,\n          19,\n          'default',\n          26,\n          27,\n          28,\n          29,\n          30,\n        ],\n      },\n  };\n\nconst Editor = (props) => {\n    return (\n        <div className=\"ckeditor-container\">\n        <CKEditor\n        onInit={(editor) => {\n          editor.ui\n            .getEditableElement()\n            .parentElement.insertBefore(\n              editor.ui.view.toolbar.element,\n              editor.ui.getEditableElement()\n            );\n        }}\n        config={{\n          language: \"ko\",\n          plugins: [\n            Essentials,\n            Paragraph,\n            Bold,\n            Italic,\n            Underline,\n            Strikethrough,\n            Font,\n            Alignment,\n            List,\n            Link,\n            PasteFromOffice,\n            Base64UploadAdapter,\n            TextTransformation\n          ],\n          toolbar: props.toolbar\n            ? props.toolbar\n            : {\n              shouldNotGroupWhenFull:true,\n              items:[\n                \"bold\",\n                \"italic\",\n                \"underline\",\n                \"strikethrough\",\n                \"|\",\n                \"fontSize\",\n                \"fontColor\",\n                \"fontBackgroundColor\",\n                \"|\",\n                \"alignment\",\n                \"blockQuote\",\n                \"|\",\n                \"link\",\n                \"insertTable\",\n                \"|\",\n                \"undo\",\n                \"redo\",\n              ]},\n          fontColor:{\n            columns:4,\n            documentColors:4,\n            colors:[\n            {\n              color: 'hsl(0, 0%, 0%)',\n              label: '검정'\n            },\n            {\n              color: 'hsl(0, 0%, 90%)',\n              label: '연회색'\n            },\n            {\n              color: 'hsl(0, 0%, 100%)',\n              label: '흰색',\n              hasBorder: true\n            },\n            {\n              color: 'rgb(255,0,0)',\n              label: '빨강'\n            },\n            {\n              color: 'hsl(30, 75%, 60%)',\n              label: '주황'\n            },\n            {\n              color: 'hsl(60, 75%, 60%)',\n              label: '노랑'\n            },\n            {\n              color: 'hsl(90, 75%, 60%)',\n              label: '연초록'\n            },\n            {\n              color: 'hsl(120, 75%, 60%)',\n              label: '초록'\n            },\n            {\n              color: 'hsl(210, 75%, 60%)',\n              label: '하늘'\n            },\n            {\n              color: 'hsl(240, 75%, 60%)',\n              label: '파랑'\n            },\n            {\n              color: 'hsl(270, 75%, 60%)',\n              label: '보라'\n            }\n          ]},\n          fontBackgroundColor:{\n            columns:4,\n            documentColors:4,\n            colors:[\n            {\n              color: 'hsl(0, 0%, 0%)',\n              label: '검정'\n            },\n            {\n              color: 'hsl(0, 0%, 90%)',\n              label: '연회색'\n            },\n            {\n              color: 'hsl(0, 0%, 100%)',\n              label: '흰색',\n              hasBorder: true\n            },\n            {\n              color: 'rgb(255,0,0)',\n              label: '빨강'\n            },\n            {\n              color: 'hsl(30, 75%, 60%)',\n              label: '주황'\n            },\n            {\n              color: 'hsl(60, 75%, 60%)',\n              label: '노랑'\n            },\n            {\n              color: 'hsl(90, 75%, 60%)',\n              label: '연초록'\n            },\n            {\n              color: 'hsl(120, 75%, 60%)',\n              label: '초록'\n            },\n            {\n              color: 'hsl(210, 75%, 60%)',\n              label: '하늘'\n            },\n            {\n              color: 'hsl(240, 75%, 60%)',\n              label: '파랑'\n            },\n            {\n              color: 'hsl(270, 75%, 60%)',\n              label: '보라'\n            }\n          ]},\n          fontSize: {\n            options: [\n              5,\n              7,\n              9,\n              10,\n              12,\n              14,\n              'default',\n              16,\n              18,\n              20,\n              24,\n              26,\n              30,\n              32,\n              34,\n              36,\n              40,\n            ],\n          },\n          alignment: {\n            options: [\"justify\", \"left\", \"center\", \"right\"],\n          },\n          image: {\n            resizeUnit: \"px\",\n            toolbar: [\n              \"imageStyle:alignLeft\",\n              \"imageStyle:full\",\n              \"imageStyle:alignRight\",\n              \"|\",\n              \"imageTextAlternative\",\n            ],\n            styles: [\"full\", \"alignLeft\", \"alignRight\"],\n            type: [\"JPEG\", \"JPG\", \"GIF\", \"PNG\"],\n          },\n          typing: {\n            transformations: {\n              remove: [\n                \"enDash\",\n                \"emDash\",\n                \"oneHalf\",\n                \"oneThird\",\n                \"twoThirds\",\n                \"oneForth\",\n                \"threeQuarters\",\n              ],\n            },\n          },\n        }}\n        editor={InlineEditor}\n        {...props}\n            />\n        </div>\n    )\n}\n\nexport default Editor\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/InnerTemplates.js",[],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/AddYoutubeLink.js",["638","639"],"import React, {useRef, useContext} from 'react'\nimport produce from 'immer';\nimport { MyContext } from '../../../../pages/Make/MakePageV2'\n\nfunction AddYoutubeLink({content}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    const onChangeLink = e => {\n        action.setContents(produce(state.contents, draft => {\n            draft[state.secNum].video.link = e.target.value\n        }))\n    }\n    const onYoutube = e => {\n        const submitLink = content.video.link.replace('watch?v=', 'embed/');\n        action.setContents(produce(state.contents, draft => {\n            draft[state.secNum].video.youtube = true\n            draft[state.secNum].video.link = submitLink+'?autoplay=1'+'&mute=1'\n            draft[state.secNum].image.slide = false\n            draft[state.secNum].video.use = false\n            draft[state.secNum].image.slide = false\n            draft[state.secNum].image.oneImg = false \n        }))\n    }\n\n    return (\n        <form>\n           <input\n                type=\"text\"\n                onChange={e=>onChangeLink(e)}\n                style={{width: '80%'}}\n           /> \n           <div \n           type=\"submit\" \n           style={{width: '30px', cursor: 'pointer' , border: 'solid 1px'}}\n           onClick = {e => onYoutube(e)}\n           >\n               확인\n           </div>\n        </form>\n    )\n}\n\nexport default AddYoutubeLink\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/AddContentVideo.js",[],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/AddContentImg.js",[],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/TemplateChoose.js",[],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/ImageAddEdit.js",["640"],"import React from 'react'\n\nfunction ImageAddEdit({value, func}) {\n    return (\n        <>\n            <input type=\"file\" accept=\"image/*\" id=\"file\" onChange={ e => func(e) }/> \n            <img src={value} width={50} />\n        </>\n    )\n}\n\nexport default ImageAddEdit\n","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/tools/ImageCarousel.js",["641","642","643","644"],"import React, {useRef} from 'react'\nimport Slider from \"react-slick\"\nimport \"slick-carousel/slick/slick.css\"\nimport \"slick-carousel/slick/slick-theme.css\"\nimport styled from 'styled-components'\nimport '../../SectionTypes/HeroSection.css'\nimport prevButton from '../../../../tools/img/prevButton.png'\nimport nextButton from '../../../../tools/img/nextButton.png'\n\nimport { base } from '../../SectionTypes/baseTypes'\n\nconst Prev = styled.img`\nwidth: 50px;\nheight: 50px;\nz-index: 5;\nmargin-left: -40px;\nmargin-top: -30px;\n`\n\nconst Next = styled.img`\nwidth: 50px;\nheight: 50px;\nz-index: 5;\nmargin-right: -40px;\nmargin-top: -30px;\n`\n\n\nfunction ImageCarousel({content}) {\n\n    const imgRef = useRef(null)\n\n    const PrevArrow=({currentSlide,slideCount,...props})=>(\n        <Prev {...props} src={prevButton} className=\"slick-prev\" /> \n    )\n\n    const NextArrow=({currentSlide,slideCount,...props})=>(\n        <Next {...props} src={nextButton} className=\"slick-next\" /> \n    )\n\n    const settings = {\n        dots: true, // 캐러셀이미지가 몇번째인지 알려주는 점을 보여줄지 정한다.\n        speed: 500, // 애미메이션의 속도, 단위는 milliseconds\n        slidesToShow: 1, // 한번에 몇개의 슬라이드를 보여줄 지\n        slidesToScroll: 1, // 한번 스크롤시 몇장의 슬라이드를 넘길지\n        nextArrow: <NextArrow />,\n        prevArrow: <PrevArrow />,\t\n      };\n\n    return (\n        <div className=\"slide-box\">\n            <Slider {...settings}> \n            <img className=\"image\" ref={imgRef} src={`${content.slide_img.slide1}`}/>\n            <img className=\"image\" ref={imgRef} src={`${content.slide_img.slide2}`}/> \n            <img className=\"image\" ref={imgRef} src={`${content.slide_img.slide3}`}/>\n            </Slider>\n        </div>\n    )\n\n}\n\nexport default ImageCarousel","/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/EditTextSection.js",[],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/EditGallerySection.js",[],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/EditQnaSection.js",[],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/EditMockupSection.js",[],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/EditAppDownloadSection.js",[],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/Edit/EditTemplates/EditApplySection.js",[],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/ApplySection.js",[],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/AppDownloadSection.js",[],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/MockupSection.js",[],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/TextSection.js",[],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/GallerySection.js",[],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/QnaSection.js",[],"/Users/gimhojin/Desktop/soozipweb/kiwi/src/components/Make/SectionTypes/VideoSection.js",[],{"ruleId":"645","replacedBy":"646"},{"ruleId":"647","replacedBy":"648"},{"ruleId":"649","severity":1,"message":"650","line":1,"column":8,"nodeType":"651","messageId":"652","endLine":1,"endColumn":12},{"ruleId":"649","severity":1,"message":"653","line":5,"column":8,"nodeType":"651","messageId":"652","endLine":5,"endColumn":16},{"ruleId":"649","severity":1,"message":"654","line":13,"column":19,"nodeType":"651","messageId":"652","endLine":13,"endColumn":29},{"ruleId":"655","severity":1,"message":"656","line":15,"column":3,"nodeType":"651","endLine":15,"endColumn":12,"suggestions":"657"},{"ruleId":"649","severity":1,"message":"658","line":1,"column":16,"nodeType":"651","messageId":"652","endLine":1,"endColumn":24},{"ruleId":"649","severity":1,"message":"659","line":8,"column":8,"nodeType":"651","messageId":"652","endLine":8,"endColumn":16},{"ruleId":"649","severity":1,"message":"660","line":32,"column":12,"nodeType":"651","messageId":"652","endLine":32,"endColumn":20},{"ruleId":"655","severity":1,"message":"661","line":36,"column":7,"nodeType":"662","endLine":36,"endColumn":9,"suggestions":"663"},{"ruleId":"649","severity":1,"message":"664","line":3,"column":10,"nodeType":"651","messageId":"652","endLine":3,"endColumn":23},{"ruleId":"649","severity":1,"message":"658","line":1,"column":16,"nodeType":"651","messageId":"652","endLine":1,"endColumn":24},{"ruleId":"649","severity":1,"message":"665","line":1,"column":26,"nodeType":"651","messageId":"652","endLine":1,"endColumn":35},{"ruleId":"649","severity":1,"message":"666","line":1,"column":45,"nodeType":"651","messageId":"652","endLine":1,"endColumn":58},{"ruleId":"649","severity":1,"message":"667","line":9,"column":9,"nodeType":"651","messageId":"652","endLine":9,"endColumn":13},{"ruleId":"649","severity":1,"message":"668","line":12,"column":8,"nodeType":"651","messageId":"652","endLine":12,"endColumn":19},{"ruleId":"649","severity":1,"message":"669","line":20,"column":23,"nodeType":"651","messageId":"652","endLine":20,"endColumn":32},{"ruleId":"649","severity":1,"message":"670","line":23,"column":8,"nodeType":"651","messageId":"652","endLine":23,"endColumn":15},{"ruleId":"649","severity":1,"message":"671","line":25,"column":8,"nodeType":"651","messageId":"652","endLine":25,"endColumn":23},{"ruleId":"649","severity":1,"message":"672","line":26,"column":8,"nodeType":"651","messageId":"652","endLine":26,"endColumn":25},{"ruleId":"649","severity":1,"message":"673","line":27,"column":8,"nodeType":"651","messageId":"652","endLine":27,"endColumn":20},{"ruleId":"649","severity":1,"message":"674","line":36,"column":7,"nodeType":"651","messageId":"652","endLine":36,"endColumn":12},{"ruleId":"649","severity":1,"message":"675","line":40,"column":7,"nodeType":"651","messageId":"652","endLine":40,"endColumn":11},{"ruleId":"649","severity":1,"message":"676","line":53,"column":12,"nodeType":"651","messageId":"652","endLine":53,"endColumn":20},{"ruleId":"649","severity":1,"message":"677","line":53,"column":22,"nodeType":"651","messageId":"652","endLine":53,"endColumn":33},{"ruleId":"649","severity":1,"message":"678","line":54,"column":22,"nodeType":"651","messageId":"652","endLine":54,"endColumn":33},{"ruleId":"649","severity":1,"message":"679","line":56,"column":12,"nodeType":"651","messageId":"652","endLine":56,"endColumn":16},{"ruleId":"655","severity":1,"message":"680","line":133,"column":7,"nodeType":"662","endLine":133,"endColumn":9,"suggestions":"681"},{"ruleId":"649","severity":1,"message":"682","line":164,"column":19,"nodeType":"651","messageId":"652","endLine":164,"endColumn":32},{"ruleId":"649","severity":1,"message":"667","line":3,"column":9,"nodeType":"651","messageId":"652","endLine":3,"endColumn":13},{"ruleId":"683","severity":1,"message":"684","line":61,"column":21,"nodeType":"685","endLine":61,"endColumn":78},{"ruleId":"683","severity":1,"message":"684","line":77,"column":21,"nodeType":"685","endLine":77,"endColumn":72},{"ruleId":"683","severity":1,"message":"684","line":82,"column":21,"nodeType":"685","endLine":82,"endColumn":72},{"ruleId":"649","severity":1,"message":"686","line":7,"column":8,"nodeType":"651","messageId":"652","endLine":7,"endColumn":24},{"ruleId":"649","severity":1,"message":"687","line":10,"column":8,"nodeType":"651","messageId":"652","endLine":10,"endColumn":13},{"ruleId":"649","severity":1,"message":"688","line":70,"column":11,"nodeType":"651","messageId":"652","endLine":70,"endColumn":19},{"ruleId":"683","severity":1,"message":"684","line":176,"column":21,"nodeType":"685","endLine":176,"endColumn":82},{"ruleId":"649","severity":1,"message":"689","line":4,"column":9,"nodeType":"651","messageId":"652","endLine":4,"endColumn":20},{"ruleId":"649","severity":1,"message":"670","line":5,"column":8,"nodeType":"651","messageId":"652","endLine":5,"endColumn":15},{"ruleId":"649","severity":1,"message":"653","line":6,"column":8,"nodeType":"651","messageId":"652","endLine":6,"endColumn":16},{"ruleId":"649","severity":1,"message":"690","line":8,"column":17,"nodeType":"651","messageId":"652","endLine":8,"endColumn":20},{"ruleId":"649","severity":1,"message":"691","line":8,"column":22,"nodeType":"651","messageId":"652","endLine":8,"endColumn":27},{"ruleId":"692","severity":1,"message":"693","line":17,"column":23,"nodeType":"685","endLine":17,"endColumn":26},{"ruleId":"649","severity":1,"message":"694","line":34,"column":12,"nodeType":"651","messageId":"652","endLine":34,"endColumn":14},{"ruleId":"649","severity":1,"message":"695","line":34,"column":16,"nodeType":"651","messageId":"652","endLine":34,"endColumn":21},{"ruleId":"649","severity":1,"message":"696","line":35,"column":12,"nodeType":"651","messageId":"652","endLine":35,"endColumn":20},{"ruleId":"649","severity":1,"message":"678","line":35,"column":22,"nodeType":"651","messageId":"652","endLine":35,"endColumn":33},{"ruleId":"655","severity":1,"message":"697","line":51,"column":7,"nodeType":"662","endLine":51,"endColumn":16,"suggestions":"698"},{"ruleId":"699","severity":1,"message":"700","line":66,"column":31,"nodeType":"701","messageId":"702","endLine":66,"endColumn":33},{"ruleId":"699","severity":1,"message":"700","line":101,"column":34,"nodeType":"701","messageId":"702","endLine":101,"endColumn":36},{"ruleId":"649","severity":1,"message":"670","line":6,"column":8,"nodeType":"651","messageId":"652","endLine":6,"endColumn":15},{"ruleId":"649","severity":1,"message":"703","line":14,"column":19,"nodeType":"651","messageId":"652","endLine":14,"endColumn":27},{"ruleId":"649","severity":1,"message":"660","line":15,"column":12,"nodeType":"651","messageId":"652","endLine":15,"endColumn":20},{"ruleId":"649","severity":1,"message":"704","line":15,"column":22,"nodeType":"651","messageId":"652","endLine":15,"endColumn":33},{"ruleId":"699","severity":1,"message":"705","line":23,"column":47,"nodeType":"701","messageId":"706","endLine":23,"endColumn":49},{"ruleId":"707","severity":1,"message":"708","line":27,"column":17,"nodeType":"709","messageId":"710","endLine":27,"endColumn":19},{"ruleId":"711","severity":1,"message":"712","line":33,"column":9,"nodeType":"713","messageId":"714","endLine":48,"endColumn":10},{"ruleId":"711","severity":1,"message":"712","line":52,"column":9,"nodeType":"713","messageId":"714","endLine":65,"endColumn":10},{"ruleId":"649","severity":1,"message":"715","line":15,"column":7,"nodeType":"651","messageId":"652","endLine":15,"endColumn":18},{"ruleId":"649","severity":1,"message":"716","line":28,"column":7,"nodeType":"651","messageId":"652","endLine":28,"endColumn":15},{"ruleId":"649","severity":1,"message":"717","line":57,"column":7,"nodeType":"651","messageId":"652","endLine":57,"endColumn":19},{"ruleId":"649","severity":1,"message":"718","line":70,"column":7,"nodeType":"651","messageId":"652","endLine":70,"endColumn":16},{"ruleId":"649","severity":1,"message":"719","line":81,"column":7,"nodeType":"651","messageId":"652","endLine":81,"endColumn":13},{"ruleId":"720","severity":1,"message":"721","line":152,"column":18,"nodeType":"662","messageId":"722","endLine":177,"endColumn":2},{"ruleId":"720","severity":1,"message":"721","line":178,"column":19,"nodeType":"662","messageId":"722","endLine":203,"endColumn":2},{"ruleId":"649","severity":1,"message":"723","line":215,"column":12,"nodeType":"651","messageId":"652","endLine":215,"endColumn":22},{"ruleId":"649","severity":1,"message":"724","line":216,"column":12,"nodeType":"651","messageId":"652","endLine":216,"endColumn":17},{"ruleId":"649","severity":1,"message":"725","line":216,"column":19,"nodeType":"651","messageId":"652","endLine":216,"endColumn":25},{"ruleId":"711","severity":1,"message":"712","line":331,"column":9,"nodeType":"713","messageId":"714","endLine":532,"endColumn":10},{"ruleId":"726","severity":1,"message":"727","line":350,"column":17,"nodeType":"728","messageId":"729","endLine":350,"endColumn":23},{"ruleId":"726","severity":1,"message":"727","line":385,"column":17,"nodeType":"728","messageId":"729","endLine":385,"endColumn":23},{"ruleId":"683","severity":1,"message":"684","line":411,"column":49,"nodeType":"685","endLine":411,"endColumn":79},{"ruleId":"726","severity":1,"message":"727","line":505,"column":17,"nodeType":"728","messageId":"729","endLine":505,"endColumn":23},{"ruleId":"726","severity":1,"message":"727","line":531,"column":17,"nodeType":"728","messageId":"729","endLine":531,"endColumn":23},{"ruleId":"649","severity":1,"message":"665","line":1,"column":26,"nodeType":"651","messageId":"652","endLine":1,"endColumn":35},{"ruleId":"649","severity":1,"message":"730","line":19,"column":24,"nodeType":"651","messageId":"652","endLine":19,"endColumn":28},{"ruleId":"683","severity":1,"message":"684","line":119,"column":25,"nodeType":"685","endLine":119,"endColumn":59},{"ruleId":"683","severity":1,"message":"684","line":133,"column":17,"nodeType":"685","endLine":133,"endColumn":45},{"ruleId":"649","severity":1,"message":"665","line":1,"column":26,"nodeType":"651","messageId":"652","endLine":1,"endColumn":35},{"ruleId":"683","severity":1,"message":"684","line":149,"column":25,"nodeType":"685","endLine":149,"endColumn":59},{"ruleId":"683","severity":1,"message":"684","line":163,"column":17,"nodeType":"685","endLine":163,"endColumn":45},{"ruleId":"649","severity":1,"message":"658","line":1,"column":16,"nodeType":"651","messageId":"652","endLine":1,"endColumn":24},{"ruleId":"649","severity":1,"message":"731","line":15,"column":9,"nodeType":"651","messageId":"652","endLine":15,"endColumn":19},{"ruleId":"649","severity":1,"message":"732","line":18,"column":10,"nodeType":"651","messageId":"652","endLine":18,"endColumn":16},{"ruleId":"649","severity":1,"message":"733","line":19,"column":9,"nodeType":"651","messageId":"652","endLine":19,"endColumn":15},{"ruleId":"649","severity":1,"message":"734","line":19,"column":17,"nodeType":"651","messageId":"652","endLine":19,"endColumn":24},{"ruleId":"649","severity":1,"message":"724","line":23,"column":12,"nodeType":"651","messageId":"652","endLine":23,"endColumn":17},{"ruleId":"735","severity":1,"message":"736","line":120,"column":1,"nodeType":"737","messageId":"738","endLine":138,"endColumn":4},{"ruleId":"720","severity":1,"message":"721","line":150,"column":18,"nodeType":"662","messageId":"722","endLine":175,"endColumn":2},{"ruleId":"720","severity":1,"message":"721","line":176,"column":19,"nodeType":"662","messageId":"722","endLine":201,"endColumn":2},{"ruleId":"649","severity":1,"message":"724","line":212,"column":12,"nodeType":"651","messageId":"652","endLine":212,"endColumn":17},{"ruleId":"649","severity":1,"message":"739","line":214,"column":11,"nodeType":"651","messageId":"652","endLine":214,"endColumn":21},{"ruleId":"711","severity":1,"message":"712","line":323,"column":9,"nodeType":"713","messageId":"714","endLine":524,"endColumn":10},{"ruleId":"726","severity":1,"message":"727","line":342,"column":17,"nodeType":"728","messageId":"729","endLine":342,"endColumn":23},{"ruleId":"726","severity":1,"message":"727","line":377,"column":17,"nodeType":"728","messageId":"729","endLine":377,"endColumn":23},{"ruleId":"683","severity":1,"message":"684","line":403,"column":49,"nodeType":"685","endLine":403,"endColumn":79},{"ruleId":"726","severity":1,"message":"727","line":497,"column":17,"nodeType":"728","messageId":"729","endLine":497,"endColumn":23},{"ruleId":"726","severity":1,"message":"727","line":523,"column":17,"nodeType":"728","messageId":"729","endLine":523,"endColumn":23},{"ruleId":"649","severity":1,"message":"740","line":38,"column":12,"nodeType":"651","messageId":"652","endLine":38,"endColumn":16},{"ruleId":"649","severity":1,"message":"741","line":38,"column":18,"nodeType":"651","messageId":"652","endLine":38,"endColumn":25},{"ruleId":"649","severity":1,"message":"739","line":39,"column":11,"nodeType":"651","messageId":"652","endLine":39,"endColumn":21},{"ruleId":"649","severity":1,"message":"742","line":40,"column":11,"nodeType":"651","messageId":"652","endLine":40,"endColumn":22},{"ruleId":"649","severity":1,"message":"658","line":1,"column":16,"nodeType":"651","messageId":"652","endLine":1,"endColumn":24},{"ruleId":"649","severity":1,"message":"665","line":1,"column":26,"nodeType":"651","messageId":"652","endLine":1,"endColumn":35},{"ruleId":"649","severity":1,"message":"743","line":5,"column":8,"nodeType":"651","messageId":"652","endLine":5,"endColumn":22},{"ruleId":"649","severity":1,"message":"744","line":16,"column":8,"nodeType":"651","messageId":"652","endLine":16,"endColumn":21},{"ruleId":"649","severity":1,"message":"658","line":1,"column":16,"nodeType":"651","messageId":"652","endLine":1,"endColumn":24},{"ruleId":"649","severity":1,"message":"745","line":3,"column":8,"nodeType":"651","messageId":"652","endLine":3,"endColumn":23},{"ruleId":"649","severity":1,"message":"746","line":9,"column":8,"nodeType":"651","messageId":"652","endLine":9,"endColumn":24},{"ruleId":"649","severity":1,"message":"747","line":10,"column":8,"nodeType":"651","messageId":"652","endLine":10,"endColumn":25},{"ruleId":"649","severity":1,"message":"748","line":11,"column":8,"nodeType":"651","messageId":"652","endLine":11,"endColumn":21},{"ruleId":"649","severity":1,"message":"749","line":13,"column":8,"nodeType":"651","messageId":"652","endLine":13,"endColumn":22},{"ruleId":"649","severity":1,"message":"750","line":14,"column":8,"nodeType":"651","messageId":"652","endLine":14,"endColumn":17},{"ruleId":"649","severity":1,"message":"751","line":38,"column":7,"nodeType":"651","messageId":"652","endLine":38,"endColumn":23},{"ruleId":"649","severity":1,"message":"752","line":43,"column":7,"nodeType":"651","messageId":"652","endLine":43,"endColumn":21},{"ruleId":"649","severity":1,"message":"753","line":49,"column":7,"nodeType":"651","messageId":"652","endLine":49,"endColumn":19},{"ruleId":"649","severity":1,"message":"754","line":57,"column":11,"nodeType":"651","messageId":"652","endLine":57,"endColumn":19},{"ruleId":"649","severity":1,"message":"755","line":2,"column":10,"nodeType":"651","messageId":"652","endLine":2,"endColumn":15},{"ruleId":"649","severity":1,"message":"756","line":3,"column":8,"nodeType":"651","messageId":"652","endLine":3,"endColumn":14},{"ruleId":"649","severity":1,"message":"757","line":14,"column":18,"nodeType":"651","messageId":"652","endLine":14,"endColumn":25},{"ruleId":"649","severity":1,"message":"733","line":4,"column":9,"nodeType":"651","messageId":"652","endLine":4,"endColumn":15},{"ruleId":"649","severity":1,"message":"734","line":4,"column":17,"nodeType":"651","messageId":"652","endLine":4,"endColumn":24},{"ruleId":"649","severity":1,"message":"724","line":8,"column":12,"nodeType":"651","messageId":"652","endLine":8,"endColumn":17},{"ruleId":"649","severity":1,"message":"758","line":5,"column":8,"nodeType":"651","messageId":"652","endLine":5,"endColumn":21},{"ruleId":"649","severity":1,"message":"759","line":28,"column":12,"nodeType":"651","messageId":"652","endLine":28,"endColumn":22},{"ruleId":"649","severity":1,"message":"760","line":28,"column":24,"nodeType":"651","messageId":"652","endLine":28,"endColumn":37},{"ruleId":"649","severity":1,"message":"733","line":4,"column":9,"nodeType":"651","messageId":"652","endLine":4,"endColumn":15},{"ruleId":"649","severity":1,"message":"734","line":4,"column":17,"nodeType":"651","messageId":"652","endLine":4,"endColumn":24},{"ruleId":"649","severity":1,"message":"732","line":5,"column":10,"nodeType":"651","messageId":"652","endLine":5,"endColumn":16},{"ruleId":"649","severity":1,"message":"724","line":9,"column":12,"nodeType":"651","messageId":"652","endLine":9,"endColumn":17},{"ruleId":"649","severity":1,"message":"745","line":3,"column":8,"nodeType":"651","messageId":"652","endLine":3,"endColumn":23},{"ruleId":"649","severity":1,"message":"761","line":16,"column":7,"nodeType":"651","messageId":"652","endLine":16,"endColumn":18},{"ruleId":"649","severity":1,"message":"762","line":24,"column":7,"nodeType":"651","messageId":"652","endLine":24,"endColumn":20},{"ruleId":"649","severity":1,"message":"763","line":31,"column":12,"nodeType":"651","messageId":"652","endLine":31,"endColumn":16},{"ruleId":"649","severity":1,"message":"764","line":31,"column":18,"nodeType":"651","messageId":"652","endLine":31,"endColumn":25},{"ruleId":"649","severity":1,"message":"765","line":32,"column":12,"nodeType":"651","messageId":"652","endLine":32,"endColumn":21},{"ruleId":"649","severity":1,"message":"766","line":32,"column":23,"nodeType":"651","messageId":"652","endLine":32,"endColumn":35},{"ruleId":"649","severity":1,"message":"767","line":33,"column":24,"nodeType":"651","messageId":"652","endLine":33,"endColumn":37},{"ruleId":"649","severity":1,"message":"768","line":34,"column":12,"nodeType":"651","messageId":"652","endLine":34,"endColumn":26},{"ruleId":"649","severity":1,"message":"769","line":34,"column":28,"nodeType":"651","messageId":"652","endLine":34,"endColumn":45},{"ruleId":"649","severity":1,"message":"770","line":60,"column":11,"nodeType":"651","messageId":"652","endLine":60,"endColumn":29},{"ruleId":"649","severity":1,"message":"771","line":80,"column":11,"nodeType":"651","messageId":"652","endLine":80,"endColumn":25},{"ruleId":"711","severity":1,"message":"712","line":81,"column":9,"nodeType":"713","messageId":"714","endLine":100,"endColumn":10},{"ruleId":"649","severity":1,"message":"772","line":103,"column":11,"nodeType":"651","messageId":"652","endLine":103,"endColumn":32},{"ruleId":"649","severity":1,"message":"773","line":4,"column":20,"nodeType":"651","messageId":"652","endLine":4,"endColumn":29},{"ruleId":"649","severity":1,"message":"774","line":16,"column":13,"nodeType":"651","messageId":"652","endLine":16,"endColumn":18},{"ruleId":"649","severity":1,"message":"667","line":3,"column":9,"nodeType":"651","messageId":"652","endLine":3,"endColumn":13},{"ruleId":"655","severity":1,"message":"775","line":14,"column":5,"nodeType":"651","endLine":14,"endColumn":14,"suggestions":"776"},{"ruleId":"777","severity":1,"message":"778","line":255,"column":9,"nodeType":"779","messageId":"710","endLine":255,"endColumn":24},{"ruleId":"777","severity":1,"message":"780","line":481,"column":9,"nodeType":"779","messageId":"710","endLine":481,"endColumn":13},{"ruleId":"649","severity":1,"message":"658","line":1,"column":16,"nodeType":"651","messageId":"652","endLine":1,"endColumn":24},{"ruleId":"649","severity":1,"message":"781","line":2,"column":8,"nodeType":"651","messageId":"652","endLine":2,"endColumn":19},{"ruleId":"649","severity":1,"message":"782","line":10,"column":8,"nodeType":"651","messageId":"652","endLine":10,"endColumn":18},{"ruleId":"649","severity":1,"message":"724","line":37,"column":12,"nodeType":"651","messageId":"652","endLine":37,"endColumn":17},{"ruleId":"711","severity":1,"message":"712","line":53,"column":9,"nodeType":"713","messageId":"714","endLine":192,"endColumn":10},{"ruleId":"649","severity":1,"message":"658","line":1,"column":28,"nodeType":"651","messageId":"652","endLine":1,"endColumn":36},{"ruleId":"649","severity":1,"message":"783","line":2,"column":8,"nodeType":"651","messageId":"652","endLine":2,"endColumn":14},{"ruleId":"649","severity":1,"message":"724","line":9,"column":12,"nodeType":"651","messageId":"652","endLine":9,"endColumn":17},{"ruleId":"649","severity":1,"message":"725","line":9,"column":19,"nodeType":"651","messageId":"652","endLine":9,"endColumn":25},{"ruleId":"649","severity":1,"message":"658","line":1,"column":28,"nodeType":"651","messageId":"652","endLine":1,"endColumn":36},{"ruleId":"649","severity":1,"message":"783","line":2,"column":8,"nodeType":"651","messageId":"652","endLine":2,"endColumn":14},{"ruleId":"649","severity":1,"message":"725","line":9,"column":19,"nodeType":"651","messageId":"652","endLine":9,"endColumn":25},{"ruleId":"649","severity":1,"message":"665","line":1,"column":29,"nodeType":"651","messageId":"652","endLine":1,"endColumn":38},{"ruleId":"649","severity":1,"message":"783","line":2,"column":8,"nodeType":"651","messageId":"652","endLine":2,"endColumn":14},{"ruleId":"649","severity":1,"message":"784","line":12,"column":8,"nodeType":"651","messageId":"652","endLine":12,"endColumn":15},{"ruleId":"649","severity":1,"message":"785","line":13,"column":9,"nodeType":"651","messageId":"652","endLine":13,"endColumn":17},{"ruleId":"649","severity":1,"message":"786","line":21,"column":12,"nodeType":"651","messageId":"652","endLine":21,"endColumn":21},{"ruleId":"649","severity":1,"message":"787","line":22,"column":12,"nodeType":"651","messageId":"652","endLine":22,"endColumn":21},{"ruleId":"649","severity":1,"message":"788","line":22,"column":23,"nodeType":"651","messageId":"652","endLine":22,"endColumn":35},{"ruleId":"649","severity":1,"message":"789","line":23,"column":12,"nodeType":"651","messageId":"652","endLine":23,"endColumn":17},{"ruleId":"649","severity":1,"message":"790","line":23,"column":19,"nodeType":"651","messageId":"652","endLine":23,"endColumn":27},{"ruleId":"649","severity":1,"message":"791","line":24,"column":22,"nodeType":"651","messageId":"652","endLine":24,"endColumn":33},{"ruleId":"649","severity":1,"message":"694","line":27,"column":11,"nodeType":"651","messageId":"652","endLine":27,"endColumn":13},{"ruleId":"649","severity":1,"message":"792","line":42,"column":11,"nodeType":"651","messageId":"652","endLine":42,"endColumn":27},{"ruleId":"649","severity":1,"message":"793","line":48,"column":11,"nodeType":"651","messageId":"652","endLine":48,"endColumn":24},{"ruleId":"794","severity":1,"message":"795","line":65,"column":13,"nodeType":"685","endLine":65,"endColumn":110},{"ruleId":"683","severity":1,"message":"684","line":117,"column":17,"nodeType":"685","endLine":117,"endColumn":209},{"ruleId":"683","severity":1,"message":"684","line":119,"column":17,"nodeType":"685","endLine":119,"endColumn":220},{"ruleId":"683","severity":1,"message":"684","line":132,"column":82,"nodeType":"685","endLine":132,"endColumn":111},{"ruleId":"683","severity":1,"message":"684","line":134,"column":75,"nodeType":"685","endLine":134,"endColumn":103},{"ruleId":"649","severity":1,"message":"658","line":1,"column":28,"nodeType":"651","messageId":"652","endLine":1,"endColumn":36},{"ruleId":"649","severity":1,"message":"783","line":2,"column":8,"nodeType":"651","messageId":"652","endLine":2,"endColumn":14},{"ruleId":"649","severity":1,"message":"724","line":10,"column":12,"nodeType":"651","messageId":"652","endLine":10,"endColumn":17},{"ruleId":"649","severity":1,"message":"725","line":10,"column":19,"nodeType":"651","messageId":"652","endLine":10,"endColumn":25},{"ruleId":"683","severity":1,"message":"684","line":18,"column":41,"nodeType":"685","endLine":18,"endColumn":93},{"ruleId":"649","severity":1,"message":"665","line":1,"column":29,"nodeType":"651","messageId":"652","endLine":1,"endColumn":38},{"ruleId":"649","severity":1,"message":"789","line":19,"column":12,"nodeType":"651","messageId":"652","endLine":19,"endColumn":17},{"ruleId":"649","severity":1,"message":"790","line":19,"column":19,"nodeType":"651","messageId":"652","endLine":19,"endColumn":27},{"ruleId":"649","severity":1,"message":"791","line":20,"column":22,"nodeType":"651","messageId":"652","endLine":20,"endColumn":33},{"ruleId":"649","severity":1,"message":"694","line":23,"column":11,"nodeType":"651","messageId":"652","endLine":23,"endColumn":13},{"ruleId":"649","severity":1,"message":"792","line":31,"column":11,"nodeType":"651","messageId":"652","endLine":31,"endColumn":27},{"ruleId":"683","severity":1,"message":"684","line":80,"column":21,"nodeType":"685","endLine":80,"endColumn":130},{"ruleId":"683","severity":1,"message":"684","line":82,"column":21,"nodeType":"685","endLine":82,"endColumn":142},{"ruleId":"683","severity":1,"message":"684","line":93,"column":82,"nodeType":"685","endLine":93,"endColumn":111},{"ruleId":"683","severity":1,"message":"684","line":95,"column":75,"nodeType":"685","endLine":95,"endColumn":103},{"ruleId":"711","severity":1,"message":"712","line":29,"column":9,"nodeType":"713","messageId":"714","endLine":112,"endColumn":10},{"ruleId":"649","severity":1,"message":"658","line":1,"column":16,"nodeType":"651","messageId":"652","endLine":1,"endColumn":24},{"ruleId":"649","severity":1,"message":"725","line":7,"column":19,"nodeType":"651","messageId":"652","endLine":7,"endColumn":25},{"ruleId":"649","severity":1,"message":"658","line":1,"column":16,"nodeType":"651","messageId":"652","endLine":1,"endColumn":24},{"ruleId":"649","severity":1,"message":"796","line":4,"column":8,"nodeType":"651","messageId":"652","endLine":4,"endColumn":22},{"ruleId":"649","severity":1,"message":"797","line":8,"column":8,"nodeType":"651","messageId":"652","endLine":8,"endColumn":19},{"ruleId":"649","severity":1,"message":"747","line":9,"column":8,"nodeType":"651","messageId":"652","endLine":9,"endColumn":25},{"ruleId":"649","severity":1,"message":"798","line":10,"column":8,"nodeType":"651","messageId":"652","endLine":10,"endColumn":20},{"ruleId":"649","severity":1,"message":"799","line":11,"column":8,"nodeType":"651","messageId":"652","endLine":11,"endColumn":21},{"ruleId":"649","severity":1,"message":"800","line":12,"column":8,"nodeType":"651","messageId":"652","endLine":12,"endColumn":23},{"ruleId":"649","severity":1,"message":"801","line":13,"column":8,"nodeType":"651","messageId":"652","endLine":13,"endColumn":22},{"ruleId":"649","severity":1,"message":"802","line":17,"column":10,"nodeType":"651","messageId":"652","endLine":17,"endColumn":21},{"ruleId":"649","severity":1,"message":"803","line":17,"column":23,"nodeType":"651","messageId":"652","endLine":17,"endColumn":31},{"ruleId":"649","severity":1,"message":"804","line":17,"column":33,"nodeType":"651","messageId":"652","endLine":17,"endColumn":43},{"ruleId":"649","severity":1,"message":"658","line":1,"column":16,"nodeType":"651","messageId":"652","endLine":1,"endColumn":24},{"ruleId":"649","severity":1,"message":"658","line":1,"column":16,"nodeType":"651","messageId":"652","endLine":1,"endColumn":24},{"ruleId":"649","severity":1,"message":"805","line":46,"column":7,"nodeType":"651","messageId":"652","endLine":46,"endColumn":23},{"ruleId":"649","severity":1,"message":"806","line":82,"column":13,"nodeType":"651","messageId":"652","endLine":82,"endColumn":24},{"ruleId":"711","severity":1,"message":"712","line":105,"column":9,"nodeType":"713","messageId":"714","endLine":144,"endColumn":10},{"ruleId":"707","severity":1,"message":"708","line":185,"column":47,"nodeType":"709","messageId":"710","endLine":185,"endColumn":49},{"ruleId":"711","severity":1,"message":"712","line":242,"column":9,"nodeType":"713","messageId":"714","endLine":262,"endColumn":10},{"ruleId":"649","severity":1,"message":"806","line":324,"column":13,"nodeType":"651","messageId":"652","endLine":324,"endColumn":24},{"ruleId":"649","severity":1,"message":"807","line":3,"column":10,"nodeType":"651","messageId":"652","endLine":3,"endColumn":18},{"ruleId":"649","severity":1,"message":"808","line":4,"column":10,"nodeType":"651","messageId":"652","endLine":4,"endColumn":24},{"ruleId":"649","severity":1,"message":"724","line":8,"column":12,"nodeType":"651","messageId":"652","endLine":8,"endColumn":17},{"ruleId":"649","severity":1,"message":"725","line":8,"column":19,"nodeType":"651","messageId":"652","endLine":8,"endColumn":25},{"ruleId":"649","severity":1,"message":"809","line":2,"column":8,"nodeType":"651","messageId":"652","endLine":2,"endColumn":16},{"ruleId":"649","severity":1,"message":"810","line":2,"column":9,"nodeType":"651","messageId":"652","endLine":2,"endColumn":18},{"ruleId":"649","severity":1,"message":"811","line":4,"column":10,"nodeType":"651","messageId":"652","endLine":4,"endColumn":15},{"ruleId":"649","severity":1,"message":"725","line":9,"column":19,"nodeType":"651","messageId":"652","endLine":9,"endColumn":25},{"ruleId":"649","severity":1,"message":"812","line":7,"column":8,"nodeType":"651","messageId":"652","endLine":7,"endColumn":18},{"ruleId":"649","severity":1,"message":"813","line":2,"column":10,"nodeType":"651","messageId":"652","endLine":2,"endColumn":16},{"ruleId":"649","severity":1,"message":"756","line":3,"column":8,"nodeType":"651","messageId":"652","endLine":3,"endColumn":14},{"ruleId":"649","severity":1,"message":"783","line":2,"column":8,"nodeType":"651","messageId":"652","endLine":2,"endColumn":14},{"ruleId":"683","severity":1,"message":"684","line":25,"column":69,"nodeType":"685","endLine":25,"endColumn":120},{"ruleId":"649","severity":1,"message":"658","line":1,"column":16,"nodeType":"651","messageId":"652","endLine":1,"endColumn":24},{"ruleId":"649","severity":1,"message":"783","line":2,"column":8,"nodeType":"651","messageId":"652","endLine":2,"endColumn":14},{"ruleId":"649","severity":1,"message":"814","line":4,"column":25,"nodeType":"651","messageId":"652","endLine":4,"endColumn":39},{"ruleId":"649","severity":1,"message":"674","line":8,"column":7,"nodeType":"651","messageId":"652","endLine":8,"endColumn":12},{"ruleId":"649","severity":1,"message":"665","line":1,"column":26,"nodeType":"651","messageId":"652","endLine":1,"endColumn":35},{"ruleId":"649","severity":1,"message":"815","line":20,"column":7,"nodeType":"651","messageId":"652","endLine":20,"endColumn":26},{"ruleId":"649","severity":1,"message":"816","line":1,"column":16,"nodeType":"651","messageId":"652","endLine":1,"endColumn":22},{"ruleId":"817","severity":1,"message":"818","line":17,"column":70,"nodeType":"709","messageId":"819","endLine":17,"endColumn":71},{"ruleId":"683","severity":1,"message":"684","line":7,"column":13,"nodeType":"685","endLine":7,"endColumn":43},{"ruleId":"649","severity":1,"message":"820","line":10,"column":10,"nodeType":"651","messageId":"652","endLine":10,"endColumn":14},{"ruleId":"683","severity":1,"message":"684","line":53,"column":13,"nodeType":"685","endLine":53,"endColumn":86},{"ruleId":"683","severity":1,"message":"684","line":54,"column":13,"nodeType":"685","endLine":54,"endColumn":86},{"ruleId":"683","severity":1,"message":"684","line":55,"column":13,"nodeType":"685","endLine":55,"endColumn":86},"no-native-reassign",["821"],"no-negated-in-lhs",["822"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'NavBarV2' is defined but never used.","'setUserObj' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setInit'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["823"],"'useState' is defined but never used.","'MakePage' is defined but never used.","'userData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'setUserData' and 'userObj'. Either include them or remove the dependency array.","ArrayExpression",["824"],"'initializeApp' is defined but never used.","'useEffect' is defined but never used.","'createContext' is defined but never used.","'Link' is defined but never used.","'EditSetting' is defined but never used.","'useParams' is defined but never used.","'ReactGa' is defined but never used.","'EditNaviSection' is defined but never used.","'EditFooterSection' is defined but never used.","'EditContents' is defined but never used.","'label' is assigned a value but never used.","'rate' is assigned a value but never used.","'isWidget' is assigned a value but never used.","'setIsWidget' is assigned a value but never used.","'setPassword' is assigned a value but never used.","'load' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'contents', 'foot', 'location.pathname', 'location.state', 'navi', and 'setting'. Either include them or remove the dependency array.",["825"],"'attachmentRef' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'AccessAlarmsIcon' is defined but never used.","'Icons' is defined but never used.","'sendData' is assigned a value but never used.","'authService' is defined but never used.","'Tag' is defined but never used.","'Space' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'id' is assigned a value but never used.","'setId' is assigned a value but never used.","'password' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getThisUserDatas'. Either include it or remove the dependency array.",["826"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'setCnums' is assigned a value but never used.","'setUserData' is assigned a value but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'StyledModal' is assigned a value but never used.","'Backdrop' is assigned a value but never used.","'StyledModal2' is assigned a value but never used.","'Backdrop2' is assigned a value but never used.","'style2' is assigned a value but never used.","no-sparse-arrays","Unexpected comma in middle of array.","unexpectedSparseArray","'tmodalOpen' is assigned a value but never used.","'state' is assigned a value but never used.","'action' is assigned a value but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'name' is assigned a value but never used.","'animations' is defined but never used.","'motion' is defined but never used.","'Delete' is defined but never used.","'Options' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'handleOpen' is assigned a value but never used.","'cnum' is assigned a value but never used.","'setCnum' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'EditCtaSection' is defined but never used.","'AddingSection' is defined but never used.","'EditButtonTable' is defined but never used.","'ResponsiveCustom' is defined but never used.","'CheckBoxContainer' is defined but never used.","'ElementsTable' is defined but never used.","'TextSizeCustom' is defined but never used.","'BoxCustom' is defined but never used.","'iconColorOptions' is assigned a value but never used.","'paddingOptions' is assigned a value but never used.","'alignOptions' is assigned a value but never used.","'elements' is assigned a value but never used.","'Input' is defined but never used.","'Switch' is defined but never used.","'setOpen' is assigned a value but never used.","'ConfirmCustom' is defined but never used.","'deleteopen' is assigned a value but never used.","'setDeleteOpen' is assigned a value but never used.","'logoOptions' is assigned a value but never used.","'buttonOptions' is assigned a value but never used.","'logo' is assigned a value but never used.","'setLogo' is assigned a value but never used.","'buttonUse' is assigned a value but never used.","'setButtonUse' is assigned a value but never used.","'setButtonFunc' is assigned a value but never used.","'buttonTemplate' is assigned a value but never used.","'setButtonTemplate' is assigned a value but never used.","'changeNaviTemplate' is assigned a value but never used.","'returnFuncEdit' is assigned a value but never used.","'returnButtonTemplates' is assigned a value but never used.","'stService' is defined but never used.","'dbgal' is assigned a value but never used.","React Hook useEffect contains a call to 'setBack'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [scrollPosition] as a second argument to the useEffect Hook.",["827"],"no-dupe-keys","Duplicate key 'backgroundImage'.","ObjectExpression","Duplicate key 'text'.","'RadioCustom' is defined but never used.","'EditTopBar' is defined but never used.","'Editor' is defined but never used.","'Popover' is defined but never used.","'ImageAdd' is defined but never used.","'imageShow' is assigned a value but never used.","'videoShow' is assigned a value but never used.","'setVideoShow' is assigned a value but never used.","'align' is assigned a value but never used.","'setAlign' is assigned a value but never used.","'setAnchorEl' is assigned a value but never used.","'changeButtonText' is assigned a value but never used.","'onChangeImage' is assigned a value but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","'TemplateChoose' is defined but never used.","'OnOffCustom' is defined but never used.","'ImageAddEdit' is defined but never used.","'AddContentImg' is defined but never used.","'AddContentVideo' is defined but never used.","'AddYoutubeLink' is defined but never used.","'AlignCenter' is defined but never used.","'AlignEnd' is defined but never used.","'AlignStart' is defined but never used.","'animationOptions' is assigned a value but never used.","'newContents' is assigned a value but never used.","'Template' is defined but never used.","'DesignServices' is defined but never used.","'Checkbox' is defined but never used.","'Link45deg' is defined but never used.","'Alpha' is defined but never used.","'Typography' is defined but never used.","'styled' is defined but never used.","'FacebookSquare' is defined but never used.","'editorConfiguration' is assigned a value but never used.","'useRef' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'base' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"828","fix":"829"},{"desc":"830","fix":"831"},{"desc":"832","fix":"833"},{"desc":"834","fix":"835"},{"desc":"836","fix":"837"},"Add dependencies array: []",{"range":"838","text":"839"},"Update the dependencies array to be: [setUserData, userObj]",{"range":"840","text":"841"},"Update the dependencies array to be: [contents, foot, location.pathname, location.state, navi, setting]",{"range":"842","text":"843"},"Update the dependencies array to be: [getThisUserDatas, loading]",{"range":"844","text":"845"},"Add dependencies array: [scrollPosition]",{"range":"846","text":"847"},[896,896],", []",[1208,1210],"[setUserData, userObj]",[5059,5061],"[contents, foot, location.pathname, location.state, navi, setting]",[1619,1628],"[getThisUserDatas, loading]",[583,583],", [scrollPosition]"]
=======
[{"/Users/oyejin/Surfee/kiwi/src/index.js":"1","/Users/oyejin/Surfee/kiwi/src/reportWebVitals.js":"2","/Users/oyejin/Surfee/kiwi/src/App.js":"3","/Users/oyejin/Surfee/kiwi/src/Router.js":"4","/Users/oyejin/Surfee/kiwi/src/tools/fbase.js":"5","/Users/oyejin/Surfee/kiwi/src/pages/NavAndFooter/NavBarV2.js":"6","/Users/oyejin/Surfee/kiwi/src/pages/Landing/MainPageV2.js":"7","/Users/oyejin/Surfee/kiwi/src/pages/UserLanding/UserLandingPage.js":"8","/Users/oyejin/Surfee/kiwi/src/pages/Landing/old/MainPage.js":"9","/Users/oyejin/Surfee/kiwi/src/pages/Customer/CustomerPage.js":"10","/Users/oyejin/Surfee/kiwi/src/pages/Response/ResponsePage.js":"11","/Users/oyejin/Surfee/kiwi/src/pages/Make/old/MakePage.js":"12","/Users/oyejin/Surfee/kiwi/src/pages/Questions/FQ.js":"13","/Users/oyejin/Surfee/kiwi/src/pages/Login/Register/RegisterPage.js":"14","/Users/oyejin/Surfee/kiwi/src/pages/Login/Login/LoginPage.js":"15","/Users/oyejin/Surfee/kiwi/src/components/Make/utils/SubmitPage.js":"16","/Users/oyejin/Surfee/kiwi/src/pages/Make/MakePageV2.js":"17","/Users/oyejin/Surfee/kiwi/src/pages/NavAndFooter/Footer.js":"18","/Users/oyejin/Surfee/kiwi/src/components/Response/MadeLandingCard.js":"19","/Users/oyejin/Surfee/kiwi/src/components/Make/tools/Icons.js":"20","/Users/oyejin/Surfee/kiwi/src/pages/NavAndFooter/NavBar/NavBar.js":"21","/Users/oyejin/Surfee/kiwi/src/components/Customer/QnA.js":"22","/Users/oyejin/Surfee/kiwi/src/components/Customer/Term.js":"23","/Users/oyejin/Surfee/kiwi/src/components/Customer/PersonalInformation.js":"24","/Users/oyejin/Surfee/kiwi/src/components/Make/NewSection.js":"25","/Users/oyejin/Surfee/kiwi/src/components/Make/Modal/LoadingModal.js":"26","/Users/oyejin/Surfee/kiwi/src/pages/Questions/FirstQuestions.js":"27","/Users/oyejin/Surfee/kiwi/src/tools/ConfirmCustom.js":"28","/Users/oyejin/Surfee/kiwi/src/components/Make/Edit/NavFooterSetting/EditFooterSection.js":"29","/Users/oyejin/Surfee/kiwi/src/components/Make/Footer/MakeFooterV2.js":"30","/Users/oyejin/Surfee/kiwi/src/components/Make/Edit/NavFooterSetting/EditNaviSection.js":"31","/Users/oyejin/Surfee/kiwi/src/components/Make/NavBar/MakeNavigationV2.js":"32","/Users/oyejin/Surfee/kiwi/src/components/Make/Edit/NavFooterSetting/EditSetting.js":"33","/Users/oyejin/Surfee/kiwi/src/components/Make/Edit/NewSectionMake.js":"34","/Users/oyejin/Surfee/kiwi/src/components/Make/Edit/NavFooterSetting/EditContents.js":"35","/Users/oyejin/Surfee/kiwi/src/pages/Make/NavBarInMakePage/NavBarInMakePage.js":"36","/Users/oyejin/Surfee/kiwi/src/components/Make/SectionTypes/baseTypes.js":"37","/Users/oyejin/Surfee/kiwi/src/components/Make/SectionTypes/DetailSection.js":"38","/Users/oyejin/Surfee/kiwi/src/components/Make/SectionTypes/HeroSection.js":"39","/Users/oyejin/Surfee/kiwi/src/components/Make/SectionTypes/FeaturesSection.js":"40","/Users/oyejin/Surfee/kiwi/src/components/Make/SectionTypes/PriceSection.js":"41","/Users/oyejin/Surfee/kiwi/src/components/Make/tools/animations.js":"42","/Users/oyejin/Surfee/kiwi/src/components/Make/SectionTypes/CtaSection.js":"43","/Users/oyejin/Surfee/kiwi/src/components/Make/SectionTypes/ReviewSection.js":"44","/Users/oyejin/Surfee/kiwi/src/components/Make/SectionTypes/HorizontalSection.js":"45","/Users/oyejin/Surfee/kiwi/src/components/Make/Footer/FTemplate.js":"46","/Users/oyejin/Surfee/kiwi/src/components/Make/Edit/AddingSection.js":"47","/Users/oyejin/Surfee/kiwi/src/components/Make/Modal/AddingSection.js":"48","/Users/oyejin/Surfee/kiwi/src/components/Make/Edit/tools/EditButtonTable.js":"49","/Users/oyejin/Surfee/kiwi/src/components/Make/Edit/tools/TextSizeCustom.js":"50","/Users/oyejin/Surfee/kiwi/src/components/Make/Edit/tools/ResponsiveCustom.js":"51","/Users/oyejin/Surfee/kiwi/src/components/Make/Modal/CheckModal.js":"52","/Users/oyejin/Surfee/kiwi/src/components/Make/Edit/EditTemplates/EditCtaSection.js":"53","/Users/oyejin/Surfee/kiwi/src/components/Make/Edit/EditTemplates/EditReviewSection.js":"54","/Users/oyejin/Surfee/kiwi/src/components/Make/Edit/EditTemplates/EditDetailSection.js":"55","/Users/oyejin/Surfee/kiwi/src/components/Make/Edit/EditTemplates/EditFeaturesSection.js":"56","/Users/oyejin/Surfee/kiwi/src/components/Make/Edit/EditTemplates/EditHeroSection.js":"57","/Users/oyejin/Surfee/kiwi/src/components/Make/NavBar/NaviTemplate.js":"58","/Users/oyejin/Surfee/kiwi/src/components/Make/Edit/tools/EditTopBar.js":"59","/Users/oyejin/Surfee/kiwi/src/components/Make/Edit/tools/RadioCustom.js":"60","/Users/oyejin/Surfee/kiwi/src/components/Make/Edit/tools/ColorCustom.js":"61","/Users/oyejin/Surfee/kiwi/src/components/Make/Edit/tools/OpenCloseCustom.js":"62","/Users/oyejin/Surfee/kiwi/src/components/Make/Edit/tools/InputCustom.js":"63","/Users/oyejin/Surfee/kiwi/src/components/Make/Edit/tools/OnOffCustom.js":"64","/Users/oyejin/Surfee/kiwi/src/components/Make/Edit/tools/EditSlider.js":"65","/Users/oyejin/Surfee/kiwi/src/components/Make/Edit/tools/ElementsTable.js":"66","/Users/oyejin/Surfee/kiwi/src/components/Make/Edit/tools/SelectCustom.js":"67","/Users/oyejin/Surfee/kiwi/src/components/Make/Edit/tools/CheckBoxContainer.js":"68","/Users/oyejin/Surfee/kiwi/src/components/Make/Edit/tools/AnimationCustom.js":"69","/Users/oyejin/Surfee/kiwi/src/components/Make/tools/Editor.js":"70","/Users/oyejin/Surfee/kiwi/src/components/Make/Edit/EditTemplates/InnerTemplates.js":"71","/Users/oyejin/Surfee/kiwi/src/components/Make/Edit/tools/TemplateChoose.js":"72","/Users/oyejin/Surfee/kiwi/src/components/Make/Edit/tools/AddContentVideo.js":"73","/Users/oyejin/Surfee/kiwi/src/components/Make/Edit/tools/AddYoutubeLink.js":"74","/Users/oyejin/Surfee/kiwi/src/components/Make/Edit/tools/AddContentImg.js":"75","/Users/oyejin/Surfee/kiwi/src/components/Make/Edit/tools/ImageAddEdit.js":"76","/Users/oyejin/Surfee/kiwi/src/components/Make/tools/Icon.js":"77","/Users/oyejin/Surfee/kiwi/src/components/Make/Edit/tools/ImageCarousel.js":"78","/Users/oyejin/Surfee/kiwi/src/components/Make/Edit/tools/BoxCustom.js":"79","/Users/oyejin/Surfee/kiwi/src/components/Make/Edit/EditTemplates/DesignHero.js":"80","/Users/oyejin/Surfee/kiwi/src/components/Make/Edit/tools/AddSlideImg.js":"81"},{"size":566,"mtime":1643195163993,"results":"82","hashOfConfig":"83"},{"size":362,"mtime":1643103427887,"results":"84","hashOfConfig":"83"},{"size":1169,"mtime":1643195163988,"results":"85","hashOfConfig":"83"},{"size":3570,"mtime":1643103427850,"results":"86","hashOfConfig":"83"},{"size":1279,"mtime":1643103427889,"results":"87","hashOfConfig":"83"},{"size":2204,"mtime":1643103427885,"results":"88","hashOfConfig":"83"},{"size":12665,"mtime":1643103427878,"results":"89","hashOfConfig":"83"},{"size":8346,"mtime":1643194448353,"results":"90","hashOfConfig":"83"},{"size":7502,"mtime":1643103427878,"results":"91","hashOfConfig":"83"},{"size":3350,"mtime":1643103427877,"results":"92","hashOfConfig":"83"},{"size":6954,"mtime":1643103427887,"results":"93","hashOfConfig":"83"},{"size":52972,"mtime":1643194448352,"results":"94","hashOfConfig":"83"},{"size":22550,"mtime":1643103427886,"results":"95","hashOfConfig":"83"},{"size":6838,"mtime":1643103427879,"results":"96","hashOfConfig":"83"},{"size":5645,"mtime":1643103427879,"results":"97","hashOfConfig":"83"},{"size":1696,"mtime":1643103427872,"results":"98","hashOfConfig":"83"},{"size":12683,"mtime":1643937849278,"results":"99","hashOfConfig":"83"},{"size":1402,"mtime":1643103427884,"results":"100","hashOfConfig":"83"},{"size":1789,"mtime":1643103427875,"results":"101","hashOfConfig":"83"},{"size":778,"mtime":1643103427872,"results":"102","hashOfConfig":"83"},{"size":1256,"mtime":1643103427885,"results":"103","hashOfConfig":"83"},{"size":2448,"mtime":1643103427850,"results":"104","hashOfConfig":"83"},{"size":8636,"mtime":1643103427850,"results":"105","hashOfConfig":"83"},{"size":8149,"mtime":1643103427850,"results":"106","hashOfConfig":"83"},{"size":3903,"mtime":1643933403317,"results":"107","hashOfConfig":"83"},{"size":1277,"mtime":1643103427864,"results":"108","hashOfConfig":"83"},{"size":22285,"mtime":1643103427886,"results":"109","hashOfConfig":"83"},{"size":1920,"mtime":1643103427887,"results":"110","hashOfConfig":"83"},{"size":7659,"mtime":1643194448335,"results":"111","hashOfConfig":"83"},{"size":1090,"mtime":1643194448341,"results":"112","hashOfConfig":"83"},{"size":8569,"mtime":1643956837959,"results":"113","hashOfConfig":"83"},{"size":1235,"mtime":1643937849275,"results":"114","hashOfConfig":"83"},{"size":11346,"mtime":1643937849267,"results":"115","hashOfConfig":"83"},{"size":5719,"mtime":1643937849267,"results":"116","hashOfConfig":"83"},{"size":10873,"mtime":1643937849265,"results":"117","hashOfConfig":"83"},{"size":6391,"mtime":1643937849279,"results":"118","hashOfConfig":"83"},{"size":7849,"mtime":1643971614787,"results":"119","hashOfConfig":"83"},{"size":5429,"mtime":1643382529605,"results":"120","hashOfConfig":"83"},{"size":8607,"mtime":1643971270714,"results":"121","hashOfConfig":"83"},{"size":1430,"mtime":1643382529606,"results":"122","hashOfConfig":"83"},{"size":630,"mtime":1643382529607,"results":"123","hashOfConfig":"83"},{"size":467,"mtime":1643103427872,"results":"124","hashOfConfig":"83"},{"size":1414,"mtime":1643382529605,"results":"125","hashOfConfig":"83"},{"size":1648,"mtime":1643382529608,"results":"126","hashOfConfig":"83"},{"size":2633,"mtime":1643382529607,"results":"127","hashOfConfig":"83"},{"size":2739,"mtime":1643194448341,"results":"128","hashOfConfig":"83"},{"size":6087,"mtime":1643103427852,"results":"129","hashOfConfig":"83"},{"size":2752,"mtime":1643194448343,"results":"130","hashOfConfig":"83"},{"size":1509,"mtime":1643103427859,"results":"131","hashOfConfig":"83"},{"size":2194,"mtime":1643328392824,"results":"132","hashOfConfig":"83"},{"size":559,"mtime":1643328392824,"results":"133","hashOfConfig":"83"},{"size":4218,"mtime":1643103427863,"results":"134","hashOfConfig":"83"},{"size":1131,"mtime":1643103427852,"results":"135","hashOfConfig":"83"},{"size":3269,"mtime":1643103427854,"results":"136","hashOfConfig":"83"},{"size":1853,"mtime":1643382529599,"results":"137","hashOfConfig":"83"},{"size":1159,"mtime":1643103427853,"results":"138","hashOfConfig":"83"},{"size":16103,"mtime":1643971597594,"results":"139","hashOfConfig":"83"},{"size":1220,"mtime":1643938408979,"results":"140","hashOfConfig":"83"},{"size":829,"mtime":1643937849269,"results":"141","hashOfConfig":"83"},{"size":3060,"mtime":1643952546265,"results":"142","hashOfConfig":"83"},{"size":4363,"mtime":1643937849268,"results":"143","hashOfConfig":"83"},{"size":3255,"mtime":1643955641432,"results":"144","hashOfConfig":"83"},{"size":513,"mtime":1643937849270,"results":"145","hashOfConfig":"83"},{"size":989,"mtime":1643954719351,"results":"146","hashOfConfig":"83"},{"size":832,"mtime":1643959843581,"results":"147","hashOfConfig":"83"},{"size":928,"mtime":1643937849270,"results":"148","hashOfConfig":"83"},{"size":2028,"mtime":1643937849273,"results":"149","hashOfConfig":"83"},{"size":1214,"mtime":1643937849268,"results":"150","hashOfConfig":"83"},{"size":1802,"mtime":1643937849268,"results":"151","hashOfConfig":"83"},{"size":6843,"mtime":1643194448349,"results":"152","hashOfConfig":"83"},{"size":1161,"mtime":1643103427854,"results":"153","hashOfConfig":"83"},{"size":1332,"mtime":1643103427862,"results":"154","hashOfConfig":"83"},{"size":1108,"mtime":1643960296032,"results":"155","hashOfConfig":"83"},{"size":1581,"mtime":1643964040423,"results":"156","hashOfConfig":"83"},{"size":1426,"mtime":1643951964262,"results":"157","hashOfConfig":"83"},{"size":269,"mtime":1643195163990,"results":"158","hashOfConfig":"83"},{"size":364,"mtime":1643103427871,"results":"159","hashOfConfig":"83"},{"size":2418,"mtime":1643963601788,"results":"160","hashOfConfig":"83"},{"size":255,"mtime":1643937849268,"results":"161","hashOfConfig":"83"},{"size":8562,"mtime":1643949276305,"results":"162","hashOfConfig":"83"},{"size":977,"mtime":1643961295507,"results":"163","hashOfConfig":"83"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},"6t725d",{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"166"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"166"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"166"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"166"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"166"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"166"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"166"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"166"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"166"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"166"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"166"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"166"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"166"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"166"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"166"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"166"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"166"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"166"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"166"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"166"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"166"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"166"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"166"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"166"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"259","usedDeprecatedRules":"166"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"166"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"265","messages":"266","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"166"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"270","messages":"271","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"166"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"166"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"166"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"166"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"166"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"166"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"166"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"295","usedDeprecatedRules":"166"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"302","messages":"303","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"304","usedDeprecatedRules":"166"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"166"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"166"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"166"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"318","messages":"319","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"320","usedDeprecatedRules":"166"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"166"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328","usedDeprecatedRules":"166"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"331","usedDeprecatedRules":"166"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"334","usedDeprecatedRules":"166"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"337","usedDeprecatedRules":"166"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"344","usedDeprecatedRules":"166"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"351","usedDeprecatedRules":"166"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"360","usedDeprecatedRules":"166"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"365","usedDeprecatedRules":"166"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"370","usedDeprecatedRules":"166"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"375","usedDeprecatedRules":"166"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"166"},"/Users/oyejin/Surfee/kiwi/src/index.js",[],["378","379"],"/Users/oyejin/Surfee/kiwi/src/reportWebVitals.js",[],"/Users/oyejin/Surfee/kiwi/src/App.js",["380","381","382","383"],"import logo from './logo.svg';\nimport React, {useState, useEffect} from 'react';\nimport './App.css';\nimport AppRouter from './Router';\nimport NavBarV2 from './pages/NavAndFooter/NavBarV2';\nimport { authService } from './tools/fbase'\nimport {RecoilRoot} from 'recoil';\n\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    // 유저가 제작한 랜딩페이지에 들어가는 사람들까지 로그인 검사를 하면 속도가 느려지니까\n    if(window.location.host.split(\".\")[0] === \"surfee\" || window.location.host.split(\".\")[0] === \"localhost:3000\"){\n      authService.onAuthStateChanged((user) => {\n        if(user){\n          setIsLoggedIn(true)\n          // setUserObj(user.multiFactor.user);\n        }else{\n          setIsLoggedIn(false)\n        }\n        setInit(true)\n      })\n    }else{\n      setInit(true)\n    }\n  })\n\n  return (\n    <>\n    <RecoilRoot className=\"App\">\n      {init ? <AppRouter userObj={userObj} isLoggedIn={isLoggedIn} /> : \"Initializing...\"}\n    </RecoilRoot>\n    </>\n  );\n}\n\nexport default App;\n","/Users/oyejin/Surfee/kiwi/src/Router.js",["384","385","386","387"],"import React, {useState, useEffect} from 'react';\nimport {HashRouter as Router, Route, Switch} from \"react-router-dom\";\nimport './App.css';\nimport LoginPage from './pages/Login/Login/LoginPage'\nimport MainPage from './pages/Landing/old/MainPage';\nimport UserLandingPage from './pages/UserLanding/UserLandingPage';\nimport MainPageV2 from './pages/Landing/MainPageV2';\nimport MakePage from './pages/Make/old/MakePage';\nimport MakePageV2 from './pages/Make/MakePageV2';\nimport NavBarV2 from './pages/NavAndFooter/NavBarV2';\nimport ResponsePage from './pages/Response/ResponsePage';\nimport RegisterPage from './pages/Login/Register/RegisterPage'\nimport SubmitPage from './components/Make/utils/SubmitPage';\nimport CustomerPage from './pages/Customer/CustomerPage'\nimport FQ from './pages/Questions/FQ'\nimport { useRecoilState } from 'recoil'\nimport {\n    atom,\n} from 'recoil';\n\nimport { createBrowserHistory } from 'history';\n\nconst history = createBrowserHistory();\n\nexport const userState = atom({\n    key:'userState',\n    default:'',\n})\n\n\nconst AppRouter = ({userObj, isLoggedIn}) => {\n    const [userData, setUserData] = useRecoilState(userState);\n\n    useEffect(() => {\n        setUserData(userObj);\n    },[])\n\n    if (window.location.host.split(\".\")[0] !== \"surfee\" && window.location.host.split(\".\")[0] !== 'localhost:3000') {\n        return(\n            <Router history={history}>\n                <>\n                <div className=\"Container\" style={{ minHeight: 'calc(100vh - 80px)', zIndex:-1 }}>\n                    <Switch>\n                        <Route path=\"/\" component={UserLandingPage} />\n                    </Switch>\n                </div>\n                </> \n            </Router>\n        )\n    }else{\n        return(\n            <Router history={history}>\n                <>\n                <NavBarV2 history={history} isLoggedIn={isLoggedIn} />\n                <div className=\"Container\" style={{ minHeight: 'calc(100vh - 80px)', zIndex:-1 }}>\n                <Switch>\n                    <Route exact path=\"/\">\n                        <MainPage history={history}/>\n                    </Route>\n                    <Route exact path=\"/v2\">\n                        <MainPageV2 history={history} isLoggedIn={isLoggedIn} userObj={userObj}/>\n                    </Route>\n                    {/* <Route path=\"/make\">\n                        <MakePage history={history}/>\n                    </Route>             */}\n                    <Route path=\"/seeResponse\">\n                        <ResponsePage history={history} userObj={userObj}/> \n                    </Route>\n                    <Route path=\"/submit\">\n                        <SubmitPage history={history}/>\n                    </Route>\n                    <Route path=\"/make\">\n                        <MakePageV2 history={history} isLoggedIn={isLoggedIn} userObj={userObj}/>\n                    </Route>\n                    <Route path=\"/setting\">\n                        <FQ history={history} isLoggedIn={isLoggedIn} userObj={userObj}/>\n                    </Route>\n                    <Route path=\"/login\">\n                        <LoginPage history={history}/>\n                    </Route>\n                    <Route path=\"/customer\">\n                        <CustomerPage history={history}/>\n                    </Route>\n                    <Route path=\"/register\">\n                        <RegisterPage history={history}/>\n                    </Route>\n                </Switch>\n                </div>\n                </> \n            </Router>\n        )\n    }\n}\nexport default AppRouter;","/Users/oyejin/Surfee/kiwi/src/tools/fbase.js",["388"],"import firebase from \"firebase/compat/app\"\n// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\n// import { getAnalytics } from \"firebase/analytics\";\nimport \"firebase/compat/firestore\";\nimport \"firebase/compat/storage\";\nimport \"firebase/compat/auth\"\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDH_xQF-kBsVMEDwLNDJubGrzOp0Qnr_iU\",\n  authDomain: \"kiwi-d5dd3.firebaseapp.com\",\n  projectId: \"kiwi-d5dd3\",\n  storageBucket: \"kiwi-d5dd3.appspot.com\",\n  messagingSenderId: \"335393250887\",\n  appId: \"1:335393250887:web:231c18d1aa6d4356891b62\",\n  measurementId: \"G-7FJX546NWQ\"\n};\n\n// Initialize Firebase\n// export const app = firebase.initializeApp(firebaseConfig);\n// export const firebaseInstance = firebase;\n// const analytics = getAnalytics(app);\n// export const dbService = app.firestore();\n// export const stService = app.storage();\n\nexport const app = firebase.initializeApp(firebaseConfig);\nexport const authService = app.auth();\nexport const firebaseInstance = firebase;\nexport const dbService = firebase.firestore();\nexport const stService = app.storage();","/Users/oyejin/Surfee/kiwi/src/pages/NavAndFooter/NavBarV2.js",["389","390"],"import React, {useState, useEffect} from 'react'\nimport './NavBarV2.css'\nimport {Link} from 'react-router-dom';\nimport {authService} from '../../tools/fbase'\n\n\nfunction NavBarV2({history, scrollPosition, isLoggedIn}) {\n\n    const onLogout = () => {\n        localStorage.removeItem('name');\n        localStorage.removeItem('job');\n        authService.signOut();\n        alert(\"로그아웃 되셨습니다.\");\n        history.push('/');\n        history.go();\n    }\n    \n    return (\n        <div style={{display: 'flex', flexDirection: 'column', alignItems: 'center', width:'100%'}}>\n            <div className=\"nav-bar-container-v2\">\n                <div className=\"nav-bar-left-v2\">\n                    <Link to=\"/v2\" className=\"nav-bar-title-v2\" style={{cursor:'pointer', color:'#6a63f7'}}>\n                        Surfee\n                    </Link>\n                    {/* <Link to=\"/info\" className=\"nav-left-text\" style={{marginLeft:'4vw'}}>\n                        제품소개\n                    </Link> */}\n                    <Link to=\"/customer\" className=\"nav-left-text\">\n                        문의하기\n                    </Link>\n                    {isLoggedIn ? \n                    <>\n                    <span className=\"nav-left-text\" onClick={() => onLogout()}>\n                        로그아웃\n                    </span>\n                    </> : \n                    <>\n                        <Link to=\"/login\" className=\"nav-left-text\">\n                            로그인\n                        </Link>\n                        <Link to=\"/register\" className=\"nav-left-text\">\n                            회원가입\n                        </Link>\n                    </>\n                    }\n                </div>\n                <div className=\"nav-on-v2\">\n                    <button className=\"nav-button-round-v2\" onClick={() => window.scrollTo(0,document.body.scrollHeight)}>무료로 체험하기</button>\n                </div>\n            </div>\n            <div style={{borderBottom: '2px solid black', width:`${(scrollPosition/window.innerHeight)*63}%`, position:'fixed', top:'58px', zIndex:'12'}}></div>\n        </div>\n    )\n}\n\nexport default NavBarV2\n","/Users/oyejin/Surfee/kiwi/src/pages/Landing/MainPageV2.js",["391","392","393","394"],"import React, {useEffect,useRef, useState} from 'react'\nimport './old/MainPage.css'\nimport './MainPageV2.css'\nimport {Link} from 'react-router-dom';\nimport { dbService } from '../../tools/fbase'\nimport Footer from '../NavAndFooter/Footer'\nimport AccessAlarmsIcon from '@mui/icons-material/AccessAlarms';\nimport { ToolOutlined, PieChartOutlined, MobileOutlined, GroupOutlined, FormatPainterOutlined, BranchesOutlined, PicLeftOutlined, AlertOutlined, PictureOutlined, FormOutlined } from '@ant-design/icons';\nimport { motion } from \"framer-motion\"\nimport Icons from '../../components/Make/tools/Icons'\n\nimport s1 from '../../tools/img/surfee1.png';\n\nconst ourInfos = [\n    {\n        icon : <ToolOutlined className=\"func-icon\" style={{color:'#6a63f7', fontSize:'2em'}}/>,\n        desc : \"노코딩 툴\",\n    },\n    {\n        icon : <PieChartOutlined className=\"func-icon\" style={{color:'#6a63f7', fontSize:'2em'}}/>,\n        desc : \"데이터 시각화\",\n    },\n    {\n        icon : <MobileOutlined className=\"func-icon\" style={{color:'#6a63f7', fontSize:'2em'}}/>,\n        desc : \"반응형\",\n    },\n    {\n        icon : <BranchesOutlined className=\"func-icon\" style={{color:'#6a63f7', fontSize:'2em'}}/>,\n        desc : \"도메인 연결\",\n    },\n    { \n        icon : <AlertOutlined className=\"func-icon\" style={{color:'#6a63f7', fontSize:'2em'}}/>,\n        desc : \"CTA 제공\",\n    },\n    {\n        icon : <PictureOutlined className=\"func-icon\" style={{color:'#6a63f7', fontSize:'2em'}}/>,\n        desc : \"favicon 커스텀\",\n    },\n    {\n        icon : <FormOutlined className=\"func-icon\" style={{color:'#6a63f7', fontSize:'2em'}}/>,\n        desc : \"섹션별 커스텀\",\n    },\n    {\n        icon : <PicLeftOutlined className=\"func-icon\" style={{color:'#6a63f7', fontSize:'2em'}}/>,\n        desc : \"템플릿 제공\",\n    },\n    {\n        icon : <GroupOutlined className=\"func-icon\" style={{color:'#6a63f7', fontSize:'2em'}}/>,\n        desc : \"네비바 / 푸터바 커스텀\",\n    },\n    {\n        icon : <FormatPainterOutlined className=\"func-icon\" style={{color:'#6a63f7', fontSize:'2em'}}/>,\n        desc : \"폰트 크기, 색상 변경\",\n    },\n];\n\nfunction MainPageV2({history, isLoggedIn, userObj}) {\n    const [email,setEmail] = useState(\"\");\n    const targets = useRef(null)\n    // const [scrollPosition, setScrollPosition] = useState(0);\n\n    // const updateScroll = () => {\n    //     setScrollPosition(window.scrollY || document.documentElement.scrollTop);\n    // }\n\n    useEffect(()=>{\n        // window.addEventListener('scroll', updateScroll);\n    });\n\n    const sendData = async () => {\n        console.log(dbService);\n        if(email.length < 4){\n            alert(\"올바른 이메일 양식을 입력해주세요!\");\n            return;\n        }\n        await dbService.collection(\"apply-datas\").add({\n            email:email,\n            created:Date.now(),\n        });\n\n        alert(\"신청되셨습니다. 감사합니다. 빠른 시일내로 연락드리겠습니다.\");\n        setEmail(\"\");\n    }\n\n    const scrollDown = () => {\n        targets.current.scrollIntoView({behavior: 'smooth'})\n    }\n\n    const ourInfosTable = ourInfos.map((item, index) => {\n        return(\n            <div className=\"one-desc-func\" index={index}>\n                <div className=\"func-content\">\n                    {item.icon}\n                </div>\n                <div className=\"func-content\">\n                    {item.desc}\n                </div>\n            </div>\n        )\n    })\n\n    const checkLoggedIn = () => {\n        console.log(\"로그인했나?\", isLoggedIn)\n        if(isLoggedIn === false){\n            alert(\"로그인하셔야 이용가능한 페이지입니다.\");\n        }else{\n            history.push('/#/seeResponse');\n            history.go();\n            return;\n        }\n    }\n\n    const SomeoneClickMoveToMake = async () => {\n        const isNew = localStorage.getItem('isNew');\n        console.log(\"isNew\", isNew);\n        if(isNew === null){\n            localStorage.setItem('isNew', false);\n            if(userObj !== null){\n                dbService.collection('SomeoneClickMoveToMake').add({\n                    name:userObj.displayName,\n                    email:userObj.email,\n                    new:true,\n                    createdAt: new Date(),\n                })\n            }else{\n                dbService.collection('SomeoneClickMoveToMake').add({\n                    new:true,\n                    createdAt: new Date(),\n                })\n            }\n        }else{\n            if(userObj !== null){\n                dbService.collection('SomeoneClickMoveToMake').add({\n                    name:userObj.displayName,\n                    email:userObj.email,\n                    new:false,\n                    createdAt: new Date(),\n                })\n            }else{\n                dbService.collection('SomeoneClickMoveToMake').add({\n                    new:false,\n                    createdAt: new Date(),\n                })\n            }\n        }\n    }\n\n    const variants = {\n        hidden: { opacity: 0 },\n        visible: { opacity: 1 },\n      }\n\n    return (\n        <>\n        <div className=\"main-page-container\">\n            <div className=\"main-page-section-topbottom\" style={{backgroundColor:'white'}}>\n                <div className=\"main-section-left-topbottom\" style={{color:'black'}}>\n                    <span className=\"one-section-big-topbottom\">\n                        '타이핑'과 '이미지'로만<br/>\n                        빠르고 간단하게 랜딩페이지를 제작해보세요\n                        {/* <Icons /> */}\n                    </span>\n                    {/* <span className=\"one-section-small\">\n                    신규 서비스와 이벤트부터 스타트업 아이템 검증까지,<br/>\n                    코딩없이 랜딩페이지를 만들고 실시간 데이터 분석을 통해 <br/>\n                    최고의 고객 전환율을 경험해 보세요.\n                    </span> */}\n                    <button className=\"apply-button-v2\" onClick={scrollDown} style={{height:'60px', width:'200px', borderRadius:'30px', marginTop:'20px'}}>\n                        무료로 체험하기\n                    </button>\n                </div>\n                <motion.div className=\"main-section-right-topbottom\" \n                    initial=\"hidden\" \n                    animate=\"visible\" \n                    variants={variants}>\n                    <img src={s1} className=\"section-one-image-main-topbottom\" />\n                </motion.div>\n            </div>\n            \n            <div className=\"main-page-section-topbottom\" style={{backgroundColor:\"white\"}}>\n                <div className=\"main-section-left-topbottom\">\n                    <span className=\"one-section-big-topbottom\">\n                        랜딩페이지 제작을 가장 효율적으로!\n                    </span>\n                    <span className=\"one-section-small-topbottom\">\n                        <span className=\"one-desc-card\">\n                            <div className=\"card-content\">\n                                이미지\n                            </div>\n                            <div className=\"card-content\" style={{fontSize:'2em', fontFamily:'Pretendard-ExtraBold'}}>\n                                코딩도 디자인도 필요없는<br/>One-stop 랜딩페이지 제작툴\n                            </div>\n                            <div className=\"card-content\" style={{color:'rgb(30,30,30)', fontSize:'1.5em'}}>\n                                개발자 없이도, 외주 없이도 직접<br/>\n                                템플릿을 고르고 블로그를 꾸미듯<br/>\n                                쉽고 빠르게 랜딩페이지를 만들어 보세요.\n                            </div>\n                            <div className=\"card-content-link\">\n                                <Link to=\"\" className=\"card-link\">지금 바로 만들기</Link>\n                            </div>\n                        </span>\n                        <span className=\"one-desc-card\">\n                            <div className=\"card-content\">\n                                이미지\n                            </div>\n                            <div className=\"card-content\" style={{fontSize:'2em', fontFamily:'Pretendard-ExtraBold'}}>\n                                잠재 유저 분석을 위한<br/>유저 데이터를 직관적으로!\n                            </div>\n                            <div className=\"card-content\" style={{color:'rgb(30,30,30)', fontSize:'1.5em'}}>\n                                조회수, 사용자 수, 전환율(CVR), 유입 채널 등<br/>\n                                고객의 반응을 확인할 수 있는 유의미한 데이터를<br/>\n                                개발자에게 요청할 필요없이 직접 확인해 보세요.\n                            </div>\n                            <div className=\"card-content-link\">\n                                <Link to=\"\" className=\"card-link\">지금 바로 만들기</Link>\n                            </div>\n                        </span>\n                        <span className=\"one-desc-card\">\n                            <div className=\"card-content\">\n                                이미지\n                            </div>\n                            <div className=\"card-content\" style={{fontSize:'2em', fontFamily:'Pretendard-ExtraBold'}}>\n                                모바일 환경에서도<br/>불편함 없이, 반응형으로!\n                            </div>\n                            <div className=\"card-content\" style={{color:'rgb(30,30,30)', fontSize:'1.5em'}}>\n                                Surfee를 통해 제작한 랜딩페이지는<br/>\n                                모바일 환경에서도 최적화된<br/>\n                                반응형으로 제공됩니다.\n                            </div>\n                            <div className=\"card-content-link\">\n                                <Link to=\"\" className=\"card-link\">지금 바로 만들기</Link>\n                            </div>\n                        </span>\n                    </span>\n                </div>\n                {/* <div className=\"main-section-right-topbottom\">                   \n                    <img src={section1} className=\"section-one-image\"/>\n                </div> */}\n            </div>\n            <div className=\"main-page-section-topbottom\" style={{backgroundColor:\"white\", height:'500px'}}>\n                <div className=\"main-section-left-topbottom\">\n                    <span className=\"one-section-big-topbottom\">\n                        Surfee가 제공하는 기능!\n                    </span>\n                    <span className=\"one-section-small-topbottom\">\n                        <div className=\"info-table\">\n                            {ourInfosTable}\n                        </div>\n                    </span>\n                </div>\n            </div>\n            <div ref={targets} className=\"main-page-section-last-v2\">\n                <span className=\"last-one-component-v2 last-card\">\n                    <div className=\"main-section-last-title-v2\">\n                        <span>\n                        고객 검증을 위한 '랜딩페이지' 제작은<br/>\n                        <span style={{color:'#6a63f7', borderBottom:'3px solid #6a63f7'}}>이제 선택이 아닌 필수</span>입니다.\n                        </span>\n                    </div>\n                    <div style={{flexDirection:'row', display:'flex', justifyContent:'center', width:'100%', marginTop:'5%'}}>\n                        <div style={{width:'30%', display:'flex', justifyContent:'center', alignItems:'center', flexDirection:'column'}}>\n                        <span>Let's Build Your Page!</span>\n                            <Link to=\"/make\" className=\"apply-button-v2\" onClick={() => SomeoneClickMoveToMake()}>제작하러가기</Link>\n                        </div>\n                        <div style={{width:'30%', display:'flex', justifyContent:'center', alignItems:'center', flexDirection:'column'}}>\n                        <span style={{color:'#6a63f7'}}>이미 제작을 완료하셨다면</span>\n                        <span className=\"apply-button-v2\" onClick={() => checkLoggedIn()} style={{backgroundColor:'#ffffff', color:'#6a63f7'}}>관리하기</span>   \n                        </div>\n                    </div>\n                </span>\n            </div>\n        </div>\n        <Footer />\n        </>\n    )\n}\n\nexport default MainPageV2","/Users/oyejin/Surfee/kiwi/src/pages/UserLanding/UserLandingPage.js",[],"/Users/oyejin/Surfee/kiwi/src/pages/Landing/old/MainPage.js",["395","396","397","398"],"import React, {useEffect,useRef, useState} from 'react'\nimport './MainPage.css'\nimport {Link} from 'react-router-dom';\nimport { dbService } from '../../../tools/fbase';\nimport NavBar from '../../NavAndFooter/NavBar/NavBar'\nimport Footer from '../../NavAndFooter/Footer'\n\nimport section1 from '../../../tools/img/001.png';\nimport section0 from '../../../tools/img/005.png';\nimport section2 from '../../../tools/img/003.png';\n\nimport {Input} from 'antd'\n\nfunction MainPage({history}) {\n    const [email,setEmail] = useState(\"\");\n    const targets = useRef(null)\n\n    useEffect(() => {\n    },[])\n\n    const sendData = async () => {\n        console.log(dbService);\n        if(email.length < 4){\n            alert(\"올바른 이메일 양식을 입력해주세요!\");\n            return;\n        }\n        await dbService.collection(\"apply-datas\").add({\n            email:email,\n            created:Date.now(),\n        });\n\n        alert(\"신청되셨습니다. 감사합니다. 빠른 시일내로 연락드리겠습니다.\");\n        setEmail(\"\");\n    }\n\n    const scrollDown = () => {\n        targets.current.scrollIntoView({behavior: 'smooth'})\n    }\n\n    return (\n        <>\n        <div className=\"main-page-container\">\n            <NavBar history={history}/>\n            <div className=\"main-page-section\" style={{backgroundColor:'#6B63F7'}}>\n                <div className=\"main-section-left\" style={{color:'white'}}>\n                    <span className=\"one-section-big\">\n                        랜딩페이지 제작부터<br/>\n                        데이터 분석까지<br/>\n                        빠르고 간단하게\n                    </span>\n                    <span className=\"one-section-small\">\n                    신규 서비스와 이벤트부터 스타트업 아이템 검증까지,<br/>\n                    코딩없이 랜딩페이지를 만들고 실시간 데이터 분석을 통해 <br/>\n                    최고의 고객 전환율을 경험해 보세요.\n                    </span>\n                    <button className=\"apply-button\" onClick={scrollDown} style={{height:'60px', width:'200px', borderRadius:'10px', marginTop:'20px'}}>\n                        지금 바로 시작하기\n                    </button>\n                </div>\n                <div className=\"main-section-right\">              \n                    <img src={section0} className=\"section-one-image-main\" />\n                </div>\n            </div>\n            \n            <div className=\"main-page-section\" style={{backgroundColor:\"white\"}}>\n                <div className=\"main-section-left\">\n                    <span className=\"one-section-big\">\n                        코딩도 디자인도 필요없이<br/>One-stop으로<br/>랜딩페이지 제작하기\n                    </span>\n                    <span className=\"one-section-small\">\n                        개발자 없이도, 외주 없이도 직접<br/>\n                        템플릿을 고르고 블로그를 꾸미듯<br/>\n                        쉽고 빠르게 랜딩페이지를 만들어 보세요.\n                    </span>\n                </div>\n                <div className=\"main-section-right\">                   \n                    <img src={section1} className=\"section-one-image\"/>\n                </div>\n            </div>\n            <div className=\"main-page-section2\" style={{backgroundColor:\"white\"}}>\n                <div className=\"main-section-right\">\n                    <img src={section2} className=\"section-one-image\"/>\n                </div>\n                <div className=\"main-section-left\">\n                    <div className=\"middle-section\">\n                        <span className=\"one-section-big\">\n                        최적의 전환율을 위한 <br/>\n                        데이터 분석 자료를<br/>\n                        실시간으로 확인하기\n                        </span>\n                        <span className=\"one-section-small\">\n                        조회수, 사용자 수, 전환율(CVR), 유입 채널 등<br/>\n                        고객의 반응을 확인할 수 있는 유의미한 데이터를<br/>\n                        개발자에게 요청할 필요없이 직접 확인해 보세요.\n                        </span>\n                    </div>  \n                </div>\n            </div>\n            {/* <div className=\"main-page-section\" style={{backgroundColor:\"white\"}}>\n                <div className=\"main-section-left\">\n                    <div className=\"middle-section\">\n                        <span className=\"one-section-big\">\n                            제작부터 데이터 분석까지<br/>9,990원의<br/>합리적인 가격으로\n                        </span>\n                        <span className=\"one-section-small\">\n                            9,900원에 일주일 무료<br/>\n                            이후 하루마다 단돈 500원이 추가되는<br/>\n                            합리적인 가격으로 만나 보세요.\n                        </span>\n                    </div>\n                </div>\n                <div className=\"main-section-right\">                   \n                    <img src={section3}  className=\"section-one-image\"/>\n                </div>\n            </div> */}\n            <div ref={targets} className=\"main-page-section-last\" style={{backgroundColor:'#6B63F7'}}>\n                <span className=\"last-one-component\" style={{width:'50%'}}>\n                    <div className=\"main-section-last-title\">\n                        One-stop 랜딩페이지 제작 툴,<br/>\n                        가장 먼저 이용해 보세요\n                    </div>\n                    <Input type=\"text\" value={email} onChange={e => setEmail(e.target.value)} placeholder=\"이메일을 입력하세요.\" className=\"input-text\"/>\n                    <button className=\"apply-button\" onClick={sendData}>사전신청하고 혜택받기</button>\n                    <div className=\"main-section-last-desc\">\n                        사전신청하신 분들에겐 오픈 시 사용 가능한<br/>일주일 무료 이용권이 제공됩니다.\n                        {/* <br/> <p style={{color:'rgb(30,30,30)', fontFamily:'OTWelcomeBA'}}>기간 : 21.11.20 ~ 21.12.20</p> */}\n                    </div>\n                </span>\n                {/* <span className=\"last-one-component\">\n                    <div className=\"main-section-last-title\">\n                        지금 당장 필요하지 않다면<br/>쿠폰 받아가세요!\n                    </div>\n                    <Link to=\"coupon\" onClick={AddLog} className=\"apply-button\" style={{backgroundColor:'rgba(0,0,0,0)', color:'white'}}>\n                        할인쿠폰 받으러 가기</Link>\n                    \n                    <div className=\"main-section-last-desc\">\n                        이벤트 기간 : 2021.00.00 ~ 2021.00.00 <br/>\n                        사용 가능 기간 : ~ 2022.02.28\n                    </div>\n                </span> */}\n            </div>\n            {/* <div className=\"main-page-section-last\" style={{backgroundColor:'white', color:'black'}}>\n                <span className=\"last-one-component\" style={{width:'100%'}}>\n                    <div>\n                        여기에 뭐 설명같은거\n                    </div>\n                </span>\n            </div> */}\n        </div>\n            <Footer />\n           </>\n    )\n}\n\nexport default MainPage","/Users/oyejin/Surfee/kiwi/src/pages/Customer/CustomerPage.js",["399","400","401","402","403","404","405","406"],"import React, {useState, useEffect} from 'react'\nimport QnA from '../../components/Customer/QnA'\nimport Term from '../../components/Customer/Term'\nimport PersonalInformation from '../../components/Customer/PersonalInformation'\nimport Footer from '../NavAndFooter/Footer'\nimport ReactGa from 'react-ga'\nimport { useRecoilState } from 'recoil'\nimport {userState} from '../../Router'\n\nimport './CustomerPage.css'\n\nfunction CustomerPage() {\n    const [cnum, setCnum] = useState(1);\n    const [cnums, setCnums] = useState([1,2,3]);\n    const [userData, setUserData] = useRecoilState(userState);\n    \n    useEffect(()=>{\n\n        // ReactGa.initialize('UA-213792742-1');\n        // ReactGa.pageview('/customerPage');\n    });\n\n    const tabsTable = cnums.map((item, index) => {\n        let fw = '500';\n        let bb = '0px';\n        let fb = 'gray';\n        if(cnum == item){\n            fw = '700'; \n            bb = '2px solid black';\n            fb = 'black';\n        }\n\n        switch(item){\n            case 1:\n                return(\n                   <span className=\"tab-one\" index={index} style={{color:`${fb}`, fontWeight:`${fw}`, borderBottom:`${bb}`}} onClick={e => setCnum(item)}>자주묻는질문(FAQ)</span>\n                )\n            case 2:\n                return(\n                    <span className=\"tab-one\" index={index} style={{color:`${fb}`, fontWeight:`${fw}`, borderBottom:`${bb}`}} onClick={e => setCnum(item)}>이용약관</span>\n                )\n\n            case 3:\n                return(\n                    <span className=\"tab-one\" index={index} style={{color:`${fb}`, fontWeight:`${fw}`, borderBottom:`${bb}`}} onClick={e => setCnum(item)}>개인정보처리방침</span>\n                )\n\n        }\n    })\n\n    const contentTable = () => {\n        switch(cnum){\n            case 1:\n                return(\n                    <QnA />\n                )\n            case 2:\n                return(\n                    <Term />\n                )\n            case 3:\n                return(\n                    <PersonalInformation />\n                )\n        }\n    }\n\n    return (\n        <>\n        <div className=\"questionspage-container\">\n            <div className=\"q-inner\">\n                <div className=\"q-info-top\">\n                    <div className=\"q-title-top\" style={{fontWeight: 'bold'}}>\n                        Surfee에 관심을 가져주셔서 감사합니다.\n                    </div>\n                    <div className=\"q-title-top\" style={{marginTop:'3%'}}>\n                        안녕하세요!<br/>\n                        무엇을 도와드릴까요?\n                    </div>\n                    <div>\n                        <span className=\"q-button\">\n                            직접 문의하기\n                        </span>\n                    </div>\n                </div>\n                <div className=\"quetions-content-bottom\">\n                    <div className=\"q-tabs\">\n                        {tabsTable}\n                    </div>\n                    <div className=\"q-content\">\n                        <div className=\"q-one-content\">\n                            {contentTable()}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <Footer />\n        </>\n    )\n}\n\nexport default CustomerPage\n","/Users/oyejin/Surfee/kiwi/src/pages/Response/ResponsePage.js",["407","408","409","410","411","412","413","414","415","416","417","418"],"import React, {useState, useEffect} from 'react';\nimport './ResponsePage.css';\nimport {dbService} from '../../tools/fbase';\nimport {authService} from '../../tools/fbase';\nimport ReactGa from 'react-ga'\nimport NavBarV2 from '../NavAndFooter/NavBarV2'\nimport Footer from '../NavAndFooter/Footer'\nimport { Table, Tag, Space } from 'antd';\nimport MadeLandingCard from '../../components/Response/MadeLandingCard'\nimport gadata from '../../components/Response/data/gadata.json';\n\nconst columns = [\n    {\n      title: '이메일',\n      dataIndex: 'email',\n      key: 'email',\n      render: text => <a>{text}</a>,\n    },\n    {\n      title: '신청한 날짜',\n      dataIndex: 'date',\n      key: 'date',\n      render: date => <span>2021년 {date.getMonth()+1}월 {date.getDate()}일 {date.getHours()}시에 신청 </span>\n    },\n    {\n      title: '유입 URL',\n      dataIndex: 'urlId',\n      key: 'urlId',\n      render: text => <span>{text}</span>\n    },\n  ];\n  \nfunction ResponsePage({userObj, history}) {\n    const [id, setId] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n    const [responses, setResponses] = useState([[]]);\n    const [mylandings, setMylandings] = useState([]);\n    const [part, setPart] = useState(1);\n    const [myDatas, setMyDatas] = useState({\n        all_sessions:0,\n        all_pageViews:0\n    });\n    const [nowChecking, setNowChecking] = useState(10000);\n    \n    useEffect(() => {\n        // to report page view\n        ReactGa.initialize('UA-213792742-1');\n        ReactGa.pageview(`/seeResponse/${userObj.email}`);\n        getThisUserDatas();\n    },[loading])\n\n    const getThisUserDatas = async () => {\n        const thisuserDatas = await dbService\n            .collection('made-page')\n            .where(\"makerEmail\", \"==\", userObj.email)\n            .get();\n        \n        let thisuserData = thisuserDatas.docs.map(doc => {\n            return({...doc.data(), id:doc.id})\n        });\n        setMylandings(thisuserData);\n        \n        let tempDatas = []\n        \n        thisuserData.map(item => {\n            let tempd = []\n            getDatas(item.setting.urlId).then(i => {\n                tempd = i;\n                tempDatas.push(tempd);\n            })\n        })\n        setResponses(tempDatas);\n\n        setLoading(true);\n}\n\n    const getDatas = async (urlId) => {\n        const reDatas = await dbService\n            .collection(\"apply-datas\") // apply-datas는 유저가 만든 랜딩페이지에 들어와서 목표 액션을 한 데이터.\n            .orderBy(\"created\", \"desc\")\n            // .where(\"urlId\", \"==\", urlId)\n            .get();\n\n        let reData = reDatas.docs.map(doc => {\n            let day = new Date(doc.data().created)\n            return({...doc.data(), id:doc.id, date:day})\n        });\n\n        console.log(reData);\n\n        return reData;\n    }\n\n    const getMyData = (path) => {\n        let all_data = gadata.reports[0].data.rows;\n        \n        const myData = all_data.filter(item => item.dimensions[2] === `${path}`);\n        let all_sessions = 0;\n        let all_pageViews = 0;\n        myData.map((item, index) => {\n            console.log(\"여기서\", item.dimensions);\n            console.log(\"세션 수 : \", item.metrics[0].values[0]);\n            console.log(\"페이지 뷰 수 : \", item.metrics[0].values[1]);\n            console.log(\"세션 머무르는 : \", item.metrics[0].values[2]);\n            all_sessions += parseInt(item.metrics[0].values[0]);\n            all_pageViews += parseInt(item.metrics[0].values[1]);\n        })\n        console.log(\"총 세션 수 : \", all_sessions );\n        console.log(\"총 페이지 뷰 수 : \", all_pageViews );\n        const body = {\n            all_sessions,\n            all_pageViews,\n        }\n        setMyDatas(body);\n    }\n\n    const returnMylandingsTable = mylandings.map((item, index) => {\n        return(\n            <MadeLandingCard history={history} item={item} key={item.id} index={index} setNowChecking={setNowChecking} />\n        )\n    })\n        if(loading === true){\n            return (\n                <div style={{backgroundColor:'white', display:'flex', justifyContent:'center',alignItems:'center', width:'100%', flexDirection:'column'}}>\n                <div className=\"get-all-container\">\n                    <div className=\"get-up-container\">\n                        <div className=\"get-up-title\">\n                            김호진 님의 대시보드\n                        </div>\n                        <div className=\"get__mylandings-cantainer\">\n                            {returnMylandingsTable}\n                        </div>\n                        <div className=\"get-buttons-container\">\n                            <button className=\"get-part-button\" style={{backgroundColor:`${part === 1 ? \"#6a63f76e\" : \"white\"}`}} onClick={e => setPart(1)}>응답</button>\n                            <button className=\"get-part-button\" style={{backgroundColor:`${part === 2 ? \"#6a63f76e\" : \"white\"}`}} onClick={e => setPart(2)}>데이터</button>\n                        </div>\n                    </div>\n                    <div className=\"get-down-container\">\n                        { part === 1 ? \n                        // 응답 파트\n                        <div className=\"response-container\">\n                            <div className=\"response-table\">\n                                <div className=\"response-table-top\">\n                                    <span className=\"response-table-title\"> {nowChecking === 10000 ? \"응답을 볼 페이지를 클릭하세요.\" : <div>총 목표액션 전환 수 : {responses[nowChecking].length} 명</div>} </span>\n                                </div>\n                                {responses.length === 0 ? <></> : <Table columns={columns} dataSource={responses[nowChecking]} className=\"response-table-datas\"/>}\n                            </div>\n                        </div>\n                        :\n                        <>\n                        {/* 데이터 파트 */}\n                        <div style={{height:'100vh'}}>\n                            <button onClick={() => getMyData()}>데이터 불러오기</button>\n                            <div>\n                                <span className=\"data-one-mini-card\">총 페이지 뷰 수 {myDatas.all_pageViews}</span>\n                                <span className=\"data-one-mini-card\">총 세션 수 {myDatas.all_sessions}</span>\n                            </div>\n                        </div>\n                        </>\n                        }\n                    </div>\n                </div>\n                <Footer />\n                </div>\n            )\n        }else{\n            return(\n                <>\n                <div>\n                    유저 정보를 불러오는 중입니다..\n                </div>\n                </>\n            )\n        }\n}\n\nexport default ResponsePage\n","/Users/oyejin/Surfee/kiwi/src/pages/Make/old/MakePage.js",[],"/Users/oyejin/Surfee/kiwi/src/pages/Questions/FQ.js",["419","420","421","422","423","424","425","426","427","428","429","430","431","432","433","434"],"import React, {useState, useEffect, useContext} from 'react'\nimport { styled, Box } from '@mui/system';\nimport ModalUnstyled from '@mui/base/ModalUnstyled';\nimport '../../components/Make/Modal/Modal.css';\nimport './FirstQuestions.css'\nimport {Link} from 'react-router-dom'\nimport { MyContext } from '../Make/MakePageV2'\nimport {dbService} from '../../tools/fbase';\nimport OverflowScrolling from 'react-overflow-scrolling';\n\nimport good from '../../tools/info/good3d.png';\n\nimport { Input } from 'antd';\n\nconst StyledModal = styled(ModalUnstyled)`\n  position: fixed;\n  z-index: 1300;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius:10px;\n`;\n\nconst Backdrop = styled('div')`\n  z-index: -1;\n  position: fixed;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  left: 0;\n  background-color: rgba(0, 0, 0, 0.2);\n  -webkit-tap-highlight-color: transparent;\n`;\n\nconst style = {\n  width: '100vw',\n  height: '100vh',\n  bgcolor: 'rgba(255,255,255,1)',\n  border: '0px solid #000',\n  marginTop: '-60px',\n  flexDirection:'column',\n  p: 2,\n  px: 4,\n  pb: 3,\n  zIndex:'10000099',\n  display:'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n//   borderRadius:'20px',\n  position:'relative',\n}\n\nconst StyledModal2 = styled(ModalUnstyled)`\n  position: fixed;\n  z-index: 1300;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius:10px;\n`;\n\nconst Backdrop2 = styled('div')`\n  z-index: -1;\n  position: fixed;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  left: 0;\n  background-color: rgba(0, 0, 0, 0.2);\n  -webkit-tap-highlight-color: transparent;\n`;\n\nconst style2 = {\n  width: '30vw',\n  height: '80vh',\n  bgcolor: 'rgba(255,255,255,1)',\n  border: '0px solid #000',\n  flexDirection:'column',\n  p: 2,\n  px: 4,\n  pb: 3,\n  display:'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n//   borderRadius:'20px',\n};\n\nconst progressList = [\n    {\n        num:1,\n        name:'NAME',\n    },\n    {\n        num:2,\n        name:'GOAL',\n    },\n    {\n        num:3,\n        name:'TEMPLATE',\n    },\n    {\n        num:4,\n        name:'DESIGN',\n    },\n    {\n        num:5,\n        name:'URL',\n    },\n]\n\nconst secondQuestion = [\n    {\n        typequestion: \"🍎 앱 다운로드\",\n        question : \"많은 사람들이 우리의 앱을 다운로드 하면 좋겠어요\",\n        type:'app',\n    },\n    {\n        typequestion: \"✍️ 사전신청\",\n        question : \"사전신청을 많이 받고 싶어요\",\n        type:'pre',\n    },\n    {\n        typequestion: \"💰 판매\",\n        question : \"서비스/제품을 많이 팔고 싶어요\",\n        type:'sell',\n    },\n    {\n        typequestion: \"🎁 이벤트\",\n        question : \"이벤트를 널리 알리고 싶어요\",\n        type:'event',\n    },\n    {\n        typequestion: \"📚 포트폴리오\",\n        question : \"멋진 나를 알리고 싶어요\",\n        type:'portfolio',\n    },\n    {\n        typequestion: \"🎸 기타\",\n        question : \"다른 목표를 향하고 있습니다\",\n        type:'etc',\n    },\n]\n\nconst fontList = [\n    {\n        name:'Noto Sans KR',\n        font:'Noto Sans KR',\n    },\n    {\n        name:'Pretendard',\n        font:'Pretendard-Regular',\n    },\n    {\n        name:'에스코어드림',\n        font:'Noto Sans KR',\n    },\n    {\n        name:'Noto Sans KR',\n        font:'Noto Sans KR',\n    },,\n    {\n        name:'Noto Sans KR',\n        font:'Noto Sans KR',\n    },,\n    {\n        name:'Noto Sans KR',\n        font:'Noto Sans KR',\n    },\n]\nconst colorList = [\n    {\n        name:'검',\n        color:'rgba(0,0,0,1)',\n    },\n    {\n        name:'차분',\n        color:'rgba(255,255,255,1)',\n    },\n    {\n        name:'노',\n        color:'rgba(0,255,255,1)',\n    },\n    {\n        name:'빨',\n        color:'rgba(250,0,0,1)',\n    },,\n    {\n        name:'초',\n        color:'rgba(0,250,0,1)',\n    },,\n    {\n        name:'파',\n        color:'rgba(0,0,250,1)',\n    },\n]\n\nfunction FQ(props) {\n    // 모달\n    const [cnum, setCnum] = useState(1);\n    const [type, setType] = useState(\"\");\n    const [templates, setTemplates] = useState([]);\n    const [templateNum, setTemplateNum] = useState(0);\n    const [title, setTitle] = useState('');\n    const [urlId, setUrlId] = useState('');\n    const [font, setFont] = useState('');\n    const [color, setColor] = useState('');\n    const [tmodalOpen, setTmodalOpen] = useState(false);\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    // const handleOpen = () => setOpen(true);\n    // const handleClose = async () => {\n    //     // 마지막에는 입력한 정보도 저장한다. 근데 한명껄 여러번 저장해서 헷갈리지 않게..!\n\n    //     await dbService.collection('question_answers').add({\n    //         createdAt: new Date(),\n    //     })\n    //     setOpen(false)\n    // };\n\n    useEffect(() => {\n    }, []);\n\n    const nextAndSetTemplates = async (e) => {\n        if(type === \"\"){\n            alert(\"위의 보기 중 한가지를 선택해주세요.\");\n            return\n        }else{\n            const typeTemplatesdata = await dbService\n                .collection(\"templates\")\n                .where(\"type\", \"==\", type)\n                .get(); // uid를 creatorId로 줬었으니까.\n\n            let typeTemplates = typeTemplatesdata.docs.map(doc => {\n                return({...doc.data(), id:doc.id})\n            });\n\n            setTemplates(typeTemplates);\n            setCnum(cnum + 1);\n        }\n    }\n\n    const nextAndSetTemplate = async (e) => {\n        if(templateNum === 0){\n            alert(\"위의 보기 중 한가지를 선택해주세요.\");\n            return\n        }else{\n            // templates.filter(doc => doc.type === type && doc.templateNum === templateNum)[0]\n            // 이걸 set Contents에.\n            // action.setContents(templates.filter(doc => doc.type === type && doc.templateNum === templateNum)[0])\n\n            setCnum(cnum + 1);\n        }\n    }\n\n    const nextAndSetFont = async e => {\n        if(font === ''){\n            alert(\"위의 보기 중 한가지를 선택해주세요.\");\n            return\n        }else{\n            setCnum(cnum + 1);\n        }\n    }\n    const nextAndSetDone = async e => {\n        const urlDatas = await dbService\n            .collection(\"urlStores\")\n            .where(\"urlId\", \"==\", urlId)\n            .get(); // uid를 creatorId로 줬었으니까.\n        \n        let urlData = urlDatas.docs.map(doc => {\n            return({...doc.data(), id:doc.id})\n        });\n\n        if(urlId === ''){\n            alert(\"URL을 입력해주세요. 이후 페이지에서 수정가능합니다.\");\n            return\n        }else if(urlData.length > 0){\n            alert(\"이미 존재하는 url입니다. 다른 url을 사용해주세요.\");\n            return;\n        }\n        \n        // if(urlId === ''){\n        //     alert(\"URL을 입력해주세요. 이후 페이지에서 수정가능합니다.\");\n        //     return\n        // }else if(editing === true){\n        //     const real = window.confirm(\"템플릿을 새로 설정하면 이전에 작성한 내용이 사라집니다. 괜찮으신가요?\")\n        //     if(real){\n        //         {\n        //             // templates.filter(doc => doc.type === type && doc.templateNum === templateNum)[0]\n        //             // 이걸 set Contents에.\n        //             action.setContents(templates.filter(doc => doc.type === type && doc.templateNum === templateNum)[0])\n        \n        //             setEditing(true);\n        //             handleClose();\n        //         }\n        //     }else{\n        //         return;\n        //     }\n        // }else{\n        //     action.setContents(templates.filter(doc => doc.type === type && doc.templateNum === templateNum)[0])\n\n        //     setEditing(true);\n        //     handleClose();\n        // }\n    }\n\n    const getAllTemplates = async(e) => {\n        const typeTemplatesdata = await dbService\n            .collection(\"templates\")\n            .get(); // uid를 creatorId로 줬었으니까.\n\n        let typeTemplates = typeTemplatesdata.docs.map(doc => {\n            return({...doc.data(), id:doc.id})\n        });\n\n        setTemplates(typeTemplates);\n    }\n\n    const showTemplateModal = () => {\n        setTmodalOpen(true);\n    }\n\n    const content = () => {\n        switch(cnum){\n            case 1:\n                return(\n                    <div style={{display:'flex', flexDirection:'column'}}>\n                        <form onSubmit={() => setCnum(cnum + 1)} style={{display:'flex', flexDirection:'column', justifyContent: 'center', alignItems: 'center'}}>\n                            <div className=\"modal-main-card\">\n                                <div className=\"modal-title\">\n                                    안녕하세요! <span style={{color:'#6C63FF'}}>Surfee</span>에 오신 것을 환영합니다! <br/>\n                                    당신의 서비스 / 제품 명을 알려주세요. 😊\n                                </div>\n                            </div>\n                            <Input className=\"input-holder\" type=\"text\" placeholder=\"한글은 8자 이내, 영문 10자 이내일 때 가장 이뻐요!\" value={title} onChange={e => setTitle(e.currentTarget.value)} />\n                            <div className=\"modal-button-container\">\n                                <button className=\"modal-move-button\" onSubmit={e => setCnum(cnum + 1)} style={{visibility:`${title.length > 0 ? 'visible' : 'hidden'}`, display:'flex'}} \n                                    onClick={e => setCnum(cnum + 1)}>확인</button>  \n                            </div>\n                        </form>\n                    </div>\n                )\n                break;\n\n            case 2:\n                return(\n                    <div style={{display:'flex', flexDirection:'column'}}>   \n                        <div className=\"modal-title\">\n                            <span style={{color:'#6C63FF'}}>{title}</span>의 랜딩페이지는 다음 중 어떤 목표를 향하고 있나요? 🚀\n                        </div>                     \n                        <div className=\"modal-main-card\">\n                            {\n                                secondQuestion.map((item, index) => {\n                                    let color = 'none';\n                                    if(item.type === type){\n                                        color = '1px solid #6C63FF';\n                                    }\n                                    return(\n                                        <div className=\"button1\" onClick={() => {setType(item.type);}} key={index} \n                                            style={{border:`${color}`}}>\n                                            <div style={{fontSize:'20px'}}>\n                                                {item.typequestion}\n                                            </div>\n                                            <div style={{marginTop:'4%'}}>\n                                                {item.question}\n                                            </div>\n                                        </div>\n                                    )\n                                })\n                            }\n                        </div>\n                        <div className=\"modal-button-container\">\n                            <button className=\"modal-move-button\" onClick={e => setCnum(cnum - 1)}>이전</button>\n                            <button className=\"modal-move-button\" onClick={e => nextAndSetTemplates(e)}>다음</button>  \n                        </div>\n                    </div>\n                )\n                break;\n\n            case 3:\n                return(\n                    <div style={{display:'flex', flexDirection:'column'}}> \n                        <div className=\"modal-title\">\n                            그렇다면 이런 템플릿을 추천해드릴게요 😎\n                        </div>\n                        <div className=\"modal-main-card\">\n                            {\n                                templates.map((item, index) => {\n                                    let color = 'none';\n                                    if(item.type === type && templateNum === item.templateNum){\n                                        color = '1px solid #6C63FF';\n                                    }\n                                    return(\n                                        <div>\n                                            <div className=\"template__card\" key={index}\n                                                onClick={() => {\n                                                    setTemplateNum(item.templateNum);\n                                                    setType(item.type);\n                                                }}\n                                                style={{border: `${color}`}} >\n\n                                                <span className=\"magnify-button\" onClick={() => showTemplateModal()}>↗</span>\n                                                \n                                                <img src={good} width={240} />\n                                                \n                                                <div>\n                                                    {item.type}\n                                                    {item.templateName}\n                                                </div>\n                                            </div>\n                                        </div>\n                                    )\n                                })\n                            }\n                        </div>\n                        <div className=\"modal-button-container\">\n                            <button className=\"modal-move-button\" onClick={e => setCnum(cnum - 1)}>이전</button>\n                            <button className=\"modal-move-button\" onClick={e => nextAndSetTemplate()}>다음</button>  \n                        </div>\n                        <div style={{width:'100%', display: 'flex', justifyContent:'center'}}>\n                            <span className=\"ask-another-template\" onClick={e => getAllTemplates(e)}>\n                                앗, 다른 템플릿을 원하시나요?\n                            </span>\n                        </div>\n                    </div>\n                )\n\n            case 4:\n                return(\n                    <div style={{display:'flex', flexDirection:'column'}}>\n                        <div className=\"modal-title\">\n                            멋져요! 디자인은 어떻게 할까요? 🤔\n                        </div>\n                        <div className=\"modal-main-card\">\n                            <div style={{width:'48%'}}>\n                                <div style={{width:'100%', textAlign:'center', margin:'2% 0%'}}>\n                                    폰트를 선택해주세요.\n                                </div>\n                                <OverflowScrolling className=\"font-selections__container\">\n                                    {fontList.map((item, index) => {\n                                        let color = 'none';\n                                        if(item.font === font){\n                                            color = '1px solid #6C63FF';\n                                        }\n                                        return(\n                                            <div className=\"template__card\" key={index}\n                                                onClick={() => {\n                                                    setFont(item.font);\n                                                }}\n                                                style={{border: `${color}`, fontFamily:`${item.font}`, padding:'5% 3%'}}\n                                            >\n                                                <div>\n                                                    {item.name}\n                                                </div>\n                                                <div style={{marginTop:'2%'}}>\n                                                    노코드 랜딩페이지 제작 툴, Surfee\n                                                </div>\n                                            </div>\n                                        )\n                                    })}\n                                </OverflowScrolling>\n                            </div>\n                            <div style={{width:'48%', marginLeft:'2%'}}>\n                                <div style={{width:'100%', textAlign:'center', margin:'2% 0%'}}>\n                                    색상을 선택해주세요.\n                                </div>\n                                <OverflowScrolling className=\"font-selections__container\">\n                                    {colorList.map((item, index) => {\n                                        let bor = 'none';\n                                        if(item.color === color){\n                                            bor = '1px solid #6C63FF';\n                                        }\n                                        return(\n                                            <div className=\"template__card\" key={index}\n                                                onClick={() => {\n                                                    setColor(item.color);\n                                                }}\n                                                style={{border: `${bor}`, padding:'5% 3%'}}\n                                            >\n                                                <div>\n                                                    {item.name}\n                                                </div>\n                                                <div style={{backgroundColor:`${item.color}`}}>\n                                                    색\n                                                </div>\n                                            </div>\n                                        )\n                                    })}\n                                </OverflowScrolling>\n                            </div>\n                        </div>\n                        <div className=\"modal-button-container\">\n                            <button className=\"modal-move-button\" onClick={e => setCnum(cnum - 1)}>이전</button>\n                            <button className=\"modal-move-button\" onClick={() => nextAndSetFont()}>다음</button>\n                        </div>\n                    </div>\n                )\n                break;\n\n            case 5:\n                return(\n                    <div style={{display:'flex', flexDirection:'column'}}>\n                        <div className=\"modal-title\">\n                            마지막으로, <span style={{color:'#6C63FF'}}>{title}</span> 랜딩페이지의 URL을 설정해주세요!\n                        </div>\n                        <div className=\"modal-title\" style={{fontSize:'25px'}}>\n                            <Input className=\"input-holder\" type=\"text\" value={urlId} onChange={e => setUrlId(e.currentTarget.value)} />.surfee.co.kr\n                        </div>\n                            <div style={{color:'gray', paddingLeft:'6%',marginTop:'3%', fontSize:'18px', textAlign:'left', fontFamily:'Pretendard-Regular'}}>\n                                <div>\n                                    - 영문과 숫자만 사용 가능합니다.<br/><br/>\n                                    - 개인 도메인 연결은 다음 버전에 빠르게 업데이트 해올게요!<br/><br/>\n                                    - 수정 가능하니 편하게 설정해주세요 :)<br/><br/>\n                                </div>\n                            </div>\n                        <div className=\"modal-button-container\">\n                            <button className=\"modal-move-button\" onClick={e => setCnum(cnum - 1)}>이전</button>\n                            <button className=\"modal-move-button\" onClick={() => {\n                                nextAndSetDone();\n                            }} style={{backgroundColor:'rgba(255,0,0,0.7)'}}>시작하기</button>\n                        </div>\n                    </div>\n                )\n                break;\n        }\n    }\n\n    return (\n        <div>\n            <Box sx={style}>\n                {/* {editing ? \n                    <span onClick={() => handleClose()} className=\"arrow-hover\" style={{position:'absolute', top:'10px', left:'20px', fontSize:'30px', border:'none', backgroundColor:'#ffffffff', cursor:'pointer', color:'black'}}>\n                        ←\n                    </span>\n                     : */}\n                    <Link to=\"/\" className=\"arrow-back\">\n                        ←\n                    </Link> \n                {/* } */}\n                <div className=\"progress-bar__container\">\n                    {progressList.map((item, index) => {\n                        let backColor = 'rgba(0,0,0,0.3)'\n                        let fontColor = 'rgba(0,0,0,0.6)'\n                        let fontColor2 = 'rgba(0,0,0,0.6)'\n\n                        if(item.num < cnum){\n                            backColor = '#6C63FF'\n                            fontColor = \"white\"\n                            fontColor2 = 'black'\n                        }else if(item.num === cnum){\n                            backColor = 'white'\n                            fontColor = \"#6C63FF\"\n                            fontColor2 = \"#6C63FF\"\n                        }\n\n                        return(\n                            <span style={{display:'flex', flexDirection:'column', margin:'3%', alignItems: 'center', justifyContent: 'center'}}>\n                                <span className=\"list-component\" style={{backgroundColor:`${backColor}`, color:`${fontColor}`, border:`1px solid ${fontColor}`}}>{item.num}</span>\n                                <span style={{fontSize:'12px', color:`${fontColor2}`, marginTop:'12px'}}>{item.name}</span>\n                            </span>\n                        )\n                    })}\n                </div>\n                <div style={{width:'60%'}}>\n                    {content()}\n                </div>\n            </Box>\n        </div>\n    )\n}\n\nexport default FQ\n","/Users/oyejin/Surfee/kiwi/src/pages/Login/Register/RegisterPage.js",["435","436","437"],"import React, {useState, useEffect} from 'react'\nimport { authService } from '../../../tools/fbase'\nimport { firebaseInstance } from '../../../tools/fbase'\nimport { dbService } from '../../../tools/fbase'\nimport { Input } from 'antd';\nimport googlelogo from '../googlelogo.png'\nimport s1 from '../../../tools/img/surfee1.png';\nimport {Link} from 'react-router-dom';\n\nfunction RegisterPage({history}) {\n    const [id, setId] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [done, setDone] = useState(false);\n    const [name, setName] = useState(\"\");\n    const [job, setJob] = useState(\"\");\n\n    const socialLogin = async (e) => {\n        const { \n            target : { name }, \n        } = e;\n        let provider;\n        if (name === \"googleLogin\"){\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\n        }else{\n            console.log(\"이건 뜨면 안되는 메세지.\");\n        }\n\n        const data = await authService.signInWithPopup(provider);\n        await checkRegister(data.user.multiFactor.user.email);\n        setDone(true);\n\n        console.log(data.user.multiFactor.user, \"로그인\");\n    }\n\n    const submit = async (e) => {\n        var data = '';\n        e.preventDefault();\n        try{\n            data = await authService.createUserWithEmailAndPassword(\n                id, password\n            )\n            console.log(data)\n        } catch (err){\n            if(err.code === \"auth/email-already-in-use\"){\n                alert(\"이미 존재하는 아이디입니다. 로그인 해주세요.\");\n                history.push('/#/login');\n                history.go();\n            }else if(err.code === \"auth/invalid-email\"){\n                alert(\"이메일 양식에 맞게 작성해주세요.\");\n            }else{\n                alert(\"옳바르지 않은 회원가입 시도입니다.\");\n            }\n            return;\n        }\n        history.push('/');\n        history.go();\n    }\n\n    const checkRegister = async (email) => {\n        const usersCollections = await dbService\n            .collection(\"users\")\n            .where(\"email\", \"==\", email)\n            .get();\n        \n        const usersExist = usersCollections.docs.map(doc => {\n            return({...doc.data(), id: doc.id})\n        })\n\n        if(usersExist.length === 0){\n            // 구글 아이디로 로그인했는데 회원가입에 정보가 없을 때\n            console.log(\"회원가입 정보를 받습니다.\");\n        }\n    }\n\n    const submitInfo = async () => {\n        await dbService.collection(\"users\").add({\n            name:name,\n            job:job,\n        })\n        alert(\"회원가입이 완료되었습니다.\");\n        history.push('/');\n        history.go();\n    }\n\n    return (\n        <>\n        {done ? \n        <div className=\"login-container\">\n            <div className=\"login__inner\">\n                <div>\n                    회원가입 페이지에 오신 것을 환영합니다.\n                </div>\n                <form className=\"form-container\" onSubmit={e => submitInfo(e)}>\n                    <input \n                        type=\"text\" \n                        placeholder=\"이름을 입력해주세요.\" \n                        required\n                        value={name}   \n                        onChange={e => setName(e.currentTarget.value)}\n                    />\n                    <input  \n                        type=\"text\" \n                        placeholder=\"직업을 입력해주세요.\" \n                        required\n                        value={job} \n                        onChange={e => setJob(e.currentTarget.value)}\n                    />\n                    <input type=\"submit\" value=\"회원가입 완료\" />\n                </form>\n            </div>\n        </div>\n        : \n\n        <div className=\"login-container\">\n            <div className=\"login-container__container\">\n                <div className=\"login__inner\">\n                    <div className=\"login-title\" style={{color:'#6a63f7'}}>\n                        Surfee\n                    </div>\n                    <div className=\"login-title\">\n                        회원가입 페이지에 오신 것을 환영합니다.\n                    </div>\n                    <form onSubmit={e => submit(e)} className=\"center\">\n                        <span className=\"login-label\">\n                            Email\n                        </span>\n                        <Input \n                            type=\"text\" \n                            className=\"login-input\"\n                            placeholder=\"아이디를 입력해주세요.\" \n                            required\n                            value={id}   \n                            onChange={e => setId(e.currentTarget.value)}\n                        />\n                        <span className=\"login-label\">\n                            Password\n                        </span>\n                        <Input  \n                            type=\"password\" \n                            className=\"login-input\"\n                            placeholder=\"비밀번호를 입력해주세요.\" \n                            required\n                            value={password} \n                            onChange={e => setPassword(e.currentTarget.value)}\n                        />\n                        <Input className=\"login-form-button\" type=\"submit\" value=\"회원가입\" />\n                    </form>\n                    <button className=\"google-login-button\" onClick={e => socialLogin(e)} style={{marginTop:'2%'}}>\n                        <img src={googlelogo} width={20}/>\n                        <span style={{marginLeft:'5%'}}>구글 회원가입</span>\n                    </button>\n                    <div style={{padding:'2% 0%', justifyContent:'flex-start', display:'flex', width:'100%'}}>\n                        <Link to=\"/customer\" className=\"footer-text-click\">\n                            개인정보 처리방침\n                        </Link>\n                        <Link to=\"/customer\" className=\"footer-text-click\" style={{marginLeft:'2%'}}>\n                            이용약관\n                        </Link>\n                    </div>\n                </div>\n            </div>\n            <div className=\"login-background\">\n                <img src={s1} width={600} />\n                <div className=\"login-background__desc\" style={{fontFamily:'Pretendard-ExtraBold', marginTop:'2%'}}>\n                    Surfee와 함께 1분만에 완성하는 랜딩페이지\n                </div>\n                <div className=\"login-background__desc\">\n                    Surfee와 함께 1분만에 완성하는 랜딩페이지\n                </div>\n            </div>\n        </div>}\n        </>\n    )\n}\n\nexport default RegisterPage\n","/Users/oyejin/Surfee/kiwi/src/pages/Login/Login/LoginPage.js",["438","439","440","441"],"import React, {useState, useEffect} from 'react';\nimport './LoginRegister.css'\nimport { authService } from '../../../tools/fbase'\nimport { firebaseInstance } from '../../../tools/fbase'\nimport { dbService } from '../../../tools/fbase'\nimport { Input } from 'antd';\nimport googlelogo from '../googlelogo.png'\nimport s1 from '../../../tools/img/surfee1.png';\nimport Footer from '../../NavAndFooter/Footer';\nimport {Link} from 'react-router-dom';\n\nfunction LoginPage({history}) {\n    const [id, setId] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [done, setDone] = useState(false);\n\n    const socialLogin = async (e) => {\n        const { \n            target : { name }, \n        } = e;\n        let provider;\n        // if (name === \"googleLogin\"){\n        provider = new firebaseInstance.auth.GoogleAuthProvider();\n        // }else{\n        //     console.log(\"이건 뜨면 안되는 메세지.\");\n        // }\n\n        const data = await authService.signInWithPopup(provider);\n        await checkRegister(data.user.multiFactor.user.email);\n        history.push('/');\n        history.go();\n    }\n\n    const submit = async (e) => {\n        var data = '';\n        e.preventDefault();\n        try{\n            data = await authService.signInWithEmailAndPassword(\n                id, password\n            )\n            checkRegister(data.user.multiFactor.user.email)\n        } catch (err){\n            console.log(err)\n        }\n        console.log(data)\n    }\n\n    const checkRegister = async (email) => {\n        const usersCollections = await dbService\n            .collection(\"users\")\n            .where(\"email\", \"==\", email)\n            .get();\n        \n        const usersExist = usersCollections.docs.map(doc => {\n            return({...doc.data(), id: doc.id})\n        })\n\n        console.log(\"일단 로그인 성공\", email, usersExist)\n\n\n        if(usersExist.length === 0){\n            // 구글 아이디로 로그인했는데 회원가입에 정보가 없을 때\n            console.log(\"회원가입 정보를 받습니다.\");\n            setDone(true);\n        }else{\n            console.log(\"로그인 완료\");\n            localStorage.setItem(\"name\", usersExist[0].name);\n            localStorage.setItem(\"job\", usersExist[0].job);\n\n            history.push('/');\n            history.go();\n        }\n    }\n\n    return (\n        <>\n        {done ? \n        <div>\n            Initializing... \n            {/* 여기에 회원가입 페이지랑 똑같이 입력받는걸 넣어야 하는 건가..? */}\n        </div>\n        :\n        <div>\n        <div className=\"login-container\">\n            <div className=\"login-container__container\">\n                <div className=\"login__inner\">\n                    <div className=\"login-title\" style={{color:'#6a63f7'}}>\n                        Surfee\n                    </div>\n                    <div className=\"login-title\">\n                        로그인 페이지에 오신 것을 환영합니다.\n                    </div>\n                    <form onSubmit={e => submit(e)} className=\"center\">\n                        <span className=\"login-label\">\n                            Email\n                        </span>\n                        <Input \n                            type=\"text\" \n                            className=\"login-input\"\n                            placeholder=\"아이디를 입력해주세요.\" \n                            required\n                            value={id}   \n                            onChange={e => setId(e.currentTarget.value)}\n                        />\n                        <span className=\"login-label\">\n                            Password\n                        </span>\n                        <Input  \n                            type=\"password\" \n                            className=\"login-input\"\n                            placeholder=\"비밀번호를 입력해주세요.\" \n                            required\n                            value={password} \n                            onChange={e => setPassword(e.currentTarget.value)}\n                        />\n                        <Input className=\"login-form-button\" type=\"submit\" value=\"로그인\" />\n                    </form>\n                    <button className=\"google-login-button\" name=\"googleLogin\" onClick={e => socialLogin(e)} style={{marginTop:'2%'}}>\n                        <img src={googlelogo} width={20}/>\n                        <span style={{marginLeft:'5%'}}>구글 로그인</span>\n                    </button>\n                    <div style={{padding:'2% 0%', justifyContent:'flex-start', display:'flex', width:'100%'}}>\n                        <Link to=\"/customer\" className=\"footer-text-click\">\n                            개인정보 처리방침\n                        </Link>\n                        <Link to=\"/customer\" className=\"footer-text-click\" style={{marginLeft:'2%'}}>\n                            이용약관\n                        </Link>\n                    </div>\n                </div>\n            </div>\n            <div className=\"login-background\">\n                <img src={s1} width={600} />\n                <div className=\"login-background__desc\" style={{fontFamily:'Pretendard-ExtraBold', marginTop:'2%'}}>\n                    Surfee와 함께 1분만에 완성하는 랜딩페이지\n                </div>\n                <div className=\"login-background__desc\">\n                    Surfee와 함께 1분만에 완성하는 랜딩페이지\n                </div>\n            </div>\n        </div>\n        <Footer />\n        </div>\n     }</>\n        \n    )\n}\n\nexport default LoginPage\n","/Users/oyejin/Surfee/kiwi/src/components/Make/utils/SubmitPage.js",["442"],"import React, {useState, useEffect} from 'react'\nimport NavBarV2 from '../../../pages/NavAndFooter/NavBarV2'\nimport Footer from '../../../pages/NavAndFooter/Footer'\n\nimport './SubmitPage.css'\n\nfunction SubmitPage() {\n\n    useEffect(() => {\n    })\n\n    return (\n        <div className=\"after-page-one-container\">\n            <NavBarV2 />\n            <div className=\"after-page\">\n                <div className=\"after-page-title\">\n                축하합니다!\n                랜딩페이지는<br/>\n                https://surfee.co.kr/#/입력하신 urlID<br/>\n                에서 확인하실 수 있습니다.\n                </div>\n                <div className=\"after-page-desc\">\n                데이터를 확인할 수 있는 페이지에 대한 비밀번호는 12시간 내에 이메일로 보내드리겠습니다.<br/>\n                랜딩페이지에 대한 데이터는 매일 자정 경\n                엑셀 파일로 정리하여 보내드릴 예정입니다.<br/><br/>\n                최대한 빠른 시일 내에 자동화할 수 있도록 노력하겠습니다!<br/>\n                저희 Surfee를 이용해주셔서 감사합니다 :)\n                <br/><br/>\n                👉 Surfee가 도움이 되었다면 / 개선을 바라는 점이 있다면<br/>\n                피드백에 참여해주세요!\n                </div>\n                <div className=\"after-page-button-container\">\n                    <a className=\"after-page-button\" href=\"https://6cetqycakbc.typeform.com/to/oRcv6Qdu\">🙋🏻‍♂️ 피드백 하러 가기!</a>\n                </div>\n            </div>\n            <Footer />\n        </div>\n    )\n}\n\nexport default SubmitPage\n","/Users/oyejin/Surfee/kiwi/src/pages/Make/MakePageV2.js",["443","444","445","446","447","448","449","450","451","452","453","454","455","456","457","458"],"import React, {useEffect, useState, useRef, createContext} from 'react'\nimport './MakePage.css'\nimport './MakeLanding.css'\n// Recoil , Immer JS 적용\n// \n\nimport { dbService } from '../../tools/fbase';\nimport { stService } from '../../tools/fbase';\nimport {Link} from 'react-router-dom';\nimport NewSection from '../../components/Make/NewSection'\nimport NewSectionMake from '../../components/Make/Edit/NewSectionMake'\nimport EditSetting from '../../components/Make/Edit/NavFooterSetting/EditSetting'\nimport NavBarInMakePage from './NavBarInMakePage/NavBarInMakePage'\nimport MakeNavigationV2 from '../../components/Make/NavBar/MakeNavigationV2'\nimport MakeFooterV2 from '../../components/Make/Footer/MakeFooterV2'\nimport FirstQuestions from '../Questions/FirstQuestions'\nimport LoadingModal from '../../components/Make/Modal/LoadingModal'\nimport OverflowScrolling from 'react-overflow-scrolling';\nimport { v4 as uuidv4 } from 'uuid';\nimport { useLocation, useParams } from 'react-router';\nimport { base } from '../../components/Make/SectionTypes/baseTypes'\nimport { defaults } from '../../components/Make/SectionTypes/baseTypes'\nimport ReactGa from 'react-ga'\nimport lodash from 'lodash'\nimport EditNaviSection from '../../components/Make/Edit/NavFooterSetting/EditNaviSection'\nimport EditFooterSection from '../../components/Make/Edit/NavFooterSetting/EditFooterSection'\nimport EditContents from '../../components/Make/Edit/NavFooterSetting/EditContents'\nimport ConfirmCustom from '../../tools/ConfirmCustom'\nimport { isMobile } from 'react-device-detect';\n\nexport const MyContext = React.createContext({\n    state : {addingSectionAt : 1000},\n    action : {setAddingSectionAt : () => {}}\n});\n\nconst label = { inputProps: { 'aria-label': 'Switch demo' } };\n\nconst smallfont = `28px`;\nconst bigfont = '50px';\nconst rate = 0.63;\n\nconst NOTADDING = 1000;\n\nconst MakePageV2 = ({history, userObj}, props) => {\n    const targets = useRef(null);\n    // 데이터 베이스에 저장하지 않고 제작을 위해서만 사용되는 것들.\n    const [secNum, setSecNum] = useState(0); // 현재 수정중인 페이지를 의미.\n    const [loading, setLoading] = useState(false);\n    const [open, setOpen] = useState(false); // 첫 질문을 위한 Open\n\n    const [isPhone, setIsPhone] = useState(true);\n    const [full, setFull] = useState(false);\n    const [isWidget, setIsWidget] = useState(true);\n    const [password, setPassword] = useState(\"\");\n    const [nowState, setNowState] = useState('new');\n    const [load, setLoad] = useState(false);\n    const [editing, setEditing] = useState(false);\n    const [category, setCategory] = useState(0);\n    const location = useLocation();\n      \n    // 메인 세팅\n    const [setting, setSetting] = useState(lodash.cloneDeep(defaults.setting));\n\n    // 새로운 세팅\n    // local storage 저장을 위한 contents 재설정 - video의 용량 초과 때문에 일단..ㅠ\n    const arr = lodash.cloneDeep(base[0])\n    delete arr.video.file\n    const [contents, setContents] = useState([ arr, lodash.cloneDeep(base[1]), lodash.cloneDeep(base[2]), lodash.cloneDeep(base[4]) ])\n\n    // 네비게이션\n    const [navi, setNavi] = useState(lodash.cloneDeep(defaults.navi));\n\n    // 푸터\n    const [foot, setFoot] = useState(lodash.cloneDeep(defaults.foot));\n\n    const [addingSectionAt, setAddingSectionAt] = useState(NOTADDING); // 1000은 추가하고 있지 않다는 것을 의미.\n\n    // 푸터\n    const [footerOrNot, setFooterOrNot] = useState(false);\n    // 반복 실행되는 useEffect\n    useEffect(() => {\n        // to report page view\n        // ReactGa.initialize('UA-213792742-1');\n        // ReactGa.pageview(`/making/${userObj.email}`);\n        console.log(arr)\n        function repeat(){\n            localStorage.setItem('temp', JSON.stringify([contents, navi, foot, setting]));\n        }\n        // 30초에 한번 씩 자동 저장\n        let id = setInterval(repeat, 30000);\n        return () => clearInterval(id);\n    })\n\n    // 처음에 한번만 실행되는 useEffect\n    useEffect(() => {\n        \n        // 관리하기 페이지에서 state.item으로 내용을 가지고 넘어왔다.\n        if(location.state !== undefined){\n\n            const arr = location.pathname.split('/');\n            setNowState(arr[arr.length -1]);\n\n            const item = location.state.item;\n            setContents(item[0]);\n            setNavi(item[1]);\n            setFoot(item[2]);\n            setSetting(item[3]);\n            setOpen(false);\n            setEditing(true);\n        }else{\n            // 로컬스토리지에 저장되어인게 있다면\n            if(localStorage.getItem('temp') !== null){\n                \n                // const cf = window.confirm(\"작업중이던 페이지가 있습니다. 불러오시겠습니까? 취소 시 이전에 작업하던 내용은 사라집니다.\");\n\n                setFooterOrNot(true);\n\n                // if(cf){\n                //     const temp = JSON.parse(localStorage.getItem('temp'));\n                //     setContents(temp[0]);\n                //     setNavi(temp[1]);\n                //     setFoot(temp[2]);\n                //     setSetting(temp[3]);\n                //     setOpen(false);\n                //     setEditing(true);\n                // }else{\n                // }\n            }else{\n                localStorage.setItem('temp', JSON.stringify([contents, navi, foot, setting]));\n            }\n        }\n\n        setLoad(true);\n    },[])\n\n    const contextValue = {\n        state: {addingSectionAt, secNum, contents, isPhone, category, setting},\n        action : {setAddingSectionAt, setSecNum, setContents, setIsPhone, setCategory, setSetting},\n    }\n\n    const loadLocalStorage = () => {\n        const temp = JSON.parse(localStorage.getItem('temp'));\n        setContents(temp[0]);\n        setNavi(temp[1]);\n        setFoot(temp[2]);\n        setSetting(temp[3]);\n        setOpen(false);\n        setEditing(true);\n    }\n\n    const doSave = async () => {\n        // 저장하기\n        if(password.length < 4){\n            alert(\"4글자 이상 입력해주시기 바랍니다.\");\n            return;\n        }else{\n            setLoading(true);\n            const checkDatas = await dbService\n                .collection(\"apply-landing\")\n                .get(); // uid를 creatorId로 줬었으니까.\n            let checkData = checkDatas.docs.map(doc => {\n                return({...doc.data(), id:doc.id})\n            });\n\n            const attachmentRef = stService.ref().child(`${setting.urlId}/${uuidv4()}`)\n\n            const oneLandingPage = {\n\n            }\n\n            if(checkData.length === 0){\n                // 없으면 새로 저장\n                await dbService.collection(\"apply-landing\").add(oneLandingPage);\n                alert(\"저장되었습니다!\");\n                setLoading(false);\n                return;\n            }else{\n                // 있으면 업데이트                \n                await dbService.doc(`apply-landing/${checkData[0].id}`)\n                .update(oneLandingPage)\n                alert(\"저장되었습니다!\");\n                setLoading(false);\n                return;\n            }\n        }\n    }\n\n    const doLoad = async () => {\n        setLoading(true);\n        const checkDatas = await dbService\n            .collection(\"apply-landing\")\n            .where(\"password\", \"==\", password)\n            .get(); // uid를 creatorId로 줬었으니까.\n        let checkData = checkDatas.docs.map(doc => {\n            return({...doc.data(), id:doc.id})\n        });\n\n        if(checkData.length === 0){\n            alert(\"해당하는 불러오기 정보가 없습니다!\");\n            return;\n        }else{\n\n        }\n    }\n\n    const sectionsReturn = contents.map((item, index) => {\n        return(\n            <div style={{width:'100%'}}>\n                <NewSection content={item} index={index} setSecNum={setSecNum} contents={contents} setContents={setContents} />\n            </div>\n        )\n    })\n\n    const backgroundClick = e => {\n        // if(e.target.className === \"make-left-landing\" || e.target.className === \"for-section-hover\"){\n        //     setSecNum(CONTENTSSECNUM)\n        //     setAddingSectionAt(NOTADDING);\n        // }\n        // else{\n        //     return;\n        // }\n    }\n\n    return (<>\n    { isMobile ? \n        <div className=\"mobile-hide\">\n            <div>\n                본 사이트는 PC환경에 최적화되어있습니다. <br />\n                PC로 이동해서 랜딩페이지 제작을 시작해보세요. 😁\n            </div>\n        </div> \n        :\n    <>\n       <MyContext.Provider value={contextValue}>\n            <NavBarInMakePage \n                doLoad={doLoad} history={history} userObj={userObj}\n                open={open} setOpen={setOpen}\n                full={full} setFull={setFull}\n                isPhone={isPhone} setIsPhone={setIsPhone} doSave={doSave}\n                nowState={nowState}\n                loading={loading} setLoading={setLoading}\n                navi={navi} foot={foot} setting={setting}\n            />\n            <div className=\"make-page-container\">\n                {/* 아래는 제작하는 곳 */}\n                <div style={{display:'flex', justifyContent:'center', alignItems: 'center'}}>\n                    <div className=\"make-page-make-space\" style={{display:`${full ? 'none' : 'flex'}`}}>\n                        <OverflowScrolling className='overflow-scrolling'>\n                            {/* 제작페이지 메인 */}\n                           <NewSectionMake content={contents[secNum]} foot={foot} setFoot={setFoot} navi={navi} setNavi={setNavi} setting={setting} setSetting={setSetting} />\n                        </OverflowScrolling>\n                    </div>\n                    <div className=\"fake-make\">\n                    </div>\n                </div>\n                {/* 아래는 미리보기 화면 */}\n                <div className=\"make-left-landing\" onClick={e => backgroundClick(e)}>\n                    <div className=\"scroll-container\" \n                        style={{ width:`${full ? '100%' :'90%'}`}}\n                        animate={\n                            isPhone ? {\n                                width:['80%', '40%'],\n                                transition:{\n                                    duration:0.3\n                                }\n                            } : {}\n                        }>\n                        {/* 실시간으로 바뀌는 모습이 보이는 랜딩페이지 */}\n                        <div ref={targets} className=\"make-main-page-container\" style={{fontSize:`${full ? `${bigfont}` : `${smallfont}`}`, borderRadius:`${isPhone ? '7px' : '0px'}` }}>  \n                            \n                            {/* 네비게이션 */}\n                            {navi.use && <MakeNavigationV2 full={full} navi={navi} setNavi={setNavi} history={history} /> }\n                            \n                            {/* 섹션 디스플레이 */}\n                            \n                            {sectionsReturn}\n\n                            {/* 푸터 */}\n                            {foot.use && <MakeFooterV2 full={full} history={history} foot={foot} setFoot={setFoot} /> }                             \n\n                            { ( setting.fta.use ) &&\n                            <div style={{width:`${isPhone ? 300 : 600}px`}}>\n                                <button className=\"fta-button\" style={{backgroundColor:`${setting.fta.backgroundColor}`, width:`${setting.fta.size}%`, borderRadius:`${setting.fta.shape}px`}}>\n                                    {setting.fta.text}\n                                </button>\n                            </div>\n                            }\n                        </div>\n                    </div>\n                </div>\n            </div>\n            \n            {/* 모달 모아두기 */}\n            <div style={{display: 'flex', width:'80%', justifyContent: 'center', alignItems:'center', marginTop:'10%', position:'absolute', bottom:'70px'}}>\n                <FirstQuestions open={open} setOpen={setOpen} navi={navi} setNavi={setNavi} editing={editing} setEditing={setEditing} setting={setting} setSetting={setSetting}/>\n                <LoadingModal loading={loading} />\n            </div>\n            <ConfirmCustom open={footerOrNot} setOpen={setFooterOrNot} message={\"제작 중이던 페이지가 있습니다. 불러오시겠습니까? 취소 시 이전에 작업하던 내용은 사라집니다.\"} callback={ loadLocalStorage } />\n        </MyContext.Provider>\n        </> }\n        </>)\n}\n\nexport default MakePageV2\n","/Users/oyejin/Surfee/kiwi/src/pages/NavAndFooter/Footer.js",[],"/Users/oyejin/Surfee/kiwi/src/components/Response/MadeLandingCard.js",["459","460"],"import React, {useState} from 'react'\nimport { Link } from 'react-router-dom'\nimport ConfirmCustom from '../../tools/ConfirmCustom'\nimport {dbService, stService} from '../../tools/fbase'\nimport './MadeLandingCard.css'\n\nfunction MadeLandingCard({item, index, setNowChecking, history}) {\n    const [deleteopen, setDeleteOpen] = useState(false)\n\n    const deletePage = async () => {\n        const dbgallery = await dbService\n        .collection(\"made-page\")\n        .where(\"urlId\", \"==\", item.setting.urlId)\n        .get()\n        \n        let dbgal = dbgallery.docs.map(doc => {return({...doc.data(), gal_id:doc.id})})\n        \n        //delete 파일도 같이 지워져야만 한다.\n        await dbService.doc(`apply-landing-data/${item.id}`).delete();\n        // await stService.refFromURL(item.attachmentURL).delete(); // URL만 가지고도 refence를 획득할 수 있게 해준다.\n\n        // like에서도 지워야됨.\n\n        // 새로고침 시키기\n        alert(\"삭제했습니다.\")\n    }\n\n    return (\n        <div className=\"page-card\" key={index}>\n            {item.urlTitle}\n            <Link to={{\n                pathname:`/make/edit`,\n                state:{\n                    item:item\n                }\n                }}>\n                편집하기\n            </Link>\n            <button onClick={() => {setDeleteOpen(true)}}>삭제하기</button>\n            <button>{\"https://\" + item.setting.urlId + \".surfee.co.kr/#/\"}</button>\n            <span onClick={() => {setNowChecking(index)}}>이 정보 보기</span>\n            <ConfirmCustom open={deleteopen} setOpen={setDeleteOpen} message={\"한번 삭제하면 복구할 수 없습니다. 정말 삭제하시겠습니까?\"} callback={deletePage}/>\n        </div>\n    )\n}\n\nexport default MadeLandingCard\n","/Users/oyejin/Surfee/kiwi/src/components/Make/tools/Icons.js",[],"/Users/oyejin/Surfee/kiwi/src/pages/NavAndFooter/NavBar/NavBar.js",["461","462"],"import React, {useState, useEffect} from 'react'\nimport './utils/NavBar.css'\nimport {Link} from 'react-router-dom';\n\n\nfunction NavBar({history}) {\n    const [scrollPosition, setScrollPosition] = useState(0);\n    const [back, setBack] = useState(0);\n\n    const updateScroll = () => {\n        setScrollPosition(window.scrollY || document.documentElement.scrollTop);\n    }\n    \n    useEffect(()=>{\n        window.addEventListener('scroll', updateScroll);\n        if(scrollPosition < 50){\n            setBack(scrollPosition*(1/50));\n        }else{\n            setBack(1);\n        }\n    });\n\n    return (\n        <>\n        <div className={scrollPosition < 50 ? \"nav-bar-container-top\" : \"nav-bar-container\"} \n        style={{backgroundColor:`rgba(255,255,255,1)`, color:`rgba(${255-back*149},${255-back*156},${255-back*8},1)`\n        }}>\n            <span className=\"nav-bar-title\" onClick={() => {history.push('/#/'); history.go();}} style={{cursor:'pointer'}}>\n                Surfee\n            </span>\n            <span className=\"nav-on\">\n                <button className=\"nav-button\" onClick={() => window.scrollTo(0,document.body.scrollHeight)}>사전신청 하기</button>\n            </span>\n        </div>\n        </>\n    )\n}\n\nexport default NavBar\n","/Users/oyejin/Surfee/kiwi/src/components/Customer/QnA.js",[],"/Users/oyejin/Surfee/kiwi/src/components/Customer/Term.js",[],"/Users/oyejin/Surfee/kiwi/src/components/Customer/PersonalInformation.js",[],"/Users/oyejin/Surfee/kiwi/src/components/Make/NewSection.js",["463","464","465","466","467","468","469","470"],"import React, {useState,useContext} from 'react'\nimport DetailSection from './SectionTypes/DetailSection'\nimport HeroSection from './SectionTypes/HeroSection'\nimport PriceSection from './SectionTypes/PriceSection'\nimport ReviewSection from './SectionTypes/ReviewSection'\nimport FeaturesSection from './SectionTypes/FeaturesSection'\nimport CtaSection from './SectionTypes/CtaSection'\n\nimport HorizontalSection from './SectionTypes/HorizontalSection'\nimport {animations} from './tools/animations'\nimport './NewSection.css'\nimport { MyContext } from '../../pages/Make/MakePageV2'\nimport { motion } from 'framer-motion'\nimport {Delete, Options} from '@styled-icons/fluentui-system-filled'\n\nfunction NewSection({content, index, contents, setContents}) {\n    const [adding, setAdding] = useState(false);\n    const [isHover, setIsHover] = useState('none');\n    const {state, action} = useContext(MyContext)\n\n    const returnType = () => {\n        switch(content.sectionTypeName){\n            case 'DetailSection':\n                return (\n                    <DetailSection content={content}  contents={contents} setContents={setContents}/>\n                )\n\n            case 'HeroSection':\n                return (\n                    <HeroSection content={content}  contents={contents} setContents={setContents}/>\n                )\n\n            case 'ReviewSection':\n                return (\n                    <ReviewSection content={content}/>\n                )\n\n            case 'FeaturesSection':\n                return (\n                    <FeaturesSection content={content}/>\n                )\n\n            case 'PriceSection':\n                return (\n                    <PriceSection content={content}/>\n                )\n\n            case 'HorizontalSection':\n                return (\n                    <HorizontalSection content={content}/>\n                )\n\n            case 'CtaSection':\n                return (\n                    <CtaSection content={content}/>\n                )\n\n            default:\n                return (\n                    <div>\n                        기본\n                    </div>\n                )\n        }\n    }\n\n    const setThisSection = () => {\n        action.setSecNum(index);\n        action.setCategory(0);\n    }\n\n    return(\n        <div className=\"new-section\" onMouseEnter={() => setIsHover('flex')} onMouseLeave={() => setIsHover('none')}>\n            <div className=\"for-section-hover\" style={{backgroundColor: `${isHover === 'flex' ? 'rgba(200,200,200,0.7)' : 'rgba(0,0,0,0)'}`}}>\n\n            </div>\n            <div className=\"section__container\" \n            // style={{backgroundImage:`url(${content.backgroundImage.attachment})`}} \n            onClick={() => setThisSection()}>\n                {/* 실제 섹션이 보여지는건 여기밖에 없음,, */}\n                <div style={{backgroundColor:`${content.backgroundColor}`, opacity:`${content.backgroundOpacity}`, width:'100%', height:'100%', zIndex:2, position:'absolute'}}>\n                </div>\n                <div style={{fontSize:'0.6em', width:'100%', zIndex:3}}>\n                    {returnType()}\n                </div>\n            </div>\n        </div>\n    )\n}\n\n{/* \n    <div className=\"section-selection-container\" style={{display:`${isHover}`}}>\n{ state.contents.length > 0 && \n    <span className=\"section-option\" onClick={() => deleteThisSection()}>\n        <Delete size=\"20\" />\n    </span> }\n<span className=\"section-option\" onClick={() => { action.setSecNum(index); action.setAddingSectionAt(1000); }}>\n    <Options size=\"20\" />\n</span>\n{ index !== 0 && \n    <span className=\"section-option\" onClick={() => moveUp()}>\n        <ArrowUpShort size=\"20\" />\n    </span> }\n{ index !== state.contents.length-1 && \n    <span className=\"section-option\" onClick={() => moveDown()}>\n        <ArrowDownShort size=\"20\" />\n    </span> }\n</div> \n*/}\n\nexport default NewSection\n","/Users/oyejin/Surfee/kiwi/src/components/Make/Modal/LoadingModal.js",["471","472","473","474"],"import React, {useState} from 'react'\nimport { styled, Box } from '@mui/system';\nimport ModalUnstyled from '@mui/base/ModalUnstyled';\n\nconst StyledModal = styled(ModalUnstyled)`\n  position: fixed;\n  z-index: 1300;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Backdrop = styled('div')`\n  z-index: -1;\n  position: fixed;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  left: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  -webkit-tap-highlight-color: transparent;\n`;\n\nconst style = {\n  width: 500,\n  bgcolor: 'rgba(255,255,255,0.2)',\n  border: '2px solid #000',\n  p: 2,\n  px: 4,\n  pb: 3,\n};\n\nfunction LoadingModal({loading, setLoading}) {\n    const [cnum, setCnum] = useState(1);\n    const handleOpen = () => setLoading(true);\n    const handleClose = () => setLoading(false);\n\n    return (\n        <div>\n            <StyledModal\n                aria-labelledby=\"unstyled-modal-title\"\n                aria-describedby=\"unstyled-modal-description\"\n                open={loading}\n                BackdropComponent={Backdrop}\n            >\n                <Box sx={style}>\n                    <span>로딩중</span>\n                </Box>\n            </StyledModal>\n        </div>\n    )\n}\n\nexport default LoadingModal\n","/Users/oyejin/Surfee/kiwi/src/pages/Questions/FirstQuestions.js",["475","476","477","478","479","480","481","482","483","484"],"import React, {useState, useEffect, useContext} from 'react'\nimport { styled, Box } from '@mui/system';\nimport ModalUnstyled from '@mui/base/ModalUnstyled';\nimport '../../components/Make/Modal/Modal.css';\nimport './FirstQuestions.css'\nimport {Link} from 'react-router-dom'\nimport { MyContext } from '../Make/MakePageV2'\nimport {dbService} from '../../tools/fbase';\nimport OverflowScrolling from 'react-overflow-scrolling';\n\nimport good from '../../tools/info/good3d.png';\n\nimport { Input } from 'antd';\n\nconst StyledModal = styled(ModalUnstyled)`\n  position: fixed;\n  z-index: 1300;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius:10px;\n`;\n\nconst Backdrop = styled('div')`\n  z-index: -1;\n  position: fixed;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  left: 0;\n  background-color: rgba(0, 0, 0, 0.2);\n  -webkit-tap-highlight-color: transparent;\n`;\n\nconst style = {\n  width: '100vw',\n  height: '100vh',\n  bgcolor: 'rgba(255,255,255,1)',\n  border: '0px solid #000',\n  flexDirection:'column',\n  p: 2,\n  px: 4,\n  pb: 3,\n  display:'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n//   borderRadius:'20px',\n  position:'relative',\n}\n\nconst StyledModal2 = styled(ModalUnstyled)`\n  position: fixed;\n  z-index: 1300;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius:10px;\n`;\n\nconst Backdrop2 = styled('div')`\n  z-index: -1;\n  position: fixed;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  left: 0;\n  background-color: rgba(0, 0, 0, 0.2);\n  -webkit-tap-highlight-color: transparent;\n`;\n\nconst style2 = {\n  width: '30vw',\n  height: '80vh',\n  bgcolor: 'rgba(255,255,255,1)',\n  border: '0px solid #000',\n  flexDirection:'column',\n  p: 2,\n  px: 4,\n  pb: 3,\n  display:'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n//   borderRadius:'20px',\n};\n\nconst progressList = [\n    {\n        num:1,\n        name:'NAME',\n    },\n    {\n        num:2,\n        name:'GOAL',\n    },\n    {\n        num:3,\n        name:'TEMPLATE',\n    },\n    {\n        num:4,\n        name:'DESIGN',\n    },\n    {\n        num:5,\n        name:'URL',\n    },\n]\n\nconst secondQuestion = [\n    {\n        typequestion: \"🍎 앱 다운로드\",\n        question : \"많은 사람들이 우리의 앱을 다운로드 하면 좋겠어요\",\n        type:'app',\n    },\n    {\n        typequestion: \"✍️ 사전신청\",\n        question : \"사전신청을 많이 받고 싶어요\",\n        type:'pre',\n    },\n    {\n        typequestion: \"💰 판매\",\n        question : \"서비스/제품을 많이 팔고 싶어요\",\n        type:'sell',\n    },\n    {\n        typequestion: \"🎁 이벤트\",\n        question : \"이벤트를 널리 알리고 싶어요\",\n        type:'event',\n    },\n    {\n        typequestion: \"📚 포트폴리오\",\n        question : \"멋진 나를 알리고 싶어요\",\n        type:'portfolio',\n    },\n    {\n        typequestion: \"🎸 기타\",\n        question : \"다른 목표를 향하고 있습니다\",\n        type:'etc',\n    },\n]\n\nconst fontList = [\n    {\n        name:'Noto Sans KR',\n        font:'Noto Sans KR',\n    },\n    {\n        name:'Pretendard',\n        font:'Pretendard-Regular',\n    },\n    {\n        name:'에스코어드림',\n        font:'Noto Sans KR',\n    },\n    {\n        name:'Noto Sans KR',\n        font:'Noto Sans KR',\n    },,\n    {\n        name:'Noto Sans KR',\n        font:'Noto Sans KR',\n    },,\n    {\n        name:'Noto Sans KR',\n        font:'Noto Sans KR',\n    },\n]\nconst colorList = [\n    {\n        name:'검',\n        color:'rgba(0,0,0,1)',\n    },\n    {\n        name:'차분',\n        color:'rgba(255,255,255,1)',\n    },\n    {\n        name:'노',\n        color:'rgba(0,255,255,1)',\n    },\n    {\n        name:'빨',\n        color:'rgba(250,0,0,1)',\n    },,\n    {\n        name:'초',\n        color:'rgba(0,250,0,1)',\n    },,\n    {\n        name:'파',\n        color:'rgba(0,0,250,1)',\n    },\n]\n\nfunction FirstQuestions({open, setOpen, navi, setNavi, setting, setSetting}) {\n    // 모달\n    const [cnum, setCnum] = useState(1);\n    const [type, setType] = useState(\"\");\n    const [templates, setTemplates] = useState([]);\n    const [templateNum, setTemplateNum] = useState(0);\n    const [font, setFont] = useState('');\n    const [color, setColor] = useState('');\n    const [tmodalOpen, setTmodalOpen] = useState(false);\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    const handleOpen = () => setOpen(true);\n    const handleClose = async () => {\n        // 마지막에는 입력한 정보도 저장한다. 근데 한명껄 여러번 저장해서 헷갈리지 않게..!\n\n        await dbService.collection('question_answers').add({\n            createdAt: new Date(),\n        })\n        setOpen(false)\n    };\n\n    useEffect(() => {\n        \n        setCnum(1);\n    },[open]);\n\n    const onChangeTitle = e => {\n        let newNavi = Object.assign({}, navi)\n        newNavi.title = e.currentTarget.value\n        setNavi(newNavi)\n    }\n\n    const onUrlChange = e => {\n        let newSetting = Object.assign({}, setting)\n        newSetting.urlId = e.currentTarget.value\n        setSetting(newSetting)\n    }\n\n    const nextAndSetTemplates = async (e) => {\n        if(type === \"\"){\n            alert(\"위의 보기 중 한가지를 선택해주세요.\");\n            return\n        }else{\n            const typeTemplatesdata = await dbService\n                .collection(\"templates\")\n                .where(\"type\", \"==\", type)\n                .get(); // uid를 creatorId로 줬었으니까.\n\n            let typeTemplates = typeTemplatesdata.docs.map(doc => {\n                return({...doc.data(), id:doc.id})\n            });\n\n            setTemplates(typeTemplates);\n            setCnum(cnum + 1);\n        }\n    }\n\n    const nextAndSetTemplate = async (e) => {\n        if(templateNum === 0){\n            alert(\"위의 보기 중 한가지를 선택해주세요.\");\n            return\n        }else{\n            // templates.filter(doc => doc.type === type && doc.templateNum === templateNum)[0]\n            // 이걸 set Contents에.\n            // action.setContents(templates.filter(doc => doc.type === type && doc.templateNum === templateNum)[0])\n\n            setCnum(cnum + 1);\n        }\n    }\n\n    const nextAndSetFont = async e => {\n        if(font === ''){\n            alert(\"위의 보기 중 한가지를 선택해주세요.\");\n            return\n        }else{\n            setCnum(cnum + 1);\n        }\n    }\n    const nextAndSetDone = async e => {\n\n        const urlDatas = await dbService\n            .collection(\"urlStores\")\n            .where(\"urlId\", \"==\", setting.urlId)\n            .get(); // uid를 creatorId로 줬었으니까.\n        \n        let urlData = urlDatas.docs.map(doc => {\n            return({...doc.data(), id:doc.id})\n        });\n\n        if(setting.urlId === ''){\n            alert(\"URL을 입력해주세요. 이후 페이지에서 수정가능합니다.\");\n            return\n        }else if(urlData.length > 0){\n            alert(\"이미 존재하는 url입니다. 다른 url을 사용해주세요.\");\n            return;\n        }else{\n            action.setContents(templates.filter(doc => doc.type === type && doc.templateNum === templateNum)[0])\n\n            localStorage.setItem('editing', true);\n            handleClose();\n        }\n    }\n\n    const getAllTemplates = async(e) => {\n        const typeTemplatesdata = await dbService\n            .collection(\"templates\")\n            .get(); // uid를 creatorId로 줬었으니까.\n\n        let typeTemplates = typeTemplatesdata.docs.map(doc => {\n            return({...doc.data(), id:doc.id})\n        });\n\n        setTemplates(typeTemplates);\n    }\n\n    const showTemplateModal = () => {\n        setTmodalOpen(true);\n    }\n\n    const content = () => {\n        switch(cnum){\n            case 1:\n                return(\n                    <div style={{display:'flex', flexDirection:'column'}}>\n                        <form onSubmit={() => setCnum(cnum + 1)} style={{display:'flex', flexDirection:'column', justifyContent: 'center', alignItems: 'center'}}>\n                            <div className=\"modal-main-card\">\n                                <div className=\"modal-title\">\n                                    안녕하세요! <span style={{color:'#6C63FF'}}>Surfee</span>에 오신 것을 환영합니다! <br/>\n                                    당신의 서비스 / 제품 명을 알려주세요. 😊\n                                </div>\n                            </div>\n                            <Input className=\"input-holder\" type=\"text\" placeholder=\"한글은 8자 이내, 영문 10자 이내일 때 가장 이뻐요!\" value={navi.title} onChange={e => onChangeTitle(e)} />\n                            <div className=\"modal-button-container\">\n                                <button className=\"modal-move-button\" onSubmit={e => setCnum(cnum + 1)} style={{visibility:`${navi.title.length > 0 ? 'visible' : 'hidden'}`, display:'flex'}} \n                                    onClick={e => setCnum(cnum + 1)}>확인</button>  \n                            </div>\n                        </form>\n                    </div>\n                )\n                break;\n\n            case 2:\n                return(\n                    <div style={{display:'flex', flexDirection:'column'}}>   \n                        <div className=\"modal-title\">\n                            <span style={{color:'#6C63FF'}}>{navi.title}</span>의 랜딩페이지는 다음 중 어떤 목표를 향하고 있나요? 🚀\n                        </div>                     \n                        <div className=\"modal-main-card\">\n                            {\n                                secondQuestion.map((item, index) => {\n                                    let color = 'none';\n                                    if(item.type === type){\n                                        color = '1px solid #6C63FF';\n                                    }\n                                    return(\n                                        <div className=\"button1\" onClick={() => {setType(item.type);}} key={index} \n                                            style={{border:`${color}`}}>\n                                            <div style={{fontSize:'20px'}}>\n                                                {item.typequestion}\n                                            </div>\n                                            <div style={{marginTop:'4%'}}>\n                                                {item.question}\n                                            </div>\n                                        </div>\n                                    )\n                                })\n                            }\n                        </div>\n                        <div className=\"modal-button-container\">\n                            <button className=\"modal-move-button\" onClick={e => setCnum(cnum - 1)}>이전</button>\n                            <button className=\"modal-move-button\" onClick={e => nextAndSetTemplates(e)}>다음</button>  \n                        </div>\n                    </div>\n                )\n                break;\n\n            case 3:\n                return(\n                    <div style={{display:'flex', flexDirection:'column'}}> \n                        <div className=\"modal-title\">\n                            그렇다면 이런 템플릿을 추천해드릴게요 😎\n                        </div>\n                        <div className=\"modal-main-card\">\n                            {\n                                templates.map((item, index) => {\n                                    let color = 'none';\n                                    if(item.type === type && templateNum === item.templateNum){\n                                        color = '1px solid #6C63FF';\n                                    }\n                                    return(\n                                        <div>\n                                            <div className=\"template__card\" key={index}\n                                                onClick={() => {\n                                                    setTemplateNum(item.templateNum);\n                                                    setType(item.type);\n                                                }}\n                                                style={{border: `${color}`}} >\n\n                                                <span className=\"magnify-button\" onClick={() => showTemplateModal()}>↗</span>\n                                                \n                                                <img src={good} width={240} />\n                                                \n                                                <div>\n                                                    {item.type}\n                                                    {item.templateName}\n                                                </div>\n                                            </div>\n                                        </div>\n                                    )\n                                })\n                            }\n                        </div>\n                        <div className=\"modal-button-container\">\n                            <button className=\"modal-move-button\" onClick={e => setCnum(cnum - 1)}>이전</button>\n                            <button className=\"modal-move-button\" onClick={e => nextAndSetTemplate()}>다음</button>  \n                        </div>\n                        <div style={{width:'100%', display: 'flex', justifyContent:'center'}}>\n                            <span className=\"ask-another-template\" onClick={e => getAllTemplates(e)}>\n                                앗, 다른 템플릿을 원하시나요?\n                            </span>\n                        </div>\n                    </div>\n                )\n\n            case 4:\n                return(\n                    <div style={{display:'flex', flexDirection:'column'}}>\n                        <div className=\"modal-title\">\n                            멋져요! 디자인은 어떻게 할까요? 🤔\n                        </div>\n                        <div className=\"modal-main-card\">\n                            <div style={{width:'48%'}}>\n                                <div style={{width:'100%', textAlign:'center', margin:'2% 0%'}}>\n                                    폰트를 선택해주세요.\n                                </div>\n                                <OverflowScrolling className=\"font-selections__container\">\n                                    {fontList.map((item, index) => {\n                                        let color = 'none';\n                                        if(item.font === font){\n                                            color = '1px solid #6C63FF';\n                                        }\n                                        return(\n                                            <div className=\"template__card\" key={index}\n                                                onClick={() => {\n                                                    setFont(item.font);\n                                                }}\n                                                style={{border: `${color}`, fontFamily:`${item.font}`, padding:'5% 3%'}}\n                                            >\n                                                <div>\n                                                    {item.name}\n                                                </div>\n                                                <div style={{marginTop:'2%'}}>\n                                                    노코드 랜딩페이지 제작 툴, Surfee\n                                                </div>\n                                            </div>\n                                        )\n                                    })}\n                                </OverflowScrolling>\n                            </div>\n                            <div style={{width:'48%', marginLeft:'2%'}}>\n                                <div style={{width:'100%', textAlign:'center', margin:'2% 0%'}}>\n                                    색상을 선택해주세요.\n                                </div>\n                                <OverflowScrolling className=\"font-selections__container\">\n                                    {colorList.map((item, index) => {\n                                        let bor = 'none';\n                                        if(item.color === color){\n                                            bor = '1px solid #6C63FF';\n                                        }\n                                        return(\n                                            <div className=\"template__card\" key={index}\n                                                onClick={() => {\n                                                    setColor(item.color);\n                                                }}\n                                                style={{border: `${bor}`, padding:'5% 3%'}}\n                                            >\n                                                <div>\n                                                    {item.name}\n                                                </div>\n                                                <div style={{backgroundColor:`${item.color}`}}>\n                                                    색\n                                                </div>\n                                            </div>\n                                        )\n                                    })}\n                                </OverflowScrolling>\n                            </div>\n                        </div>\n                        <div className=\"modal-button-container\">\n                            <button className=\"modal-move-button\" onClick={e => setCnum(cnum - 1)}>이전</button>\n                            <button className=\"modal-move-button\" onClick={() => nextAndSetFont()}>다음</button>\n                        </div>\n                    </div>\n                )\n                break;\n\n            case 5:\n                return(\n                    <div style={{display:'flex', flexDirection:'column'}}>\n                        <div className=\"modal-title\">\n                            마지막으로, <span style={{color:'#6C63FF'}}>{navi.title}</span> 랜딩페이지의 URL을 설정해주세요!\n                        </div>\n                        <div className=\"modal-title\" style={{fontSize:'25px'}}>\n                            <Input className=\"input-holder\" type=\"text\" value={setting.urlId} onChange={e => onUrlChange(e)} />.surfee.co.kr\n                        </div>\n                            <div style={{color:'gray', paddingLeft:'6%',marginTop:'3%', fontSize:'18px', textAlign:'left', fontFamily:'Pretendard-Regular'}}>\n                                <div>\n                                    - 영문과 숫자만 사용 가능합니다.<br/><br/>\n                                    - 개인 도메인 연결은 다음 버전에 빠르게 업데이트 해올게요!<br/><br/>\n                                    - 수정 가능하니 편하게 설정해주세요 :)<br/><br/>\n                                </div>\n                            </div>\n                        <div className=\"modal-button-container\">\n                            <button className=\"modal-move-button\" onClick={e => setCnum(cnum - 1)}>이전</button>\n                            <button className=\"modal-move-button\" onClick={() => {\n                                nextAndSetDone();\n                            }} style={{backgroundColor:'rgba(255,0,0,0.7)'}}>시작하기</button>\n                        </div>\n                    </div>\n                )\n                break;\n        }\n    }\n\n    return (\n        <div>\n        <StyledModal\n            aria-labelledby=\"unstyled-modal-title\"\n            aria-describedby=\"unstyled-modal-description\"\n            open={open}\n            BackdropComponent={Backdrop}\n        >\n            <Box sx={style}>\n                <Link to=\"/\" className=\"arrow-back\">\n                    ←\n                </Link> \n                <div className=\"progress-bar__container\">\n                    {progressList.map((item, index) => {\n                        let backColor = 'rgba(0,0,0,0.3)'\n                        let fontColor = 'rgba(0,0,0,0.6)'\n                        let fontColor2 = 'rgba(0,0,0,0.6)'\n\n                        if(item.num < cnum){\n                            backColor = '#6C63FF'\n                            fontColor = \"white\"\n                            fontColor2 = 'black'\n                        }else if(item.num === cnum){\n                            backColor = 'white'\n                            fontColor = \"#6C63FF\"\n                            fontColor2 = \"#6C63FF\"\n                        }\n\n                        return(\n                            <span style={{display:'flex', flexDirection:'column', margin:'3%', alignItems: 'center', justifyContent: 'center'}}>\n                                <span className=\"list-component\" style={{backgroundColor:`${backColor}`, color:`${fontColor}`, border:`1px solid ${fontColor}`}}>{item.num}</span>\n                                <span style={{fontSize:'12px', color:`${fontColor2}`, marginTop:'12px'}}>{item.name}</span>\n                            </span>\n                        )\n                    })}\n                </div>\n                <div style={{width:'60%'}}>\n                    {content()}\n                </div>\n            </Box>\n        </StyledModal>\n            <StyledModal2\n                aria-labelledby=\"unstyled-modal-title\"\n                aria-describedby=\"unstyled-modal-description\"\n                open={tmodalOpen}\n                onClose={() => setTmodalOpen(false)}\n                BackdropComponent={Backdrop2}\n            >\n                <Box sx={style2}>\n                    <>\n                    템플릿\n                    </>\n                </Box>\n            </StyledModal2>\n        </div>\n    )\n}\n\nexport default FirstQuestions\n","/Users/oyejin/Surfee/kiwi/src/tools/ConfirmCustom.js",[],"/Users/oyejin/Surfee/kiwi/src/components/Make/Edit/NavFooterSetting/EditFooterSection.js",["485","486","487","488"],"import React, {useState} from 'react'\nimport EditTopBar from '../tools/EditTopBar'\nimport Checkbox from '@mui/material/Checkbox';\nimport RadioCustom from '../tools/RadioCustom'\nimport EditButtonTable from '../tools/EditButtonTable'\nimport EditColor from '../tools/ColorCustom'\nimport Select from 'react-select'\nimport makeAnimated from 'react-select/animated';\n\nimport { AlignCenter, AlignEnd, AlignStart } from '@styled-icons/bootstrap';\n\nconst animatedComponents = makeAnimated();\n\nconst iconsList = [\n    { value: 'facebook', label: `페이스북` , link:''},\n    { value: 'instagram', label: \"🗿 인스타그램\" , link:''},\n    { value: 'website', label: \"💽 웹사이트\" , link:''},\n    { value: 'mail', label: \"🏟 메일\", link:''},\n    { value: 'youtube', label: \"👟 유튜브\", link:''},\n    { value: 'twitter', label: \"🗽 트위터\" , link:''},\n    { value: 'appstore', label: \"🦁 카카오톡\" , link:''},\n    { value: 'playstore', label: \"플레이스토어\" , link:''},\n    { value: 'notion', label: \"노션\" , link:''},\n    { value: 'naver', label: \"네이버\" , link:''},\n]\n\nconst oneOrTwoOptions = [\n    { label: '1단', value: 'one' },\n    { label: '2단', value: 'two' },\n]\n\nconst iconColorOptions = [\n    { label: '흰색', value: 'white' },\n    { label: '검은색', value: 'black' },\n]\nconst paddingOptions = [\n    { label: '좁게', value: 1 },\n    { label: '보통', value: 3 },\n    { label: '넓게', value: 5 },\n]\nconst alignOptions = [\n    { label: <AlignStart width={30} />, value: 'start' },\n    { label: <AlignCenter width={30} />, value: 'center' },\n    { label: <AlignEnd width={30} />, value: 'end' },\n]\n\nfunction EditFooterSection({foot, setFoot}) {\n    const [category, setCategory] = useState(0);\n\n    const changeFooterTemplate = num => {\n        let newNavi = JSON.parse(JSON.stringify(foot))\n        newNavi.sectionTemplateNumber = num\n        setFoot(newNavi);\n    }\n\n    const returnIconLinkSetting = foot.icons.map((item, index) => {\n        return(\n            <div className=\"edit-element\">\n                <div className=\"edit-element__one\">\n                    <div className=\"edit-element__left\">{item.label}</div>\n                    <div className=\"edit-element__right\">\n                        <input type=\"text\" value={foot.icons.filter(doc => doc.value === item.value)[0].link} \n                        onChange={e => setFoot({...foot, icons:[...foot.icons.map((it, index) => it.value === item.value ? {...it, link:e.currentTarget.value} : it )]}) } />\n                    </div>\n                </div>\n            </div>\n        )\n    })\n\n    return (\n        <div>\n            <EditTopBar category={category} setCategory={setCategory} />\n            { category === 0 ? \n            <>\n                <div>\n                    <div className=\"edit-element\">\n                        <div className=\"edit-element__one\">\n                            푸터 수정\n                        </div>\n                    </div>\n                    <div className=\"edit-element\">\n                        <div className=\"edit-element__one\">\n                            <div className=\"edit-element__left\">배경 색상</div>\n                            <div className=\"edit-element__right\">\n                                <RadioCustom \n                                    options={iconColorOptions}\n                                    onChange={(e) => setFoot({...foot, backgroundColor:e})}\n                                    value={foot.backgroundColor}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"edit-element no-border\">\n                        <div className=\"edit-element__one\">\n                            <div className=\"edit-element__left\">아이콘 사용</div>\n                            <div className=\"edit-element__right\">\n                                <Checkbox\n                                    checked={foot.iconUse}\n                                    value={foot.iconUse}\n                                    onChange={() => setFoot({...foot, iconUse:!foot.iconUse})}\n                                    inputProps={{ 'aria-label': 'controlled' }}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                    {\n                        foot.iconUse && \n                        <>\n                            <div className=\"edit-element\">\n                                <div className=\"edit-element__one\">\n                                    <div className=\"edit-element__left\">아이콘 색상</div>\n                                    <div className=\"edit-element__right\">\n                                        <RadioCustom \n                                            options={iconColorOptions}\n                                            onChange={(e) => setFoot({...foot, iconColor:e})}\n                                            value={foot.iconColor}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"edit-element\">\n                                <div className=\"edit-element__one\">\n                                    <div className=\"edit-element__left\">아이콘 정렬</div>\n                                    <div className=\"edit-element__right\">\n                                        <RadioCustom \n                                            options={alignOptions}\n                                            onChange={(e) => setFoot({...foot, iconAlign:e})}\n                                            value={foot.iconAlign}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"edit-element\">\n                                <div className=\"edit-element__one\" style={{height:'500px'}}>\n                                    <div className=\"edit-element__left\">추가할 아이콘</div>\n                                    <div className=\"edit-element__right\">\n                                        {/* <Select options={iconsList} onChange={e => {console.log(e.label)}} style={{color:'black'}}/> */}\n                                        <Select\n                                            closeMenuOnSelect={false}\n                                            components={animatedComponents}\n                                            isMulti\n                                            options={iconsList}\n                                            onChange={e => {setFoot({...foot, icons:e})}}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            {\n                                returnIconLinkSetting\n                            }\n                        </>\n                    }\n                </div>\n            </>\n            : \n            <>\n            <div className=\"templates__inner-container\">\n                <span className=\"templates-radio\" onClick={() => changeFooterTemplate(1)}>\n                    템플릿 1\n                </span>\n                <span className=\"templates-radio\" onClick={() => changeFooterTemplate(2)}>\n                    템플릿 2\n                </span>\n            </div>\n            </>\n            }\n        </div>\n    )\n}\n\nexport default EditFooterSection\n","/Users/oyejin/Surfee/kiwi/src/components/Make/Footer/MakeFooterV2.js",["489","490","491"],"import React, {useContext, useState} from 'react'\nimport { MyContext } from '../../../pages/Make/MakePageV2'\nimport FTemplate from './FTemplate'\nimport {Delete, Options} from '@styled-icons/fluentui-system-filled'\nimport './MakeFooter.css'\n\nfunction MakeFooterV2({full, history, foot, setFoot}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n    const [isHover, setIsHover] = useState('none');\n\n    return (\n        <div className=\"make-footer\" onMouseEnter={() => setIsHover('flex')} onMouseLeave={() => setIsHover('none')} style={{width:`${full ? '100%' : '100%'}`}}>\n            <footer className=\"make-footer__container\" style={{backgroundColor:`${foot.backgroundColor}`}} onClick={() => action.setSecNum(51)}>\n                    <FTemplate foot={foot} history={history} setFoot={setFoot} />\n            </footer>\n            <div className=\"for-section-hover\" style={{backgroundColor: `${isHover === 'flex' ? 'rgba(200,200,200,0.7)' : 'rgba(0,0,0,0)'}`}}>\n            </div>\n        </div>\n    )\n}\n\nexport default MakeFooterV2\n","/Users/oyejin/Surfee/kiwi/src/components/Make/Edit/NavFooterSetting/EditNaviSection.js",["492","493","494","495","496","497","498","499","500","501","502","503","504"],"import React, {useState} from 'react'\nimport RadioCustom from '../tools/RadioCustom'\nimport EditButtonTable from '../tools/EditButtonTable'\nimport EditColor from '../tools/ColorCustom'\nimport OpenCloseCustom from '../tools/OpenCloseCustom'\nimport OnOffCustom from '../tools/OnOffCustom'\nimport InputCustom from '../tools/InputCustom'\nimport ResponsiveCustom from '../tools/ResponsiveCustom'\nimport CheckBoxContainer from '../tools/CheckBoxContainer'\nimport ElementsTable from '../tools/ElementsTable'\nimport EditSlider from '../tools/EditSlider'\nimport TextSizeCustom from '../tools/TextSizeCustom'\nimport BoxCustom from '../tools/BoxCustom'\nimport produce from 'immer';\n\nconst logoOptions = [\n    { label: '로고 이미지', value: 'logo' },\n    { label: '텍스트', value: 'text' },\n]\nconst buttonOptions = [\n    { label: '링크', value: 'link' },\n    { label: '스크롤', value: 'scroll' },\n    { label: '팝업', value: 'popup' },\n]\n\nfunction EditNaviSection({navi, setNavi, category}) {\n    const [logo, setLogo] = useState(\"logo\")\n    const [buttonUse, setButtonUse] = useState(true)\n    const [buttonFunc, setButtonFunc] = useState(\"link\")\n    const [buttonTemplate, setButtonTemplate] = useState(1)\n\n    const elements = [\n        {\n            title:'버튼',\n            use:navi.elements.buttonUse,\n            func:() => setNavi(produce(navi, draft => {\n                draft.elements.buttonUse = !navi.elements.buttonUse;\n            }))\n        },\n        {\n            title:'로고',\n            use:navi.elements.logoUse,\n            func:() => setNavi(produce(navi, draft => {\n                draft.elements.logoUse = !navi.elements.logoUse;\n            }))\n        },\n        {\n            title:'앱 다운로드',\n            use:navi.elements.appButtonUse,\n            func:() => setNavi(produce(navi, draft => {\n                draft.elements.appButtonUse = !navi.elements.appButtonUse;\n            }))\n        },\n    ]\n\n    const changeNaviTemplate = num => {\n        let newNavi = JSON.parse(JSON.stringify(navi))\n        newNavi.sectionTemplateNumber = num\n        setNavi(newNavi);\n    }\n\n    // 템플릿 2 이미지의 경우에는\n    const onChangeLogoImage = e => {\n        let newNavi = JSON.parse(JSON.stringify(navi))\n        const {target:{files},} = e;\n        const oneFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => { // 로딩이 끝날 때 실행한다는 뜻.\n            const {currentTarget:{result}} = finishedEvent;\n            // newContents = state.contents.map((item, index) => index === state.secNum ? {...item, image: {...item.image, attachment : result}} : item)\n            newNavi.logo= result;\n        }\n        reader.readAsDataURL(oneFile);\n        setNavi(newNavi);\n    }\n\n    const returnFuncEdit = () => {\n        switch(buttonFunc){\n            case \"link\":\n                return(\n                    <div className=\"edit-element\">\n                        링크 수정\n                    </div>\n                )\n            case \"scroll\":\n                return(\n                    <div className=\"edit-element\">\n                        스크롤 수정\n                    </div>\n                )\n            case \"popup\":\n                return(\n                    <div className=\"edit-element\">\n                        팝업 수정\n                    </div>\n                )\n        }\n    }\n\n    const returnButtonTemplates = () => {\n\n    }\n\n    return (\n        <div>\n            { category === 0 ? \n            <>\n                <div>\n                    <ElementsTable elements={elements} />\n                    <OpenCloseCustom title=\"로고\">\n                        <div className=\"edit-element\">\n                            <div className=\"edit-element__one\">\n                                <div className=\"edit-element__left\">메인 로고</div>\n                                <div className=\"edit-element__right\">\n                                    <RadioCustom \n                                        options={logoOptions}\n                                        onChange={(e) => setNavi({...navi, isLogo:e})}\n                                        value={navi.isLogo}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        {\n                            navi.isLogo === 'logo' && \n                            <div className=\"edit-element no-border\">\n                                <div className=\"edit-element__one\">\n                                    <div className=\"edit-element__left\">로고</div>\n                                    <div className=\"edit-element__right\">\n                                        <input type=\"file\" accept=\"image/*\" id=\"file\" onChange={ e => onChangeLogoImage(e) } />\n                                    </div>\n                                </div>\n                            </div>\n                        }\n                        <TextSizeCustom text=\"크기\" value={navi.logo.textSize} func={e =>  setNavi(produce(navi, draft => {\n                                draft.logo.textSize = e;\n                            }))} />\n                    </OpenCloseCustom>\n                    <OpenCloseCustom title=\"버튼 사용\">\n\n                        <OnOffCustom text=\"버튼 사용\" value={navi.elements.buttonUse} func={() => setNavi(produce(navi, draft => {\n                            draft.elements.buttonUse = !navi.elements.buttonUse\n                        }))} />\n                        \n                        <OnOffCustom text=\"CTA 버튼\" value={navi.cta.use} func={() => setNavi(produce(navi, draft => {\n                            draft.cta.use = !navi.cta.use\n                        }))} />\n                        {\n                            navi.cta.use && \n                            <InputCustom value={navi.cta.link} func={(e) => setNavi(produce(navi, draft => {\n                                draft.cta.link = e\n                            }))} />\n                        }\n                        \n                        <OnOffCustom text=\"고스트 버튼\" value={navi.ghost.use} func={() => setNavi(produce(navi, draft => {\n                            draft.ghost.use = !navi.ghost.use\n                        }))} />\n                        {\n                            navi.ghost.use && \n                            <InputCustom value={navi.ghost.link} func={(e) => setNavi(produce(navi, draft => {\n                                draft.ghost.link = e\n                            }))} />\n                        }\n                        \n                    </OpenCloseCustom>\n                    <BoxCustom>\n                        <OnOffCustom text=\"페이지 상단 고정\" value={navi.fixed} func={e => setNavi({...navi, fixed:!navi.fixed})}/>\n                        <div>\n                            {\n                                navi.fixed ? <p>스크롤을 내리면 내비게이션 바는 더 이상 보이지 않습니다.</p> \n                                    : \n                                <p>스크롤을 내려도 내비게이션 바가 화면 상단에 따라 다닙니다.</p>\n                            }\n                        </div>\n                    </BoxCustom>\n                </div>\n            </>\n            : \n            <>\n            <div>\n                <OpenCloseCustom title=\"배경색\">\n                    <div className=\"edit-element\">\n                        <div className=\"edit-element__one\">\n                            <div className=\"edit-element__left\">배경색</div>\n                            <div className=\"edit-element__right\">\n                                <EditColor onChange={(e) => setNavi({...navi, backgroundColor:e})} value={navi.backgroundColor} />\n                            </div>\n                        </div>\n                    </div>\n                </OpenCloseCustom>\n                <OpenCloseCustom title=\"구분선\">\n                    <CheckBoxContainer text=\"구분선\" value={navi.bottomBorder} func={e => setNavi({...navi, bottomBorder:!navi.bottomBorder})}/>\n                </OpenCloseCustom>\n                <OpenCloseCustom title=\"높이\">\n                    <EditSlider text=\"높이 조정\" value={navi.height} func={e => setNavi({...navi, height:e})}/>\n                </OpenCloseCustom>\n                <ResponsiveCustom />\n            </div>\n            </>\n            }\n        </div>\n    )\n}\n\nexport default EditNaviSection\n","/Users/oyejin/Surfee/kiwi/src/components/Make/NavBar/MakeNavigationV2.js",["505","506","507","508"],"import React, {useContext, useState} from 'react'\nimport { MyContext } from '../../../pages/Make/MakePageV2'\nimport NaviTemplate from './NaviTemplate'\nimport {Delete, Options} from '@styled-icons/fluentui-system-filled'\nimport { motion } from 'framer-motion'\nimport './MakeNavigation.css'\n\nfunction MakeNavigationV2({full, navi, setNavi, history}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n    const [isHover, setIsHover] = useState('none');\n\n    return (\n        <>\n        <div className=\"make-navigation\" onMouseEnter={() => setIsHover('flex')} onMouseLeave={() => setIsHover('none')}>\n            <div className=\"make-nav-container\" style={{borderBottom:`${navi.bottomBorder ? '5px solid rgba(150,150,150,0.2)' : '1px solid rgba(150,150,150,0)'}`, backgroundColor:`${navi.backgroundColor}`, height:`${navi.height}px`}} onClick={() => action.setSecNum(50)}>\n                <NaviTemplate navi={navi} setNavi={setNavi}/>\n            </div>\n            <div className=\"for-section-hover\" style={{backgroundColor: `${isHover === 'flex' ? 'rgba(200,200,200,0.7)' : 'rgba(0,0,0,0)'}`}}>\n            </div>\n        </div>\n        </>\n    )\n\n}\n\nexport default MakeNavigationV2\n","/Users/oyejin/Surfee/kiwi/src/components/Make/Edit/NavFooterSetting/EditSetting.js",["509","510","511","512","513"],"import React, {useState, useContext} from 'react'\nimport RadioCustom from '../tools/RadioCustom'\nimport {EditRadioContainer} from '../tools/RadioCustom'\nimport { EditColorContainer } from '../tools/ColorCustom'\nimport InputCustom from '../tools/InputCustom'\nimport { MyContext } from '../../../../pages/Make/MakePageV2'\nimport SelectCustom from '../tools/SelectCustom'\nimport './EditSetting.css'\nimport '../EditTemplates/Edit.css'\nimport EditTopBar from '../tools/EditTopBar'\nimport OpenCloseCustom from '../tools/OpenCloseCustom'\nimport OnOffCustom from '../tools/OnOffCustom'\nimport produce from 'immer';\nimport {EditAnimationContainer} from '../tools/AnimationCustom'\nimport { base } from '../../SectionTypes/baseTypes'\n\nconst fontOptions = [\n    { label: '노토산스', value: 'Noto Sans KR' },\n    { label: '에스코어 드림', value: '' },\n    { label: '노토산스', value: 'Noto Sans KR' },\n    { label: '노토산스', value: 'Noto Sans KR' },\n]\n\nconst shapeOptions = [\n    { label: '사각형', value: 0 },\n    { label: '라운드', value: 5 },\n    { label: '원형', value: 20 },\n]\n\nconst sizeOptions = [\n    { label: 'small', value: 50 },\n    { label: 'medium', value: 75 },\n    { label: 'large', value: 100 },\n]\n\nfunction EdtiSetting({setting, setSetting, category}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    // 애니메이션 관련 \n    const animationOptions = [\n        {label:'없음', value: 'none'},\n        {label:'떠오르기', value: 'fade-up'},\n        {label:'zoom-in', value: 'zoom-in'}\n    ]\n\n    const changeAnimationOption = e => {\n        base.map((section)=>section.animation.type=e)\n        action.setContents(base)\n        setSetting({...setting, animation:e})\n    }\n\n    const returnTable = () => {\n        switch(category){\n            case 0:\n                // case 0은 디자인 수정\n                return(\n                    <>\n                    <div>\n                        <OpenCloseCustom title=\"파비콘\" tooltip=\"웹 브라우저의 주소창에 표시되는 웹 페이지를 대표하는 아이콘입니다.\">\n                            \n                        </OpenCloseCustom>\n                        <OpenCloseCustom title=\"페이지 이름\" tooltip=\"웹 브라우저의 주소창에 표시되는 웹 페이지의 이름입니다.\">\n                            \n                        </OpenCloseCustom>\n                        <OpenCloseCustom title=\"플로팅 버튼\" tooltip=\"화면 하단에 고정되어 떠다니는 버튼입니다. 내비게이션의 버튼과 플로팅 버튼 중 하나만 사용하시길 바랍니다.\">\n                            <OnOffCustom text=\"플로팅 버튼\" value={setting.fta.use} func={(e) => setSetting(produce(setting, draft => {\n                                draft.fta.use = !setting.fta.use\n                            }))} />\n                            <EditRadioContainer text=\"사이즈\" options={sizeOptions} value={setting.fta.size} func={(e) => setSetting(produce(setting, draft => {\n                                draft.fta.size = e\n                            }))} />\n                            <EditRadioContainer text=\"모양\" options={shapeOptions} value={setting.fta.shape} func={(e) => setSetting(produce(setting, draft => {\n                                draft.fta.shape = e\n                            }))} />\n                            <EditColorContainer text=\"배경 색상\" value={setting.fta.backgroundColor} func={(e) => setSetting(produce(setting, draft => {\n                                draft.fta.backgroundColor = e;\n                            }))} />\n                            <InputCustom value={setting.fta.link} func={(e) => setSetting(produce(setting, draft => {\n                                draft.fta.link = e\n                            }))}/>\n                        </OpenCloseCustom>\n                        <OpenCloseCustom title=\"URL\">\n                            <div className=\"center-column\">\n                                <div className=\"edit-element center-row\">\n                                    <div>\n                                        <InputCustom value={setting.urlId} func={(e) => setSetting(produce(setting, draft => {\n                                            draft.urlId = e;\n                                        }))}/>\n                                    </div>\n                                    <div>\n                                        .surfee.co.kr\n                                    </div>\n                                </div>\n                                <div className=\"edit-element\">\n                                    * 영문, 숫자만 사용 가능합니다.\n                                </div>\n                            </div>\n                        </OpenCloseCustom>\n                    </div>\n                    </>\n                )\n\n            case 1:\n                // case 1은 템플릿 변경\n                return(\n                    <>\n                    <div>\n                        <OpenCloseCustom title=\"메인 색상\">\n                            <EditColorContainer text=\"색상\" value={setting.color} func={(e) => setSetting(produce(setting, draft => {\n                                draft.color = e;\n                            }))} />\n                        </OpenCloseCustom>\n                        <OpenCloseCustom title=\"글씨체\">\n                            <div className=\"edit-element\">\n                                <div className=\"left\">\n                                    글씨체\n                                </div>\n                                <SelectCustom options={fontOptions} value={setting.font} onChange={(e) => setSetting(produce(setting, draft => {\n                                    draft.font = e;\n                                }))} />\n                            </div>\n                        </OpenCloseCustom>\n                        <OpenCloseCustom title=\"CTA 버튼\" preseen={\n                            <div className=\"edit-element\">\n                                <div className=\"centera\" style={{padding:'5px 10px'}}>\n                                    <div className=\"custom-button\" style={{ color:`${setting.cta.color}`, border:`${setting.cta.border ? `1px solid ${setting.cta.borderColor}` : 'none'}`, boxShadow:`${setting.cta.shadow ? '2px 2px 5px rgba(0,0,0,0.3)' : 'none'}`, borderRadius:`${setting.cta.borderRadius}px`, backgroundColor:`${setting.cta.backgroundColor}`}}>\n                                        디자인 미리보기\n                                    </div>\n                                </div>\n                            </div>\n                        }>\n                            <EditRadioContainer button text=\"모양\" options={shapeOptions} value={setting.cta.borderRadius} func={(e) => setSetting(produce(setting, draft => {\n                                draft.cta.borderRadius = e\n                            }))} />\n                            <EditColorContainer text=\"배경 색상\" value={setting.cta.backgroundColor} func={(e) => setSetting(produce(setting, draft => {\n                                draft.cta.backgroundColor = e;\n                            }))} />\n                            <EditColorContainer text=\"폰트 색상\" value={setting.cta.color} func={(e) => setSetting(produce(setting, draft => {\n                                draft.cta.color = e;\n                            }))} />\n                            <OnOffCustom text=\"그림자\" value={setting.cta.shadow} func={(e) => setSetting(produce(setting, draft => {\n                                draft.cta.shadow = !setting.cta.shadow\n                            }))} />\n                            <OnOffCustom text=\"테두리\" value={setting.cta.border} func={(e) => setSetting(produce(setting, draft => {\n                                draft.cta.border = !setting.cta.border\n                            }))} />\n                            {\n                                setting.cta.border && \n                                    <EditColorContainer value={setting.cta.borderColor} func={(e) => setSetting(produce(setting, draft => {\n                                        draft.cta.borderColor = e;\n                                    }))} />\n                            }\n                        </OpenCloseCustom>\n                        <OpenCloseCustom title=\"고스트 버튼\" preseen={\n                            <div className=\"edit-element\">\n                                <div className=\"centera\" style={{padding:'5px 10px'}}>\n                                    <div className=\"custom-button\" style={{ color:`${setting.ghost.color}`, border:`${setting.ghost.border ? `1px solid ${setting.borderColor}` : 'none'}`, boxShadow:`${setting.ghost.shadow ? '2px 2px 3px rgba(0,0,0,0.5)' : 'none'}`, borderRadius:`${setting.ghost.borderRadius}px`, backgroundColor:`${setting.ghost.backgroundColor}`}}>\n                                        디자인 미리보기\n                                    </div>\n                                </div>\n                            </div>\n                        }>\n                            <EditRadioContainer text=\"모양\" options={shapeOptions} value={setting.ghost.borderRadius} func={(e) => setSetting(produce(setting, draft => {\n                                draft.ghost.borderRadius = e\n                            }))} />\n                            <EditColorContainer text=\"배경 색상\" value={setting.ghost.backgroundColor} func={(e) => setSetting(produce(setting, draft => {\n                                draft.ghost.backgroundColor = e;\n                            }))} />\n                            <EditColorContainer text=\"폰트 색상\" value={setting.ghost.color} func={(e) => setSetting(produce(setting, draft => {\n                                draft.ghost.color = e;\n                            }))} />\n                            <OnOffCustom text=\"그림자\" value={setting.ghost.shadow} func={(e) => setSetting(produce(setting, draft => {\n                                draft.ghost.shadow = !setting.ghost.shadow\n                            }))} />\n                            <OnOffCustom text=\"테두리\" value={setting.ghost.border} func={(e) => setSetting(produce(setting, draft => {\n                                draft.ghost.border = !setting.ghost.border\n                            }))} />\n                            <EditColorContainer text=\"테두리 색상\" value={setting.ghost.borderColor} func={(e) => setSetting(produce(setting, draft => {\n                                draft.ghost.borderColor = e;\n                            }))} />\n                        </OpenCloseCustom>\n                    </div>\n                    <OpenCloseCustom title=\"애니메이션\">\n                        <EditAnimationContainer \n                            text=\"애니메이션\" \n                            options={animationOptions} \n                            value={setting.animation} \n                            func={ e => changeAnimationOption(e)} />\n                    </OpenCloseCustom>\n                    </>\n                )\n        }\n    }\n\n    return(\n        <>\n            {returnTable()}\n        </>\n    )\n}\n\nexport default EdtiSetting\n","/Users/oyejin/Surfee/kiwi/src/components/Make/Edit/NewSectionMake.js",["514","515","516"],"import React, {useState, useEffect, useContext} from 'react'\n// import ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport { MyContext } from '../../../pages/Make/MakePageV2'\nimport EditDetailSection from './EditTemplates/EditDetailSection'\nimport EditCtaSection from './EditTemplates/EditCtaSection'\nimport EditHeroSection from './EditTemplates/EditHeroSection'\nimport EditReviewSection from './EditTemplates/EditReviewSection'\nimport EditFeaturesSection from './EditTemplates/EditFeaturesSection'\nimport EditTopBar from './tools/EditTopBar'\nimport AddingSection from './AddingSection'\n\nimport EditSetting from './NavFooterSetting/EditSetting'\nimport EditNaviSection from './NavFooterSetting/EditNaviSection'\nimport EditFooterSection from './NavFooterSetting/EditFooterSection'\nimport EditContents from './NavFooterSetting/EditContents'\nimport {ChevronLeft} from '@styled-icons/bootstrap'\nimport './NewSectionMake.css'\n\nconst NAVSECNUM = 50;\nconst FOOTSECNUM = 51;\nconst SETTINGSECNUM = 52;\nconst CONTENTSSECNUM = 53;\n\nfunction NewSectionMake({content, foot, setFoot, navi, setNavi, setting, setSetting}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    const sectionMakeTable = () => {\n\n        switch(content.sectionTypeName){\n            case 'DetailSection':\n                return (\n                    <EditDetailSection content={content} category={state.category}/>\n                )\n\n            // 이미지인 경우 편집화면\n            case 'HeroSection':\n                return (\n                    <EditHeroSection content={content} category={state.category}/>\n                )\n\n            // 리뷰들인 경우 편집화면\n            case 'ReviewSection':\n                return(\n                    <EditReviewSection content={content} category={state.category}/>\n                )\n            \n            case 'FeaturesSection':\n                return(\n                    <EditFeaturesSection content={content} category={state.category}/>\n\n                )\n\n            case 'CtaSection':\n                return(\n                    <EditCtaSection content={content} category={state.category}/>\n                )\n\n            default:\n                return(\n                    <div>\n                        섹션 {state.secNum}번이고 템플릿은 뭐지? 디폴트 값입니다.\n                        <br/>\n                    </div>\n                )\n\n        }\n    }\n\n    const returnMake = () => {\n        if(state.secNum === NAVSECNUM){\n            return(\n                <>\n                    <div className=\"back__container\">\n                            <div className=\"left\" onClick={() => action.setSecNum(CONTENTSSECNUM)} style={{cursor:'pointer'}}>\n                                <span className=\"back-button\">\n                                    <ChevronLeft size={17} />\n                                </span>\n                                <span className=\"back-text\">\n                                    내비게이션 바\n                                </span>\n                            </div>\n                    </div>\n                    <EditTopBar category={state.category} setCategory={action.setCategory} />\n                    <EditNaviSection navi={navi} setNavi={setNavi} category={state.category}/>\n                </>\n            )\n\n        }else if(state.secNum === FOOTSECNUM ){\n            return(\n                <>\n                    <div className=\"back__container\">\n                            <div className=\"left\" onClick={() => action.setSecNum(CONTENTSSECNUM)} style={{cursor:'pointer'}}>\n                                <span className=\"back-button\">\n                                    <ChevronLeft size={17} />\n                                </span>\n                                <span className=\"back-text\">\n                                    푸터 바\n                                </span>\n                            </div>\n                    </div>\n                    <EditTopBar category={state.category} setCategory={action.setCategory} />\n                    <EditFooterSection foot={foot} setFoot={setFoot} category={state.category}/>\n                </>\n            )\n        }else if(state.secNum === SETTINGSECNUM ){\n            return(\n                <>\n                    <EditTopBar category={state.category} setCategory={action.setCategory} />\n                    <EditSetting setting={setting} setSetting={setSetting} category={state.category}/>\n                </>\n            )\n        }else if(state.secNum === CONTENTSSECNUM ){\n            return(\n                <EditContents navi={navi} setNavi={setNavi} foot={foot} setFoot={setFoot}/>\n            )\n        }else{\n            return (\n                <>\n                {content && \n                <>\n                    <div className=\"back__container\">\n                            <div className=\"left\" onClick={() => action.setSecNum(CONTENTSSECNUM)} style={{cursor:'pointer'}}>\n                                <span className=\"back-button\">\n                                    <ChevronLeft size={17} />\n                                </span>\n                                <span className=\"back-text\">\n                                    {content.name}\n                                </span>\n                            </div>\n                    </div>\n                    <EditTopBar category={state.category} setCategory={action.setCategory} />\n                    {sectionMakeTable()}\n                </> }\n                </>\n            )\n        }\n    }\n\n    return (\n        <>\n            {returnMake()}\n        </>\n    )\n}\n\nexport default NewSectionMake\n","/Users/oyejin/Surfee/kiwi/src/components/Make/Edit/NavFooterSetting/EditContents.js",["517","518","519"],"import React, {useContext, useState} from 'react';\nimport { MyContext } from '../../../../pages/Make/MakePageV2';\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport produce from 'immer';\nimport ConfirmCustom from '../../../../tools/ConfirmCustom';\nimport AddingSection from '../../Modal/AddingSection';\nimport {CustomSwitch} from '../tools/OnOffCustom'\nimport './EditContents.css';\n\nconst BCOLOR = 'rgba(230,230,230,0)'\n\nconst getItemStyle = (isDragging, draggableStyle, backColor) => {\n    return {\n        userSelect: \"none\",\n        textAlign: \"right\",\n\n        // change background color if dragging\n        background: isDragging ? \"white\" : BCOLOR,\n        boxShadow: isDragging ? \"2px 4px 20px #E8F0F9\" : 'none',\n\n        // styles we need to apply on draggables\n        ...draggableStyle\n    };\n};\n\nfunction EditContents({navi, setNavi, foot, setFoot}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n    const [deleteopen, setDeleteOpen] = useState(false);\n    const [addOpen, setAddOpen] = useState(false);\n\n    const handleChange = result => {\n        if (!result.destination) return;\n\n        action.setContents(produce(state.contents, draft => {\n            const [reorderedItem] = draft.splice(result.source.index, 1);\n            draft.splice(result.destination.index, 0, reorderedItem);\n        }));\n    }\n\n    const optionButton = (num) => {\n        return(\n            <div className=\"content__button\"\n                onClick={() => {\n                    action.setSecNum(num)\n                }}>\n                설정\n            </div>\n        )\n    }\n\n    const deleteSection = (index) => {\n        console.log(\"index\", index);\n        if(index === 0){\n            action.setContents([\n                ...state.contents.slice(1,state.contents.length)\n            ])\n        }if(index === state.contents.length){\n            action.setContents([\n                ...state.contents.slice(0,index-1),\n            ])\n        }else{\n            action.setContents([\n                ...state.contents.slice(0,index),\n                ...state.contents.slice(index+1, state.contents.length)\n            ])\n        }\n    }\n\n    const pasteThisSection = (content, index) => {\n        action.setContents([\n            ...state.contents.slice(0,index),\n            content,\n            ...state.contents.slice(index, state.contents.length)\n        ])\n    }\n\n    return (\n        <div>\n            <div className=\"edit-element\">\n                컨텐츠 수정\n            </div>\n            <div>\n                <div className=\"one-contents-draggable\" style={{backgroundColor:`${BCOLOR}`}}>\n                    <div className=\"center-row hoverback one-contents__inner\" style={{padding:'20px 10px'}}>\n                        <div className=\"left\">\n                            <div className=\"content__name\">\n                                네비 바\n                            </div>\n                            <div style={{paddingLeft:'7%'}}>\n                                <CustomSwitch value={navi.use} onChange={e => setNavi(produce(navi, draft => {\n                                    draft.use = !navi.use\n                                })) }/>\n                            </div>\n                        </div>\n                        <div className=\"right\">\n                            {optionButton(50)}\n                        </div>\n                    </div>   \n                </div>\n                <hr className=\"hr\" />\n                <DragDropContext onDragEnd={handleChange}>\n                    <Droppable droppableId=\"sectionsss\">\n                        {(provided) => \n                            (\n                            <div className=\"sectionsss\"\n                                {...provided.droppableProps}\n                                ref={provided.innerRef}>\n                                {state.contents.map((item, index) => {\n                                    return(\n                                        <Draggable draggableId={String(index)} key={index} index={index} style={{width:'100%'}}>\n                                            {(provided, snapshot) => {\n                                                return(\n                                                    <>\n                                                        <div\n                                                            className=\"one-contents-draggable\"\n                                                            ref={provided.innerRef}\n                                                            {...provided.dragHandleProps}\n                                                            {...provided.draggableProps}\n\n                                                            style={getItemStyle(\n                                                            snapshot.isDragging,\n                                                            provided.draggableProps.style,\n                                                            )}>\n                                                                <div className=\"center-column hoverback one-contents__inner\">\n                                                                    <div className=\"center-row\">\n                                                                        <div className=\"left\">\n                                                                            <div className=\"content__name\">\n                                                                                {item.name}\n                                                                            </div>\n                                                                        </div>\n                                                                        <div className=\"right\">\n                                                                            {optionButton(index)}\n                                                                        </div>\n                                                                    </div>\n                                                                    <div className=\"center-row\">\n                                                                        <div className=\"left\">\n\n                                                                        </div>\n                                                                        <div className=\"right\">\n                                                                            <div className=\"content__button cb-delete\"\n                                                                                onClick={() => {\n                                                                                    const yes = window.confirm(\"정말 삭제하시겠습니까?\");\n                                                                                    if(yes){\n                                                                                        deleteSection(index);\n                                                                                    }\n                                                                                } }>\n                                                                                삭제\n                                                                            </div>\n                                                                            <div className=\"content__button cb-duplicate\"\n                                                                                onClick={() => pasteThisSection(state.contents[index], index) }>\n                                                                                복제\n                                                                            </div>\n                                                                        </div>\n                                                                    </div>\n                                                                </div>   \n                                                        </div>\n                                                        {/* <div className=\"centera small-button__container\">\n                                                            <span className=\"centera make-section-button__small\">\n                                                                +\n                                                            </span>\n                                                        </div> */}\n                                                    </>\n                                                )}}\n                                        </Draggable>\n                                    )\n                                })}\n                                {provided.placeholder}\n                            </div>\n                            )\n                        }\n                    </Droppable>\n                </DragDropContext>\n                <div className=\"center-row\">\n                    <div className=\"make-section-button\" onClick={() => {\n                        setAddOpen(true);\n                        // action.setAddingSectionAt(state.contents.length - 1);\n                    }}>\n                        + 섹션 추가하기\n                    </div>\n                </div>\n                <hr className=\"hr\" />\n                <div className=\"one-contents-draggable\">\n                    <div className=\"center-row hoverback one-contents__inner\" style={{padding:'20px 10px'}}>\n                        <div className=\"left\">\n                            <div className=\"content__name\">\n                                푸터 바\n                            </div>\n                            <div style={{paddingLeft:'7%'}}>\n                                <CustomSwitch value={foot.use} onChange={e => setFoot(produce(foot, draft => {\n                                    draft.use = !foot.use\n                                })) }/>\n                            </div>\n                        </div>\n                        <div className=\"right\">\n                            {optionButton(51)}\n                        </div>\n                    </div>   \n                </div>\n\n                {/* <span className=\"make-section-button\" style={{display:`${isHover}`}} onClick={() => {\n                    if(state.addingSectionAt === index){\n                        action.setAddingSectionAt(1000);\n                    }else{\n                        action.setAddingSectionAt(index)\n                    }\n                }}>\n                {parseInt(state.addingSectionAt) === parseInt(index) ? <>- 섹션 제거하기</> : <>+ 섹션 추가하기</>}\n                </span> */}\n            </div>\n            <AddingSection open={addOpen} setOpen={setAddOpen} />\n        </div>\n    )\n}\n\nexport default EditContents\n","/Users/oyejin/Surfee/kiwi/src/pages/Make/NavBarInMakePage/NavBarInMakePage.js",["520","521","522"],"import React, {useContext, useState} from 'react';\nimport { Input, Button } from 'antd';\nimport Switch from '@mui/material/Switch';\nimport './MakeNavBar.css';\nimport { MyContext } from '../MakePageV2'\nimport CheckModal from '../../../components/Make/Modal/CheckModal'\nimport {dbService} from '../../../tools/fbase'\nimport {Monitor} from '@styled-icons/feather'\nimport Popover from '@mui/material/Popover'\nimport { Phone } from '@styled-icons/bootstrap'\nimport {Fullscreen} from '@styled-icons/bootstrap'\n\nconst NavBarInMakePage = (props) => {\n    const [open, setOpen] = useState(false)\n    const {state, action} = useContext(MyContext)\n    const [checkModalOpen, setCheckModalOpen] = useState(false);\n    const [anchorEl, setAnchorEl] = useState(null);\n  \n    const handleClick = (event) => {\n      setAnchorEl(event.currentTarget);\n    };\n  \n    const handleClose = () => {\n      setAnchorEl(null);\n    };\n\n    const openDevice = Boolean(anchorEl);\n    const id = open ? 'simple-popover' : undefined;\n\n    const moveToMain = () => {\n        \n        window.location.replace('/');\n    }\n    \n    const onSubmit = async () => {\n        console.log(props.userObj);\n        // 배포하기 클릭\n        // 관리페이지에서 수정하기를 누른 거라면\n        if(typeof props.useObj === undefined){\n            alert(\"로그인 하셔야 저장 후 배포하실 수 있습니다.\");\n            props.setLoading(false);\n        }else if(props.nowState === 'edit'){\n            props.setLoading(true);\n            // 기존에 있는걸 업데이트 해야한다.\n            const body = {\n                contents:state.contents,\n                navi:props.navi,\n                foot:props.foot,\n                setting:props.setting,\n                created:Date.now(),\n                makerEmail:props.userObj.email,\n            }\n            await dbService.doc(`made-page/${state.contents.id}`)\n                .update(body)\n            \n            alert(\"업데이트된 정보로 배포하였습니다.\");\n            \n            props.setLoading(false);\n        }else{\n            // 새로 업로드 해야한다.\n            setCheckModalOpen(true);\n        }\n    }\n\n    const onSubmitFromCheckModal = async () => {\n        props.setLoading(true);\n\n        const urlDatas = await dbService\n            .collection(\"urlStores\")\n            .where(\"urlId\", \"==\", props.setting.urlId)\n            .get(); // uid를 creatorId로 줬었으니까.\n        \n        let urlData = urlDatas.docs.map(doc => {\n            return({...doc.data(), id:doc.id})\n        });\n\n        if(urlData.length > 0){\n            alert(\"이미 존재하는 url입니다. 다른 url을 사용해주세요.\");\n            props.setLoading(false);\n        }else{\n            const body = {\n                contents:state.contents,\n                navi:props.navi,\n                foot:props.foot,\n                setting:props.setting,\n                created:Date.now(),\n                makerEmail:props.userObj.email,\n            }\n\n            await dbService.collection(\"made-page\").add(body);\n\n            await dbService.collection(\"urlStores\").add({urlId:body.setting.urlId});\n\n            // 자동저장 하던 걸 지운다.\n            window.localStorage.removeItem(\"temp\");\n            \n            setTimeout(() => {\n                props.setLoading(false);\n                props.history.push('/#/submit');\n                props.history.go();\n            },1000)\n        }\n    }\n\n    return (\n        <div className=\"make-page-nav\">\n            <div className=\"make-page-nav-half\" style={{justifyContent: 'start', marginLeft:'1%'}}>\n                {/* <Button onClick={e => props.setOpen(!props.open)}>설명 다시보기</Button> */}\n                <span className=\"nav-button\" onClick={e => {\n                    action.setSecNum(52); \n                }}\n                style={{fontWeight: `${state.secNum === 52 ? 'bold' : ''}`}}\n                >\n                    기본설정\n                </span>\n                <span className=\"nav-button\" onClick={e => {\n                    action.setSecNum(53);\n                }}\n                style={{fontWeight: `${state.secNum === 53 ? 'bold' : ''}`}}\n                >\n                    페이지 구성\n                </span>\n            </div>\n            <div className=\"make-page-nav-half\">\n                <div className=\"centera\">\n                    <Button onClick={() => moveToMain()} className=\"edit-nav-home-button\">\n                        Surfee\n                    </Button>\n                </div>\n            </div>\n            <div className=\"make-page-nav-half\" style={{justifyContent: 'end', marginRight:'1%'}}>\n                <span className=\"device-button\" onClick={handleClick}>\n                    {\n                        props.isPhone ? <Phone size=\"25\" /> : <Monitor size=\"25\" />\n                    }\n                </span>\n                <Popover\n                    id={id}\n                    open={openDevice}\n                    anchorEl={anchorEl}\n                    onClose={handleClose}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left',\n                    }}\n                >\n                    <div className=\"device__container\">\n                        <span className=\"device-button\" onClick={e => {props.setIsPhone(true); setAnchorEl('')}}>\n                            <Phone size=\"25\" />\n                        </span>\n                        <span className=\"device-button\" onClick={e => {props.setFull(!props.full); setAnchorEl('')}}>\n                            <Fullscreen size=\"25\" />\n                        </span>\n                        <span className=\"device-button\" onClick={e => {props.setIsPhone(false); setAnchorEl('')}}>\n                            <Monitor size=\"25\" />\n                        </span>\n                    </div>\n                </Popover>\n                <Button onClick={() => onSubmit()} className=\"default-button-02\">\n                    배포하기\n                </Button>\n            </div>\n            {/* <ConfirmCustom open={open} setOpen={setOpen} message={\"홈\"} callback={deletePage}/> */}\n            <CheckModal ch={checkModalOpen} setCh={setCheckModalOpen} onSubmit2={onSubmitFromCheckModal}/>\n        </div>\n    )\n}\n\nexport default NavBarInMakePage\n","/Users/oyejin/Surfee/kiwi/src/components/Make/SectionTypes/baseTypes.js",["523","524","525"],"/Users/oyejin/Surfee/kiwi/src/components/Make/SectionTypes/DetailSection.js",["526","527","528","529","530","531","532","533","534","535"],"import React, { useContext, useEffect, useState, useRef } from 'react'\nimport Editor from '../tools/Editor'\n\nimport { MyContext } from '../../../pages/Make/MakePageV2'\nimport './DetailSection.css'\n\nimport appstorebutton from '../../../tools/img/appstorebutton.png'\nimport playstorebutton from '../../../tools/img/playstorebutton.png'\n\nimport Popover from '@mui/material/Popover';\nimport {ImageAdd} from '@styled-icons/boxicons-regular';\n\nimport { motion } from 'framer-motion';\n\nfunction DetailSection({content}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n    const imgRef = useRef(null)\n    const [imageShow, setImageShow] = useState(null);\n    const [align, setAlign] = useState('center');\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    const open = Boolean(anchorEl);\n    const id = open ? 'simple-popover' : undefined;\n\n    // 템플릿 1 텍스트의 경우\n    const changeText = ( data ) => {\n        let newContents = state.contents.map((item, index) => index === state.secNum ? {...item, titles: {...item.titles, title : data}} : item)\n        action.setContents(newContents);\n    }\n    // 템플릿 1 텍스트의 경우\n    const changeButtonText = ( data ) => {\n        let newContents = state.contents.map((item, index) => index === state.secNum ? {...item, button: {...item.button, title : data}} : item)\n        action.setContents(newContents);\n    }\n\n    // 템플릿 2 이미지의 경우에는\n    const onChangeImage = e => {\n        let newContents = JSON.parse(JSON.stringify(state.contents))\n        const {target:{files},} = e;\n        const oneFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => { // 로딩이 끝날 때 실행한다는 뜻.\n            const {currentTarget:{result}} = finishedEvent;\n            // newContents = state.contents.map((item, index) => index === state.secNum ? {...item, image: {...item.image, attachment : result}} : item)\n            newContents[state.secNum].image.attachment = result;\n        }\n        reader.readAsDataURL(oneFile);\n        action.setContents(newContents);\n    }\n\n    const returnImage = () => {\n        return(\n            <div className=\"image__container\">\n                <Popover\n                    id={Boolean(imageShow) ? 'simple-popover' : undefined} // 수정\n                    open={Boolean(imageShow)} // 수정\n                    anchorEl={imageShow} // 수정\n                    onClose={() => setImageShow(null)} // 수정\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left',\n                    }}\n                    transformOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                    }}>\n                    <div className=\"pop-balloon\" style={{width:'100px'}}>\n                        <span className=\"balloon-item\">\n                            <ImageAdd color=\"black\" width={30} />\n                            { imgRef.current && \n                                <input className=\"image-input\" type=\"file\" accept=\"image/*\" id=\"file\"\n                                    onChange={ e => onChangeImage(e) } style={{width:'20px', height:'20px'}}/> }\n                        </span>\n                        <span className=\"balloon-item\" onClick={() => {}}>\n                            동영상\n                        </span>\n                    </div>\n                </Popover>\n                {content.image.attachment === '' ?  \n                    <img ref={imgRef} src={playstorebutton} className=\"image\" onClick={(e) =>{ setImageShow(e.currentTarget)}} />\n                    : \n                    <img ref={imgRef} src={`${content.image.attachment}`} className=\"image\" onClick={(e) => setImageShow(e.currentTarget)} />\n                }\n            </div>\n        )\n    }\n\n    const returnButton = () => {\n        return(\n            <>\n                <div className=\"button__container\">\n                    <div>                 \n                        {content.button.link.includes(\"play.google.com/store\") ? <img src={playstorebutton} />\n                        : \n                        content.button.link.includes(\"apps.apple.com/\") ? <img src={appstorebutton} />\n                        :\n                        <button className=\"action-button\" style={{backgroundColor:`${content.button.backgroundColor}`}}>\n                            버튼\n                        </button>\n                        }\n                    </div>\n                </div>\n            </>\n        )\n    }\n\n    const returnTextAndButton = () => {\n        return(\n            <div className=\"text__container\">\n                <Editor \n                    data={content.titles.title}\n                    onChange={(e, editor) => {\n                        const data = editor.getData();\n                        changeText(data);\n                    }}\n                    />\n                {returnButton()}\n            </div>\n        )\n    }\n\n    return (\n        <>\n            <motion.div className=\"template\" style={{flexDirection: `${state.isPhone ? 'column' : 'row'}`}} \n            data-aos={content.animation.type} aos-duration=\"2000\" >\n                {returnTextAndButton()}\n                {returnImage()}\n            </motion.div>\n        </>\n    )\n}\n\nexport default DetailSection","/Users/oyejin/Surfee/kiwi/src/components/Make/SectionTypes/HeroSection.js",["536","537","538","539","540","541","542","543","544","545","546","547","548","549","550","551","552","553"],"/Users/oyejin/Surfee/kiwi/src/components/Make/SectionTypes/FeaturesSection.js",["554","555","556","557"],"import React, {useContext, useState} from 'react'\nimport Editor from '../tools/Editor'\nimport Icon from '../tools/Icon'\nimport './FeaturesSection.css'\nimport { motion } from 'framer-motion';\n\nimport { MyContext } from '../../../pages/Make/MakePageV2'\n\nfunction FeaturesSection({content}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    const returnFeatureCards = content.features.map((item, index) => {\n        return(\n            <div key={index} className=\"feature__card\">\n                <div>\n                    {item.icon && <Icon name=\"Adobe\" />}\n                    {item.attachment && <img src={item.attachment} style={{width:'50px'}} /> }\n                </div>\n                <div className=\"center-row\" style={{fontSize:'1.4em', fontWeight: 'bold', backgroundColor:'red', justifyContent:`${content.align}`}}>\n                    {item.title}\n                </div>\n                <div style={{marginTop:'20px', justifyContent:`${content.align}`}}>\n                    {item.desc}\n                </div>\n            </div>\n        )\n    })\n\n    return (\n        <>\n            <motion.div className=\"template\" style={{flexDirection: `${state.isPhone ? 'column' : 'row'}`}}\n            data-aos={content.animation.type} aos-duration=\"2000\" >\n                {returnFeatureCards}\n            </motion.div>\n        </>\n    )\n}\n\nexport default FeaturesSection\n","/Users/oyejin/Surfee/kiwi/src/components/Make/SectionTypes/PriceSection.js",["558","559","560"],"import React, {useContext, useState} from 'react'\nimport Editor from '../tools/Editor'\nimport { motion } from 'framer-motion';\n\nimport { MyContext } from '../../../pages/Make/MakePageV2'\n\nfunction PriceSection({content}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    return (\n        <>\n            <motion.div className=\"template\" style={{flexDirection: `${state.isPhone ? 'column' : 'row'}`}}\n            data-aos={content.animation.type} aos-duration=\"2000\">\n                111입니다.\n            </motion.div>\n        </>\n    )\n}\n\nexport default PriceSection\n","/Users/oyejin/Surfee/kiwi/src/components/Make/tools/animations.js",[],"/Users/oyejin/Surfee/kiwi/src/components/Make/SectionTypes/CtaSection.js",["561","562","563"],"import React, {useContext, useState} from 'react'\nimport Editor from '../tools/Editor'\nimport './CtaSection.css'\nimport { motion } from 'framer-motion';\n\nimport { MyContext } from '../../../pages/Make/MakePageV2'\n\nfunction CtaSection({content}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    const returnCtaSection = () => {\n        return(\n            <div className=\"center-column\">\n                <div style={{fontWeight:'500', fontSize:'1.5em'}}>\n                    {content.title}\n                </div>\n                <div className=\"mt30\">\n                    {content.desc}\n                </div>\n                <div className=\"center-row mt30\">\n                    <div style={{marginRight:'1%'}}>\n                        <input className=\"input\" />\n                    </div>\n                    <button className=\"action-button\" style={{backgroundColor:`${content.button.backgroundColor}`}}>\n                        {content.button.title}\n                    </button>\n                </div>\n            </div>\n        )\n    }\n\n    return (\n        <>\n            <motion.div className=\"template\" style={{flexDirection: `${state.isPhone ? 'column' : 'row'}`}}\n            data-aos={content.animation.type} aos-duration=\"2000\">\n                {returnCtaSection()}\n            </motion.div>\n        </>\n    )\n}\n\nexport default CtaSection\n","/Users/oyejin/Surfee/kiwi/src/components/Make/SectionTypes/ReviewSection.js",["564","565","566","567"],"import React, {useContext, useState} from 'react'\nimport Editor from '../tools/Editor'\nimport './ReviewSection.css'\nimport Rating from '@mui/material/Rating';\nimport { motion } from 'framer-motion';\nimport { MyContext } from '../../../pages/Make/MakePageV2'\n\nfunction ReviewSection({content}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    const returnReviewCards = content.reviews.map((item, index) => {\n        return(\n            <div key={index} className=\"review__card\">\n                <div>\n                    <div>\n                    </div>\n                    <div>\n                        {item.title}\n                    </div>\n                </div>\n                <div style={{marginTop:'10px'}}>\n                    <Rating\n                        readOnly\n                        value={item.rating} \n                        precision={0.1}\n                    />\n                </div>\n                <div style={{marginTop:'10px'}}>\n                    {item.desc}\n                </div>\n                <div style={{marginTop:'10px', color:'rgba(0,0,0,0.6)'}}>\n                    {item.writer}\n                </div>\n            </div>\n        )\n    })\n\n    return (\n        <>\n            <motion.div className=\"template\"\n            data-aos={content.animation.type} aos-duration=\"2000\">\n                <div>\n                    {content.title}\n                </div>\n                <div className=\"reviews__container\"> \n                    {returnReviewCards}\n                </div>\n            </motion.div>\n        </>\n    )\n}\nexport default ReviewSection\n","/Users/oyejin/Surfee/kiwi/src/components/Make/SectionTypes/HorizontalSection.js",["568","569","570"],"import React, {useState, useContext} from 'react'\nimport { MyContext } from '../../../pages/Make/MakePageV2'\nimport './Default.css'\nimport { motion } from 'framer-motion';\n\nimport Popover from '@mui/material/Popover';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\n\nfunction HorizontalSection({content}) {\n    const [show, setShow] = useState(false);\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const open = Boolean(anchorEl);\n    const id = open ? 'simple-popover' : undefined;\n    \n\n    const showPop = () => {\n        setShow(!show);\n        console.log()\n    }\n\n    const setWidth = len => {\n        let newContents = state.contents.map((item, index) => index === state.secNum ? {...item, width: len} : item)\n        action.setContents(newContents);\n    }\n\n    return (\n        <>\n            <div style={{display: show ? 'none' : 'block'}} className=\"balloon\">\n                <span onClick={() => setWidth(75)}>\n                    75%\n                </span>\n                <span onClick={() => setWidth(60)}>\n                    60%\n                </span>\n                <span onClick={() => setWidth(90)}>\n                    90%\n                </span>\n            </div>\n            <Button aria-describedby={id} variant=\"contained\" onClick={handleClick}>\n                Open Popover\n            </Button>\n            <Popover\n                id={id}\n                open={open}\n                anchorEl={anchorEl}\n                onClose={handleClose}\n                anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left',\n                }}\n                transformOrigin={{\n                  vertical: 'bottom',\n                  horizontal: 'left',\n                }}\n            >\n                <div className=\"pop-balloon\">\n                    <span onClick={() => setWidth(75)}>\n                        75%\n                    </span>\n                    <span onClick={() => setWidth(60)}>\n                        60%\n                    </span>\n                    <span onClick={() => setWidth(90)}>\n                        90%\n                    </span>\n                </div>\n            </Popover>\n            <hr style={{width:`${content.width}%`, cursor:`pointer`}} onClick={handleClick} />\n        </>\n    )\n}\n\nexport default HorizontalSection\n","/Users/oyejin/Surfee/kiwi/src/components/Make/Footer/FTemplate.js",["571","572"],"import React from 'react'\nimport Editor from '../tools/Editor'\nimport produce from 'immer'\nimport {FacebookCircle, FacebookSquare, Youtube, Twitter, InstagramAlt} from '@styled-icons/boxicons-logos';\nimport { Mail } from '@styled-icons/entypo';\nimport { Naver, Notion, Kakaotalk } from '@styled-icons/simple-icons';\n\nfunction FTemplate({foot, setFoot, history}) {\n\n    const onChangeText = (data) => {\n        setFoot(produce(foot, draft => {\n            draft.text = data;\n        }));\n    }\n\n    const returnIcons = foot.icons.map((item, index) => {\n        switch(item.value){\n            case 'facebook':\n                return(\n                    <FacebookCircle color={foot.iconColor} className=\"footer-icon\" />\n                )\n            case 'instagram':\n                return(\n                    <InstagramAlt color={foot.iconColor} className=\"footer-icon\" />\n                )\n            case 'naver':\n                return(\n                    <Naver color={foot.iconColor} className=\"footer-icon\" />\n                )\n            case 'notion':\n                return(\n                    <Notion color={foot.iconColor} className=\"footer-icon\" />\n                )\n            case 'mail':\n                return(\n                    <Mail color={foot.iconColor} className=\"footer-icon\" />\n                )\n            case 'kakaotalk':\n                return(\n                    <Kakaotalk color={foot.iconColor} className=\"footer-icon\" />\n                )\n            case 'twitter':\n                return(\n                    <Twitter color={foot.iconColor} className=\"footer-icon\" />\n                )\n            case 'youtube':\n                return(\n                    <Youtube color={foot.iconColor} className=\"footer-icon\" />\n                )\n            default:\n                return(\n                    <FacebookCircle color={foot.iconColor} className=\"footer-icon\" />\n                )\n\n        }\n    })\n\n    return (\n        <>\n            <div className=\"footer-section\" style={{fontSize:'0.5em'}}>\n                <div>\n                    \n                </div>\n                {\n                    foot.iconUse && \n                        <div className=\"center-row\" style={{justifyContent:`${foot.iconAlign}`}}>\n                            {returnIcons}\n                        </div>\n                }\n                <div>\n                    <input\n                        className=\"text-input\"\n                        value={foot.text}\n                        onChange={(e) => {\n                            onChangeText(e.currentTarget.value);\n                        }}\n                    />  \n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default FTemplate\n","/Users/oyejin/Surfee/kiwi/src/components/Make/Edit/AddingSection.js",["573"],"import React, {useState, useContext} from 'react'\nimport { MyContext } from '../../../pages/Make/MakePageV2'\nimport {base} from '../SectionTypes/baseTypes'\nimport { detailSectionTemplateList, heroSectionTemplateList,featuresSectionTemplateList, mapSectionTemplateList, reviewSectionTemplateList, priceSectionTemplateList, ctaSectionTemplateList,  } from './EditTemplates/InnerTemplates'\n\nfunction AddingSection() {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n    const [nowType, setNowType] = useState('DetailSection');\n\n    const choseType = n => {\n        setNowType(n)\n    }\n\n    const addSectionByTemplate = tnum => {\n        // 아래는 state.contents에 섹션 하나를 추가하는 것.\n        let body = JSON.parse(JSON.stringify(base.filter((item, index) => item.sectionTypeName === nowType)[0]))\n        body.templateNumber = tnum;\n\n        action.setContents([\n            ...state.contents.slice(0, state.addingSectionAt+1),\n            body,\n            ...state.contents.slice(state.addingSectionAt+1, state.contents.length),\n        ])\n        action.setSecNum(state.addingSectionAt+1)\n        action.setAddingSectionAt(1000)\n    }\n\n    const returnTepmplateSelections = () => {\n        switch(nowType){\n            case 'DetailSection':\n                return(\n                    <>\n                    {detailSectionTemplateList.map((item, index) => {\n                        return(\n                            <span className=\"type-selection\" onClick={() => addSectionByTemplate(item.templateNumber)}>{item.templateNumber}</span>\n                        )\n                    })}\n                    </>\n                )\n            case 'HeroSection':\n                return(\n                    <>\n                    {heroSectionTemplateList.map((item, index) => {\n                        return(\n                            <span className=\"type-selection\" onClick={() => addSectionByTemplate(item.templateNumber)}>{item.templateNumber}</span>\n                        )\n                    })}\n                    </>\n                )\n            case 'ReviewSection':\n                return(\n                    <>\n                    {reviewSectionTemplateList.map((item, index) => {\n                        return(\n                            <span className=\"type-selection\" onClick={() => addSectionByTemplate(item.templateNumber)}>{item.templateNumber}</span>\n                        )\n                    })}\n                    </>\n                )\n            case 'MapSection':\n                return(\n                    <>\n                    {mapSectionTemplateList.map((item, index) => {\n                        return(\n                            <span className=\"type-selection\" onClick={() => addSectionByTemplate(item.templateNumber)}>{item.templateNumber}</span>\n                        )\n                    })}\n                    </>\n                )\n            case 'PriceSection':\n                return(\n                    <>\n                    {priceSectionTemplateList.map((item, index) => {\n                        return(\n                            <span className=\"type-selection\" onClick={() => addSectionByTemplate(item.templateNumber)}>{item.templateNumber}</span>\n                        )\n                    })}\n                    </>\n                )\n            case 'CtaSection':\n                return(\n                    <>\n                    {ctaSectionTemplateList.map((item, index) => {\n                        return(\n                            <span className=\"type-selection\" onClick={() => addSectionByTemplate(item.templateNumber)}>{item.templateNumber}</span>\n                        )\n                    })}\n                    </>\n                )\n            case 'FeaturesSection':\n                return(\n                    <>\n                    {featuresSectionTemplateList.map((item, index) => {\n                        return(\n                            <span className=\"type-selection\" onClick={() => addSectionByTemplate(item.templateNumber)}>{item.templateNumber}</span>\n                        )\n                    })}\n                    </>\n                )\n\n            case 'ETCetraSection':\n                return(\n                    <>\n                        <span className=\"type-selection\" onClick={() => addSectionByTemplate(1)}>텍스트</span>\n                        <span className=\"type-selection\" onClick={() => addSectionByTemplate(1)}>사진</span>\n                        <span className=\"type-selection\" onClick={() => addSectionByTemplate(1)}>빈공간</span>\n                        <span className=\"type-selection\" onClick={() => addSectionByTemplate(1)}>구분선</span>\n                    </>\n                )\n\n\n        }\n    }\n\n    return (\n        <div style={{width:'100%'}}>\n            <div>\n                추가할 템플릿을 골라주세요.\n                <button onClick={() => {action.setContents(state.contents)}}>버튼</button>\n            </div>\n            <div className=\"add-section__container\">\n                <div className=\"type-selection__container\">\n                    {base.map((item,index) => {\n                        let backColor = 'rgba(0,0,0,0)'\n                        if(nowType === item.sectionTypeName){\n                            backColor = 'rgba(250,250,0,0.5)'\n                        }\n                        return(\n                            <span className=\"type-selection\" style={{backgroundColor: `${backColor}`}} onClick={() => choseType(item.sectionTypeName)}>{item.sectionTypeName}</span>\n                        )\n                    })}\n                </div>\n                <div className=\"template-selection__container\">\n                    <div>\n                        {nowType}\n                    </div>\n                    <div className=\"column\">\n                        { returnTepmplateSelections() }\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default AddingSection\n","/Users/oyejin/Surfee/kiwi/src/components/Make/Modal/AddingSection.js",["574"],"import React, {useState, useContext} from 'react'\nimport { styled, Box } from '@mui/system';\nimport ModalUnstyled from '@mui/base/ModalUnstyled';\nimport {base} from '../SectionTypes/baseTypes'\nimport { MyContext } from '../../../pages/Make/MakePageV2'\nimport { Close } from '@styled-icons/evaicons-solid';\nimport './AddingSection.css'\n\nconst StyledModal = styled(ModalUnstyled)`\n  position: fixed;\n  z-index: 1300;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Backdrop = styled('div')`\n  z-index: -1;\n  position: fixed;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  left: 0;\n  background-color: rgba(0, 0, 0, 0.1);\n  -webkit-tap-highlight-color: transparent;\n`;\n\nconst style = {\n  width: 700,\n  height: 500,\n  bgcolor: 'rgba(255,255,255,1)',\n  borderRadius:2,\n  p: 2,\n  px: 4,\n  pb: 3,\n};\n\nfunction AddingSection({open, setOpen}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    const addSection = (typeName) => {\n        // 아래는 state.contents에 섹션 하나를 추가하는 것.\n        let body = JSON.parse(JSON.stringify(base.filter((item, index) => item.sectionTypeName === typeName)[0]))\n\n        action.setContents([\n            ...state.contents.slice(0, state.contents.length),\n            body,\n        ])\n        action.setSecNum(state.contents.length)\n        action.setCategory(0);\n    }\n\n    return (\n        <div>\n            <StyledModal\n                aria-labelledby=\"unstyled-modal-title\"\n                aria-describedby=\"unstyled-modal-description\"\n                open={open}\n                onClose={() => setOpen(!open)}\n                BackdropComponent={Backdrop}\n            >\n                <Box sx={style}>\n                    <div className=\"modal-top__title\">\n                        <div className=\"centera\" style={{width:\"95%\"}}>\n                            섹션 추가\n                        </div>\n                        <div style={{width:\"5%\", cursor:\"pointer\"}} onClick={() => setOpen(false)}>\n                            <Close size=\"30\" />\n                        </div>\n                    </div>\n                    <div className=\"section-modal__container\">\n                        {base.map((item,index) => {\n                            return(\n                                <div className=\"section-modal__button\" key={index} onClick={() => addSection(item.sectionTypeName)}>\n                                    {item.sectionTypeName}\n                                </div>\n                            )\n                        })} \n                    </div>\n                </Box>\n            </StyledModal>\n        </div>\n    )\n}\n\nexport default AddingSection\n","/Users/oyejin/Surfee/kiwi/src/components/Make/Edit/tools/EditButtonTable.js",[],"/Users/oyejin/Surfee/kiwi/src/components/Make/Edit/tools/TextSizeCustom.js",[],"/Users/oyejin/Surfee/kiwi/src/components/Make/Edit/tools/ResponsiveCustom.js",[],"/Users/oyejin/Surfee/kiwi/src/components/Make/Modal/CheckModal.js",["575"],"import React, {useState} from 'react'\nimport { styled, Box } from '@mui/system';\nimport ModalUnstyled from '@mui/base/ModalUnstyled';\nimport { Input } from 'antd';\nimport Checkbox from '@mui/material/Checkbox';\nimport {dbService} from '../../../tools/fbase'\n\nconst label = { inputProps: { 'aria-label': 'Checkbox demo' } };\n\nconst StyledModal = styled(ModalUnstyled)`\n  position: fixed;\n  z-index: 1300;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  left: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Backdrop = styled('div')`\n  z-index: -1;\n  position: fixed;\n  right: 0;\n  bottom: 0;\n  top: 0;\n  left: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  -webkit-tap-highlight-color: transparent;\n`;\n\nconst style = {\n  width: '600px',\n  height: '500px',\n  bgcolor: 'rgba(255,255,255,1)',\n  borderRadius: '5px',\n  p: 2,\n  px: 4,\n  pb: 3,\n};\n\nfunction CheckModal({ch, setCh, onSubmit2}) {\n    const [myYes, setMyYes] = useState(false);\n    const [email, setEmail] = useState(\"\");\n    const [feedback1, setFeedback1] = useState(\"\");\n\n    const submitDone = () => {\n        if(!myYes){\n            alert(\"상기의 사항에 대해서 동의한 경우에만 신청이 진행될 수 있습니다!\")\n            return;\n        }else if(email.length < 3){\n            alert(\"이메일 양식에 맞게 작성해주시기 바랍니다.\")\n            return;\n        }else{\n            // 피드백 입력 받아서 저장. 입력한 내용이랑 현재 유저의 이메일, 현재 제작한 랜딩페이지의 아이디\n            dbService.collection('make-feedback').add({\n                feedback1:feedback1\n            })\n\n            onSubmit2();\n            setCh(!ch);\n        }\n    }\n\n    return (\n        <div>\n            <StyledModal\n                aria-labelledby=\"unstyled-modal-title\"\n                aria-describedby=\"unstyled-modal-description\"\n                open={ch}\n                onClose={() => setCh(!ch)}\n                BackdropComponent={Backdrop}\n            >\n                <Box sx={style}>\n                    <div className=\"check-container\">\n                        <div className=\"check-title\">\n                        안내창\n                        </div>\n\n                        <div className=\"check-desc\">\n                            이메일을 기입하고 체크박스 체크 후 ‘제출하기’를 누르면 <br/>\n                            12시간 내에 완성된 페이지와 데이터 분석 페이지를 메일로 보내드립니다. <br/>\n                            페이지는 Surfee 베타 서비스 기간인 12월00일까지 무료로 제공되며 <br/>\n                            00일부터 디벨롭 과정을 거친 후 빠른 시일 내에 다시 돌아오겠습니다!\n                        </div>\n\n                        <div className=\"check-form-container\">\n                            <div style={{display:'flex', flexDirection:'column'}}>\n                                <span>이메일</span>\n                                <Input style={{width:'60%'}} tyle=\"text\" value={email} onChange={e => setEmail(e.currentTarget.value)}/>\n                            </div>\n                            <div style={{display:'flex', flexDirection:'column'}}>\n                                <span>피드백 질문 1</span>\n                                <Input style={{width:'60%'}} tyle=\"text\" value={feedback1} onChange={e => setFeedback1(e.currentTarget.value)}/>\n                            </div>\n                            <div style={{marginTop:'20px', display:'flex', flexDirection:'row', alignItems:'center'}}>\n                                <Checkbox color=\"secondary\" type=\"checkbox\" value={myYes} onChange={e => setMyYes(!myYes)}/>\n                                <span style={{marginLeft:'10px'}}> 개인정보 수집/이용에 동의합니다.</span>\n                            </div>\n                        </div>\n                        <div>\n                            <button className=\"check-button\" onClick={e => submitDone()}>제출하기</button>\n                        </div>\n                    </div>\n                </Box>\n            </StyledModal>\n        </div>\n    )\n}\n\nexport default CheckModal\n","/Users/oyejin/Surfee/kiwi/src/components/Make/Edit/EditTemplates/EditCtaSection.js",["576","577"],"import React, {useState, useContext} from 'react'\nimport { MyContext } from '../../../../pages/Make/MakePageV2'\nimport { ctaSectionTemplateList } from './InnerTemplates'\nimport TemplateChoose from '../tools/TemplateChoose'\n\nfunction EditCtaSection({content, category}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    const returnTable = () => {\n        switch(category){\n            case 0:\n                // case 0은 디자인 수정\n                return(\n                    <div className=\"section-make__inner-container\">\n                        {state.secNum}번째 섹션이고 CTA 입니다.\n                    </div>\n                )\n\n            case 1:\n                // case 1은 템플릿 변경\n                return(\n                    <>\n                        <TemplateChoose content={content} title=\"CTA\" list={ctaSectionTemplateList} />\n                    </>\n                )\n\n            default:\n                <></>\n        }\n    }\n\n\n    return(\n        <>\n            {returnTable()}\n        </>\n    )\n}\n\nexport default EditCtaSection\n","/Users/oyejin/Surfee/kiwi/src/components/Make/Edit/EditTemplates/EditReviewSection.js",[],"/Users/oyejin/Surfee/kiwi/src/components/Make/Edit/EditTemplates/EditDetailSection.js",["578"],"import React, {useState, useContext} from 'react'\nimport { MyContext } from '../../../../pages/Make/MakePageV2'\nimport { detailSectionTemplateList } from './InnerTemplates'\nimport TemplateChoose from '../tools/TemplateChoose'\nimport './EditeTemplates.css'\nimport './EditContent.css'\n\nfunction EditDetailSection({content, category}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    const onChangeButtonLink = (e) => {\n        let newContents = state.contents.map((item, index) => index === state.secNum ? {...item, button:{...item.button, link:e.currentTarget.value}} : item )\n        action.setContents(newContents);\n    }\n\n    const returnTable = () => {\n        switch(category){\n            case 0:\n                // case 0은 디자인 수정\n                return(\n                    <div className=\"section-make__inner-container\">\n                        {state.secNum}번째 섹션이고 타입은 1번 - 텍스트 입니다.\n                        <br/>\n                        <pre dangerouslySetInnerHTML={{__html: content.titles.title}}>\n                        </pre>\n                        <div>\n                            <div>버튼링크</div>\n                            <input type=\"text\" value={content.button.link} onChange={(e) => onChangeButtonLink(e)}/>\n                        </div>\n                    </div>\n                )\n\n            case 1:\n                // case 1은 템플릿 변경\n                return(\n                    <>\n                        <TemplateChoose content={content} title=\"디테일\" list={detailSectionTemplateList} />\n                    </>\n                )\n\n            default:\n                <></>\n        }\n    }\n\n    return(\n        <>\n            {returnTable()}\n        </>\n    )\n}\n\nexport default EditDetailSection\n","/Users/oyejin/Surfee/kiwi/src/components/Make/Edit/EditTemplates/EditFeaturesSection.js",["579","580"],"import React, {useState, useContext} from 'react'\nimport { MyContext } from '../../../../pages/Make/MakePageV2'\nimport { featuresSectionTemplateList } from './InnerTemplates'\nimport TemplateChoose from '../tools/TemplateChoose'\n\nfunction EditFeaturesSection({content, category}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    const returnTable = () => {\n        switch(category){\n            case 0:\n                // case 0은 디자인 수정\n                return(\n                    <div className=\"section-make__inner-container\">\n                        {state.secNum}번째 섹션이고 특징들 입니다.\n                    </div>\n                )\n\n            case 1:\n                // case 1은 템플릿 변경\n                return(\n                    <>\n                        <TemplateChoose content={content} title=\"특징\" list={featuresSectionTemplateList} />\n                    </>\n                )\n\n            default:\n                <></>\n        }\n    }\n\n\n    return(\n        <>\n            {returnTable()}\n        </>\n    )\n}\n\nexport default EditFeaturesSection","/Users/oyejin/Surfee/kiwi/src/components/Make/Edit/EditTemplates/EditHeroSection.js",["581","582","583","584","585","586","587","588"],"/Users/oyejin/Surfee/kiwi/src/components/Make/NavBar/NaviTemplate.js",["589","590"],"import React from 'react'\nimport Editor from '../tools/Editor'\n\nfunction NaviTemplate({navi, setNavi}) {\n\n    const returnCtaButton = () => {\n        return(\n            <button className=\"make-nav-button b-one\">\n                버튼\n            </button>\n        )\n    }\n    const returnGhostButton = () => {\n        return(\n            <button className=\"make-nav-button b-one\">\n                버튼\n            </button>\n        )\n    }\n\n    return (\n        <>\n            <span className=\"make-nav-logoc centera\">\n                {navi.isLogo === \"logo\" && \n                    <div className=\"centera\" style={{width:'80px'}}><img className=\"hover\" src={navi.logo} height={30} /></div>}\n                {navi.isLogo === \"text\" && \n                <input \n                    value={navi.title} \n                    onChange={(e) => {\n                        setNavi({...navi, title:e.currentTarget.value});\n                    }}\n                    />}\n            </span>\n            <span className=\"make-nav-buttonc centera\">\n                { navi.cta.use && returnCtaButton() }\n                { navi.ghost.use && returnGhostButton() }\n            </span>\n        </>\n    )\n}\n\nexport default NaviTemplate\n","/Users/oyejin/Surfee/kiwi/src/components/Make/Edit/tools/EditTopBar.js",["591","592","593","594"],"import React, {useContext} from 'react'\nimport {MyContext} from '../../../../pages/Make/MakePageV2'\nimport { Template } from '@styled-icons/heroicons-outline'\nimport { DesignServices } from '@styled-icons/material-outlined'\nimport './EditTopBar.css'\n\nfunction EditTopBar({category, setCategory}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    return (\n        <div className=\"edit__top-bar\">\n            <div className={category === 1 ? 'edit-radios' : 'edit-radios er-clicked'} onClick={() => setCategory(0)}>\n                기본\n            </div>\n            <div className={category === 0 ? 'edit-radios' : 'edit-radios er-clicked'} onClick={() => setCategory(1)}>\n                디자인\n            </div>\n        </div>\n    )\n}\n\nexport default EditTopBar\n","/Users/oyejin/Surfee/kiwi/src/components/Make/Edit/tools/RadioCustom.js",[],"/Users/oyejin/Surfee/kiwi/src/components/Make/Edit/tools/ColorCustom.js",["595","596"],"import React, {useContext, useState, useRef} from 'react'\nimport { Chrome } from '@uiw/react-color';\nimport { MyContext } from '../../../../pages/Make/MakePageV2'\nimport { Alpha } from '@uiw/react-color';\n\nimport Popover from '@mui/material/Popover';\n\nfunction EditColor({onChange, value}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n    const colorRef = useRef(null)\n    const [colorShow, setColorShow] = useState(null);\n    const [usedColors, setUsedColors] = useState([\n        \"rgb(0,0,0)\",\n        \"rgb(0,0,255)\",\n        \"rgb(0,255,0)\",\n        \"rgb(255,0,0)\",\n        \"rgb(255,255,255)\",\n    ]);\n\n\n    return (\n        <div className=\"center-row\" style={{justifyContent: \"start\"}}>\n            <div className=\"color-button\" style={{backgroundColor : `${state.setting.color}`}} onClick={() => onChange(`${state.setting.color}`)}>\n                {/* <div style={{color:'rgba(255,255,255,0.8)'}}>\n                    main\n                </div> */}\n                <div>\n                    {state.setting.color}\n                </div>\n            </div>\n\n            <div ref={colorRef} className=\"color-button\" style={{backgroundColor:`${value}`}} onClick={(e) =>{ setColorShow(e.currentTarget)}}>    \n                {value}\n            </div>\n\n            <Popover\n                id={Boolean(colorShow) ? 'simple-popover' : undefined} // 수정\n                open={Boolean(colorShow)} // 수정\n                anchorEl={colorShow} // 수정 // 수정\n                anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                }}\n                transformOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                }}\n\n                onClose={() => {\n                    setColorShow(null)\n                    if(usedColors.includes(value)){\n                        return\n                    }else{\n                        if(usedColors.length > 4){\n                            usedColors.pop()\n                            setUsedColors([...usedColors, value])\n                        }else{\n                            setUsedColors([...usedColors, value])\n                        }\n                    }\n                }}>\n                <div>\n                    <div>\n                        <div>\n                            <Chrome\n                                color={value}\n                                // placement={GithubPlacement.Right}\n                                onChange={(color) => {\n                                    onChange(color.hex);\n                                }}\n                            />\n                        </div>\n                        <div>\n                            사용한 색상\n                        </div>\n                        <div className=\"center-row\">\n                            {usedColors.map((item, index) => {\n                                return(\n                                    <div className=\"color-button\" style={{backgroundColor:`${item}`}} onClick={() => onChange(item)} key={index}>\n                                    </div>\n                                )\n                            })}\n                        </div>\n                    </div>\n                </div>\n            </Popover>\n        </div>\n    )\n}\n\nexport const returnColorContainer = (text, value, func) => {\n    return(\n        <div className=\"edit-element\">\n            <div className=\"edit-element__one\" style={{flexDirection: 'column'}}>\n                <div className=\"edit-element__left\">\n                    {text}\n                </div>\n                <div className=\"edit-element__right\">\n                    <EditColor onChange={func} value={value || '#ffffff'} />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport const EditColorContainer = ({text, value, func}) => {\n    return(\n        <div className=\"edit-element\">\n            <div className=\"edit-element__one\" style={{flexDirection: 'column'}}>\n                <div className=\"edit-element__left\">{text}</div>\n                <div className=\"edit-element__right\">\n                    <EditColor onChange={(e) => func(e)} value={value || 'white'} />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default EditColor\n","/Users/oyejin/Surfee/kiwi/src/components/Make/Edit/tools/OpenCloseCustom.js",["597"],"import React, {useState} from 'react'\nimport { styled } from '@mui/material/styles';\nimport ArrowForwardIosSharpIcon from '@mui/icons-material/ArrowForwardIosSharp';\nimport MuiAccordion from '@mui/material/Accordion';\nimport MuiAccordionSummary from '@mui/material/AccordionSummary';\nimport MuiAccordionDetails from '@mui/material/AccordionDetails';\nimport Typography from '@mui/material/Typography';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport Tooltip from '@mui/material/Tooltip';\nimport { InformationCircle } from '@styled-icons/ionicons-outline';\nimport './OpenCloseCustom.css'\n// import Accordion from '@mui/material/Accordion';\n\nconst Accordion = styled((props) => (\n  <MuiAccordion disableGutters elevation={0} square {...props} />\n))(({ theme }) => ({\n    border: '1px solid rgba(0,0,0,0.2)',\n    width:'90%',\n    borderRadius:10,\n    backgroundColor:\n      theme.palette.mode === 'dark'\n        ? 'rgba(255, 255, 255, .05)'\n        : 'rgba(0, 0, 0, 0)',\n}));\n\nconst AccordionSummary = styled((props) => (\n  <MuiAccordionSummary\n    expandIcon={<ArrowForwardIosSharpIcon sx={{ fontSize: '0.9rem' }} />}\n    {...props}\n  />\n))(({ theme }) => ({\n  flexDirection: 'row-reverse',\n  '& .MuiAccordionSummary-expandIconWrapper.Mui-expanded': {\n    transform: 'rotate(180deg)',\n  },\n  '& .MuiAccordionSummary-content': {\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nconst AccordionDetails = styled(MuiAccordionDetails)(({ theme }) => ({\n  padding: theme.spacing(0.3),\n}));\n\n// 아래는 열고 닫히는 애니메이션 효과까지 적용\nexport const AccordionCustom = (props) => {\n  return (\n    <div className=\"centera\">\n      <Accordion>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        >\n            <div>\n                {props.title}\n            </div>\n        </AccordionSummary>\n        <AccordionDetails>\n            <div>\n                {props.children}\n            </div>\n        </AccordionDetails>\n      </Accordion>\n    </div>\n  );\n}\n\nconst OpenCloseCustom = (props) => {\n  const [open, setOpen] = useState(false)\n\n  return (\n    <div className=\"one-element\">\n      <div className=\"accordion\">\n        <div className=\"accordion__header\" onClick={() => setOpen(!open)}>\n          <div className=\"edit-element\">\n            <div className=\"onoff-title\">\n              {props.title}\n              {\n                props.tooltip && \n                  <Tooltip placement=\"top\" title={props.tooltip} arrow>\n                    <InformationCircle size=\"16\" style={{color:'#C4CACF', zIndex:'20', marginLeft:'6px'}}/>\n                  </Tooltip>\n              }\n            </div>\n            <div className=\"centera\" style={{justifyContent: 'end'}}>\n              { open ? <ExpandMoreIcon style={{transform:'rotate(180deg)'}} /> : <ExpandMoreIcon />}\n            </div>\n          </div>\n          { props.preseen && \n            <div className=\"edit-element\">\n              {props.preseen}\n            </div> }\n        </div>\n        <div className=\"accordion__body\" style={{display:`${open ? 'flex' : 'none'}`}}>\n          {props.children}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default OpenCloseCustom\n\n\n","/Users/oyejin/Surfee/kiwi/src/components/Make/Edit/tools/InputCustom.js",["598"],"import React from 'react'\nimport {Link45deg} from '@styled-icons/bootstrap'\nimport './InputCustom.css'\n\nfunction InputCustom({value, func}) {\n    return (\n        <div className=\"center-row\">\n            {/* <div>\n                <Link45deg size=\"25\" />\n            </div> */}\n            <div>\n                <input className=\"edit-input\" placeholder=\"링크를 입력하세요.\" value={value} onChange={e => func(e.currentTarget.value)} />\n            </div>\n        </div>\n    )\n}\n\nexport default InputCustom\n","/Users/oyejin/Surfee/kiwi/src/components/Make/Edit/tools/OnOffCustom.js",["599","600"],"import React from 'react'\nimport { styled } from '@mui/material/styles';\nimport Switch from '@mui/material/Switch';\nimport './OnOffCustom.css'\n\nexport const CustomSwitch = ({text, value, onChange}) => {\n  return(\n    <div className=\"switch-element\">\n      <div className=\"switch-element__left\">\n          {text}\n      </div>\n      <div>\n        <div className={value ? 'custom-switch' : 'custom-switch unclicked'} onClick={onChange}>\n          <div className=\"custom-switch-thumb\" style={{left : `${value ? '32px' : '2px'}`}}></div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nfunction OnOffCustom({text, value, func}) {\n    return (\n      <div className=\"edit-element\">\n        <div className=\"edit-element__left\">\n            {text}\n        </div>\n        <div className=\"edit-element__right\">\n            <CustomSwitch value={value} onChange={e => func(e)} checkedChildren=\"ON\" unCheckedChildren=\"OFF\" defaultChecked />\n        </div>\n      </div>\n    )\n}\n\nexport default OnOffCustom\n","/Users/oyejin/Surfee/kiwi/src/components/Make/Edit/tools/EditSlider.js",[],"/Users/oyejin/Surfee/kiwi/src/components/Make/Edit/tools/ElementsTable.js",[],"/Users/oyejin/Surfee/kiwi/src/components/Make/Edit/tools/SelectCustom.js",["601"],"import React, {useState, useEffect} from 'react'\nimport {ChevronDown} from '@styled-icons/bootstrap';\nimport Popover from '@mui/material/Popover';\nimport './SelectCustom.css'\n\nfunction SelectCustom({options, onChange, value}) {\n    const [anchorEl, setAnchorEl] = useState(null);\n  \n    const handleClick = (event) => {\n      setAnchorEl(event.currentTarget);\n    };\n  \n    const handleClose = () => {\n      setAnchorEl(null);\n    };\n  \n    const open = Boolean(anchorEl);\n    const id = open ? 'simple-popover' : undefined;\n\n    return (\n        <div>\n            <div className=\"select-open-button center-row\" aria-describedby={id} variant=\"contained\" onClick={handleClick}>\n                <div className=\"select-button__content\" style={{paddingLeft:'15px'}}>\n                    {options.filter(doc => doc.value === value)[0].label}\n                </div>\n                <div className=\"select-button__content\" style={{justifyContent:'end', paddingRight:'15px'}}><ChevronDown size=\"17\" /></div>\n            </div>\n            <Popover\n                id={id}\n                open={open}\n                anchorEl={anchorEl}\n                onClose={handleClose}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'left',\n                }}\n            >\n                <div className=\"so__container\">\n                    {options.map((item, index) => {\n                        return(\n                            <div className=\"select-hover\" onClick={() => {onChange(item.value); setAnchorEl('')}}\n                                style={{ fontFamily:`${item.value}`, borderBottomLeftRadius:`${index === options.length -1 ? '5px' : '0px'}`,borderBottomRightRadius:`${index === options.length ? '5px' : '0px'}`}}\n                            >\n                                {item.label}\n                            </div>\n                        )\n                    })}\n                </div>\n            </Popover>\n        </div>\n    )\n}\n\nexport default SelectCustom\n","/Users/oyejin/Surfee/kiwi/src/components/Make/Edit/tools/CheckBoxContainer.js",[],"/Users/oyejin/Surfee/kiwi/src/components/Make/Edit/tools/AnimationCustom.js",[],"/Users/oyejin/Surfee/kiwi/src/components/Make/tools/Editor.js",["602"],"import React from 'react'\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport InlineEditor from \"@ckeditor/ckeditor5-editor-inline/src/inlineeditor\";\n// import ClassicEditor from \"@ckeditor/ckeditor5-editor-classic/src/classiceditor\";\nimport Essentials from \"@ckeditor/ckeditor5-essentials/src/essentials\";\nimport Paragraph from \"@ckeditor/ckeditor5-paragraph/src/paragraph\";\nimport Bold from \"@ckeditor/ckeditor5-basic-styles/src/bold\";\nimport Italic from \"@ckeditor/ckeditor5-basic-styles/src/italic\";\nimport Underline from \"@ckeditor/ckeditor5-basic-styles/src/underline\";\nimport Strikethrough from \"@ckeditor/ckeditor5-basic-styles/src/strikethrough\";\nimport Link from \"@ckeditor/ckeditor5-link/src/link\";\nimport PasteFromOffice from \"@ckeditor/ckeditor5-paste-from-office/src/pastefromoffice\";\nimport Font from \"@ckeditor/ckeditor5-font/src/font\";\nimport List from \"@ckeditor/ckeditor5-list/src/list\";\nimport Alignment from \"@ckeditor/ckeditor5-alignment/src/alignment\";\nimport TextTransformation from \"@ckeditor/ckeditor5-typing/src/texttransformation\";\nimport Base64UploadAdapter from \"@ckeditor/ckeditor5-upload/src/adapters/base64uploadadapter\";\nimport './Editor.css'\n\nconst editorConfiguration = {\n    plugins: [Essentials, Bold, Italic, Underline, Strikethrough, Alignment, Font, Base64UploadAdapter],\n    toolbar: [\"heading\", \"|\", \"bold\", \"italic\", \"underline\", \"strikethrough\", \"alignment\", \"fontSize\"],\n    alignment: {\n      options: [\"justify\", \"left\", \"center\", \"right\"],\n    },\n    fontSize: {\n        options: [\n          14,\n          15,\n          19,\n          'default',\n          26,\n          27,\n          28,\n          29,\n          30,\n        ],\n      },\n  };\n\nconst Editor = (props) => {\n    return (\n        <div className=\"ckeditor-container\">\n        <CKEditor\n        onInit={(editor) => {\n          editor.ui\n            .getEditableElement()\n            .parentElement.insertBefore(\n              editor.ui.view.toolbar.element,\n              editor.ui.getEditableElement()\n            );\n        }}\n        config={{\n          language: \"ko\",\n          plugins: [\n            Essentials,\n            Paragraph,\n            Bold,\n            Italic,\n            Underline,\n            Strikethrough,\n            Font,\n            Alignment,\n            List,\n            Link,\n            PasteFromOffice,\n            Base64UploadAdapter,\n            TextTransformation\n          ],\n          toolbar: props.toolbar\n            ? props.toolbar\n            : {\n              shouldNotGroupWhenFull:true,\n              items:[\n                \"bold\",\n                \"italic\",\n                \"underline\",\n                \"strikethrough\",\n                \"|\",\n                \"fontSize\",\n                \"fontColor\",\n                \"fontBackgroundColor\",\n                \"|\",\n                \"alignment\",\n                \"blockQuote\",\n                \"|\",\n                \"link\",\n                \"insertTable\",\n                \"|\",\n                \"undo\",\n                \"redo\",\n              ]},\n          fontColor:{\n            columns:4,\n            documentColors:4,\n            colors:[\n            {\n              color: 'hsl(0, 0%, 0%)',\n              label: '검정'\n            },\n            {\n              color: 'hsl(0, 0%, 90%)',\n              label: '연회색'\n            },\n            {\n              color: 'hsl(0, 0%, 100%)',\n              label: '흰색',\n              hasBorder: true\n            },\n            {\n              color: 'rgb(255,0,0)',\n              label: '빨강'\n            },\n            {\n              color: 'hsl(30, 75%, 60%)',\n              label: '주황'\n            },\n            {\n              color: 'hsl(60, 75%, 60%)',\n              label: '노랑'\n            },\n            {\n              color: 'hsl(90, 75%, 60%)',\n              label: '연초록'\n            },\n            {\n              color: 'hsl(120, 75%, 60%)',\n              label: '초록'\n            },\n            {\n              color: 'hsl(210, 75%, 60%)',\n              label: '하늘'\n            },\n            {\n              color: 'hsl(240, 75%, 60%)',\n              label: '파랑'\n            },\n            {\n              color: 'hsl(270, 75%, 60%)',\n              label: '보라'\n            }\n          ]},\n          fontBackgroundColor:{\n            columns:4,\n            documentColors:4,\n            colors:[\n            {\n              color: 'hsl(0, 0%, 0%)',\n              label: '검정'\n            },\n            {\n              color: 'hsl(0, 0%, 90%)',\n              label: '연회색'\n            },\n            {\n              color: 'hsl(0, 0%, 100%)',\n              label: '흰색',\n              hasBorder: true\n            },\n            {\n              color: 'rgb(255,0,0)',\n              label: '빨강'\n            },\n            {\n              color: 'hsl(30, 75%, 60%)',\n              label: '주황'\n            },\n            {\n              color: 'hsl(60, 75%, 60%)',\n              label: '노랑'\n            },\n            {\n              color: 'hsl(90, 75%, 60%)',\n              label: '연초록'\n            },\n            {\n              color: 'hsl(120, 75%, 60%)',\n              label: '초록'\n            },\n            {\n              color: 'hsl(210, 75%, 60%)',\n              label: '하늘'\n            },\n            {\n              color: 'hsl(240, 75%, 60%)',\n              label: '파랑'\n            },\n            {\n              color: 'hsl(270, 75%, 60%)',\n              label: '보라'\n            }\n          ]},\n          fontSize: {\n            options: [\n              5,\n              7,\n              9,\n              10,\n              12,\n              14,\n              'default',\n              16,\n              18,\n              20,\n              24,\n              26,\n              30,\n              32,\n              34,\n              36,\n              40,\n            ],\n          },\n          alignment: {\n            options: [\"justify\", \"left\", \"center\", \"right\"],\n          },\n          image: {\n            resizeUnit: \"px\",\n            toolbar: [\n              \"imageStyle:alignLeft\",\n              \"imageStyle:full\",\n              \"imageStyle:alignRight\",\n              \"|\",\n              \"imageTextAlternative\",\n            ],\n            styles: [\"full\", \"alignLeft\", \"alignRight\"],\n            type: [\"JPEG\", \"JPG\", \"GIF\", \"PNG\"],\n          },\n          typing: {\n            transformations: {\n              remove: [\n                \"enDash\",\n                \"emDash\",\n                \"oneHalf\",\n                \"oneThird\",\n                \"twoThirds\",\n                \"oneForth\",\n                \"threeQuarters\",\n              ],\n            },\n          },\n        }}\n        editor={InlineEditor}\n        {...props}\n            />\n        </div>\n    )\n}\n\nexport default Editor\n","/Users/oyejin/Surfee/kiwi/src/components/Make/Edit/EditTemplates/InnerTemplates.js",[],"/Users/oyejin/Surfee/kiwi/src/components/Make/Edit/tools/TemplateChoose.js",[],"/Users/oyejin/Surfee/kiwi/src/components/Make/Edit/tools/AddContentVideo.js",[],"/Users/oyejin/Surfee/kiwi/src/components/Make/Edit/tools/AddYoutubeLink.js",["603","604"],"import React, {useRef, useContext} from 'react'\nimport produce from 'immer';\nimport { MyContext } from '../../../../pages/Make/MakePageV2'\nimport './InputCustom.css'\n\nfunction AddYoutubeLink({content}) {\n    const {state, action} = useContext(MyContext) //ContextAPI로 state와 action을 넘겨받는다.\n\n    const onChangeLink = e => {\n        action.setContents(produce(state.contents, draft => {\n            draft[state.secNum].video.link = e.target.value\n        }))\n    }\n    const onYoutube = e => {\n        const submitLink = content.video.link.replace('watch?v=', 'embed/');\n        action.setContents(produce(state.contents, draft => {\n            draft[state.secNum].video.youtube = true\n            draft[state.secNum].video.link = submitLink+'?autoplay=1'+'&mute=1'\n            draft[state.secNum].image.slide = false\n            draft[state.secNum].video.use = false\n            draft[state.secNum].image.slide = false\n            draft[state.secNum].image.oneImg = false \n        }))\n    }\n\n    return (\n        <form className=\"center-row\">\n           <input\n                className=\"edit-input\"\n                type=\"text\"\n                onChange={e=>onChangeLink(e)}\n                style={{width: '80%'}}\n                placeholder=\"유튜브 링크를 입력해주세요.\"\n           /> \n           <div \n           type=\"submit\" \n           style={{width: '30px', cursor: 'pointer' , border: 'solid 1px'}}\n           onClick = {e => onYoutube(e)}\n           >\n               확인\n           </div>\n        </form>\n    )\n}\n\nexport default AddYoutubeLink\n","/Users/oyejin/Surfee/kiwi/src/components/Make/Edit/tools/AddContentImg.js",[],"/Users/oyejin/Surfee/kiwi/src/components/Make/Edit/tools/ImageAddEdit.js",["605"],"import React from 'react'\n\nfunction ImageAddEdit({value, func}) {\n    return (\n        <>\n            <input type=\"file\" accept=\"image/*\" id=\"file\" onChange={ e => func(e) }/> \n            <img src={value} width={50} />\n        </>\n    )\n}\n\nexport default ImageAddEdit\n","/Users/oyejin/Surfee/kiwi/src/components/Make/tools/Icon.js",[],"/Users/oyejin/Surfee/kiwi/src/components/Make/Edit/tools/ImageCarousel.js",["606","607","608","609"],"import React, {useRef, useEffect} from 'react'\nimport Slider from \"react-slick\"\nimport \"slick-carousel/slick/slick.css\"\nimport \"slick-carousel/slick/slick-theme.css\"\nimport styled from 'styled-components'\nimport '../../SectionTypes/HeroSection.css'\nimport prevButton from '../../../../tools/img/prevButton.png'\nimport nextButton from '../../../../tools/img/nextButton.png'\n\nimport { base } from '../../SectionTypes/baseTypes'\n\nconst Prev = styled.img`\nwidth: 50px;\nheight: 50px;\nz-index: 5;\nmargin-left: -40px;\nmargin-top: -30px;\n`\n\nconst Next = styled.img`\nwidth: 50px;\nheight: 50px;\nz-index: 5;\nmargin-right: -40px;\nmargin-top: -30px;\n`\n\n\nfunction ImageCarousel({content}) {\n    useEffect(() => {\n        console.log(content.image.border)\n    })\n\n    const imgRef = useRef(null)\n\n    const PrevArrow=({currentSlide,slideCount,...props})=>(\n        <Prev {...props} src={prevButton} className=\"slick-prev\" /> \n    )\n\n    const NextArrow=({currentSlide,slideCount,...props})=>(\n        <Next {...props} src={nextButton} className=\"slick-next\" /> \n    )\n\n    const settings = {\n        dots: false, // 캐러셀이미지가 몇번째인지 알려주는 점을 보여줄지 정한다.\n        speed: 500, // 애미메이션의 속도, 단위는 milliseconds\n        slidesToShow: 1, // 한번에 몇개의 슬라이드를 보여줄 지\n        slidesToScroll: 1, // 한번 스크롤시 몇장의 슬라이드를 넘길지\n        nextArrow: <NextArrow />,\n        prevArrow: <PrevArrow />,\t\n      };\n\n    return (\n        <div className=\"slide-box\" style={{width:`${content.image.size}px`,borderRadius:`${content.image.border}%`, boxShadow: `${content.image.shadowValue}`}}>\n            <Slider {...settings}> \n            <img className=\"image\" ref={imgRef} src={`${content.slide_img.slide1}`} style={{width:`${content.image.size}px`,borderRadius:`${content.image.border}%`, boxShadow: `${content.image.shadowValue}`}}/>\n            <img className=\"image\" ref={imgRef} src={`${content.slide_img.slide2}`} style={{width:`${content.image.size}px`,borderRadius:`${content.image.border}%`, boxShadow: `${content.image.shadowValue}`}}/> \n            <img className=\"image\" ref={imgRef} src={`${content.slide_img.slide3}`} style={{width:`${content.image.size}px`,borderRadius:`${content.image.border}%`, boxShadow: `${content.image.shadowValue}`}}/>\n            </Slider>\n        </div>\n    )\n\n}\n\nexport default ImageCarousel","/Users/oyejin/Surfee/kiwi/src/components/Make/Edit/tools/BoxCustom.js",[],"/Users/oyejin/Surfee/kiwi/src/components/Make/Edit/EditTemplates/DesignHero.js",["610","611","612","613"],"import React, {useContext} from 'react'\nimport produce from 'immer';\nimport { MyContext } from '../../../../pages/Make/MakePageV2'\nimport {EditRadioContainer} from '../tools/RadioCustom'\nimport {EditColorContainer} from '../tools/ColorCustom'\nimport CheckBoxContainer from '../tools/CheckBoxContainer'\nimport ImageAddEdit from '../tools/ImageAddEdit'\nimport EditSlider from '../tools/EditSlider'\nimport { AlignCenter, AlignEnd, AlignStart } from '@styled-icons/bootstrap';\n\n\nconst backOptions = [\n    { label: '단색', value: 'color' },\n    { label: '이미지', value: 'image'},\n]\nconst alignOptions = [\n    { label: <AlignStart width={30} />, value: 'left' },\n    { label: <AlignCenter width={30} />, value: 'center' },\n    { label: <AlignEnd width={30} />, value: 'right' },\n]\nconst textSizeOptions = [\n    { label: 's', value: 15 },\n    { label: 'm', value: 20 },\n    { label: 'l', value: 25 },\n]\nconst paddingOptions = [\n    { label: '없음', value: 0 },\n    { label: '좁게', value: 5 },\n    { label: '보통', value: 10 },\n    { label: '넓게', value: 20 },\n    { label: '커스텀', value: 0.1},\n]\n\nfunction DesignHero({content}) {\n    const {state, action} = useContext(MyContext)\n\n    // 배경 관련\n    const changeBackgroundOption = e => {\n        action.setContents(produce(state.contents, draft => {\n            draft[state.secNum].backgroundType = e;\n        }));\n    }\n    const changeImageOption = e => {\n        action.setContents(produce(state.contents, draft => {\n            draft[state.secNum].image.type = e;\n        }));\n    }\n    // 이미지의 경우에는 (이미지 로드)\n    const onChangeBackgroundImage = e => {\n        let newContents = JSON.parse(JSON.stringify(state.contents))\n        const {target:{files},} = e;\n        const oneFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => { // 로딩이 끝날 때 실행한다는 뜻.\n            const {currentTarget:{result}} = finishedEvent;\n            // newContents = state.contents.map((item, index) => index === state.secNum ? {...item, image: {...item.image, attachment : result}} : item)\n            // newContents[state.secNum].backgroundImage.attachment = result;\n            action.setContents(produce(state.contents, draft=>{\n                draft[state.secNum].backgroundImage.attachment = result;\n            }))\n        }\n        if(oneFile){\n            reader.readAsDataURL(oneFile);\n        }\n    }\n    // 체크가 눌리지 않았을 경우, 이미지 삭제\n    const DeleteBackgroundImage = () => {\n        action.setContents(produce(state.contents, draft => {\n            draft[state.secNum].backgroundImage.attachment = '';\n        }))\n    }\n    const backgroundColorOrImage = () => {\n        switch(content.backgroundType){\n            case 'color':\n                return(\n                        <>\n                        <EditColorContainer text={\"배경 색상\"} value={content.backgroundColor} func={e => action.setContents(produce(state.contents, draft => {\n                            draft[state.secNum].backgroundColor = e\n                        }))} />\n                        <div className=\"edit-element\">\n                        <div className=\"edit-element__one\">\n                            <div className=\"edit-element__left\">배경 색상 투명도</div>\n                            <div className=\"edit-element__right\">\n                                <input onChange={(e) => action.setContents(produce(state.contents, draft => {\n                                    draft[state.secNum].backgroundOpacity = e.currentTarget.value\n                                    draft[state.secNum].backgroundImage.use = 'hidden'\n                                }))} value={content.backgroundOpacity} type=\"number\" />\n                            </div>\n                        </div>\n                        </div>\n                        </>\n                )           \n            case 'image':\n                return(\n                    <div className='edit-element'>\n                        <div className=\"edit-element__one\">\n                        <CheckBoxContainer text=\"배경 업로드\" value={content.backgroundImage.use} func={ () => action.setContents(produce(state.contents, draft => {\n                            draft[state.secNum].backgroundImage.use = !content.backgroundImage.use;\n                            draft[state.secNum].backgroundColor= 'transparent';\n                        }))} />\n                        {\n                            content.backgroundImage.use ? ( \n                                <ImageAddEdit value={content.backgroundImage.attachment} func={e => onChangeBackgroundImage(e)} />\n                            ):\n                            (\n                                DeleteBackgroundImage()\n                            )\n                        }\n                        </div>\n                    </div>\n                )\n        }\n    }\n\n    // 여백 관련\n    const setPaddingTop = (e) => {\n        action.setContents(produce(state.contents, draft=>{\n            draft[state.secNum].paddingTop = e.target.value\n        }))\n    }\n    const setPaddingBottom = (e) => {\n        action.setContents(produce(state.contents, draft=>{\n            draft[state.secNum].paddingBottom = e.target.value\n        }))\n    }\n    const customPadding = () => {\n        if(content.paddingCustom) \n        return(\n            <>\n            <div className=\"edit-element\">\n                <div className=\"edit-element__one\">\n                    <div className=\"edit-element__left\">여백(위)</div>\n                    <div className=\"edit-element__right\">\n                        <EditSlider content={content} value={content.paddingTop} func={setPaddingTop} max=\"20\"/>\n                    </div>\n                </div>\n            </div>\n            <div className=\"edit-element\">\n            <div className=\"edit-element__one\">\n                <div className=\"edit-element__left\">여백(아래)</div>\n                <div className=\"edit-element__right\">\n                    <EditSlider content={content} value={content.paddingBottom} func={setPaddingBottom} max=\"20\"/>\n                </div>\n            </div>\n            </div>\n        </>\n        )  \n    }\n    const changePaddingOption = e => {\n        action.setContents(produce(state.contents, draft=>{\n            draft[state.secNum].paddingTop = e\n            draft[state.secNum].paddingBottom = e\n            if(draft[state.secNum].paddingTop == 0.1)\n                draft[state.secNum].paddingCustom = true\n            else\n                draft[state.secNum].paddingCustom = false\n        }))\n    }\n\n    return (\n        <>\n        <EditRadioContainer text='배경' options={backOptions} value={content.backgroundType} func={e=>changeBackgroundOption(e)} />\n        {\n            backgroundColorOrImage()\n        } \n        <EditRadioContainer text=\"제목 텍스트 배치\" options={alignOptions} value={content.title.align} func={e => action.setContents(produce(state.contents, draft => {\n                            draft[state.secNum].title.align = e\n        }))}/> \n        <EditRadioContainer text=\"제목 크기 설정\" options={textSizeOptions} value={content.title.align} func={e => action.setContents(produce(state.contents, draft => {\n                            draft[state.secNum].title.size = e\n        }))}/> \n        <EditColorContainer text={\"제목 텍스트 색상\"} value={content.title.color} func={e => action.setContents(produce(state.contents, draft => {\n                draft[state.secNum].title.color = e\n        }))} />\n        <EditRadioContainer text=\"본문 텍스트 배치\" options={alignOptions} value={content.desc.align} func={e => action.setContents(produce(state.contents, draft => {\n            draft[state.secNum].desc.align = e\n        }))}/> \n        <EditRadioContainer text=\"본문 크기 설정\" options={textSizeOptions} value={content.desc.align} func={e => action.setContents(produce(state.contents, draft => {\n            draft[state.secNum].desc.size = e\n        }))}/>      \n        <EditColorContainer text={\"본문 텍스트 색상\"} value={content.desc.color} func={e => action.setContents(produce(state.contents, draft => {\n                draft[state.secNum].desc.color = e\n        }))} /> \n        <EditRadioContainer text=\"위아래 여백\" options={paddingOptions} value={content.paddingTop} func={e => changePaddingOption(e)} />\n        {\n            customPadding()\n        }\n        </>\n    )\n}\n\nexport default DesignHero\n","/Users/oyejin/Surfee/kiwi/src/components/Make/Edit/tools/AddSlideImg.js",[],{"ruleId":"614","replacedBy":"615"},{"ruleId":"616","replacedBy":"617"},{"ruleId":"618","severity":1,"message":"619","line":1,"column":8,"nodeType":"620","messageId":"621","endLine":1,"endColumn":12},{"ruleId":"618","severity":1,"message":"622","line":5,"column":8,"nodeType":"620","messageId":"621","endLine":5,"endColumn":16},{"ruleId":"618","severity":1,"message":"623","line":13,"column":19,"nodeType":"620","messageId":"621","endLine":13,"endColumn":29},{"ruleId":"624","severity":1,"message":"625","line":15,"column":3,"nodeType":"620","endLine":15,"endColumn":12,"suggestions":"626"},{"ruleId":"618","severity":1,"message":"627","line":1,"column":16,"nodeType":"620","messageId":"621","endLine":1,"endColumn":24},{"ruleId":"618","severity":1,"message":"628","line":8,"column":8,"nodeType":"620","messageId":"621","endLine":8,"endColumn":16},{"ruleId":"618","severity":1,"message":"629","line":32,"column":12,"nodeType":"620","messageId":"621","endLine":32,"endColumn":20},{"ruleId":"624","severity":1,"message":"630","line":36,"column":7,"nodeType":"631","endLine":36,"endColumn":9,"suggestions":"632"},{"ruleId":"618","severity":1,"message":"633","line":3,"column":10,"nodeType":"620","messageId":"621","endLine":3,"endColumn":23},{"ruleId":"618","severity":1,"message":"627","line":1,"column":16,"nodeType":"620","messageId":"621","endLine":1,"endColumn":24},{"ruleId":"618","severity":1,"message":"634","line":1,"column":26,"nodeType":"620","messageId":"621","endLine":1,"endColumn":35},{"ruleId":"618","severity":1,"message":"635","line":7,"column":8,"nodeType":"620","messageId":"621","endLine":7,"endColumn":24},{"ruleId":"618","severity":1,"message":"636","line":10,"column":8,"nodeType":"620","messageId":"621","endLine":10,"endColumn":13},{"ruleId":"618","severity":1,"message":"637","line":70,"column":11,"nodeType":"620","messageId":"621","endLine":70,"endColumn":19},{"ruleId":"638","severity":1,"message":"639","line":176,"column":21,"nodeType":"640","endLine":176,"endColumn":82},{"ruleId":"618","severity":1,"message":"641","line":3,"column":9,"nodeType":"620","messageId":"621","endLine":3,"endColumn":13},{"ruleId":"638","severity":1,"message":"639","line":61,"column":21,"nodeType":"640","endLine":61,"endColumn":78},{"ruleId":"638","severity":1,"message":"639","line":77,"column":21,"nodeType":"640","endLine":77,"endColumn":72},{"ruleId":"638","severity":1,"message":"639","line":82,"column":21,"nodeType":"640","endLine":82,"endColumn":72},{"ruleId":"618","severity":1,"message":"642","line":6,"column":8,"nodeType":"620","messageId":"621","endLine":6,"endColumn":15},{"ruleId":"618","severity":1,"message":"643","line":14,"column":19,"nodeType":"620","messageId":"621","endLine":14,"endColumn":27},{"ruleId":"618","severity":1,"message":"629","line":15,"column":12,"nodeType":"620","messageId":"621","endLine":15,"endColumn":20},{"ruleId":"618","severity":1,"message":"644","line":15,"column":22,"nodeType":"620","messageId":"621","endLine":15,"endColumn":33},{"ruleId":"645","severity":1,"message":"646","line":23,"column":47,"nodeType":"647","messageId":"648","endLine":23,"endColumn":49},{"ruleId":"649","severity":1,"message":"650","line":27,"column":17,"nodeType":"651","messageId":"652","endLine":27,"endColumn":19},{"ruleId":"653","severity":1,"message":"654","line":33,"column":9,"nodeType":"655","messageId":"656","endLine":48,"endColumn":10},{"ruleId":"653","severity":1,"message":"654","line":52,"column":9,"nodeType":"655","messageId":"656","endLine":65,"endColumn":10},{"ruleId":"618","severity":1,"message":"657","line":4,"column":9,"nodeType":"620","messageId":"621","endLine":4,"endColumn":20},{"ruleId":"618","severity":1,"message":"622","line":6,"column":8,"nodeType":"620","messageId":"621","endLine":6,"endColumn":16},{"ruleId":"618","severity":1,"message":"658","line":8,"column":17,"nodeType":"620","messageId":"621","endLine":8,"endColumn":20},{"ruleId":"618","severity":1,"message":"659","line":8,"column":22,"nodeType":"620","messageId":"621","endLine":8,"endColumn":27},{"ruleId":"660","severity":1,"message":"661","line":17,"column":23,"nodeType":"640","endLine":17,"endColumn":26},{"ruleId":"618","severity":1,"message":"662","line":34,"column":12,"nodeType":"620","messageId":"621","endLine":34,"endColumn":14},{"ruleId":"618","severity":1,"message":"663","line":34,"column":16,"nodeType":"620","messageId":"621","endLine":34,"endColumn":21},{"ruleId":"618","severity":1,"message":"664","line":35,"column":12,"nodeType":"620","messageId":"621","endLine":35,"endColumn":20},{"ruleId":"618","severity":1,"message":"665","line":35,"column":22,"nodeType":"620","messageId":"621","endLine":35,"endColumn":33},{"ruleId":"624","severity":1,"message":"666","line":51,"column":7,"nodeType":"631","endLine":51,"endColumn":16,"suggestions":"667"},{"ruleId":"645","severity":1,"message":"668","line":66,"column":31,"nodeType":"647","messageId":"669","endLine":66,"endColumn":33},{"ruleId":"645","severity":1,"message":"668","line":101,"column":34,"nodeType":"647","messageId":"669","endLine":101,"endColumn":36},{"ruleId":"618","severity":1,"message":"670","line":15,"column":7,"nodeType":"620","messageId":"621","endLine":15,"endColumn":18},{"ruleId":"618","severity":1,"message":"671","line":28,"column":7,"nodeType":"620","messageId":"621","endLine":28,"endColumn":15},{"ruleId":"618","severity":1,"message":"672","line":57,"column":7,"nodeType":"620","messageId":"621","endLine":57,"endColumn":19},{"ruleId":"618","severity":1,"message":"673","line":70,"column":7,"nodeType":"620","messageId":"621","endLine":70,"endColumn":16},{"ruleId":"618","severity":1,"message":"674","line":81,"column":7,"nodeType":"620","messageId":"621","endLine":81,"endColumn":13},{"ruleId":"675","severity":1,"message":"676","line":152,"column":18,"nodeType":"631","messageId":"677","endLine":177,"endColumn":2},{"ruleId":"675","severity":1,"message":"676","line":178,"column":19,"nodeType":"631","messageId":"677","endLine":203,"endColumn":2},{"ruleId":"618","severity":1,"message":"678","line":215,"column":12,"nodeType":"620","messageId":"621","endLine":215,"endColumn":22},{"ruleId":"618","severity":1,"message":"679","line":216,"column":12,"nodeType":"620","messageId":"621","endLine":216,"endColumn":17},{"ruleId":"618","severity":1,"message":"680","line":216,"column":19,"nodeType":"620","messageId":"621","endLine":216,"endColumn":25},{"ruleId":"653","severity":1,"message":"654","line":331,"column":9,"nodeType":"655","messageId":"656","endLine":532,"endColumn":10},{"ruleId":"681","severity":1,"message":"682","line":350,"column":17,"nodeType":"683","messageId":"684","endLine":350,"endColumn":23},{"ruleId":"681","severity":1,"message":"682","line":385,"column":17,"nodeType":"683","messageId":"684","endLine":385,"endColumn":23},{"ruleId":"638","severity":1,"message":"639","line":411,"column":49,"nodeType":"640","endLine":411,"endColumn":79},{"ruleId":"681","severity":1,"message":"682","line":505,"column":17,"nodeType":"683","messageId":"684","endLine":505,"endColumn":23},{"ruleId":"681","severity":1,"message":"682","line":531,"column":17,"nodeType":"683","messageId":"684","endLine":531,"endColumn":23},{"ruleId":"618","severity":1,"message":"634","line":1,"column":26,"nodeType":"620","messageId":"621","endLine":1,"endColumn":35},{"ruleId":"638","severity":1,"message":"639","line":149,"column":25,"nodeType":"640","endLine":149,"endColumn":59},{"ruleId":"638","severity":1,"message":"639","line":163,"column":17,"nodeType":"640","endLine":163,"endColumn":45},{"ruleId":"618","severity":1,"message":"634","line":1,"column":26,"nodeType":"620","messageId":"621","endLine":1,"endColumn":35},{"ruleId":"618","severity":1,"message":"685","line":19,"column":24,"nodeType":"620","messageId":"621","endLine":19,"endColumn":28},{"ruleId":"638","severity":1,"message":"639","line":119,"column":25,"nodeType":"640","endLine":119,"endColumn":59},{"ruleId":"638","severity":1,"message":"639","line":133,"column":17,"nodeType":"640","endLine":133,"endColumn":45},{"ruleId":"618","severity":1,"message":"627","line":1,"column":16,"nodeType":"620","messageId":"621","endLine":1,"endColumn":24},{"ruleId":"618","severity":1,"message":"686","line":1,"column":45,"nodeType":"620","messageId":"621","endLine":1,"endColumn":58},{"ruleId":"618","severity":1,"message":"641","line":9,"column":9,"nodeType":"620","messageId":"621","endLine":9,"endColumn":13},{"ruleId":"618","severity":1,"message":"687","line":12,"column":8,"nodeType":"620","messageId":"621","endLine":12,"endColumn":19},{"ruleId":"618","severity":1,"message":"688","line":20,"column":23,"nodeType":"620","messageId":"621","endLine":20,"endColumn":32},{"ruleId":"618","severity":1,"message":"642","line":23,"column":8,"nodeType":"620","messageId":"621","endLine":23,"endColumn":15},{"ruleId":"618","severity":1,"message":"689","line":25,"column":8,"nodeType":"620","messageId":"621","endLine":25,"endColumn":23},{"ruleId":"618","severity":1,"message":"690","line":26,"column":8,"nodeType":"620","messageId":"621","endLine":26,"endColumn":25},{"ruleId":"618","severity":1,"message":"691","line":27,"column":8,"nodeType":"620","messageId":"621","endLine":27,"endColumn":20},{"ruleId":"618","severity":1,"message":"692","line":36,"column":7,"nodeType":"620","messageId":"621","endLine":36,"endColumn":12},{"ruleId":"618","severity":1,"message":"693","line":40,"column":7,"nodeType":"620","messageId":"621","endLine":40,"endColumn":11},{"ruleId":"618","severity":1,"message":"694","line":53,"column":12,"nodeType":"620","messageId":"621","endLine":53,"endColumn":20},{"ruleId":"618","severity":1,"message":"695","line":53,"column":22,"nodeType":"620","messageId":"621","endLine":53,"endColumn":33},{"ruleId":"618","severity":1,"message":"665","line":54,"column":22,"nodeType":"620","messageId":"621","endLine":54,"endColumn":33},{"ruleId":"618","severity":1,"message":"696","line":56,"column":12,"nodeType":"620","messageId":"621","endLine":56,"endColumn":16},{"ruleId":"624","severity":1,"message":"697","line":134,"column":7,"nodeType":"631","endLine":134,"endColumn":9,"suggestions":"698"},{"ruleId":"618","severity":1,"message":"699","line":165,"column":19,"nodeType":"620","messageId":"621","endLine":165,"endColumn":32},{"ruleId":"618","severity":1,"message":"700","line":4,"column":20,"nodeType":"620","messageId":"621","endLine":4,"endColumn":29},{"ruleId":"618","severity":1,"message":"701","line":16,"column":13,"nodeType":"620","messageId":"621","endLine":16,"endColumn":18},{"ruleId":"618","severity":1,"message":"641","line":3,"column":9,"nodeType":"620","messageId":"621","endLine":3,"endColumn":13},{"ruleId":"624","severity":1,"message":"702","line":14,"column":5,"nodeType":"620","endLine":14,"endColumn":14,"suggestions":"703"},{"ruleId":"618","severity":1,"message":"704","line":10,"column":9,"nodeType":"620","messageId":"621","endLine":10,"endColumn":19},{"ruleId":"618","severity":1,"message":"705","line":13,"column":10,"nodeType":"620","messageId":"621","endLine":13,"endColumn":16},{"ruleId":"618","severity":1,"message":"706","line":14,"column":9,"nodeType":"620","messageId":"621","endLine":14,"endColumn":15},{"ruleId":"618","severity":1,"message":"707","line":14,"column":17,"nodeType":"620","messageId":"621","endLine":14,"endColumn":24},{"ruleId":"618","severity":1,"message":"708","line":17,"column":12,"nodeType":"620","messageId":"621","endLine":17,"endColumn":18},{"ruleId":"618","severity":1,"message":"709","line":17,"column":20,"nodeType":"620","messageId":"621","endLine":17,"endColumn":29},{"ruleId":"618","severity":1,"message":"679","line":19,"column":12,"nodeType":"620","messageId":"621","endLine":19,"endColumn":17},{"ruleId":"710","severity":1,"message":"711","line":91,"column":1,"nodeType":"712","messageId":"713","endLine":109,"endColumn":4},{"ruleId":"618","severity":1,"message":"714","line":38,"column":12,"nodeType":"620","messageId":"621","endLine":38,"endColumn":16},{"ruleId":"618","severity":1,"message":"715","line":38,"column":18,"nodeType":"620","messageId":"621","endLine":38,"endColumn":25},{"ruleId":"618","severity":1,"message":"716","line":39,"column":11,"nodeType":"620","messageId":"621","endLine":39,"endColumn":21},{"ruleId":"618","severity":1,"message":"717","line":40,"column":11,"nodeType":"620","messageId":"621","endLine":40,"endColumn":22},{"ruleId":"675","severity":1,"message":"676","line":150,"column":18,"nodeType":"631","messageId":"677","endLine":175,"endColumn":2},{"ruleId":"675","severity":1,"message":"676","line":176,"column":19,"nodeType":"631","messageId":"677","endLine":201,"endColumn":2},{"ruleId":"618","severity":1,"message":"679","line":212,"column":12,"nodeType":"620","messageId":"621","endLine":212,"endColumn":17},{"ruleId":"618","severity":1,"message":"716","line":214,"column":11,"nodeType":"620","messageId":"621","endLine":214,"endColumn":21},{"ruleId":"653","severity":1,"message":"654","line":323,"column":9,"nodeType":"655","messageId":"656","endLine":524,"endColumn":10},{"ruleId":"681","severity":1,"message":"682","line":342,"column":17,"nodeType":"683","messageId":"684","endLine":342,"endColumn":23},{"ruleId":"681","severity":1,"message":"682","line":377,"column":17,"nodeType":"683","messageId":"684","endLine":377,"endColumn":23},{"ruleId":"638","severity":1,"message":"639","line":403,"column":49,"nodeType":"640","endLine":403,"endColumn":79},{"ruleId":"681","severity":1,"message":"682","line":497,"column":17,"nodeType":"683","messageId":"684","endLine":497,"endColumn":23},{"ruleId":"681","severity":1,"message":"682","line":523,"column":17,"nodeType":"683","messageId":"684","endLine":523,"endColumn":23},{"ruleId":"618","severity":1,"message":"718","line":5,"column":8,"nodeType":"620","messageId":"621","endLine":5,"endColumn":23},{"ruleId":"618","severity":1,"message":"719","line":6,"column":8,"nodeType":"620","messageId":"621","endLine":6,"endColumn":17},{"ruleId":"618","severity":1,"message":"720","line":27,"column":7,"nodeType":"620","messageId":"621","endLine":27,"endColumn":22},{"ruleId":"618","severity":1,"message":"721","line":36,"column":7,"nodeType":"620","messageId":"621","endLine":36,"endColumn":21},{"ruleId":"618","severity":1,"message":"706","line":4,"column":9,"nodeType":"620","messageId":"621","endLine":4,"endColumn":15},{"ruleId":"618","severity":1,"message":"707","line":4,"column":17,"nodeType":"620","messageId":"621","endLine":4,"endColumn":24},{"ruleId":"618","severity":1,"message":"679","line":8,"column":12,"nodeType":"620","messageId":"621","endLine":8,"endColumn":17},{"ruleId":"618","severity":1,"message":"718","line":3,"column":8,"nodeType":"620","messageId":"621","endLine":3,"endColumn":23},{"ruleId":"618","severity":1,"message":"722","line":20,"column":7,"nodeType":"620","messageId":"621","endLine":20,"endColumn":20},{"ruleId":"618","severity":1,"message":"723","line":27,"column":12,"nodeType":"620","messageId":"621","endLine":27,"endColumn":16},{"ruleId":"618","severity":1,"message":"724","line":27,"column":18,"nodeType":"620","messageId":"621","endLine":27,"endColumn":25},{"ruleId":"618","severity":1,"message":"725","line":28,"column":12,"nodeType":"620","messageId":"621","endLine":28,"endColumn":21},{"ruleId":"618","severity":1,"message":"726","line":28,"column":23,"nodeType":"620","messageId":"621","endLine":28,"endColumn":35},{"ruleId":"618","severity":1,"message":"727","line":29,"column":24,"nodeType":"620","messageId":"621","endLine":29,"endColumn":37},{"ruleId":"618","severity":1,"message":"728","line":30,"column":12,"nodeType":"620","messageId":"621","endLine":30,"endColumn":26},{"ruleId":"618","severity":1,"message":"729","line":30,"column":28,"nodeType":"620","messageId":"621","endLine":30,"endColumn":45},{"ruleId":"618","severity":1,"message":"730","line":56,"column":11,"nodeType":"620","messageId":"621","endLine":56,"endColumn":29},{"ruleId":"618","severity":1,"message":"731","line":77,"column":11,"nodeType":"620","messageId":"621","endLine":77,"endColumn":25},{"ruleId":"653","severity":1,"message":"654","line":78,"column":9,"nodeType":"655","messageId":"656","endLine":97,"endColumn":10},{"ruleId":"618","severity":1,"message":"732","line":100,"column":11,"nodeType":"620","messageId":"621","endLine":100,"endColumn":32},{"ruleId":"618","severity":1,"message":"706","line":4,"column":9,"nodeType":"620","messageId":"621","endLine":4,"endColumn":15},{"ruleId":"618","severity":1,"message":"707","line":4,"column":17,"nodeType":"620","messageId":"621","endLine":4,"endColumn":24},{"ruleId":"618","severity":1,"message":"705","line":5,"column":10,"nodeType":"620","messageId":"621","endLine":5,"endColumn":16},{"ruleId":"618","severity":1,"message":"679","line":9,"column":12,"nodeType":"620","messageId":"621","endLine":9,"endColumn":17},{"ruleId":"618","severity":1,"message":"627","line":1,"column":16,"nodeType":"620","messageId":"621","endLine":1,"endColumn":24},{"ruleId":"618","severity":1,"message":"733","line":2,"column":8,"nodeType":"620","messageId":"621","endLine":2,"endColumn":19},{"ruleId":"618","severity":1,"message":"734","line":10,"column":8,"nodeType":"620","messageId":"621","endLine":10,"endColumn":18},{"ruleId":"618","severity":1,"message":"679","line":37,"column":12,"nodeType":"620","messageId":"621","endLine":37,"endColumn":17},{"ruleId":"653","severity":1,"message":"654","line":53,"column":9,"nodeType":"655","messageId":"656","endLine":192,"endColumn":10},{"ruleId":"618","severity":1,"message":"627","line":1,"column":16,"nodeType":"620","messageId":"621","endLine":1,"endColumn":24},{"ruleId":"618","severity":1,"message":"634","line":1,"column":26,"nodeType":"620","messageId":"621","endLine":1,"endColumn":35},{"ruleId":"618","severity":1,"message":"735","line":10,"column":8,"nodeType":"620","messageId":"621","endLine":10,"endColumn":21},{"ruleId":"618","severity":1,"message":"736","line":5,"column":8,"nodeType":"620","messageId":"621","endLine":5,"endColumn":21},{"ruleId":"618","severity":1,"message":"737","line":28,"column":12,"nodeType":"620","messageId":"621","endLine":28,"endColumn":22},{"ruleId":"618","severity":1,"message":"738","line":28,"column":24,"nodeType":"620","messageId":"621","endLine":28,"endColumn":37},{"ruleId":"618","severity":1,"message":"739","line":2,"column":10,"nodeType":"620","messageId":"621","endLine":2,"endColumn":15},{"ruleId":"618","severity":1,"message":"740","line":3,"column":8,"nodeType":"620","messageId":"621","endLine":3,"endColumn":14},{"ruleId":"618","severity":1,"message":"741","line":14,"column":18,"nodeType":"620","messageId":"621","endLine":14,"endColumn":25},{"ruleId":"742","severity":1,"message":"743","line":107,"column":9,"nodeType":"744","messageId":"652","endLine":107,"endColumn":24},{"ruleId":"742","severity":1,"message":"743","line":146,"column":9,"nodeType":"744","messageId":"652","endLine":146,"endColumn":24},{"ruleId":"742","severity":1,"message":"743","line":185,"column":9,"nodeType":"744","messageId":"652","endLine":185,"endColumn":24},{"ruleId":"618","severity":1,"message":"634","line":1,"column":29,"nodeType":"620","messageId":"621","endLine":1,"endColumn":38},{"ruleId":"618","severity":1,"message":"745","line":19,"column":12,"nodeType":"620","messageId":"621","endLine":19,"endColumn":17},{"ruleId":"618","severity":1,"message":"746","line":19,"column":19,"nodeType":"620","messageId":"621","endLine":19,"endColumn":27},{"ruleId":"618","severity":1,"message":"747","line":20,"column":22,"nodeType":"620","messageId":"621","endLine":20,"endColumn":33},{"ruleId":"618","severity":1,"message":"662","line":23,"column":11,"nodeType":"620","messageId":"621","endLine":23,"endColumn":13},{"ruleId":"618","severity":1,"message":"748","line":31,"column":11,"nodeType":"620","messageId":"621","endLine":31,"endColumn":27},{"ruleId":"638","severity":1,"message":"639","line":80,"column":21,"nodeType":"640","endLine":80,"endColumn":130},{"ruleId":"638","severity":1,"message":"639","line":82,"column":21,"nodeType":"640","endLine":82,"endColumn":142},{"ruleId":"638","severity":1,"message":"639","line":93,"column":82,"nodeType":"640","endLine":93,"endColumn":111},{"ruleId":"638","severity":1,"message":"639","line":95,"column":75,"nodeType":"640","endLine":95,"endColumn":103},{"ruleId":"618","severity":1,"message":"634","line":1,"column":29,"nodeType":"620","messageId":"621","endLine":1,"endColumn":38},{"ruleId":"618","severity":1,"message":"749","line":2,"column":8,"nodeType":"620","messageId":"621","endLine":2,"endColumn":14},{"ruleId":"618","severity":1,"message":"750","line":12,"column":8,"nodeType":"620","messageId":"621","endLine":12,"endColumn":15},{"ruleId":"618","severity":1,"message":"751","line":13,"column":9,"nodeType":"620","messageId":"621","endLine":13,"endColumn":17},{"ruleId":"618","severity":1,"message":"752","line":21,"column":12,"nodeType":"620","messageId":"621","endLine":21,"endColumn":21},{"ruleId":"618","severity":1,"message":"753","line":22,"column":12,"nodeType":"620","messageId":"621","endLine":22,"endColumn":21},{"ruleId":"618","severity":1,"message":"754","line":22,"column":23,"nodeType":"620","messageId":"621","endLine":22,"endColumn":35},{"ruleId":"618","severity":1,"message":"745","line":23,"column":12,"nodeType":"620","messageId":"621","endLine":23,"endColumn":17},{"ruleId":"618","severity":1,"message":"746","line":23,"column":19,"nodeType":"620","messageId":"621","endLine":23,"endColumn":27},{"ruleId":"618","severity":1,"message":"747","line":24,"column":22,"nodeType":"620","messageId":"621","endLine":24,"endColumn":33},{"ruleId":"618","severity":1,"message":"662","line":27,"column":11,"nodeType":"620","messageId":"621","endLine":27,"endColumn":13},{"ruleId":"618","severity":1,"message":"748","line":42,"column":11,"nodeType":"620","messageId":"621","endLine":42,"endColumn":27},{"ruleId":"618","severity":1,"message":"755","line":48,"column":11,"nodeType":"620","messageId":"621","endLine":48,"endColumn":24},{"ruleId":"756","severity":1,"message":"757","line":65,"column":13,"nodeType":"640","endLine":65,"endColumn":134},{"ruleId":"638","severity":1,"message":"639","line":117,"column":17,"nodeType":"640","endLine":117,"endColumn":209},{"ruleId":"638","severity":1,"message":"639","line":119,"column":17,"nodeType":"640","endLine":125,"endColumn":19},{"ruleId":"638","severity":1,"message":"639","line":138,"column":82,"nodeType":"640","endLine":138,"endColumn":111},{"ruleId":"638","severity":1,"message":"639","line":140,"column":75,"nodeType":"640","endLine":140,"endColumn":103},{"ruleId":"618","severity":1,"message":"627","line":1,"column":28,"nodeType":"620","messageId":"621","endLine":1,"endColumn":36},{"ruleId":"618","severity":1,"message":"749","line":2,"column":8,"nodeType":"620","messageId":"621","endLine":2,"endColumn":14},{"ruleId":"618","severity":1,"message":"680","line":10,"column":19,"nodeType":"620","messageId":"621","endLine":10,"endColumn":25},{"ruleId":"638","severity":1,"message":"639","line":17,"column":41,"nodeType":"640","endLine":17,"endColumn":93},{"ruleId":"618","severity":1,"message":"627","line":1,"column":28,"nodeType":"620","messageId":"621","endLine":1,"endColumn":36},{"ruleId":"618","severity":1,"message":"749","line":2,"column":8,"nodeType":"620","messageId":"621","endLine":2,"endColumn":14},{"ruleId":"618","severity":1,"message":"680","line":8,"column":19,"nodeType":"620","messageId":"621","endLine":8,"endColumn":25},{"ruleId":"618","severity":1,"message":"627","line":1,"column":28,"nodeType":"620","messageId":"621","endLine":1,"endColumn":36},{"ruleId":"618","severity":1,"message":"749","line":2,"column":8,"nodeType":"620","messageId":"621","endLine":2,"endColumn":14},{"ruleId":"618","severity":1,"message":"680","line":9,"column":19,"nodeType":"620","messageId":"621","endLine":9,"endColumn":25},{"ruleId":"618","severity":1,"message":"627","line":1,"column":28,"nodeType":"620","messageId":"621","endLine":1,"endColumn":36},{"ruleId":"618","severity":1,"message":"749","line":2,"column":8,"nodeType":"620","messageId":"621","endLine":2,"endColumn":14},{"ruleId":"618","severity":1,"message":"679","line":9,"column":12,"nodeType":"620","messageId":"621","endLine":9,"endColumn":17},{"ruleId":"618","severity":1,"message":"680","line":9,"column":19,"nodeType":"620","messageId":"621","endLine":9,"endColumn":25},{"ruleId":"618","severity":1,"message":"705","line":4,"column":10,"nodeType":"620","messageId":"621","endLine":4,"endColumn":16},{"ruleId":"618","severity":1,"message":"758","line":7,"column":8,"nodeType":"620","messageId":"621","endLine":7,"endColumn":18},{"ruleId":"618","severity":1,"message":"759","line":27,"column":11,"nodeType":"620","messageId":"621","endLine":27,"endColumn":18},{"ruleId":"618","severity":1,"message":"749","line":2,"column":8,"nodeType":"620","messageId":"621","endLine":2,"endColumn":14},{"ruleId":"618","severity":1,"message":"760","line":4,"column":25,"nodeType":"620","messageId":"621","endLine":4,"endColumn":39},{"ruleId":"653","severity":1,"message":"654","line":29,"column":9,"nodeType":"655","messageId":"656","endLine":112,"endColumn":10},{"ruleId":"618","severity":1,"message":"627","line":1,"column":16,"nodeType":"620","messageId":"621","endLine":1,"endColumn":24},{"ruleId":"618","severity":1,"message":"692","line":8,"column":7,"nodeType":"620","messageId":"621","endLine":8,"endColumn":12},{"ruleId":"618","severity":1,"message":"627","line":1,"column":16,"nodeType":"620","messageId":"621","endLine":1,"endColumn":24},{"ruleId":"618","severity":1,"message":"680","line":7,"column":19,"nodeType":"620","messageId":"621","endLine":7,"endColumn":25},{"ruleId":"618","severity":1,"message":"627","line":1,"column":16,"nodeType":"620","messageId":"621","endLine":1,"endColumn":24},{"ruleId":"618","severity":1,"message":"627","line":1,"column":16,"nodeType":"620","messageId":"621","endLine":1,"endColumn":24},{"ruleId":"618","severity":1,"message":"680","line":7,"column":19,"nodeType":"620","messageId":"621","endLine":7,"endColumn":25},{"ruleId":"618","severity":1,"message":"627","line":1,"column":16,"nodeType":"620","messageId":"621","endLine":1,"endColumn":24},{"ruleId":"618","severity":1,"message":"761","line":11,"column":8,"nodeType":"620","messageId":"621","endLine":11,"endColumn":20},{"ruleId":"618","severity":1,"message":"762","line":23,"column":7,"nodeType":"620","messageId":"621","endLine":23,"endColumn":23},{"ruleId":"618","severity":1,"message":"763","line":38,"column":7,"nodeType":"620","messageId":"621","endLine":38,"endColumn":23},{"ruleId":"649","severity":1,"message":"650","line":60,"column":50,"nodeType":"651","messageId":"652","endLine":60,"endColumn":52},{"ruleId":"618","severity":1,"message":"764","line":73,"column":11,"nodeType":"620","messageId":"621","endLine":73,"endColumn":23},{"ruleId":"653","severity":1,"message":"654","line":130,"column":9,"nodeType":"655","messageId":"656","endLine":157,"endColumn":10},{"ruleId":"618","severity":1,"message":"765","line":251,"column":13,"nodeType":"620","messageId":"621","endLine":251,"endColumn":24},{"ruleId":"618","severity":1,"message":"749","line":2,"column":8,"nodeType":"620","messageId":"621","endLine":2,"endColumn":14},{"ruleId":"638","severity":1,"message":"639","line":25,"column":69,"nodeType":"640","endLine":25,"endColumn":122},{"ruleId":"618","severity":1,"message":"766","line":3,"column":10,"nodeType":"620","messageId":"621","endLine":3,"endColumn":18},{"ruleId":"618","severity":1,"message":"767","line":4,"column":10,"nodeType":"620","messageId":"621","endLine":4,"endColumn":24},{"ruleId":"618","severity":1,"message":"679","line":8,"column":12,"nodeType":"620","messageId":"621","endLine":8,"endColumn":17},{"ruleId":"618","severity":1,"message":"680","line":8,"column":19,"nodeType":"620","messageId":"621","endLine":8,"endColumn":25},{"ruleId":"618","severity":1,"message":"768","line":4,"column":10,"nodeType":"620","messageId":"621","endLine":4,"endColumn":15},{"ruleId":"618","severity":1,"message":"680","line":9,"column":19,"nodeType":"620","messageId":"621","endLine":9,"endColumn":25},{"ruleId":"618","severity":1,"message":"758","line":7,"column":8,"nodeType":"620","messageId":"621","endLine":7,"endColumn":18},{"ruleId":"618","severity":1,"message":"769","line":2,"column":9,"nodeType":"620","messageId":"621","endLine":2,"endColumn":18},{"ruleId":"618","severity":1,"message":"770","line":2,"column":10,"nodeType":"620","messageId":"621","endLine":2,"endColumn":16},{"ruleId":"618","severity":1,"message":"740","line":3,"column":8,"nodeType":"620","messageId":"621","endLine":3,"endColumn":14},{"ruleId":"618","severity":1,"message":"634","line":1,"column":26,"nodeType":"620","messageId":"621","endLine":1,"endColumn":35},{"ruleId":"618","severity":1,"message":"771","line":20,"column":7,"nodeType":"620","messageId":"621","endLine":20,"endColumn":26},{"ruleId":"618","severity":1,"message":"772","line":1,"column":16,"nodeType":"620","messageId":"621","endLine":1,"endColumn":22},{"ruleId":"773","severity":1,"message":"774","line":18,"column":70,"nodeType":"651","messageId":"775","endLine":18,"endColumn":71},{"ruleId":"638","severity":1,"message":"639","line":7,"column":13,"nodeType":"640","endLine":7,"endColumn":43},{"ruleId":"618","severity":1,"message":"776","line":10,"column":10,"nodeType":"620","messageId":"621","endLine":10,"endColumn":14},{"ruleId":"638","severity":1,"message":"639","line":56,"column":13,"nodeType":"640","endLine":56,"endColumn":211},{"ruleId":"638","severity":1,"message":"639","line":57,"column":13,"nodeType":"640","endLine":57,"endColumn":211},{"ruleId":"638","severity":1,"message":"639","line":58,"column":13,"nodeType":"640","endLine":58,"endColumn":211},{"ruleId":"618","severity":1,"message":"777","line":43,"column":11,"nodeType":"620","messageId":"621","endLine":43,"endColumn":28},{"ruleId":"618","severity":1,"message":"765","line":50,"column":13,"nodeType":"620","messageId":"621","endLine":50,"endColumn":24},{"ruleId":"653","severity":1,"message":"654","line":73,"column":9,"nodeType":"655","messageId":"656","endLine":112,"endColumn":10},{"ruleId":"649","severity":1,"message":"650","line":153,"column":47,"nodeType":"651","messageId":"652","endLine":153,"endColumn":49},"no-native-reassign",["778"],"no-negated-in-lhs",["779"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'NavBarV2' is defined but never used.","'setUserObj' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setInit'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [] as a second argument to the useEffect Hook.",["780"],"'useState' is defined but never used.","'MakePage' is defined but never used.","'userData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'setUserData' and 'userObj'. Either include them or remove the dependency array.","ArrayExpression",["781"],"'initializeApp' is defined but never used.","'useEffect' is defined but never used.","'AccessAlarmsIcon' is defined but never used.","'Icons' is defined but never used.","'sendData' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Link' is defined but never used.","'ReactGa' is defined but never used.","'setCnums' is assigned a value but never used.","'setUserData' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'authService' is defined but never used.","'Tag' is defined but never used.","'Space' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'id' is assigned a value but never used.","'setId' is assigned a value but never used.","'password' is assigned a value but never used.","'setPassword' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getThisUserDatas' and 'userObj.email'. Either include them or remove the dependency array.",["782"],"Array.prototype.map() expects a return value from arrow function.","expectedInside","'StyledModal' is assigned a value but never used.","'Backdrop' is assigned a value but never used.","'StyledModal2' is assigned a value but never used.","'Backdrop2' is assigned a value but never used.","'style2' is assigned a value but never used.","no-sparse-arrays","Unexpected comma in middle of array.","unexpectedSparseArray","'tmodalOpen' is assigned a value but never used.","'state' is assigned a value but never used.","'action' is assigned a value but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'name' is assigned a value but never used.","'createContext' is defined but never used.","'EditSetting' is defined but never used.","'useParams' is defined but never used.","'EditNaviSection' is defined but never used.","'EditFooterSection' is defined but never used.","'EditContents' is defined but never used.","'label' is assigned a value but never used.","'rate' is assigned a value but never used.","'isWidget' is assigned a value but never used.","'setIsWidget' is assigned a value but never used.","'load' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'contents', 'foot', 'location.pathname', 'location.state', 'navi', and 'setting'. Either include them or remove the dependency array.",["783"],"'attachmentRef' is assigned a value but never used.","'stService' is defined but never used.","'dbgal' is assigned a value but never used.","React Hook useEffect contains a call to 'setBack'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [scrollPosition] as a second argument to the useEffect Hook.",["784"],"'animations' is defined but never used.","'motion' is defined but never used.","'Delete' is defined but never used.","'Options' is defined but never used.","'adding' is assigned a value but never used.","'setAdding' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'cnum' is assigned a value but never used.","'setCnum' is assigned a value but never used.","'handleOpen' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'EditButtonTable' is defined but never used.","'EditColor' is defined but never used.","'oneOrTwoOptions' is assigned a value but never used.","'paddingOptions' is assigned a value but never used.","'buttonOptions' is assigned a value but never used.","'logo' is assigned a value but never used.","'setLogo' is assigned a value but never used.","'buttonUse' is assigned a value but never used.","'setButtonUse' is assigned a value but never used.","'setButtonFunc' is assigned a value but never used.","'buttonTemplate' is assigned a value but never used.","'setButtonTemplate' is assigned a value but never used.","'changeNaviTemplate' is assigned a value but never used.","'returnFuncEdit' is assigned a value but never used.","'returnButtonTemplates' is assigned a value but never used.","'RadioCustom' is defined but never used.","'EditTopBar' is defined but never used.","'AddingSection' is defined but never used.","'ConfirmCustom' is defined but never used.","'deleteopen' is assigned a value but never used.","'setDeleteOpen' is assigned a value but never used.","'Input' is defined but never used.","'Switch' is defined but never used.","'setOpen' is assigned a value but never used.","no-dupe-keys","Duplicate key 'backgroundImage'.","ObjectExpression","'align' is assigned a value but never used.","'setAlign' is assigned a value but never used.","'setAnchorEl' is assigned a value but never used.","'changeButtonText' is assigned a value but never used.","'Editor' is defined but never used.","'Popover' is defined but never used.","'ImageAdd' is defined but never used.","'imageShow' is assigned a value but never used.","'videoShow' is assigned a value but never used.","'setVideoShow' is assigned a value but never used.","'onChangeImage' is assigned a value but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","'Typography' is defined but never used.","'showPop' is assigned a value but never used.","'FacebookSquare' is defined but never used.","'ImageAddEdit' is defined but never used.","'imageSizeOptions' is assigned a value but never used.","'animationOptions' is assigned a value but never used.","'setSlideSize' is assigned a value but never used.","'newContents' is assigned a value but never used.","'Template' is defined but never used.","'DesignServices' is defined but never used.","'Alpha' is defined but never used.","'Link45deg' is defined but never used.","'styled' is defined but never used.","'editorConfiguration' is assigned a value but never used.","'useRef' is defined but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'base' is defined but never used.","'changeImageOption' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"785","fix":"786"},{"desc":"787","fix":"788"},{"desc":"789","fix":"790"},{"desc":"791","fix":"792"},{"desc":"793","fix":"794"},"Add dependencies array: []",{"range":"795","text":"796"},"Update the dependencies array to be: [setUserData, userObj]",{"range":"797","text":"798"},"Update the dependencies array to be: [getThisUserDatas, loading, userObj.email]",{"range":"799","text":"800"},"Update the dependencies array to be: [contents, foot, location.pathname, location.state, navi, setting]",{"range":"801","text":"802"},"Add dependencies array: [scrollPosition]",{"range":"803","text":"804"},[896,896],", []",[1208,1210],"[setUserData, userObj]",[1613,1622],"[getThisUserDatas, loading, userObj.email]",[5081,5083],"[contents, foot, location.pathname, location.state, navi, setting]",[583,583],", [scrollPosition]"]
>>>>>>> e3723ae23 (Design main>contents)
>>>>>>> d40f1f954 (Test second..)
